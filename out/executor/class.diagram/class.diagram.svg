<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5501px" preserveAspectRatio="none" style="width:70986px;height:5501px;" version="1.1" viewBox="0 0 70986 5501" width="70986px" zoomAndPan="magnify"><defs><filter height="300%" id="f1tg7zncdo8f11" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[3fa50ab028eb0153e597b264c773bd71]
cluster aggfuncs--><polygon fill="#FFFFFF" filter="url(#f1tg7zncdo8f11)" points="37194,574.5,37265,574.5,37272,596.9883,70964,596.9883,70964,4128,37194,4128,37194,574.5" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="37194" x2="37272" y1="596.9883" y2="596.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="65" x="37198" y="590.0352">aggfuncs</text><!--MD5=[02ce43ee6c19eec9361f331a4e96450d]
cluster executor--><polygon fill="#FFFFFF" filter="url(#f1tg7zncdo8f11)" points="178,147,245,147,252,169.4883,37170,169.4883,37170,5489,178,5489,178,147" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="178" x2="252" y1="169.4883" y2="169.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="61" x="182" y="162.5352">executor</text><!--MD5=[09efeddd3c66cd721ee42b1d3c857031]
cluster ast--><polygon fill="#FFFFFF" filter="url(#f1tg7zncdo8f11)" points="22,1667,50,1667,57,1689.4883,154,1689.4883,154,1766,22,1766,22,1667" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="57" y1="1689.4883" y2="1689.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="22" x="26" y="1682.5352">ast</text><!--MD5=[f9f5e47277aa1cf362235c24d633d021]
cluster sync--><polygon fill="#FFFFFF" filter="url(#f1tg7zncdo8f11)" points="21099,24,21137,24,21144,46.4883,21199,46.4883,21199,123,21099,123,21099,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="21099" x2="21144" y1="46.4883" y2="46.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="32" x="21103" y="39.5352">sync</text><!--MD5=[01435ace8273dc3cae88e7f376e4d373]
cluster core--><polygon fill="#FFFFFF" filter="url(#f1tg7zncdo8f11)" points="4051,24,4087,24,4094,46.4883,4276,46.4883,4276,123,4051,123,4051,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="4051" x2="4094" y1="46.4883" y2="46.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="30" x="4055" y="39.5352">core</text><!--MD5=[857233cdc7018b1e8695fe78ce49561f]
cluster __builtin__--><polygon fill="#FFFFFF" filter="url(#f1tg7zncdo8f11)" points="25594,24,25648,24,25655,46.4883,26071,46.4883,26071,123,25594,123,25594,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="25594" x2="25655" y1="46.4883" y2="46.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="48" x="25598" y="39.5352">builtin</text><!--MD5=[55bb1e6a4d40035c275033cfabf6251d]
class aggfuncs.AggFunc--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.AggFunc" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="50792.5" y="1669.5"/><ellipse cx="51029.75" cy="1685.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M51026.1777,1681.7651 L51026.1777,1679.6069 L51033.5571,1679.6069 L51033.5571,1681.7651 L51031.0918,1681.7651 L51031.0918,1689.8418 L51033.5571,1689.8418 L51033.5571,1692 L51026.1777,1692 L51026.1777,1689.8418 L51028.6431,1689.8418 L51028.6431,1681.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="48" x="51050.25" y="1690.0352">AggFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50793.5" x2="51322.5" y1="1701.5" y2="1701.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="50793.5" x2="51322.5" y1="1709.5" y2="1709.5"/><ellipse cx="50803.5" cy="1720.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="50812.5" y="1724.1348">AllocPartialResult() PartialResult</text><ellipse cx="50803.5" cy="1733.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="50812.5" y="1737.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="50803.5" cy="1746.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="50812.5" y="1750.0449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="50803.5" cy="1759.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="50812.5" y="1763">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="50803.5" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="50812.5" y="1775.9551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[5122401c4bfed75f08246b24c3c975e9]
class aggfuncs.SlidingWindowAggFunc--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.SlidingWindowAggFunc" style="stroke: #A80036; stroke-width: 1.5;" width="760" x="65458" y="1695.5"/><ellipse cx="65769.25" cy="1711.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M65765.6777,1707.7651 L65765.6777,1705.6069 L65773.0571,1705.6069 L65773.0571,1707.7651 L65770.5918,1707.7651 L65770.5918,1715.8418 L65773.0571,1715.8418 L65773.0571,1718 L65765.6777,1718 L65765.6777,1715.8418 L65768.1431,1715.8418 L65768.1431,1707.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="65789.75" y="1716.0352">SlidingWindowAggFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="65459" x2="66217" y1="1727.5" y2="1727.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="65459" x2="66217" y1="1735.5" y2="1735.5"/><ellipse cx="65469" cy="1746.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="734" x="65478" y="1750.1348">Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error</text><!--MD5=[bff71e853aac1be7f9364b81bcc02413]
class aggfuncs.PartialResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="aggfuncs.PartialResult" style="stroke: #A80036; stroke-width: 1.5;" width="103" x="37210.5" y="1702"/><ellipse cx="37225.5" cy="1718" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M37226.8418,1725.25 L37224.3931,1725.25 L37224.3931,1714.9985 L37221.2471,1714.9985 L37221.2471,1712.8569 L37229.9878,1712.8569 L37229.9878,1714.9985 L37226.8418,1714.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="37239.5" y="1722.5352">PartialResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="37211.5" x2="37312.5" y1="1734" y2="1734"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="37211.5" x2="37312.5" y1="1742" y2="1742"/><!--MD5=[ac84fe8822f9816d3b6dbc8768d7f16f]
class aggfuncs.approxCountDistinctHashValue--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="aggfuncs.approxCountDistinctHashValue" style="stroke: #A80036; stroke-width: 1.5;" width="210" x="52057" y="765"/><ellipse cx="52072" cy="781" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M52073.3418,788.25 L52070.8931,788.25 L52070.8931,777.9985 L52067.7471,777.9985 L52067.7471,775.8569 L52076.4878,775.8569 L52076.4878,777.9985 L52073.3418,777.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="178" x="52086" y="785.5352">approxCountDistinctHashValue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="52058" x2="52266" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="52058" x2="52266" y1="805" y2="805"/><!--MD5=[620c5f10542f784d0d4b6cc2483710dc]
class aggfuncs.partialResult4BitFunc--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="aggfuncs.partialResult4BitFunc" style="stroke: #A80036; stroke-width: 1.5;" width="152" x="51870" y="765"/><ellipse cx="51885" cy="781" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M51886.3418,788.25 L51883.8931,788.25 L51883.8931,777.9985 L51880.7471,777.9985 L51880.7471,775.8569 L51889.4878,775.8569 L51889.4878,777.9985 L51886.3418,777.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="120" x="51899" y="785.5352">partialResult4BitFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="51871" x2="52021" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="51871" x2="52021" y1="805" y2="805"/><!--MD5=[1b0e56df3815074124bd862c1f0c0a2f]
class aggfuncs.partialResult4Count--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="aggfuncs.partialResult4Count" style="stroke: #A80036; stroke-width: 1.5;" width="145" x="51689.5" y="765"/><ellipse cx="51704.5" cy="781" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M51705.8418,788.25 L51703.3931,788.25 L51703.3931,777.9985 L51700.2471,777.9985 L51700.2471,775.8569 L51708.9878,775.8569 L51708.9878,777.9985 L51705.8418,777.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="51718.5" y="785.5352">partialResult4Count</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="51690.5" x2="51833.5" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="51690.5" x2="51833.5" y1="805" y2="805"/><!--MD5=[65961ffdc7a8c1fedca8df8ad97ed9ef]
class aggfuncs.approxCountDistinctFinal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.approxCountDistinctFinal" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="69075" y="3954"/><ellipse cx="69263.25" cy="3970" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69262.4834,3971.063 Q69260.6323,3970.3574 69259.9766,3969.5813 Q69259.3208,3968.8052 69259.3208,3967.4937 Q69259.3208,3965.8086 69260.3999,3964.8457 Q69261.479,3963.8828 69263.3633,3963.8828 Q69264.2183,3963.8828 69265.0732,3964.0779 Q69265.9282,3964.2729 69266.7666,3964.6548 L69266.7666,3967.0454 Q69265.978,3966.4893 69265.1646,3966.1987 Q69264.3511,3965.9082 69263.5542,3965.9082 Q69262.666,3965.9082 69262.1929,3966.2651 Q69261.7197,3966.6221 69261.7197,3967.2861 Q69261.7197,3967.8008 69262.0642,3968.137 Q69262.4087,3968.4731 69263.5044,3968.8799 L69264.5586,3969.2783 Q69266.0527,3969.8262 69266.7583,3970.731 Q69267.4639,3971.6357 69267.4639,3973.0137 Q69267.4639,3974.8896 69266.3557,3975.8152 Q69265.2476,3976.7407 69263.0063,3976.7407 Q69262.085,3976.7407 69261.1594,3976.5208 Q69260.2339,3976.3008 69259.3706,3975.8691 L69259.3706,3973.3374 Q69260.3501,3974.0347 69261.2673,3974.375 Q69262.1846,3974.7153 69263.0811,3974.7153 Q69263.9858,3974.7153 69264.4839,3974.3044 Q69264.9819,3973.8936 69264.9819,3973.1548 Q69264.9819,3972.5986 69264.6499,3972.1794 Q69264.3179,3971.7603 69263.687,3971.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="143" x="69283.75" y="3974.5352">approxCountDistinctFinal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69076" x2="69602" y1="3986" y2="3986"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="69076" x2="69602" y1="3994" y2="3994"/><ellipse cx="69086" cy="4005" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="69095" y="4008.6348">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[4c35e64480c305429c1499070f6ecd90]
class aggfuncs.approxCountDistinctOriginal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.approxCountDistinctOriginal" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="69073.5" y="2477"/><ellipse cx="69254.25" cy="2493" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69253.4834,2494.063 Q69251.6323,2493.3574 69250.9766,2492.5813 Q69250.3208,2491.8052 69250.3208,2490.4937 Q69250.3208,2488.8086 69251.3999,2487.8457 Q69252.479,2486.8828 69254.3633,2486.8828 Q69255.2183,2486.8828 69256.0732,2487.0779 Q69256.9282,2487.2729 69257.7666,2487.6548 L69257.7666,2490.0454 Q69256.978,2489.4893 69256.1646,2489.1987 Q69255.3511,2488.9082 69254.5542,2488.9082 Q69253.666,2488.9082 69253.1929,2489.2651 Q69252.7197,2489.6221 69252.7197,2490.2861 Q69252.7197,2490.8008 69253.0642,2491.137 Q69253.4087,2491.4731 69254.5044,2491.8799 L69255.5586,2492.2783 Q69257.0527,2492.8262 69257.7583,2493.731 Q69258.4639,2494.6357 69258.4639,2496.0137 Q69258.4639,2497.8896 69257.3557,2498.8152 Q69256.2476,2499.7407 69254.0063,2499.7407 Q69253.085,2499.7407 69252.1594,2499.5208 Q69251.2339,2499.3008 69250.3706,2498.8691 L69250.3706,2496.3374 Q69251.3501,2497.0347 69252.2673,2497.375 Q69253.1846,2497.7153 69254.0811,2497.7153 Q69254.9858,2497.7153 69255.4839,2497.3044 Q69255.9819,2496.8936 69255.9819,2496.1548 Q69255.9819,2495.5986 69255.6499,2495.1794 Q69255.3179,2494.7603 69254.687,2494.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="161" x="69274.75" y="2497.5352">approxCountDistinctOriginal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69074.5" x2="69603.5" y1="2509" y2="2509"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="69074.5" x2="69603.5" y1="2517" y2="2517"/><ellipse cx="69084.5" cy="2528" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="69093.5" y="2531.6348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[fed8d428d58717277b10c13b74a2bb30]
class aggfuncs.approxCountDistinctPartial1--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.approxCountDistinctPartial1" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="69075" y="3226.5"/><ellipse cx="69254.25" cy="3242.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69253.4834,3243.563 Q69251.6323,3242.8574 69250.9766,3242.0813 Q69250.3208,3241.3052 69250.3208,3239.9937 Q69250.3208,3238.3086 69251.3999,3237.3457 Q69252.479,3236.3828 69254.3633,3236.3828 Q69255.2183,3236.3828 69256.0732,3236.5779 Q69256.9282,3236.7729 69257.7666,3237.1548 L69257.7666,3239.5454 Q69256.978,3238.9893 69256.1646,3238.6987 Q69255.3511,3238.4082 69254.5542,3238.4082 Q69253.666,3238.4082 69253.1929,3238.7651 Q69252.7197,3239.1221 69252.7197,3239.7861 Q69252.7197,3240.3008 69253.0642,3240.637 Q69253.4087,3240.9731 69254.5044,3241.3799 L69255.5586,3241.7783 Q69257.0527,3242.3262 69257.7583,3243.231 Q69258.4639,3244.1357 69258.4639,3245.5137 Q69258.4639,3247.3896 69257.3557,3248.3152 Q69256.2476,3249.2407 69254.0063,3249.2407 Q69253.085,3249.2407 69252.1594,3249.0208 Q69251.2339,3248.8008 69250.3706,3248.3691 L69250.3706,3245.8374 Q69251.3501,3246.5347 69252.2673,3246.875 Q69253.1846,3247.2153 69254.0811,3247.2153 Q69254.9858,3247.2153 69255.4839,3246.8044 Q69255.9819,3246.3936 69255.9819,3245.6548 Q69255.9819,3245.0986 69255.6499,3244.6794 Q69255.3179,3244.2603 69254.687,3244.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="161" x="69274.75" y="3247.0352">approxCountDistinctPartial1</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69076" x2="69602" y1="3258.5" y2="3258.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="69076" x2="69602" y1="3266.5" y2="3266.5"/><ellipse cx="69086" cy="3277.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="69095" y="3281.1348">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[7e3bf2b253764adb89f385671a84b34a]
class aggfuncs.approxCountDistinctPartial2--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.approxCountDistinctPartial2" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="69073.5" y="3632.5"/><ellipse cx="69254.25" cy="3648.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69253.4834,3649.563 Q69251.6323,3648.8574 69250.9766,3648.0813 Q69250.3208,3647.3052 69250.3208,3645.9937 Q69250.3208,3644.3086 69251.3999,3643.3457 Q69252.479,3642.3828 69254.3633,3642.3828 Q69255.2183,3642.3828 69256.0732,3642.5779 Q69256.9282,3642.7729 69257.7666,3643.1548 L69257.7666,3645.5454 Q69256.978,3644.9893 69256.1646,3644.6987 Q69255.3511,3644.4082 69254.5542,3644.4082 Q69253.666,3644.4082 69253.1929,3644.7651 Q69252.7197,3645.1221 69252.7197,3645.7861 Q69252.7197,3646.3008 69253.0642,3646.637 Q69253.4087,3646.9731 69254.5044,3647.3799 L69255.5586,3647.7783 Q69257.0527,3648.3262 69257.7583,3649.231 Q69258.4639,3650.1357 69258.4639,3651.5137 Q69258.4639,3653.3896 69257.3557,3654.3152 Q69256.2476,3655.2407 69254.0063,3655.2407 Q69253.085,3655.2407 69252.1594,3655.0208 Q69251.2339,3654.8008 69250.3706,3654.3691 L69250.3706,3651.8374 Q69251.3501,3652.5347 69252.2673,3652.875 Q69253.1846,3653.2153 69254.0811,3653.2153 Q69254.9858,3653.2153 69255.4839,3652.8044 Q69255.9819,3652.3936 69255.9819,3651.6548 Q69255.9819,3651.0986 69255.6499,3650.6794 Q69255.3179,3650.2603 69254.687,3650.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="161" x="69274.75" y="3653.0352">approxCountDistinctPartial2</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69074.5" x2="69603.5" y1="3664.5" y2="3664.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="69074.5" x2="69603.5" y1="3672.5" y2="3672.5"/><ellipse cx="69084.5" cy="3683.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="69093.5" y="3687.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[735b756cfc6cb9b9c8ee5bb2298c9d72]
class aggfuncs.avgOriginal4Decimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.avgOriginal4Decimal" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="53618.5" y="2477"/><ellipse cx="53820.75" cy="2493" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M53819.9834,2494.063 Q53818.1323,2493.3574 53817.4766,2492.5813 Q53816.8208,2491.8052 53816.8208,2490.4937 Q53816.8208,2488.8086 53817.8999,2487.8457 Q53818.979,2486.8828 53820.8633,2486.8828 Q53821.7183,2486.8828 53822.5732,2487.0779 Q53823.4282,2487.2729 53824.2666,2487.6548 L53824.2666,2490.0454 Q53823.478,2489.4893 53822.6646,2489.1987 Q53821.8511,2488.9082 53821.0542,2488.9082 Q53820.166,2488.9082 53819.6929,2489.2651 Q53819.2197,2489.6221 53819.2197,2490.2861 Q53819.2197,2490.8008 53819.5642,2491.137 Q53819.9087,2491.4731 53821.0044,2491.8799 L53822.0586,2492.2783 Q53823.5527,2492.8262 53824.2583,2493.731 Q53824.9639,2494.6357 53824.9639,2496.0137 Q53824.9639,2497.8896 53823.8557,2498.8152 Q53822.7476,2499.7407 53820.5063,2499.7407 Q53819.585,2499.7407 53818.6594,2499.5208 Q53817.7339,2499.3008 53816.8706,2498.8691 L53816.8706,2496.3374 Q53817.8501,2497.0347 53818.7673,2497.375 Q53819.6846,2497.7153 53820.5811,2497.7153 Q53821.4858,2497.7153 53821.9839,2497.3044 Q53822.4819,2496.8936 53822.4819,2496.1548 Q53822.4819,2495.5986 53822.1499,2495.1794 Q53821.8179,2494.7603 53821.187,2494.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="53841.25" y="2497.5352">avgOriginal4Decimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="53619.5" x2="54148.5" y1="2509" y2="2509"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="53619.5" x2="54148.5" y1="2517" y2="2517"/><ellipse cx="53629.5" cy="2528" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="53638.5" y="2531.6348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[d4b3a1fbdaee323176b14eeb0b9eb5cf]
class aggfuncs.avgOriginal4DistinctDecimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.avgOriginal4DistinctDecimal" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="48872.5" y="1676"/><ellipse cx="49053.75" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M49052.9834,1693.063 Q49051.1323,1692.3574 49050.4766,1691.5813 Q49049.8208,1690.8052 49049.8208,1689.4937 Q49049.8208,1687.8086 49050.8999,1686.8457 Q49051.979,1685.8828 49053.8633,1685.8828 Q49054.7183,1685.8828 49055.5732,1686.0779 Q49056.4282,1686.2729 49057.2666,1686.6548 L49057.2666,1689.0454 Q49056.478,1688.4893 49055.6646,1688.1987 Q49054.8511,1687.9082 49054.0542,1687.9082 Q49053.166,1687.9082 49052.6929,1688.2651 Q49052.2197,1688.6221 49052.2197,1689.2861 Q49052.2197,1689.8008 49052.5642,1690.137 Q49052.9087,1690.4731 49054.0044,1690.8799 L49055.0586,1691.2783 Q49056.5527,1691.8262 49057.2583,1692.731 Q49057.9639,1693.6357 49057.9639,1695.0137 Q49057.9639,1696.8896 49056.8557,1697.8152 Q49055.7476,1698.7407 49053.5063,1698.7407 Q49052.585,1698.7407 49051.6594,1698.5208 Q49050.7339,1698.3008 49049.8706,1697.8691 L49049.8706,1695.3374 Q49050.8501,1696.0347 49051.7673,1696.375 Q49052.6846,1696.7153 49053.5811,1696.7153 Q49054.4858,1696.7153 49054.9839,1696.3044 Q49055.4819,1695.8936 49055.4819,1695.1548 Q49055.4819,1694.5986 49055.1499,1694.1794 Q49054.8179,1693.7603 49054.187,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="160" x="49074.25" y="1696.5352">avgOriginal4DistinctDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="48873.5" x2="49402.5" y1="1708" y2="1708"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="48873.5" x2="49402.5" y1="1716" y2="1716"/><ellipse cx="48883.5" cy="1727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="48892.5" y="1730.6348">AllocPartialResult() PartialResult</text><ellipse cx="48883.5" cy="1739.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="48892.5" y="1743.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="48883.5" cy="1752.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="48892.5" y="1756.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="48883.5" cy="1765.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="48892.5" y="1769.5">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[c656fbc19a960b2ddda8d65a95192304]
class aggfuncs.avgOriginal4DistinctFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.avgOriginal4DistinctFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="49438.5" y="1676"/><ellipse cx="49621.25" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M49620.4834,1693.063 Q49618.6323,1692.3574 49617.9766,1691.5813 Q49617.3208,1690.8052 49617.3208,1689.4937 Q49617.3208,1687.8086 49618.3999,1686.8457 Q49619.479,1685.8828 49621.3633,1685.8828 Q49622.2183,1685.8828 49623.0732,1686.0779 Q49623.9282,1686.2729 49624.7666,1686.6548 L49624.7666,1689.0454 Q49623.978,1688.4893 49623.1646,1688.1987 Q49622.3511,1687.9082 49621.5542,1687.9082 Q49620.666,1687.9082 49620.1929,1688.2651 Q49619.7197,1688.6221 49619.7197,1689.2861 Q49619.7197,1689.8008 49620.0642,1690.137 Q49620.4087,1690.4731 49621.5044,1690.8799 L49622.5586,1691.2783 Q49624.0527,1691.8262 49624.7583,1692.731 Q49625.4639,1693.6357 49625.4639,1695.0137 Q49625.4639,1696.8896 49624.3557,1697.8152 Q49623.2476,1698.7407 49621.0063,1698.7407 Q49620.085,1698.7407 49619.1594,1698.5208 Q49618.2339,1698.3008 49617.3706,1697.8691 L49617.3706,1695.3374 Q49618.3501,1696.0347 49619.2673,1696.375 Q49620.1846,1696.7153 49621.0811,1696.7153 Q49621.9858,1696.7153 49622.4839,1696.3044 Q49622.9819,1695.8936 49622.9819,1695.1548 Q49622.9819,1694.5986 49622.6499,1694.1794 Q49622.3179,1693.7603 49621.687,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="157" x="49641.75" y="1696.5352">avgOriginal4DistinctFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="49439.5" x2="49968.5" y1="1708" y2="1708"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="49439.5" x2="49968.5" y1="1716" y2="1716"/><ellipse cx="49449.5" cy="1727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="49458.5" y="1730.6348">AllocPartialResult() PartialResult</text><ellipse cx="49449.5" cy="1739.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="49458.5" y="1743.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="49449.5" cy="1752.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="49458.5" y="1756.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="49449.5" cy="1765.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="49458.5" y="1769.5">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[5724922cb06ebe3b932826ee7997f48a]
class aggfuncs.avgOriginal4Float64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.avgOriginal4Float64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="54750.5" y="2477"/><ellipse cx="54954.25" cy="2493" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M54953.4834,2494.063 Q54951.6323,2493.3574 54950.9766,2492.5813 Q54950.3208,2491.8052 54950.3208,2490.4937 Q54950.3208,2488.8086 54951.3999,2487.8457 Q54952.479,2486.8828 54954.3633,2486.8828 Q54955.2183,2486.8828 54956.0732,2487.0779 Q54956.9282,2487.2729 54957.7666,2487.6548 L54957.7666,2490.0454 Q54956.978,2489.4893 54956.1646,2489.1987 Q54955.3511,2488.9082 54954.5542,2488.9082 Q54953.666,2488.9082 54953.1929,2489.2651 Q54952.7197,2489.6221 54952.7197,2490.2861 Q54952.7197,2490.8008 54953.0642,2491.137 Q54953.4087,2491.4731 54954.5044,2491.8799 L54955.5586,2492.2783 Q54957.0527,2492.8262 54957.7583,2493.731 Q54958.4639,2494.6357 54958.4639,2496.0137 Q54958.4639,2497.8896 54957.3557,2498.8152 Q54956.2476,2499.7407 54954.0063,2499.7407 Q54953.085,2499.7407 54952.1594,2499.5208 Q54951.2339,2499.3008 54950.3706,2498.8691 L54950.3706,2496.3374 Q54951.3501,2497.0347 54952.2673,2497.375 Q54953.1846,2497.7153 54954.0811,2497.7153 Q54954.9858,2497.7153 54955.4839,2497.3044 Q54955.9819,2496.8936 54955.9819,2496.1548 Q54955.9819,2495.5986 54955.6499,2495.1794 Q54955.3179,2494.7603 54954.687,2494.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="54974.75" y="2497.5352">avgOriginal4Float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="54751.5" x2="55280.5" y1="2509" y2="2509"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="54751.5" x2="55280.5" y1="2517" y2="2517"/><ellipse cx="54761.5" cy="2528" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="54770.5" y="2531.6348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[a68fdcb62e8fce1333d982e4a5fc1491]
class aggfuncs.avgPartial4Decimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.avgPartial4Decimal" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="54184.5" y="2470.5"/><ellipse cx="54390.75" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M54389.9834,2487.563 Q54388.1323,2486.8574 54387.4766,2486.0813 Q54386.8208,2485.3052 54386.8208,2483.9937 Q54386.8208,2482.3086 54387.8999,2481.3457 Q54388.979,2480.3828 54390.8633,2480.3828 Q54391.7183,2480.3828 54392.5732,2480.5779 Q54393.4282,2480.7729 54394.2666,2481.1548 L54394.2666,2483.5454 Q54393.478,2482.9893 54392.6646,2482.6987 Q54391.8511,2482.4082 54391.0542,2482.4082 Q54390.166,2482.4082 54389.6929,2482.7651 Q54389.2197,2483.1221 54389.2197,2483.7861 Q54389.2197,2484.3008 54389.5642,2484.637 Q54389.9087,2484.9731 54391.0044,2485.3799 L54392.0586,2485.7783 Q54393.5527,2486.3262 54394.2583,2487.231 Q54394.9639,2488.1357 54394.9639,2489.5137 Q54394.9639,2491.3896 54393.8557,2492.3152 Q54392.7476,2493.2407 54390.5063,2493.2407 Q54389.585,2493.2407 54388.6594,2493.0208 Q54387.7339,2492.8008 54386.8706,2492.3691 L54386.8706,2489.8374 Q54387.8501,2490.5347 54388.7673,2490.875 Q54389.6846,2491.2153 54390.5811,2491.2153 Q54391.4858,2491.2153 54391.9839,2490.8044 Q54392.4819,2490.3936 54392.4819,2489.6548 Q54392.4819,2489.0986 54392.1499,2488.6794 Q54391.8179,2488.2603 54391.187,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="54411.25" y="2491.0352">avgPartial4Decimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="54185.5" x2="54714.5" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="54185.5" x2="54714.5" y1="2510.5" y2="2510.5"/><ellipse cx="54195.5" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="54204.5" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="54195.5" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="54204.5" y="2538.0898">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[7a2f9baee221d9cd16a9c1be8d2abd6f]
class aggfuncs.avgPartial4Float64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.avgPartial4Float64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="55316.5" y="2470.5"/><ellipse cx="55524.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M55523.4834,2487.563 Q55521.6323,2486.8574 55520.9766,2486.0813 Q55520.3208,2485.3052 55520.3208,2483.9937 Q55520.3208,2482.3086 55521.3999,2481.3457 Q55522.479,2480.3828 55524.3633,2480.3828 Q55525.2183,2480.3828 55526.0732,2480.5779 Q55526.9282,2480.7729 55527.7666,2481.1548 L55527.7666,2483.5454 Q55526.978,2482.9893 55526.1646,2482.6987 Q55525.3511,2482.4082 55524.5542,2482.4082 Q55523.666,2482.4082 55523.1929,2482.7651 Q55522.7197,2483.1221 55522.7197,2483.7861 Q55522.7197,2484.3008 55523.0642,2484.637 Q55523.4087,2484.9731 55524.5044,2485.3799 L55525.5586,2485.7783 Q55527.0527,2486.3262 55527.7583,2487.231 Q55528.4639,2488.1357 55528.4639,2489.5137 Q55528.4639,2491.3896 55527.3557,2492.3152 Q55526.2476,2493.2407 55524.0063,2493.2407 Q55523.085,2493.2407 55522.1594,2493.0208 Q55521.2339,2492.8008 55520.3706,2492.3691 L55520.3706,2489.8374 Q55521.3501,2490.5347 55522.2673,2490.875 Q55523.1846,2491.2153 55524.0811,2491.2153 Q55524.9858,2491.2153 55525.4839,2490.8044 Q55525.9819,2490.3936 55525.9819,2489.6548 Q55525.9819,2489.0986 55525.6499,2488.6794 Q55525.3179,2488.2603 55524.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="55544.75" y="2491.0352">avgPartial4Float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="55317.5" x2="55846.5" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="55317.5" x2="55846.5" y1="2510.5" y2="2510.5"/><ellipse cx="55327.5" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="55336.5" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="55327.5" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="55336.5" y="2538.0898">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[2c5dbb795dce15f5e2dfc859c6efccce]
class aggfuncs.baseAggFunc--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.baseAggFunc" style="stroke: #A80036; stroke-width: 1.5;" width="478" x="51176" y="745.5"/><ellipse cx="51372.75" cy="761.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M51371.9834,762.563 Q51370.1323,761.8574 51369.4766,761.0813 Q51368.8208,760.3052 51368.8208,758.9937 Q51368.8208,757.3086 51369.8999,756.3457 Q51370.979,755.3828 51372.8633,755.3828 Q51373.7183,755.3828 51374.5732,755.5779 Q51375.4282,755.7729 51376.2666,756.1548 L51376.2666,758.5454 Q51375.478,757.9893 51374.6646,757.6987 Q51373.8511,757.4082 51373.0542,757.4082 Q51372.166,757.4082 51371.6929,757.7651 Q51371.2197,758.1221 51371.2197,758.7861 Q51371.2197,759.3008 51371.5642,759.637 Q51371.9087,759.9731 51373.0044,760.3799 L51374.0586,760.7783 Q51375.5527,761.3262 51376.2583,762.231 Q51376.9639,763.1357 51376.9639,764.5137 Q51376.9639,766.3896 51375.8557,767.3152 Q51374.7476,768.2407 51372.5063,768.2407 Q51371.585,768.2407 51370.6594,768.0208 Q51369.7339,767.8008 51368.8706,767.3691 L51368.8706,764.8374 Q51369.8501,765.5347 51370.7673,765.875 Q51371.6846,766.2153 51372.5811,766.2153 Q51373.4858,766.2153 51373.9839,765.8044 Q51374.4819,765.3936 51374.4819,764.6548 Q51374.4819,764.0986 51374.1499,763.6794 Q51373.8179,763.2603 51373.187,763.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="51393.25" y="766.0352">baseAggFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="51177" x2="51653" y1="777.5" y2="777.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="51184" y="785.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="51196" y="792.1348">args []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="51184" y="798.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="51196" y="805.0898">ordinal int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="51177" x2="51653" y1="811.4102" y2="811.4102"/><ellipse cx="51187" cy="822.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="51196" y="826.0449">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[7a7fd41f7491baac400f82e5cb3dd5d0]
class aggfuncs.baseApproxCountDistinct--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.baseApproxCountDistinct" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="66253" y="1676"/><ellipse cx="66439.75" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M66438.9834,1693.063 Q66437.1323,1692.3574 66436.4766,1691.5813 Q66435.8208,1690.8052 66435.8208,1689.4937 Q66435.8208,1687.8086 66436.8999,1686.8457 Q66437.979,1685.8828 66439.8633,1685.8828 Q66440.7183,1685.8828 66441.5732,1686.0779 Q66442.4282,1686.2729 66443.2666,1686.6548 L66443.2666,1689.0454 Q66442.478,1688.4893 66441.6646,1688.1987 Q66440.8511,1687.9082 66440.0542,1687.9082 Q66439.166,1687.9082 66438.6929,1688.2651 Q66438.2197,1688.6221 66438.2197,1689.2861 Q66438.2197,1689.8008 66438.5642,1690.137 Q66438.9087,1690.4731 66440.0044,1690.8799 L66441.0586,1691.2783 Q66442.5527,1691.8262 66443.2583,1692.731 Q66443.9639,1693.6357 66443.9639,1695.0137 Q66443.9639,1696.8896 66442.8557,1697.8152 Q66441.7476,1698.7407 66439.5063,1698.7407 Q66438.585,1698.7407 66437.6594,1698.5208 Q66436.7339,1698.3008 66435.8706,1697.8691 L66435.8706,1695.3374 Q66436.8501,1696.0347 66437.7673,1696.375 Q66438.6846,1696.7153 66439.5811,1696.7153 Q66440.4858,1696.7153 66440.9839,1696.3044 Q66441.4819,1695.8936 66441.4819,1695.1548 Q66441.4819,1694.5986 66441.1499,1694.1794 Q66440.8179,1693.7603 66440.187,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="146" x="66460.25" y="1696.5352">baseApproxCountDistinct</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="66254" x2="66780" y1="1708" y2="1708"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="66254" x2="66780" y1="1716" y2="1716"/><ellipse cx="66264" cy="1727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="66273" y="1730.6348">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="66264" cy="1739.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="66273" y="1743.5898">AllocPartialResult() PartialResult</text><ellipse cx="66264" cy="1752.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="66273" y="1756.5449">ResetPartialResult(pr PartialResult)</text><ellipse cx="66264" cy="1765.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="66273" y="1769.5">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[9e956ffe17eb2b0c01962bea1f095550]
class aggfuncs.baseAvgDecimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.baseAvgDecimal" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="53620" y="1682.5"/><ellipse cx="53832.25" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M53831.4834,1699.563 Q53829.6323,1698.8574 53828.9766,1698.0813 Q53828.3208,1697.3052 53828.3208,1695.9937 Q53828.3208,1694.3086 53829.3999,1693.3457 Q53830.479,1692.3828 53832.3633,1692.3828 Q53833.2183,1692.3828 53834.0732,1692.5779 Q53834.9282,1692.7729 53835.7666,1693.1548 L53835.7666,1695.5454 Q53834.978,1694.9893 53834.1646,1694.6987 Q53833.3511,1694.4082 53832.5542,1694.4082 Q53831.666,1694.4082 53831.1929,1694.7651 Q53830.7197,1695.1221 53830.7197,1695.7861 Q53830.7197,1696.3008 53831.0642,1696.637 Q53831.4087,1696.9731 53832.5044,1697.3799 L53833.5586,1697.7783 Q53835.0527,1698.3262 53835.7583,1699.231 Q53836.4639,1700.1357 53836.4639,1701.5137 Q53836.4639,1703.3896 53835.3557,1704.3152 Q53834.2476,1705.2407 53832.0063,1705.2407 Q53831.085,1705.2407 53830.1594,1705.0208 Q53829.2339,1704.8008 53828.3706,1704.3691 L53828.3706,1701.8374 Q53829.3501,1702.5347 53830.2673,1702.875 Q53831.1846,1703.2153 53832.0811,1703.2153 Q53832.9858,1703.2153 53833.4839,1702.8044 Q53833.9819,1702.3936 53833.9819,1701.6548 Q53833.9819,1701.0986 53833.6499,1700.6794 Q53833.3179,1700.2603 53832.687,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="53852.75" y="1703.0352">baseAvgDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="53621" x2="54147" y1="1714.5" y2="1714.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="53621" x2="54147" y1="1722.5" y2="1722.5"/><ellipse cx="53631" cy="1733.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="53640" y="1737.1348">AllocPartialResult() PartialResult</text><ellipse cx="53631" cy="1746.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="53640" y="1750.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="53631" cy="1759.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="53640" y="1763.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[9ffea3b6e78478ac69eeaf60d8922731]
class aggfuncs.baseAvgFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.baseAvgFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="54752" y="1682.5"/><ellipse cx="54965.75" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M54964.9834,1699.563 Q54963.1323,1698.8574 54962.4766,1698.0813 Q54961.8208,1697.3052 54961.8208,1695.9937 Q54961.8208,1694.3086 54962.8999,1693.3457 Q54963.979,1692.3828 54965.8633,1692.3828 Q54966.7183,1692.3828 54967.5732,1692.5779 Q54968.4282,1692.7729 54969.2666,1693.1548 L54969.2666,1695.5454 Q54968.478,1694.9893 54967.6646,1694.6987 Q54966.8511,1694.4082 54966.0542,1694.4082 Q54965.166,1694.4082 54964.6929,1694.7651 Q54964.2197,1695.1221 54964.2197,1695.7861 Q54964.2197,1696.3008 54964.5642,1696.637 Q54964.9087,1696.9731 54966.0044,1697.3799 L54967.0586,1697.7783 Q54968.5527,1698.3262 54969.2583,1699.231 Q54969.9639,1700.1357 54969.9639,1701.5137 Q54969.9639,1703.3896 54968.8557,1704.3152 Q54967.7476,1705.2407 54965.5063,1705.2407 Q54964.585,1705.2407 54963.6594,1705.0208 Q54962.7339,1704.8008 54961.8706,1704.3691 L54961.8706,1701.8374 Q54962.8501,1702.5347 54963.7673,1702.875 Q54964.6846,1703.2153 54965.5811,1703.2153 Q54966.4858,1703.2153 54966.9839,1702.8044 Q54967.4819,1702.3936 54967.4819,1701.6548 Q54967.4819,1701.0986 54967.1499,1700.6794 Q54966.8179,1700.2603 54966.187,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="54986.25" y="1703.0352">baseAvgFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="54753" x2="55279" y1="1714.5" y2="1714.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="54753" x2="55279" y1="1722.5" y2="1722.5"/><ellipse cx="54763" cy="1733.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="54772" y="1737.1348">AllocPartialResult() PartialResult</text><ellipse cx="54763" cy="1746.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="54772" y="1750.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="54763" cy="1759.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="54772" y="1763.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[cf61c20ab268840dbcd0f6e84f26557a]
class aggfuncs.baseBitAggFunc--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.baseBitAggFunc" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="56167" y="1682.5"/><ellipse cx="56381.75" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M56380.9834,1699.563 Q56379.1323,1698.8574 56378.4766,1698.0813 Q56377.8208,1697.3052 56377.8208,1695.9937 Q56377.8208,1694.3086 56378.8999,1693.3457 Q56379.979,1692.3828 56381.8633,1692.3828 Q56382.7183,1692.3828 56383.5732,1692.5779 Q56384.4282,1692.7729 56385.2666,1693.1548 L56385.2666,1695.5454 Q56384.478,1694.9893 56383.6646,1694.6987 Q56382.8511,1694.4082 56382.0542,1694.4082 Q56381.166,1694.4082 56380.6929,1694.7651 Q56380.2197,1695.1221 56380.2197,1695.7861 Q56380.2197,1696.3008 56380.5642,1696.637 Q56380.9087,1696.9731 56382.0044,1697.3799 L56383.0586,1697.7783 Q56384.5527,1698.3262 56385.2583,1699.231 Q56385.9639,1700.1357 56385.9639,1701.5137 Q56385.9639,1703.3896 56384.8557,1704.3152 Q56383.7476,1705.2407 56381.5063,1705.2407 Q56380.585,1705.2407 56379.6594,1705.0208 Q56378.7339,1704.8008 56377.8706,1704.3691 L56377.8706,1701.8374 Q56378.8501,1702.5347 56379.7673,1702.875 Q56380.6846,1703.2153 56381.5811,1703.2153 Q56382.4858,1703.2153 56382.9839,1702.8044 Q56383.4819,1702.3936 56383.4819,1701.6548 Q56383.4819,1701.0986 56383.1499,1700.6794 Q56382.8179,1700.2603 56382.187,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="56402.25" y="1703.0352">baseBitAggFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="56168" x2="56694" y1="1714.5" y2="1714.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="56168" x2="56694" y1="1722.5" y2="1722.5"/><ellipse cx="56178" cy="1733.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="56187" y="1737.1348">AllocPartialResult() PartialResult</text><ellipse cx="56178" cy="1746.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="56187" y="1750.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="56178" cy="1759.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="56187" y="1763.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[1d9a67882e2c9e271ac01d1cf4f022c5]
class aggfuncs.baseCount--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.baseCount" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="62906" y="1682.5"/><ellipse cx="63135.25" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M63134.4834,1699.563 Q63132.6323,1698.8574 63131.9766,1698.0813 Q63131.3208,1697.3052 63131.3208,1695.9937 Q63131.3208,1694.3086 63132.3999,1693.3457 Q63133.479,1692.3828 63135.3633,1692.3828 Q63136.2183,1692.3828 63137.0732,1692.5779 Q63137.9282,1692.7729 63138.7666,1693.1548 L63138.7666,1695.5454 Q63137.978,1694.9893 63137.1646,1694.6987 Q63136.3511,1694.4082 63135.5542,1694.4082 Q63134.666,1694.4082 63134.1929,1694.7651 Q63133.7197,1695.1221 63133.7197,1695.7861 Q63133.7197,1696.3008 63134.0642,1696.637 Q63134.4087,1696.9731 63135.5044,1697.3799 L63136.5586,1697.7783 Q63138.0527,1698.3262 63138.7583,1699.231 Q63139.4639,1700.1357 63139.4639,1701.5137 Q63139.4639,1703.3896 63138.3557,1704.3152 Q63137.2476,1705.2407 63135.0063,1705.2407 Q63134.085,1705.2407 63133.1594,1705.0208 Q63132.2339,1704.8008 63131.3706,1704.3691 L63131.3706,1701.8374 Q63132.3501,1702.5347 63133.2673,1702.875 Q63134.1846,1703.2153 63135.0811,1703.2153 Q63135.9858,1703.2153 63136.4839,1702.8044 Q63136.9819,1702.3936 63136.9819,1701.6548 Q63136.9819,1701.0986 63136.6499,1700.6794 Q63136.3179,1700.2603 63135.687,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="63155.75" y="1703.0352">baseCount</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="62907" x2="63433" y1="1714.5" y2="1714.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="62907" x2="63433" y1="1722.5" y2="1722.5"/><ellipse cx="62917" cy="1733.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="62926" y="1737.1348">AllocPartialResult() PartialResult</text><ellipse cx="62917" cy="1746.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="62926" y="1750.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="62917" cy="1759.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="62926" y="1763.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[75516a15cabefe731cce51e4d36c6f5a]
class aggfuncs.baseGroupConcat4String--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="aggfuncs.baseGroupConcat4String" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="50005" y="1650"/><ellipse cx="50193.25" cy="1666" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M50192.4834,1667.063 Q50190.6323,1666.3574 50189.9766,1665.5813 Q50189.3208,1664.8052 50189.3208,1663.4937 Q50189.3208,1661.8086 50190.3999,1660.8457 Q50191.479,1659.8828 50193.3633,1659.8828 Q50194.2183,1659.8828 50195.0732,1660.0779 Q50195.9282,1660.2729 50196.7666,1660.6548 L50196.7666,1663.0454 Q50195.978,1662.4893 50195.1646,1662.1987 Q50194.3511,1661.9082 50193.5542,1661.9082 Q50192.666,1661.9082 50192.1929,1662.2651 Q50191.7197,1662.6221 50191.7197,1663.2861 Q50191.7197,1663.8008 50192.0642,1664.137 Q50192.4087,1664.4731 50193.5044,1664.8799 L50194.5586,1665.2783 Q50196.0527,1665.8262 50196.7583,1666.731 Q50197.4639,1667.6357 50197.4639,1669.0137 Q50197.4639,1670.8896 50196.3557,1671.8152 Q50195.2476,1672.7407 50193.0063,1672.7407 Q50192.085,1672.7407 50191.1594,1672.5208 Q50190.2339,1672.3008 50189.3706,1671.8691 L50189.3706,1669.3374 Q50190.3501,1670.0347 50191.2673,1670.375 Q50192.1846,1670.7153 50193.0811,1670.7153 Q50193.9858,1670.7153 50194.4839,1670.3044 Q50194.9819,1669.8936 50194.9819,1669.1548 Q50194.9819,1668.5986 50194.6499,1668.1794 Q50194.3179,1667.7603 50193.687,1667.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="143" x="50213.75" y="1670.5352">baseGroupConcat4String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50006" x2="50532" y1="1682" y2="1682"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="50013" y="1690"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="50025" y="1696.6348">byItems []*util.ByItems</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="50013" y="1702.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="50025" y="1709.5898">sep string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="50013" y="1715.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="50025" y="1722.5449">maxLen uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="50013" y="1728.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="50025" y="1735.5">truncated *int32</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50006" x2="50532" y1="1741.8203" y2="1741.8203"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="50013" y="1749.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="50025" y="1756.4551">handleTruncateError(sctx sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="50013" y="1762.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="50025" y="1769.4102">truncatePartialResultIfNeed(sctx sessionctx.Context, buffer *bytes.Buffer) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="50028" y="1782.3652"/><ellipse cx="50016" cy="1791.6855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="50025" y="1795.3203">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[83de95e84c1044e3b6f704c79a8f7a81]
class aggfuncs.baseLeadLag--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.baseLeadLag" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="41874.5" y="1669.5"/><ellipse cx="42097.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M42096.9834,1686.563 Q42095.1323,1685.8574 42094.4766,1685.0813 Q42093.8208,1684.3052 42093.8208,1682.9937 Q42093.8208,1681.3086 42094.8999,1680.3457 Q42095.979,1679.3828 42097.8633,1679.3828 Q42098.7183,1679.3828 42099.5732,1679.5779 Q42100.4282,1679.7729 42101.2666,1680.1548 L42101.2666,1682.5454 Q42100.478,1681.9893 42099.6646,1681.6987 Q42098.8511,1681.4082 42098.0542,1681.4082 Q42097.166,1681.4082 42096.6929,1681.7651 Q42096.2197,1682.1221 42096.2197,1682.7861 Q42096.2197,1683.3008 42096.5642,1683.637 Q42096.9087,1683.9731 42098.0044,1684.3799 L42099.0586,1684.7783 Q42100.5527,1685.3262 42101.2583,1686.231 Q42101.9639,1687.1357 42101.9639,1688.5137 Q42101.9639,1690.3896 42100.8557,1691.3152 Q42099.7476,1692.2407 42097.5063,1692.2407 Q42096.585,1692.2407 42095.6594,1692.0208 Q42094.7339,1691.8008 42093.8706,1691.3691 L42093.8706,1688.8374 Q42094.8501,1689.5347 42095.7673,1689.875 Q42096.6846,1690.2153 42097.5811,1690.2153 Q42098.4858,1690.2153 42098.9839,1689.8044 Q42099.4819,1689.3936 42099.4819,1688.6548 Q42099.4819,1688.0986 42099.1499,1687.6794 Q42098.8179,1687.2603 42098.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="42118.25" y="1690.0352">baseLeadLag</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41875.5" x2="42404.5" y1="1701.5" y2="1701.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="41882.5" y="1709.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="41894.5" y="1716.1348">defaultExpr expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="41882.5" y="1722.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="41894.5" y="1729.0898">offset uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41875.5" x2="42404.5" y1="1735.4102" y2="1735.4102"/><ellipse cx="41885.5" cy="1746.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="41894.5" y="1750.0449">AllocPartialResult() PartialResult</text><ellipse cx="41885.5" cy="1759.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="41894.5" y="1763">ResetPartialResult(pr PartialResult)</text><ellipse cx="41885.5" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="41894.5" y="1775.9551">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[af5a5aaad4c54606afa3683a296d30a3]
class aggfuncs.baseMaxMinAggFunc--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.baseMaxMinAggFunc" style="stroke: #A80036; stroke-width: 1.5;" width="152" x="50605" y="1695.5"/><ellipse cx="50620" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M50619.2334,1712.563 Q50617.3823,1711.8574 50616.7266,1711.0813 Q50616.0708,1710.3052 50616.0708,1708.9937 Q50616.0708,1707.3086 50617.1499,1706.3457 Q50618.229,1705.3828 50620.1133,1705.3828 Q50620.9683,1705.3828 50621.8232,1705.5779 Q50622.6782,1705.7729 50623.5166,1706.1548 L50623.5166,1708.5454 Q50622.728,1707.9893 50621.9146,1707.6987 Q50621.1011,1707.4082 50620.3042,1707.4082 Q50619.416,1707.4082 50618.9429,1707.7651 Q50618.4697,1708.1221 50618.4697,1708.7861 Q50618.4697,1709.3008 50618.8142,1709.637 Q50619.1587,1709.9731 50620.2544,1710.3799 L50621.3086,1710.7783 Q50622.8027,1711.3262 50623.5083,1712.231 Q50624.2139,1713.1357 50624.2139,1714.5137 Q50624.2139,1716.3896 50623.1057,1717.3152 Q50621.9976,1718.2407 50619.7563,1718.2407 Q50618.835,1718.2407 50617.9094,1718.0208 Q50616.9839,1717.8008 50616.1206,1717.3691 L50616.1206,1714.8374 Q50617.1001,1715.5347 50618.0173,1715.875 Q50618.9346,1716.2153 50619.8311,1716.2153 Q50620.7358,1716.2153 50621.2339,1715.8044 Q50621.7319,1715.3936 50621.7319,1714.6548 Q50621.7319,1714.0986 50621.3999,1713.6794 Q50621.0679,1713.2603 50620.437,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="120" x="50634" y="1716.0352">baseMaxMinAggFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50606" x2="50756" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="50613" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="50625" y="1742.1348">isMax bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50606" x2="50756" y1="1748.4551" y2="1748.4551"/><!--MD5=[b44c7731772aa9a0bfd8d03b1aca8b7a]
class aggfuncs.basePartialResult4FirstRow--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.basePartialResult4FirstRow" style="stroke: #A80036; stroke-width: 1.5;" width="187" x="44201.5" y="752"/><ellipse cx="44216.5" cy="768" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M44215.7334,769.063 Q44213.8823,768.3574 44213.2266,767.5813 Q44212.5708,766.8052 44212.5708,765.4937 Q44212.5708,763.8086 44213.6499,762.8457 Q44214.729,761.8828 44216.6133,761.8828 Q44217.4683,761.8828 44218.3232,762.0779 Q44219.1782,762.2729 44220.0166,762.6548 L44220.0166,765.0454 Q44219.228,764.4893 44218.4146,764.1987 Q44217.6011,763.9082 44216.8042,763.9082 Q44215.916,763.9082 44215.4429,764.2651 Q44214.9697,764.6221 44214.9697,765.2861 Q44214.9697,765.8008 44215.3142,766.137 Q44215.6587,766.4731 44216.7544,766.8799 L44217.8086,767.2783 Q44219.3027,767.8262 44220.0083,768.731 Q44220.7139,769.6357 44220.7139,771.0137 Q44220.7139,772.8896 44219.6057,773.8152 Q44218.4976,774.7407 44216.2563,774.7407 Q44215.335,774.7407 44214.4094,774.5208 Q44213.4839,774.3008 44212.6206,773.8691 L44212.6206,771.3374 Q44213.6001,772.0347 44214.5173,772.375 Q44215.4346,772.7153 44216.3311,772.7153 Q44217.2358,772.7153 44217.7339,772.3044 Q44218.2319,771.8936 44218.2319,771.1548 Q44218.2319,770.5986 44217.8999,770.1794 Q44217.5679,769.7603 44216.937,769.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="155" x="44230.5" y="772.5352">basePartialResult4FirstRow</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44202.5" x2="44387.5" y1="784" y2="784"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="44209.5" y="792"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="44221.5" y="798.6348">isNull bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="44209.5" y="804.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="44221.5" y="811.5898">gotFirstRow bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44202.5" x2="44387.5" y1="817.9102" y2="817.9102"/><!--MD5=[a0d39fcbf86c44f4244d432e499647e1]
class aggfuncs.basePartialResult4GroupConcat--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.basePartialResult4GroupConcat" style="stroke: #A80036; stroke-width: 1.5;" width="214" x="42804" y="752"/><ellipse cx="42819" cy="768" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M42818.2334,769.063 Q42816.3823,768.3574 42815.7266,767.5813 Q42815.0708,766.8052 42815.0708,765.4937 Q42815.0708,763.8086 42816.1499,762.8457 Q42817.229,761.8828 42819.1133,761.8828 Q42819.9683,761.8828 42820.8232,762.0779 Q42821.6782,762.2729 42822.5166,762.6548 L42822.5166,765.0454 Q42821.728,764.4893 42820.9146,764.1987 Q42820.1011,763.9082 42819.3042,763.9082 Q42818.416,763.9082 42817.9429,764.2651 Q42817.4697,764.6221 42817.4697,765.2861 Q42817.4697,765.8008 42817.8142,766.137 Q42818.1587,766.4731 42819.2544,766.8799 L42820.3086,767.2783 Q42821.8027,767.8262 42822.5083,768.731 Q42823.2139,769.6357 42823.2139,771.0137 Q42823.2139,772.8896 42822.1057,773.8152 Q42820.9976,774.7407 42818.7563,774.7407 Q42817.835,774.7407 42816.9094,774.5208 Q42815.9839,774.3008 42815.1206,773.8691 L42815.1206,771.3374 Q42816.1001,772.0347 42817.0173,772.375 Q42817.9346,772.7153 42818.8311,772.7153 Q42819.7358,772.7153 42820.2339,772.3044 Q42820.7319,771.8936 42820.7319,771.1548 Q42820.7319,770.5986 42820.3999,770.1794 Q42820.0679,769.7603 42819.437,769.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="182" x="42833" y="772.5352">basePartialResult4GroupConcat</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42805" x2="43017" y1="784" y2="784"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="42812" y="792"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="42824" y="798.6348">valsBuf *bytes.Buffer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="42812" y="804.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="42824" y="811.5898">buffer *bytes.Buffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42805" x2="43017" y1="817.9102" y2="817.9102"/><!--MD5=[ddda5c4a43a0ceabf69fb54bbb6922c6]
class aggfuncs.baseSum4Float64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.baseSum4Float64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="52486.5" y="2451"/><ellipse cx="52696.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M52695.4834,2468.063 Q52693.6323,2467.3574 52692.9766,2466.5813 Q52692.3208,2465.8052 52692.3208,2464.4937 Q52692.3208,2462.8086 52693.3999,2461.8457 Q52694.479,2460.8828 52696.3633,2460.8828 Q52697.2183,2460.8828 52698.0732,2461.0779 Q52698.9282,2461.2729 52699.7666,2461.6548 L52699.7666,2464.0454 Q52698.978,2463.4893 52698.1646,2463.1987 Q52697.3511,2462.9082 52696.5542,2462.9082 Q52695.666,2462.9082 52695.1929,2463.2651 Q52694.7197,2463.6221 52694.7197,2464.2861 Q52694.7197,2464.8008 52695.0642,2465.137 Q52695.4087,2465.4731 52696.5044,2465.8799 L52697.5586,2466.2783 Q52699.0527,2466.8262 52699.7583,2467.731 Q52700.4639,2468.6357 52700.4639,2470.0137 Q52700.4639,2471.8896 52699.3557,2472.8152 Q52698.2476,2473.7407 52696.0063,2473.7407 Q52695.085,2473.7407 52694.1594,2473.5208 Q52693.2339,2473.3008 52692.3706,2472.8691 L52692.3706,2470.3374 Q52693.3501,2471.0347 52694.2673,2471.375 Q52695.1846,2471.7153 52696.0811,2471.7153 Q52696.9858,2471.7153 52697.4839,2471.3044 Q52697.9819,2470.8936 52697.9819,2470.1548 Q52697.9819,2469.5986 52697.6499,2469.1794 Q52697.3179,2468.7603 52696.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="52716.75" y="2471.5352">baseSum4Float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="52487.5" x2="53016.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="52487.5" x2="53016.5" y1="2491" y2="2491"/><ellipse cx="52497.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="52506.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="52497.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="52506.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="52497.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="52506.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="52497.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="52506.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="52497.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="52506.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[e8363b6ce952129df587abca485e399d]
class aggfuncs.baseSumAggFunc--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="aggfuncs.baseSumAggFunc" style="stroke: #A80036; stroke-width: 1.5;" width="132" x="57114" y="1702"/><ellipse cx="57129" cy="1718" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M57128.2334,1719.063 Q57126.3823,1718.3574 57125.7266,1717.5813 Q57125.0708,1716.8052 57125.0708,1715.4937 Q57125.0708,1713.8086 57126.1499,1712.8457 Q57127.229,1711.8828 57129.1133,1711.8828 Q57129.9683,1711.8828 57130.8232,1712.0779 Q57131.6782,1712.2729 57132.5166,1712.6548 L57132.5166,1715.0454 Q57131.728,1714.4893 57130.9146,1714.1987 Q57130.1011,1713.9082 57129.3042,1713.9082 Q57128.416,1713.9082 57127.9429,1714.2651 Q57127.4697,1714.6221 57127.4697,1715.2861 Q57127.4697,1715.8008 57127.8142,1716.137 Q57128.1587,1716.4731 57129.2544,1716.8799 L57130.3086,1717.2783 Q57131.8027,1717.8262 57132.5083,1718.731 Q57133.2139,1719.6357 57133.2139,1721.0137 Q57133.2139,1722.8896 57132.1057,1723.8152 Q57130.9976,1724.7407 57128.7563,1724.7407 Q57127.835,1724.7407 57126.9094,1724.5208 Q57125.9839,1724.3008 57125.1206,1723.8691 L57125.1206,1721.3374 Q57126.1001,1722.0347 57127.0173,1722.375 Q57127.9346,1722.7153 57128.8311,1722.7153 Q57129.7358,1722.7153 57130.2339,1722.3044 Q57130.7319,1721.8936 57130.7319,1721.1548 Q57130.7319,1720.5986 57130.3999,1720.1794 Q57130.0679,1719.7603 57129.437,1719.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="57143" y="1722.5352">baseSumAggFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="57115" x2="57245" y1="1734" y2="1734"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="57115" x2="57245" y1="1742" y2="1742"/><!--MD5=[09c3604c6f564847e27ee54534955748]
class aggfuncs.baseVarPopAggFunc--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="aggfuncs.baseVarPopAggFunc" style="stroke: #A80036; stroke-width: 1.5;" width="150" x="52111" y="1702"/><ellipse cx="52126" cy="1718" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M52125.2334,1719.063 Q52123.3823,1718.3574 52122.7266,1717.5813 Q52122.0708,1716.8052 52122.0708,1715.4937 Q52122.0708,1713.8086 52123.1499,1712.8457 Q52124.229,1711.8828 52126.1133,1711.8828 Q52126.9683,1711.8828 52127.8232,1712.0779 Q52128.6782,1712.2729 52129.5166,1712.6548 L52129.5166,1715.0454 Q52128.728,1714.4893 52127.9146,1714.1987 Q52127.1011,1713.9082 52126.3042,1713.9082 Q52125.416,1713.9082 52124.9429,1714.2651 Q52124.4697,1714.6221 52124.4697,1715.2861 Q52124.4697,1715.8008 52124.8142,1716.137 Q52125.1587,1716.4731 52126.2544,1716.8799 L52127.3086,1717.2783 Q52128.8027,1717.8262 52129.5083,1718.731 Q52130.2139,1719.6357 52130.2139,1721.0137 Q52130.2139,1722.8896 52129.1057,1723.8152 Q52127.9976,1724.7407 52125.7563,1724.7407 Q52124.835,1724.7407 52123.9094,1724.5208 Q52122.9839,1724.3008 52122.1206,1723.8691 L52122.1206,1721.3374 Q52123.1001,1722.0347 52124.0173,1722.375 Q52124.9346,1722.7153 52125.8311,1722.7153 Q52126.7358,1722.7153 52127.2339,1722.3044 Q52127.7319,1721.8936 52127.7319,1721.1548 Q52127.7319,1720.5986 52127.3999,1720.1794 Q52127.0679,1719.7603 52126.437,1719.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="52140" y="1722.5352">baseVarPopAggFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="52112" x2="52260" y1="1734" y2="1734"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="52112" x2="52260" y1="1742" y2="1742"/><!--MD5=[5c43ea2e4b1fd349a9b0b5a74f7f1a99]
class aggfuncs.bitAndUint64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.bitAndUint64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="56448.5" y="2457.5"/><ellipse cx="56671.75" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M56670.9834,2474.563 Q56669.1323,2473.8574 56668.4766,2473.0813 Q56667.8208,2472.3052 56667.8208,2470.9937 Q56667.8208,2469.3086 56668.8999,2468.3457 Q56669.979,2467.3828 56671.8633,2467.3828 Q56672.7183,2467.3828 56673.5732,2467.5779 Q56674.4282,2467.7729 56675.2666,2468.1548 L56675.2666,2470.5454 Q56674.478,2469.9893 56673.6646,2469.6987 Q56672.8511,2469.4082 56672.0542,2469.4082 Q56671.166,2469.4082 56670.6929,2469.7651 Q56670.2197,2470.1221 56670.2197,2470.7861 Q56670.2197,2471.3008 56670.5642,2471.637 Q56670.9087,2471.9731 56672.0044,2472.3799 L56673.0586,2472.7783 Q56674.5527,2473.3262 56675.2583,2474.231 Q56675.9639,2475.1357 56675.9639,2476.5137 Q56675.9639,2478.3896 56674.8557,2479.3152 Q56673.7476,2480.2407 56671.5063,2480.2407 Q56670.585,2480.2407 56669.6594,2480.0208 Q56668.7339,2479.8008 56667.8706,2479.3691 L56667.8706,2476.8374 Q56668.8501,2477.5347 56669.7673,2477.875 Q56670.6846,2478.2153 56671.5811,2478.2153 Q56672.4858,2478.2153 56672.9839,2477.8044 Q56673.4819,2477.3936 56673.4819,2476.6548 Q56673.4819,2476.0986 56673.1499,2475.6794 Q56672.8179,2475.2603 56672.187,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="56692.25" y="2478.0352">bitAndUint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="56449.5" x2="56978.5" y1="2489.5" y2="2489.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="56449.5" x2="56978.5" y1="2497.5" y2="2497.5"/><ellipse cx="56459.5" cy="2508.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="56468.5" y="2512.1348">AllocPartialResult() PartialResult</text><ellipse cx="56459.5" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="56468.5" y="2525.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="56459.5" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="56468.5" y="2538.0449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="56459.5" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="56468.5" y="2551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[dce60ce76b514c42211ba2d8afae924d]
class aggfuncs.bitOrUint64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.bitOrUint64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="57014.5" y="2470.5"/><ellipse cx="57242.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M57241.4834,2487.563 Q57239.6323,2486.8574 57238.9766,2486.0813 Q57238.3208,2485.3052 57238.3208,2483.9937 Q57238.3208,2482.3086 57239.3999,2481.3457 Q57240.479,2480.3828 57242.3633,2480.3828 Q57243.2183,2480.3828 57244.0732,2480.5779 Q57244.9282,2480.7729 57245.7666,2481.1548 L57245.7666,2483.5454 Q57244.978,2482.9893 57244.1646,2482.6987 Q57243.3511,2482.4082 57242.5542,2482.4082 Q57241.666,2482.4082 57241.1929,2482.7651 Q57240.7197,2483.1221 57240.7197,2483.7861 Q57240.7197,2484.3008 57241.0642,2484.637 Q57241.4087,2484.9731 57242.5044,2485.3799 L57243.5586,2485.7783 Q57245.0527,2486.3262 57245.7583,2487.231 Q57246.4639,2488.1357 57246.4639,2489.5137 Q57246.4639,2491.3896 57245.3557,2492.3152 Q57244.2476,2493.2407 57242.0063,2493.2407 Q57241.085,2493.2407 57240.1594,2493.0208 Q57239.2339,2492.8008 57238.3706,2492.3691 L57238.3706,2489.8374 Q57239.3501,2490.5347 57240.2673,2490.875 Q57241.1846,2491.2153 57242.0811,2491.2153 Q57242.9858,2491.2153 57243.4839,2490.8044 Q57243.9819,2490.3936 57243.9819,2489.6548 Q57243.9819,2489.0986 57243.6499,2488.6794 Q57243.3179,2488.2603 57242.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="57262.75" y="2491.0352">bitOrUint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="57015.5" x2="57544.5" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="57015.5" x2="57544.5" y1="2510.5" y2="2510.5"/><ellipse cx="57025.5" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="57034.5" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="57025.5" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="57034.5" y="2538.0898">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[a66e017ee7cc841a61985e7b37ddd594]
class aggfuncs.bitXorUint64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.bitXorUint64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="55882.5" y="2470.5"/><ellipse cx="56107.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M56106.4834,2487.563 Q56104.6323,2486.8574 56103.9766,2486.0813 Q56103.3208,2485.3052 56103.3208,2483.9937 Q56103.3208,2482.3086 56104.3999,2481.3457 Q56105.479,2480.3828 56107.3633,2480.3828 Q56108.2183,2480.3828 56109.0732,2480.5779 Q56109.9282,2480.7729 56110.7666,2481.1548 L56110.7666,2483.5454 Q56109.978,2482.9893 56109.1646,2482.6987 Q56108.3511,2482.4082 56107.5542,2482.4082 Q56106.666,2482.4082 56106.1929,2482.7651 Q56105.7197,2483.1221 56105.7197,2483.7861 Q56105.7197,2484.3008 56106.0642,2484.637 Q56106.4087,2484.9731 56107.5044,2485.3799 L56108.5586,2485.7783 Q56110.0527,2486.3262 56110.7583,2487.231 Q56111.4639,2488.1357 56111.4639,2489.5137 Q56111.4639,2491.3896 56110.3557,2492.3152 Q56109.2476,2493.2407 56107.0063,2493.2407 Q56106.085,2493.2407 56105.1594,2493.0208 Q56104.2339,2492.8008 56103.3706,2492.3691 L56103.3706,2489.8374 Q56104.3501,2490.5347 56105.2673,2490.875 Q56106.1846,2491.2153 56107.0811,2491.2153 Q56107.9858,2491.2153 56108.4839,2490.8044 Q56108.9819,2490.3936 56108.9819,2489.6548 Q56108.9819,2489.0986 56108.6499,2488.6794 Q56108.3179,2488.2603 56107.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="56127.75" y="2491.0352">bitXorUint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="55883.5" x2="56412.5" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="55883.5" x2="56412.5" y1="2510.5" y2="2510.5"/><ellipse cx="55893.5" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="55902.5" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="55893.5" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="55902.5" y="2538.0898">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[7a0de56ee39d0deaf716d38399cb56e6]
class aggfuncs.countOriginal4Decimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.countOriginal4Decimal" style="stroke: #A80036; stroke-width: 1.5;" width="760" x="66651" y="2470.5"/><ellipse cx="66962.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M66961.4834,2487.563 Q66959.6323,2486.8574 66958.9766,2486.0813 Q66958.3208,2485.3052 66958.3208,2483.9937 Q66958.3208,2482.3086 66959.3999,2481.3457 Q66960.479,2480.3828 66962.3633,2480.3828 Q66963.2183,2480.3828 66964.0732,2480.5779 Q66964.9282,2480.7729 66965.7666,2481.1548 L66965.7666,2483.5454 Q66964.978,2482.9893 66964.1646,2482.6987 Q66963.3511,2482.4082 66962.5542,2482.4082 Q66961.666,2482.4082 66961.1929,2482.7651 Q66960.7197,2483.1221 66960.7197,2483.7861 Q66960.7197,2484.3008 66961.0642,2484.637 Q66961.4087,2484.9731 66962.5044,2485.3799 L66963.5586,2485.7783 Q66965.0527,2486.3262 66965.7583,2487.231 Q66966.4639,2488.1357 66966.4639,2489.5137 Q66966.4639,2491.3896 66965.3557,2492.3152 Q66964.2476,2493.2407 66962.0063,2493.2407 Q66961.085,2493.2407 66960.1594,2493.0208 Q66959.2339,2492.8008 66958.3706,2492.3691 L66958.3706,2489.8374 Q66959.3501,2490.5347 66960.2673,2490.875 Q66961.1846,2491.2153 66962.0811,2491.2153 Q66962.9858,2491.2153 66963.4839,2490.8044 Q66963.9819,2490.3936 66963.9819,2489.6548 Q66963.9819,2489.0986 66963.6499,2488.6794 Q66963.3179,2488.2603 66962.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="129" x="66982.75" y="2491.0352">countOriginal4Decimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="66652" x2="67410" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="66652" x2="67410" y1="2510.5" y2="2510.5"/><ellipse cx="66662" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="66671" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="66662" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="734" x="66671" y="2538.0898">Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error</text><!--MD5=[95f89988e8e704c1754f861b4d6d12ab]
class aggfuncs.countOriginal4Duration--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.countOriginal4Duration" style="stroke: #A80036; stroke-width: 1.5;" width="760" x="67446" y="2470.5"/><ellipse cx="67755.75" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M67754.9834,2487.563 Q67753.1323,2486.8574 67752.4766,2486.0813 Q67751.8208,2485.3052 67751.8208,2483.9937 Q67751.8208,2482.3086 67752.8999,2481.3457 Q67753.979,2480.3828 67755.8633,2480.3828 Q67756.7183,2480.3828 67757.5732,2480.5779 Q67758.4282,2480.7729 67759.2666,2481.1548 L67759.2666,2483.5454 Q67758.478,2482.9893 67757.6646,2482.6987 Q67756.8511,2482.4082 67756.0542,2482.4082 Q67755.166,2482.4082 67754.6929,2482.7651 Q67754.2197,2483.1221 67754.2197,2483.7861 Q67754.2197,2484.3008 67754.5642,2484.637 Q67754.9087,2484.9731 67756.0044,2485.3799 L67757.0586,2485.7783 Q67758.5527,2486.3262 67759.2583,2487.231 Q67759.9639,2488.1357 67759.9639,2489.5137 Q67759.9639,2491.3896 67758.8557,2492.3152 Q67757.7476,2493.2407 67755.5063,2493.2407 Q67754.585,2493.2407 67753.6594,2493.0208 Q67752.7339,2492.8008 67751.8706,2492.3691 L67751.8706,2489.8374 Q67752.8501,2490.5347 67753.7673,2490.875 Q67754.6846,2491.2153 67755.5811,2491.2153 Q67756.4858,2491.2153 67756.9839,2490.8044 Q67757.4819,2490.3936 67757.4819,2489.6548 Q67757.4819,2489.0986 67757.1499,2488.6794 Q67756.8179,2488.2603 67756.187,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="132" x="67776.25" y="2491.0352">countOriginal4Duration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="67447" x2="68205" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="67447" x2="68205" y1="2510.5" y2="2510.5"/><ellipse cx="67457" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="67466" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="67457" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="734" x="67466" y="2538.0898">Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error</text><!--MD5=[08334598f77917344b4208797fa72e3b]
class aggfuncs.countOriginal4Int--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.countOriginal4Int" style="stroke: #A80036; stroke-width: 1.5;" width="760" x="68241" y="2470.5"/><ellipse cx="68568.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M68567.4834,2487.563 Q68565.6323,2486.8574 68564.9766,2486.0813 Q68564.3208,2485.3052 68564.3208,2483.9937 Q68564.3208,2482.3086 68565.3999,2481.3457 Q68566.479,2480.3828 68568.3633,2480.3828 Q68569.2183,2480.3828 68570.0732,2480.5779 Q68570.9282,2480.7729 68571.7666,2481.1548 L68571.7666,2483.5454 Q68570.978,2482.9893 68570.1646,2482.6987 Q68569.3511,2482.4082 68568.5542,2482.4082 Q68567.666,2482.4082 68567.1929,2482.7651 Q68566.7197,2483.1221 68566.7197,2483.7861 Q68566.7197,2484.3008 68567.0642,2484.637 Q68567.4087,2484.9731 68568.5044,2485.3799 L68569.5586,2485.7783 Q68571.0527,2486.3262 68571.7583,2487.231 Q68572.4639,2488.1357 68572.4639,2489.5137 Q68572.4639,2491.3896 68571.3557,2492.3152 Q68570.2476,2493.2407 68568.0063,2493.2407 Q68567.085,2493.2407 68566.1594,2493.0208 Q68565.2339,2492.8008 68564.3706,2492.3691 L68564.3706,2489.8374 Q68565.3501,2490.5347 68566.2673,2490.875 Q68567.1846,2491.2153 68568.0811,2491.2153 Q68568.9858,2491.2153 68569.4839,2490.8044 Q68569.9819,2490.3936 68569.9819,2489.6548 Q68569.9819,2489.0986 68569.6499,2488.6794 Q68569.3179,2488.2603 68568.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="68588.75" y="2491.0352">countOriginal4Int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="68242" x2="69000" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="68242" x2="69000" y1="2510.5" y2="2510.5"/><ellipse cx="68252" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="68261" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="68252" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="734" x="68261" y="2538.0898">Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error</text><!--MD5=[d708d2457c5b325c6b75dc143e9cb753]
class aggfuncs.countOriginal4JSON--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.countOriginal4JSON" style="stroke: #A80036; stroke-width: 1.5;" width="760" x="63471" y="2470.5"/><ellipse cx="63791.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M63790.4834,2487.563 Q63788.6323,2486.8574 63787.9766,2486.0813 Q63787.3208,2485.3052 63787.3208,2483.9937 Q63787.3208,2482.3086 63788.3999,2481.3457 Q63789.479,2480.3828 63791.3633,2480.3828 Q63792.2183,2480.3828 63793.0732,2480.5779 Q63793.9282,2480.7729 63794.7666,2481.1548 L63794.7666,2483.5454 Q63793.978,2482.9893 63793.1646,2482.6987 Q63792.3511,2482.4082 63791.5542,2482.4082 Q63790.666,2482.4082 63790.1929,2482.7651 Q63789.7197,2483.1221 63789.7197,2483.7861 Q63789.7197,2484.3008 63790.0642,2484.637 Q63790.4087,2484.9731 63791.5044,2485.3799 L63792.5586,2485.7783 Q63794.0527,2486.3262 63794.7583,2487.231 Q63795.4639,2488.1357 63795.4639,2489.5137 Q63795.4639,2491.3896 63794.3557,2492.3152 Q63793.2476,2493.2407 63791.0063,2493.2407 Q63790.085,2493.2407 63789.1594,2493.0208 Q63788.2339,2492.8008 63787.3706,2492.3691 L63787.3706,2489.8374 Q63788.3501,2490.5347 63789.2673,2490.875 Q63790.1846,2491.2153 63791.0811,2491.2153 Q63791.9858,2491.2153 63792.4839,2490.8044 Q63792.9819,2490.3936 63792.9819,2489.6548 Q63792.9819,2489.0986 63792.6499,2488.6794 Q63792.3179,2488.2603 63791.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="111" x="63811.75" y="2491.0352">countOriginal4JSON</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="63472" x2="64230" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="63472" x2="64230" y1="2510.5" y2="2510.5"/><ellipse cx="63482" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="63491" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="63482" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="734" x="63491" y="2538.0898">Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error</text><!--MD5=[2d0fc2caad9481e11cf0a0298178bc1f]
class aggfuncs.countOriginal4Real--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.countOriginal4Real" style="stroke: #A80036; stroke-width: 1.5;" width="760" x="64266" y="2470.5"/><ellipse cx="64587.75" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M64586.9834,2487.563 Q64585.1323,2486.8574 64584.4766,2486.0813 Q64583.8208,2485.3052 64583.8208,2483.9937 Q64583.8208,2482.3086 64584.8999,2481.3457 Q64585.979,2480.3828 64587.8633,2480.3828 Q64588.7183,2480.3828 64589.5732,2480.5779 Q64590.4282,2480.7729 64591.2666,2481.1548 L64591.2666,2483.5454 Q64590.478,2482.9893 64589.6646,2482.6987 Q64588.8511,2482.4082 64588.0542,2482.4082 Q64587.166,2482.4082 64586.6929,2482.7651 Q64586.2197,2483.1221 64586.2197,2483.7861 Q64586.2197,2484.3008 64586.5642,2484.637 Q64586.9087,2484.9731 64588.0044,2485.3799 L64589.0586,2485.7783 Q64590.5527,2486.3262 64591.2583,2487.231 Q64591.9639,2488.1357 64591.9639,2489.5137 Q64591.9639,2491.3896 64590.8557,2492.3152 Q64589.7476,2493.2407 64587.5063,2493.2407 Q64586.585,2493.2407 64585.6594,2493.0208 Q64584.7339,2492.8008 64583.8706,2492.3691 L64583.8706,2489.8374 Q64584.8501,2490.5347 64585.7673,2490.875 Q64586.6846,2491.2153 64587.5811,2491.2153 Q64588.4858,2491.2153 64588.9839,2490.8044 Q64589.4819,2490.3936 64589.4819,2489.6548 Q64589.4819,2489.0986 64589.1499,2488.6794 Q64588.8179,2488.2603 64588.187,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="64608.25" y="2491.0352">countOriginal4Real</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="64267" x2="65025" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="64267" x2="65025" y1="2510.5" y2="2510.5"/><ellipse cx="64277" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="64286" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="64277" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="734" x="64286" y="2538.0898">Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error</text><!--MD5=[c60ff0da2a2c5bbf1acc4853a0535f77]
class aggfuncs.countOriginal4String--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.countOriginal4String" style="stroke: #A80036; stroke-width: 1.5;" width="760" x="65061" y="2470.5"/><ellipse cx="65379.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M65378.4834,2487.563 Q65376.6323,2486.8574 65375.9766,2486.0813 Q65375.3208,2485.3052 65375.3208,2483.9937 Q65375.3208,2482.3086 65376.3999,2481.3457 Q65377.479,2480.3828 65379.3633,2480.3828 Q65380.2183,2480.3828 65381.0732,2480.5779 Q65381.9282,2480.7729 65382.7666,2481.1548 L65382.7666,2483.5454 Q65381.978,2482.9893 65381.1646,2482.6987 Q65380.3511,2482.4082 65379.5542,2482.4082 Q65378.666,2482.4082 65378.1929,2482.7651 Q65377.7197,2483.1221 65377.7197,2483.7861 Q65377.7197,2484.3008 65378.0642,2484.637 Q65378.4087,2484.9731 65379.5044,2485.3799 L65380.5586,2485.7783 Q65382.0527,2486.3262 65382.7583,2487.231 Q65383.4639,2488.1357 65383.4639,2489.5137 Q65383.4639,2491.3896 65382.3557,2492.3152 Q65381.2476,2493.2407 65379.0063,2493.2407 Q65378.085,2493.2407 65377.1594,2493.0208 Q65376.2339,2492.8008 65375.3706,2492.3691 L65375.3706,2489.8374 Q65376.3501,2490.5347 65377.2673,2490.875 Q65378.1846,2491.2153 65379.0811,2491.2153 Q65379.9858,2491.2153 65380.4839,2490.8044 Q65380.9819,2490.3936 65380.9819,2489.6548 Q65380.9819,2489.0986 65380.6499,2488.6794 Q65380.3179,2488.2603 65379.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="65399.75" y="2491.0352">countOriginal4String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="65062" x2="65820" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="65062" x2="65820" y1="2510.5" y2="2510.5"/><ellipse cx="65072" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="65081" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="65072" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="734" x="65081" y="2538.0898">Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error</text><!--MD5=[c2bfdbd68876a93621f62ad265d42485]
class aggfuncs.countOriginal4Time--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.countOriginal4Time" style="stroke: #A80036; stroke-width: 1.5;" width="760" x="65856" y="2470.5"/><ellipse cx="66175.75" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M66174.9834,2487.563 Q66173.1323,2486.8574 66172.4766,2486.0813 Q66171.8208,2485.3052 66171.8208,2483.9937 Q66171.8208,2482.3086 66172.8999,2481.3457 Q66173.979,2480.3828 66175.8633,2480.3828 Q66176.7183,2480.3828 66177.5732,2480.5779 Q66178.4282,2480.7729 66179.2666,2481.1548 L66179.2666,2483.5454 Q66178.478,2482.9893 66177.6646,2482.6987 Q66176.8511,2482.4082 66176.0542,2482.4082 Q66175.166,2482.4082 66174.6929,2482.7651 Q66174.2197,2483.1221 66174.2197,2483.7861 Q66174.2197,2484.3008 66174.5642,2484.637 Q66174.9087,2484.9731 66176.0044,2485.3799 L66177.0586,2485.7783 Q66178.5527,2486.3262 66179.2583,2487.231 Q66179.9639,2488.1357 66179.9639,2489.5137 Q66179.9639,2491.3896 66178.8557,2492.3152 Q66177.7476,2493.2407 66175.5063,2493.2407 Q66174.585,2493.2407 66173.6594,2493.0208 Q66172.7339,2492.8008 66171.8706,2492.3691 L66171.8706,2489.8374 Q66172.8501,2490.5347 66173.7673,2490.875 Q66174.6846,2491.2153 66175.5811,2491.2153 Q66176.4858,2491.2153 66176.9839,2490.8044 Q66177.4819,2490.3936 66177.4819,2489.6548 Q66177.4819,2489.0986 66177.1499,2488.6794 Q66176.8179,2488.2603 66176.187,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="66196.25" y="2491.0352">countOriginal4Time</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="65857" x2="66615" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="65857" x2="66615" y1="2510.5" y2="2510.5"/><ellipse cx="65867" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="65876" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="65867" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="734" x="65876" y="2538.0898">Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error</text><!--MD5=[9243370728df0dec401905c7167b7039]
class aggfuncs.countOriginalWithDistinct--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.countOriginalWithDistinct" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="60640.5" y="2457.5"/><ellipse cx="60831.25" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M60830.4834,2474.563 Q60828.6323,2473.8574 60827.9766,2473.0813 Q60827.3208,2472.3052 60827.3208,2470.9937 Q60827.3208,2469.3086 60828.3999,2468.3457 Q60829.479,2467.3828 60831.3633,2467.3828 Q60832.2183,2467.3828 60833.0732,2467.5779 Q60833.9282,2467.7729 60834.7666,2468.1548 L60834.7666,2470.5454 Q60833.978,2469.9893 60833.1646,2469.6987 Q60832.3511,2469.4082 60831.5542,2469.4082 Q60830.666,2469.4082 60830.1929,2469.7651 Q60829.7197,2470.1221 60829.7197,2470.7861 Q60829.7197,2471.3008 60830.0642,2471.637 Q60830.4087,2471.9731 60831.5044,2472.3799 L60832.5586,2472.7783 Q60834.0527,2473.3262 60834.7583,2474.231 Q60835.4639,2475.1357 60835.4639,2476.5137 Q60835.4639,2478.3896 60834.3557,2479.3152 Q60833.2476,2480.2407 60831.0063,2480.2407 Q60830.085,2480.2407 60829.1594,2480.0208 Q60828.2339,2479.8008 60827.3706,2479.3691 L60827.3706,2476.8374 Q60828.3501,2477.5347 60829.2673,2477.875 Q60830.1846,2478.2153 60831.0811,2478.2153 Q60831.9858,2478.2153 60832.4839,2477.8044 Q60832.9819,2477.3936 60832.9819,2476.6548 Q60832.9819,2476.0986 60832.6499,2475.6794 Q60832.3179,2475.2603 60831.687,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="141" x="60851.75" y="2478.0352">countOriginalWithDistinct</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="60641.5" x2="61170.5" y1="2489.5" y2="2489.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="60641.5" x2="61170.5" y1="2497.5" y2="2497.5"/><ellipse cx="60651.5" cy="2508.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="60660.5" y="2512.1348">AllocPartialResult() PartialResult</text><ellipse cx="60651.5" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="60660.5" y="2525.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="60651.5" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="60660.5" y="2538.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="60651.5" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="60660.5" y="2551">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[aad22763a17ac75deea8df25e6a885d6]
class aggfuncs.countOriginalWithDistinct4Decimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.countOriginalWithDistinct4Decimal" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="61206.5" y="2457.5"/><ellipse cx="61370.25" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M61369.4834,2474.563 Q61367.6323,2473.8574 61366.9766,2473.0813 Q61366.3208,2472.3052 61366.3208,2470.9937 Q61366.3208,2469.3086 61367.3999,2468.3457 Q61368.479,2467.3828 61370.3633,2467.3828 Q61371.2183,2467.3828 61372.0732,2467.5779 Q61372.9282,2467.7729 61373.7666,2468.1548 L61373.7666,2470.5454 Q61372.978,2469.9893 61372.1646,2469.6987 Q61371.3511,2469.4082 61370.5542,2469.4082 Q61369.666,2469.4082 61369.1929,2469.7651 Q61368.7197,2470.1221 61368.7197,2470.7861 Q61368.7197,2471.3008 61369.0642,2471.637 Q61369.4087,2471.9731 61370.5044,2472.3799 L61371.5586,2472.7783 Q61373.0527,2473.3262 61373.7583,2474.231 Q61374.4639,2475.1357 61374.4639,2476.5137 Q61374.4639,2478.3896 61373.3557,2479.3152 Q61372.2476,2480.2407 61370.0063,2480.2407 Q61369.085,2480.2407 61368.1594,2480.0208 Q61367.2339,2479.8008 61366.3706,2479.3691 L61366.3706,2476.8374 Q61367.3501,2477.5347 61368.2673,2477.875 Q61369.1846,2478.2153 61370.0811,2478.2153 Q61370.9858,2478.2153 61371.4839,2477.8044 Q61371.9819,2477.3936 61371.9819,2476.6548 Q61371.9819,2476.0986 61371.6499,2475.6794 Q61371.3179,2475.2603 61370.687,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="195" x="61390.75" y="2478.0352">countOriginalWithDistinct4Decimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="61207.5" x2="61736.5" y1="2489.5" y2="2489.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="61207.5" x2="61736.5" y1="2497.5" y2="2497.5"/><ellipse cx="61217.5" cy="2508.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="61226.5" y="2512.1348">AllocPartialResult() PartialResult</text><ellipse cx="61217.5" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="61226.5" y="2525.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="61217.5" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="61226.5" y="2538.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="61217.5" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="61226.5" y="2551">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[6c4fc791452a1523c88c6a14752d6f7b]
class aggfuncs.countOriginalWithDistinct4Duration--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.countOriginalWithDistinct4Duration" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="61772.5" y="2457.5"/><ellipse cx="61934.75" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M61933.9834,2474.563 Q61932.1323,2473.8574 61931.4766,2473.0813 Q61930.8208,2472.3052 61930.8208,2470.9937 Q61930.8208,2469.3086 61931.8999,2468.3457 Q61932.979,2467.3828 61934.8633,2467.3828 Q61935.7183,2467.3828 61936.5732,2467.5779 Q61937.4282,2467.7729 61938.2666,2468.1548 L61938.2666,2470.5454 Q61937.478,2469.9893 61936.6646,2469.6987 Q61935.8511,2469.4082 61935.0542,2469.4082 Q61934.166,2469.4082 61933.6929,2469.7651 Q61933.2197,2470.1221 61933.2197,2470.7861 Q61933.2197,2471.3008 61933.5642,2471.637 Q61933.9087,2471.9731 61935.0044,2472.3799 L61936.0586,2472.7783 Q61937.5527,2473.3262 61938.2583,2474.231 Q61938.9639,2475.1357 61938.9639,2476.5137 Q61938.9639,2478.3896 61937.8557,2479.3152 Q61936.7476,2480.2407 61934.5063,2480.2407 Q61933.585,2480.2407 61932.6594,2480.0208 Q61931.7339,2479.8008 61930.8706,2479.3691 L61930.8706,2476.8374 Q61931.8501,2477.5347 61932.7673,2477.875 Q61933.6846,2478.2153 61934.5811,2478.2153 Q61935.4858,2478.2153 61935.9839,2477.8044 Q61936.4819,2477.3936 61936.4819,2476.6548 Q61936.4819,2476.0986 61936.1499,2475.6794 Q61935.8179,2475.2603 61935.187,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="61955.25" y="2478.0352">countOriginalWithDistinct4Duration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="61773.5" x2="62302.5" y1="2489.5" y2="2489.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="61773.5" x2="62302.5" y1="2497.5" y2="2497.5"/><ellipse cx="61783.5" cy="2508.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="61792.5" y="2512.1348">AllocPartialResult() PartialResult</text><ellipse cx="61783.5" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="61792.5" y="2525.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="61783.5" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="61792.5" y="2538.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="61783.5" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="61792.5" y="2551">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[467cb52dde6ea4d837be6d29e39c7a8d]
class aggfuncs.countOriginalWithDistinct4Int--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.countOriginalWithDistinct4Int" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="62338.5" y="2457.5"/><ellipse cx="62518.25" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M62517.4834,2474.563 Q62515.6323,2473.8574 62514.9766,2473.0813 Q62514.3208,2472.3052 62514.3208,2470.9937 Q62514.3208,2469.3086 62515.3999,2468.3457 Q62516.479,2467.3828 62518.3633,2467.3828 Q62519.2183,2467.3828 62520.0732,2467.5779 Q62520.9282,2467.7729 62521.7666,2468.1548 L62521.7666,2470.5454 Q62520.978,2469.9893 62520.1646,2469.6987 Q62519.3511,2469.4082 62518.5542,2469.4082 Q62517.666,2469.4082 62517.1929,2469.7651 Q62516.7197,2470.1221 62516.7197,2470.7861 Q62516.7197,2471.3008 62517.0642,2471.637 Q62517.4087,2471.9731 62518.5044,2472.3799 L62519.5586,2472.7783 Q62521.0527,2473.3262 62521.7583,2474.231 Q62522.4639,2475.1357 62522.4639,2476.5137 Q62522.4639,2478.3896 62521.3557,2479.3152 Q62520.2476,2480.2407 62518.0063,2480.2407 Q62517.085,2480.2407 62516.1594,2480.0208 Q62515.2339,2479.8008 62514.3706,2479.3691 L62514.3706,2476.8374 Q62515.3501,2477.5347 62516.2673,2477.875 Q62517.1846,2478.2153 62518.0811,2478.2153 Q62518.9858,2478.2153 62519.4839,2477.8044 Q62519.9819,2477.3936 62519.9819,2476.6548 Q62519.9819,2476.0986 62519.6499,2475.6794 Q62519.3179,2475.2603 62518.687,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="163" x="62538.75" y="2478.0352">countOriginalWithDistinct4Int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="62339.5" x2="62868.5" y1="2489.5" y2="2489.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="62339.5" x2="62868.5" y1="2497.5" y2="2497.5"/><ellipse cx="62349.5" cy="2508.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="62358.5" y="2512.1348">AllocPartialResult() PartialResult</text><ellipse cx="62349.5" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="62358.5" y="2525.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="62349.5" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="62358.5" y="2538.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="62349.5" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="62358.5" y="2551">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[579eaa008231c1316d1136fb7fe2ccb9]
class aggfuncs.countOriginalWithDistinct4Real--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.countOriginalWithDistinct4Real" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="62904.5" y="2457.5"/><ellipse cx="63078.75" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M63077.9834,2474.563 Q63076.1323,2473.8574 63075.4766,2473.0813 Q63074.8208,2472.3052 63074.8208,2470.9937 Q63074.8208,2469.3086 63075.8999,2468.3457 Q63076.979,2467.3828 63078.8633,2467.3828 Q63079.7183,2467.3828 63080.5732,2467.5779 Q63081.4282,2467.7729 63082.2666,2468.1548 L63082.2666,2470.5454 Q63081.478,2469.9893 63080.6646,2469.6987 Q63079.8511,2469.4082 63079.0542,2469.4082 Q63078.166,2469.4082 63077.6929,2469.7651 Q63077.2197,2470.1221 63077.2197,2470.7861 Q63077.2197,2471.3008 63077.5642,2471.637 Q63077.9087,2471.9731 63079.0044,2472.3799 L63080.0586,2472.7783 Q63081.5527,2473.3262 63082.2583,2474.231 Q63082.9639,2475.1357 63082.9639,2476.5137 Q63082.9639,2478.3896 63081.8557,2479.3152 Q63080.7476,2480.2407 63078.5063,2480.2407 Q63077.585,2480.2407 63076.6594,2480.0208 Q63075.7339,2479.8008 63074.8706,2479.3691 L63074.8706,2476.8374 Q63075.8501,2477.5347 63076.7673,2477.875 Q63077.6846,2478.2153 63078.5811,2478.2153 Q63079.4858,2478.2153 63079.9839,2477.8044 Q63080.4819,2477.3936 63080.4819,2476.6548 Q63080.4819,2476.0986 63080.1499,2475.6794 Q63079.8179,2475.2603 63079.187,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="174" x="63099.25" y="2478.0352">countOriginalWithDistinct4Real</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="62905.5" x2="63434.5" y1="2489.5" y2="2489.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="62905.5" x2="63434.5" y1="2497.5" y2="2497.5"/><ellipse cx="62915.5" cy="2508.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="62924.5" y="2512.1348">AllocPartialResult() PartialResult</text><ellipse cx="62915.5" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="62924.5" y="2525.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="62915.5" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="62924.5" y="2538.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="62915.5" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="62924.5" y="2551">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[0e323940dad30e12d1a604ca78b18272]
class aggfuncs.countOriginalWithDistinct4String--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.countOriginalWithDistinct4String" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="59508.5" y="2457.5"/><ellipse cx="59679.25" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M59678.4834,2474.563 Q59676.6323,2473.8574 59675.9766,2473.0813 Q59675.3208,2472.3052 59675.3208,2470.9937 Q59675.3208,2469.3086 59676.3999,2468.3457 Q59677.479,2467.3828 59679.3633,2467.3828 Q59680.2183,2467.3828 59681.0732,2467.5779 Q59681.9282,2467.7729 59682.7666,2468.1548 L59682.7666,2470.5454 Q59681.978,2469.9893 59681.1646,2469.6987 Q59680.3511,2469.4082 59679.5542,2469.4082 Q59678.666,2469.4082 59678.1929,2469.7651 Q59677.7197,2470.1221 59677.7197,2470.7861 Q59677.7197,2471.3008 59678.0642,2471.637 Q59678.4087,2471.9731 59679.5044,2472.3799 L59680.5586,2472.7783 Q59682.0527,2473.3262 59682.7583,2474.231 Q59683.4639,2475.1357 59683.4639,2476.5137 Q59683.4639,2478.3896 59682.3557,2479.3152 Q59681.2476,2480.2407 59679.0063,2480.2407 Q59678.085,2480.2407 59677.1594,2480.0208 Q59676.2339,2479.8008 59675.3706,2479.3691 L59675.3706,2476.8374 Q59676.3501,2477.5347 59677.2673,2477.875 Q59678.1846,2478.2153 59679.0811,2478.2153 Q59679.9858,2478.2153 59680.4839,2477.8044 Q59680.9819,2477.3936 59680.9819,2476.6548 Q59680.9819,2476.0986 59680.6499,2475.6794 Q59680.3179,2475.2603 59679.687,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="181" x="59699.75" y="2478.0352">countOriginalWithDistinct4String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="59509.5" x2="60038.5" y1="2489.5" y2="2489.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="59509.5" x2="60038.5" y1="2497.5" y2="2497.5"/><ellipse cx="59519.5" cy="2508.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="59528.5" y="2512.1348">AllocPartialResult() PartialResult</text><ellipse cx="59519.5" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="59528.5" y="2525.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="59519.5" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="59528.5" y="2538.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="59519.5" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="59528.5" y="2551">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[9a1a0e179950cd09524fde12911bc73c]
class aggfuncs.countPartial--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.countPartial" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="60074.5" y="2470.5"/><ellipse cx="60302.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M60301.4834,2487.563 Q60299.6323,2486.8574 60298.9766,2486.0813 Q60298.3208,2485.3052 60298.3208,2483.9937 Q60298.3208,2482.3086 60299.3999,2481.3457 Q60300.479,2480.3828 60302.3633,2480.3828 Q60303.2183,2480.3828 60304.0732,2480.5779 Q60304.9282,2480.7729 60305.7666,2481.1548 L60305.7666,2483.5454 Q60304.978,2482.9893 60304.1646,2482.6987 Q60303.3511,2482.4082 60302.5542,2482.4082 Q60301.666,2482.4082 60301.1929,2482.7651 Q60300.7197,2483.1221 60300.7197,2483.7861 Q60300.7197,2484.3008 60301.0642,2484.637 Q60301.4087,2484.9731 60302.5044,2485.3799 L60303.5586,2485.7783 Q60305.0527,2486.3262 60305.7583,2487.231 Q60306.4639,2488.1357 60306.4639,2489.5137 Q60306.4639,2491.3896 60305.3557,2492.3152 Q60304.2476,2493.2407 60302.0063,2493.2407 Q60301.085,2493.2407 60300.1594,2493.0208 Q60299.2339,2492.8008 60298.3706,2492.3691 L60298.3706,2489.8374 Q60299.3501,2490.5347 60300.2673,2490.875 Q60301.1846,2491.2153 60302.0811,2491.2153 Q60302.9858,2491.2153 60303.4839,2490.8044 Q60303.9819,2490.3936 60303.9819,2489.6548 Q60303.9819,2489.0986 60303.6499,2488.6794 Q60303.3179,2488.2603 60302.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="60322.75" y="2491.0352">countPartial</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="60075.5" x2="60604.5" y1="2502.5" y2="2502.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="60075.5" x2="60604.5" y1="2510.5" y2="2510.5"/><ellipse cx="60085.5" cy="2521.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="60094.5" y="2525.1348">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="60085.5" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="60094.5" y="2538.0898">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[7a660d749ea3de43c8c06e778cb183fe]
class aggfuncs.cumeDist--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.cumeDist" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="46036.5" y="1676"/><ellipse cx="46271.25" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M46270.4834,1693.063 Q46268.6323,1692.3574 46267.9766,1691.5813 Q46267.3208,1690.8052 46267.3208,1689.4937 Q46267.3208,1687.8086 46268.3999,1686.8457 Q46269.479,1685.8828 46271.3633,1685.8828 Q46272.2183,1685.8828 46273.0732,1686.0779 Q46273.9282,1686.2729 46274.7666,1686.6548 L46274.7666,1689.0454 Q46273.978,1688.4893 46273.1646,1688.1987 Q46272.3511,1687.9082 46271.5542,1687.9082 Q46270.666,1687.9082 46270.1929,1688.2651 Q46269.7197,1688.6221 46269.7197,1689.2861 Q46269.7197,1689.8008 46270.0642,1690.137 Q46270.4087,1690.4731 46271.5044,1690.8799 L46272.5586,1691.2783 Q46274.0527,1691.8262 46274.7583,1692.731 Q46275.4639,1693.6357 46275.4639,1695.0137 Q46275.4639,1696.8896 46274.3557,1697.8152 Q46273.2476,1698.7407 46271.0063,1698.7407 Q46270.085,1698.7407 46269.1594,1698.5208 Q46268.2339,1698.3008 46267.3706,1697.8691 L46267.3706,1695.3374 Q46268.3501,1696.0347 46269.2673,1696.375 Q46270.1846,1696.7153 46271.0811,1696.7153 Q46271.9858,1696.7153 46272.4839,1696.3044 Q46272.9819,1695.8936 46272.9819,1695.1548 Q46272.9819,1694.5986 46272.6499,1694.1794 Q46272.3179,1693.7603 46271.687,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="46291.75" y="1696.5352">cumeDist</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="46037.5" x2="46566.5" y1="1708" y2="1708"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="46037.5" x2="46566.5" y1="1716" y2="1716"/><ellipse cx="46047.5" cy="1727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="46056.5" y="1730.6348">AllocPartialResult() PartialResult</text><ellipse cx="46047.5" cy="1739.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="46056.5" y="1743.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="46047.5" cy="1752.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="46056.5" y="1756.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="46047.5" cy="1765.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="46056.5" y="1769.5">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[b2ce80e21c93d3362e6d58b72e742938]
class aggfuncs.firstRow4Decimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstRow4Decimal" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="46260.5" y="2451"/><ellipse cx="46471.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M46470.9834,2468.063 Q46469.1323,2467.3574 46468.4766,2466.5813 Q46467.8208,2465.8052 46467.8208,2464.4937 Q46467.8208,2462.8086 46468.8999,2461.8457 Q46469.979,2460.8828 46471.8633,2460.8828 Q46472.7183,2460.8828 46473.5732,2461.0779 Q46474.4282,2461.2729 46475.2666,2461.6548 L46475.2666,2464.0454 Q46474.478,2463.4893 46473.6646,2463.1987 Q46472.8511,2462.9082 46472.0542,2462.9082 Q46471.166,2462.9082 46470.6929,2463.2651 Q46470.2197,2463.6221 46470.2197,2464.2861 Q46470.2197,2464.8008 46470.5642,2465.137 Q46470.9087,2465.4731 46472.0044,2465.8799 L46473.0586,2466.2783 Q46474.5527,2466.8262 46475.2583,2467.731 Q46475.9639,2468.6357 46475.9639,2470.0137 Q46475.9639,2471.8896 46474.8557,2472.8152 Q46473.7476,2473.7407 46471.5063,2473.7407 Q46470.585,2473.7407 46469.6594,2473.5208 Q46468.7339,2473.3008 46467.8706,2472.8691 L46467.8706,2470.3374 Q46468.8501,2471.0347 46469.7673,2471.375 Q46470.6846,2471.7153 46471.5811,2471.7153 Q46472.4858,2471.7153 46472.9839,2471.3044 Q46473.4819,2470.8936 46473.4819,2470.1548 Q46473.4819,2469.5986 46473.1499,2469.1794 Q46472.8179,2468.7603 46472.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="46492.25" y="2471.5352">firstRow4Decimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="46261.5" x2="46790.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="46261.5" x2="46790.5" y1="2491" y2="2491"/><ellipse cx="46271.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="46280.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="46271.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="46280.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="46271.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="46280.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="46271.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="46280.5" y="2544.5">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="46271.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="46280.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[9d4354bc1a3766bc2d65aba309fc4223]
class aggfuncs.firstRow4Duration--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstRow4Duration" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="46826.5" y="2451"/><ellipse cx="47036.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M47035.4834,2468.063 Q47033.6323,2467.3574 47032.9766,2466.5813 Q47032.3208,2465.8052 47032.3208,2464.4937 Q47032.3208,2462.8086 47033.3999,2461.8457 Q47034.479,2460.8828 47036.3633,2460.8828 Q47037.2183,2460.8828 47038.0732,2461.0779 Q47038.9282,2461.2729 47039.7666,2461.6548 L47039.7666,2464.0454 Q47038.978,2463.4893 47038.1646,2463.1987 Q47037.3511,2462.9082 47036.5542,2462.9082 Q47035.666,2462.9082 47035.1929,2463.2651 Q47034.7197,2463.6221 47034.7197,2464.2861 Q47034.7197,2464.8008 47035.0642,2465.137 Q47035.4087,2465.4731 47036.5044,2465.8799 L47037.5586,2466.2783 Q47039.0527,2466.8262 47039.7583,2467.731 Q47040.4639,2468.6357 47040.4639,2470.0137 Q47040.4639,2471.8896 47039.3557,2472.8152 Q47038.2476,2473.7407 47036.0063,2473.7407 Q47035.085,2473.7407 47034.1594,2473.5208 Q47033.2339,2473.3008 47032.3706,2472.8691 L47032.3706,2470.3374 Q47033.3501,2471.0347 47034.2673,2471.375 Q47035.1846,2471.7153 47036.0811,2471.7153 Q47036.9858,2471.7153 47037.4839,2471.3044 Q47037.9819,2470.8936 47037.9819,2470.1548 Q47037.9819,2469.5986 47037.6499,2469.1794 Q47037.3179,2468.7603 47036.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="47056.75" y="2471.5352">firstRow4Duration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="46827.5" x2="47356.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="46827.5" x2="47356.5" y1="2491" y2="2491"/><ellipse cx="46837.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="46846.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="46837.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="46846.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="46837.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="46846.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="46837.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="46846.5" y="2544.5">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="46837.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="46846.5" y="2557.4551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[792f7b798519fb7ead8da5c48bf6432f]
class aggfuncs.firstRow4Enum--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstRow4Enum" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="47392.5" y="2451"/><ellipse cx="47610.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M47609.9834,2468.063 Q47608.1323,2467.3574 47607.4766,2466.5813 Q47606.8208,2465.8052 47606.8208,2464.4937 Q47606.8208,2462.8086 47607.8999,2461.8457 Q47608.979,2460.8828 47610.8633,2460.8828 Q47611.7183,2460.8828 47612.5732,2461.0779 Q47613.4282,2461.2729 47614.2666,2461.6548 L47614.2666,2464.0454 Q47613.478,2463.4893 47612.6646,2463.1987 Q47611.8511,2462.9082 47611.0542,2462.9082 Q47610.166,2462.9082 47609.6929,2463.2651 Q47609.2197,2463.6221 47609.2197,2464.2861 Q47609.2197,2464.8008 47609.5642,2465.137 Q47609.9087,2465.4731 47611.0044,2465.8799 L47612.0586,2466.2783 Q47613.5527,2466.8262 47614.2583,2467.731 Q47614.9639,2468.6357 47614.9639,2470.0137 Q47614.9639,2471.8896 47613.8557,2472.8152 Q47612.7476,2473.7407 47610.5063,2473.7407 Q47609.585,2473.7407 47608.6594,2473.5208 Q47607.7339,2473.3008 47606.8706,2472.8691 L47606.8706,2470.3374 Q47607.8501,2471.0347 47608.7673,2471.375 Q47609.6846,2471.7153 47610.5811,2471.7153 Q47611.4858,2471.7153 47611.9839,2471.3044 Q47612.4819,2470.8936 47612.4819,2470.1548 Q47612.4819,2469.5986 47612.1499,2469.1794 Q47611.8179,2468.7603 47611.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="47631.25" y="2471.5352">firstRow4Enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="47393.5" x2="47922.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="47393.5" x2="47922.5" y1="2491" y2="2491"/><ellipse cx="47403.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="47412.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="47403.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="47412.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="47403.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="47412.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="47403.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="47412.5" y="2544.5">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="47403.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="47412.5" y="2557.4551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[4e96bdb9957c9918fdb38c023775f956]
class aggfuncs.firstRow4Float32--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstRow4Float32" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="47958.5" y="2451"/><ellipse cx="48171.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M48170.4834,2468.063 Q48168.6323,2467.3574 48167.9766,2466.5813 Q48167.3208,2465.8052 48167.3208,2464.4937 Q48167.3208,2462.8086 48168.3999,2461.8457 Q48169.479,2460.8828 48171.3633,2460.8828 Q48172.2183,2460.8828 48173.0732,2461.0779 Q48173.9282,2461.2729 48174.7666,2461.6548 L48174.7666,2464.0454 Q48173.978,2463.4893 48173.1646,2463.1987 Q48172.3511,2462.9082 48171.5542,2462.9082 Q48170.666,2462.9082 48170.1929,2463.2651 Q48169.7197,2463.6221 48169.7197,2464.2861 Q48169.7197,2464.8008 48170.0642,2465.137 Q48170.4087,2465.4731 48171.5044,2465.8799 L48172.5586,2466.2783 Q48174.0527,2466.8262 48174.7583,2467.731 Q48175.4639,2468.6357 48175.4639,2470.0137 Q48175.4639,2471.8896 48174.3557,2472.8152 Q48173.2476,2473.7407 48171.0063,2473.7407 Q48170.085,2473.7407 48169.1594,2473.5208 Q48168.2339,2473.3008 48167.3706,2472.8691 L48167.3706,2470.3374 Q48168.3501,2471.0347 48169.2673,2471.375 Q48170.1846,2471.7153 48171.0811,2471.7153 Q48171.9858,2471.7153 48172.4839,2471.3044 Q48172.9819,2470.8936 48172.9819,2470.1548 Q48172.9819,2469.5986 48172.6499,2469.1794 Q48172.3179,2468.7603 48171.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="48191.75" y="2471.5352">firstRow4Float32</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="47959.5" x2="48488.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="47959.5" x2="48488.5" y1="2491" y2="2491"/><ellipse cx="47969.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="47978.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="47969.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="47978.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="47969.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="47978.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="47969.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="47978.5" y="2544.5">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="47969.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="47978.5" y="2557.4551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[9f2fe0180496512175f3f8b5596e68e4]
class aggfuncs.firstRow4Float64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstRow4Float64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="48524.5" y="2451"/><ellipse cx="48737.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M48736.4834,2468.063 Q48734.6323,2467.3574 48733.9766,2466.5813 Q48733.3208,2465.8052 48733.3208,2464.4937 Q48733.3208,2462.8086 48734.3999,2461.8457 Q48735.479,2460.8828 48737.3633,2460.8828 Q48738.2183,2460.8828 48739.0732,2461.0779 Q48739.9282,2461.2729 48740.7666,2461.6548 L48740.7666,2464.0454 Q48739.978,2463.4893 48739.1646,2463.1987 Q48738.3511,2462.9082 48737.5542,2462.9082 Q48736.666,2462.9082 48736.1929,2463.2651 Q48735.7197,2463.6221 48735.7197,2464.2861 Q48735.7197,2464.8008 48736.0642,2465.137 Q48736.4087,2465.4731 48737.5044,2465.8799 L48738.5586,2466.2783 Q48740.0527,2466.8262 48740.7583,2467.731 Q48741.4639,2468.6357 48741.4639,2470.0137 Q48741.4639,2471.8896 48740.3557,2472.8152 Q48739.2476,2473.7407 48737.0063,2473.7407 Q48736.085,2473.7407 48735.1594,2473.5208 Q48734.2339,2473.3008 48733.3706,2472.8691 L48733.3706,2470.3374 Q48734.3501,2471.0347 48735.2673,2471.375 Q48736.1846,2471.7153 48737.0811,2471.7153 Q48737.9858,2471.7153 48738.4839,2471.3044 Q48738.9819,2470.8936 48738.9819,2470.1548 Q48738.9819,2469.5986 48738.6499,2469.1794 Q48738.3179,2468.7603 48737.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="48757.75" y="2471.5352">firstRow4Float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="48525.5" x2="49054.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="48525.5" x2="49054.5" y1="2491" y2="2491"/><ellipse cx="48535.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="48544.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="48535.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="48544.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="48535.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="48544.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="48535.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="48544.5" y="2544.5">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="48535.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="48544.5" y="2557.4551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[b931794bb5f987c1b980a6781ca4e7dd]
class aggfuncs.firstRow4Int--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstRow4Int" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="49090.5" y="2451"/><ellipse cx="49317.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M49316.9834,2468.063 Q49315.1323,2467.3574 49314.4766,2466.5813 Q49313.8208,2465.8052 49313.8208,2464.4937 Q49313.8208,2462.8086 49314.8999,2461.8457 Q49315.979,2460.8828 49317.8633,2460.8828 Q49318.7183,2460.8828 49319.5732,2461.0779 Q49320.4282,2461.2729 49321.2666,2461.6548 L49321.2666,2464.0454 Q49320.478,2463.4893 49319.6646,2463.1987 Q49318.8511,2462.9082 49318.0542,2462.9082 Q49317.166,2462.9082 49316.6929,2463.2651 Q49316.2197,2463.6221 49316.2197,2464.2861 Q49316.2197,2464.8008 49316.5642,2465.137 Q49316.9087,2465.4731 49318.0044,2465.8799 L49319.0586,2466.2783 Q49320.5527,2466.8262 49321.2583,2467.731 Q49321.9639,2468.6357 49321.9639,2470.0137 Q49321.9639,2471.8896 49320.8557,2472.8152 Q49319.7476,2473.7407 49317.5063,2473.7407 Q49316.585,2473.7407 49315.6594,2473.5208 Q49314.7339,2473.3008 49313.8706,2472.8691 L49313.8706,2470.3374 Q49314.8501,2471.0347 49315.7673,2471.375 Q49316.6846,2471.7153 49317.5811,2471.7153 Q49318.4858,2471.7153 49318.9839,2471.3044 Q49319.4819,2470.8936 49319.4819,2470.1548 Q49319.4819,2469.5986 49319.1499,2469.1794 Q49318.8179,2468.7603 49318.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="49338.25" y="2471.5352">firstRow4Int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="49091.5" x2="49620.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="49091.5" x2="49620.5" y1="2491" y2="2491"/><ellipse cx="49101.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="49110.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="49101.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="49110.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="49101.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="49110.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="49101.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="49110.5" y="2544.5">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="49101.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="49110.5" y="2557.4551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[7583797aea370831186b36fcf9019be4]
class aggfuncs.firstRow4JSON--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstRow4JSON" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="49656.5" y="2451"/><ellipse cx="49876.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M49875.9834,2468.063 Q49874.1323,2467.3574 49873.4766,2466.5813 Q49872.8208,2465.8052 49872.8208,2464.4937 Q49872.8208,2462.8086 49873.8999,2461.8457 Q49874.979,2460.8828 49876.8633,2460.8828 Q49877.7183,2460.8828 49878.5732,2461.0779 Q49879.4282,2461.2729 49880.2666,2461.6548 L49880.2666,2464.0454 Q49879.478,2463.4893 49878.6646,2463.1987 Q49877.8511,2462.9082 49877.0542,2462.9082 Q49876.166,2462.9082 49875.6929,2463.2651 Q49875.2197,2463.6221 49875.2197,2464.2861 Q49875.2197,2464.8008 49875.5642,2465.137 Q49875.9087,2465.4731 49877.0044,2465.8799 L49878.0586,2466.2783 Q49879.5527,2466.8262 49880.2583,2467.731 Q49880.9639,2468.6357 49880.9639,2470.0137 Q49880.9639,2471.8896 49879.8557,2472.8152 Q49878.7476,2473.7407 49876.5063,2473.7407 Q49875.585,2473.7407 49874.6594,2473.5208 Q49873.7339,2473.3008 49872.8706,2472.8691 L49872.8706,2470.3374 Q49873.8501,2471.0347 49874.7673,2471.375 Q49875.6846,2471.7153 49876.5811,2471.7153 Q49877.4858,2471.7153 49877.9839,2471.3044 Q49878.4819,2470.8936 49878.4819,2470.1548 Q49878.4819,2469.5986 49878.1499,2469.1794 Q49877.8179,2468.7603 49877.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="49897.25" y="2471.5352">firstRow4JSON</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="49657.5" x2="50186.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="49657.5" x2="50186.5" y1="2491" y2="2491"/><ellipse cx="49667.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="49676.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="49667.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="49676.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="49667.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="49676.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="49667.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="49676.5" y="2544.5">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="49667.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="49676.5" y="2557.4551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[3a92bb62d2cec5cdd58c012083c53d51]
class aggfuncs.firstRow4Set--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstRow4Set" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="50222.5" y="2451"/><ellipse cx="50448.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M50447.4834,2468.063 Q50445.6323,2467.3574 50444.9766,2466.5813 Q50444.3208,2465.8052 50444.3208,2464.4937 Q50444.3208,2462.8086 50445.3999,2461.8457 Q50446.479,2460.8828 50448.3633,2460.8828 Q50449.2183,2460.8828 50450.0732,2461.0779 Q50450.9282,2461.2729 50451.7666,2461.6548 L50451.7666,2464.0454 Q50450.978,2463.4893 50450.1646,2463.1987 Q50449.3511,2462.9082 50448.5542,2462.9082 Q50447.666,2462.9082 50447.1929,2463.2651 Q50446.7197,2463.6221 50446.7197,2464.2861 Q50446.7197,2464.8008 50447.0642,2465.137 Q50447.4087,2465.4731 50448.5044,2465.8799 L50449.5586,2466.2783 Q50451.0527,2466.8262 50451.7583,2467.731 Q50452.4639,2468.6357 50452.4639,2470.0137 Q50452.4639,2471.8896 50451.3557,2472.8152 Q50450.2476,2473.7407 50448.0063,2473.7407 Q50447.085,2473.7407 50446.1594,2473.5208 Q50445.2339,2473.3008 50444.3706,2472.8691 L50444.3706,2470.3374 Q50445.3501,2471.0347 50446.2673,2471.375 Q50447.1846,2471.7153 50448.0811,2471.7153 Q50448.9858,2471.7153 50449.4839,2471.3044 Q50449.9819,2470.8936 50449.9819,2470.1548 Q50449.9819,2469.5986 50449.6499,2469.1794 Q50449.3179,2468.7603 50448.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="50468.75" y="2471.5352">firstRow4Set</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50223.5" x2="50752.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="50223.5" x2="50752.5" y1="2491" y2="2491"/><ellipse cx="50233.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="50242.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="50233.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="50242.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="50233.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="50242.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="50233.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="50242.5" y="2544.5">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="50233.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="50242.5" y="2557.4551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[102b31567f67e9231a049147bdb0b751]
class aggfuncs.firstRow4String--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstRow4String" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="50788.5" y="2451"/><ellipse cx="51006.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M51005.9834,2468.063 Q51004.1323,2467.3574 51003.4766,2466.5813 Q51002.8208,2465.8052 51002.8208,2464.4937 Q51002.8208,2462.8086 51003.8999,2461.8457 Q51004.979,2460.8828 51006.8633,2460.8828 Q51007.7183,2460.8828 51008.5732,2461.0779 Q51009.4282,2461.2729 51010.2666,2461.6548 L51010.2666,2464.0454 Q51009.478,2463.4893 51008.6646,2463.1987 Q51007.8511,2462.9082 51007.0542,2462.9082 Q51006.166,2462.9082 51005.6929,2463.2651 Q51005.2197,2463.6221 51005.2197,2464.2861 Q51005.2197,2464.8008 51005.5642,2465.137 Q51005.9087,2465.4731 51007.0044,2465.8799 L51008.0586,2466.2783 Q51009.5527,2466.8262 51010.2583,2467.731 Q51010.9639,2468.6357 51010.9639,2470.0137 Q51010.9639,2471.8896 51009.8557,2472.8152 Q51008.7476,2473.7407 51006.5063,2473.7407 Q51005.585,2473.7407 51004.6594,2473.5208 Q51003.7339,2473.3008 51002.8706,2472.8691 L51002.8706,2470.3374 Q51003.8501,2471.0347 51004.7673,2471.375 Q51005.6846,2471.7153 51006.5811,2471.7153 Q51007.4858,2471.7153 51007.9839,2471.3044 Q51008.4819,2470.8936 51008.4819,2470.1548 Q51008.4819,2469.5986 51008.1499,2469.1794 Q51007.8179,2468.7603 51007.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="51027.25" y="2471.5352">firstRow4String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50789.5" x2="51318.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="50789.5" x2="51318.5" y1="2491" y2="2491"/><ellipse cx="50799.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="50808.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="50799.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="50808.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="50799.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="50808.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="50799.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="50808.5" y="2544.5">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="50799.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="50808.5" y="2557.4551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[c2fa9d60a9bfe59d460d1f60cbf8213e]
class aggfuncs.firstRow4Time--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstRow4Time" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="51354.5" y="2451"/><ellipse cx="51574.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M51573.4834,2468.063 Q51571.6323,2467.3574 51570.9766,2466.5813 Q51570.3208,2465.8052 51570.3208,2464.4937 Q51570.3208,2462.8086 51571.3999,2461.8457 Q51572.479,2460.8828 51574.3633,2460.8828 Q51575.2183,2460.8828 51576.0732,2461.0779 Q51576.9282,2461.2729 51577.7666,2461.6548 L51577.7666,2464.0454 Q51576.978,2463.4893 51576.1646,2463.1987 Q51575.3511,2462.9082 51574.5542,2462.9082 Q51573.666,2462.9082 51573.1929,2463.2651 Q51572.7197,2463.6221 51572.7197,2464.2861 Q51572.7197,2464.8008 51573.0642,2465.137 Q51573.4087,2465.4731 51574.5044,2465.8799 L51575.5586,2466.2783 Q51577.0527,2466.8262 51577.7583,2467.731 Q51578.4639,2468.6357 51578.4639,2470.0137 Q51578.4639,2471.8896 51577.3557,2472.8152 Q51576.2476,2473.7407 51574.0063,2473.7407 Q51573.085,2473.7407 51572.1594,2473.5208 Q51571.2339,2473.3008 51570.3706,2472.8691 L51570.3706,2470.3374 Q51571.3501,2471.0347 51572.2673,2471.375 Q51573.1846,2471.7153 51574.0811,2471.7153 Q51574.9858,2471.7153 51575.4839,2471.3044 Q51575.9819,2470.8936 51575.9819,2470.1548 Q51575.9819,2469.5986 51575.6499,2469.1794 Q51575.3179,2468.7603 51574.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="51594.75" y="2471.5352">firstRow4Time</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="51355.5" x2="51884.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="51355.5" x2="51884.5" y1="2491" y2="2491"/><ellipse cx="51365.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="51374.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="51365.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="51374.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="51365.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="51374.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="51365.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="51374.5" y="2544.5">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="51365.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="51374.5" y="2557.4551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[428c1a7e64bf34b5fd7b8fd0fe863343]
class aggfuncs.firstValue--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.firstValue" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="57281.5" y="1669.5"/><ellipse cx="57515.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M57514.9834,1686.563 Q57513.1323,1685.8574 57512.4766,1685.0813 Q57511.8208,1684.3052 57511.8208,1682.9937 Q57511.8208,1681.3086 57512.8999,1680.3457 Q57513.979,1679.3828 57515.8633,1679.3828 Q57516.7183,1679.3828 57517.5732,1679.5779 Q57518.4282,1679.7729 57519.2666,1680.1548 L57519.2666,1682.5454 Q57518.478,1681.9893 57517.6646,1681.6987 Q57516.8511,1681.4082 57516.0542,1681.4082 Q57515.166,1681.4082 57514.6929,1681.7651 Q57514.2197,1682.1221 57514.2197,1682.7861 Q57514.2197,1683.3008 57514.5642,1683.637 Q57514.9087,1683.9731 57516.0044,1684.3799 L57517.0586,1684.7783 Q57518.5527,1685.3262 57519.2583,1686.231 Q57519.9639,1687.1357 57519.9639,1688.5137 Q57519.9639,1690.3896 57518.8557,1691.3152 Q57517.7476,1692.2407 57515.5063,1692.2407 Q57514.585,1692.2407 57513.6594,1692.0208 Q57512.7339,1691.8008 57511.8706,1691.3691 L57511.8706,1688.8374 Q57512.8501,1689.5347 57513.7673,1689.875 Q57514.6846,1690.2153 57515.5811,1690.2153 Q57516.4858,1690.2153 57516.9839,1689.8044 Q57517.4819,1689.3936 57517.4819,1688.6548 Q57517.4819,1688.0986 57517.1499,1687.6794 Q57516.8179,1687.2603 57516.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="57536.25" y="1690.0352">firstValue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="57282.5" x2="57811.5" y1="1701.5" y2="1701.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="57289.5" y="1709.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="57301.5" y="1716.1348">tp *types.FieldType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="57282.5" x2="57811.5" y1="1722.4551" y2="1722.4551"/><ellipse cx="57292.5" cy="1733.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="57301.5" y="1737.0898">AllocPartialResult() PartialResult</text><ellipse cx="57292.5" cy="1746.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="57301.5" y="1750.0449">ResetPartialResult(pr PartialResult)</text><ellipse cx="57292.5" cy="1759.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="57301.5" y="1763">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="57292.5" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="57301.5" y="1775.9551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[c389fb07c01013d47945a75676610638]
class aggfuncs.groupConcat--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="aggfuncs.groupConcat" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="38902.5" y="2444.5"/><ellipse cx="39127.25" cy="2460.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M39126.4834,2461.563 Q39124.6323,2460.8574 39123.9766,2460.0813 Q39123.3208,2459.3052 39123.3208,2457.9937 Q39123.3208,2456.3086 39124.3999,2455.3457 Q39125.479,2454.3828 39127.3633,2454.3828 Q39128.2183,2454.3828 39129.0732,2454.5779 Q39129.9282,2454.7729 39130.7666,2455.1548 L39130.7666,2457.5454 Q39129.978,2456.9893 39129.1646,2456.6987 Q39128.3511,2456.4082 39127.5542,2456.4082 Q39126.666,2456.4082 39126.1929,2456.7651 Q39125.7197,2457.1221 39125.7197,2457.7861 Q39125.7197,2458.3008 39126.0642,2458.637 Q39126.4087,2458.9731 39127.5044,2459.3799 L39128.5586,2459.7783 Q39130.0527,2460.3262 39130.7583,2461.231 Q39131.4639,2462.1357 39131.4639,2463.5137 Q39131.4639,2465.3896 39130.3557,2466.3152 Q39129.2476,2467.2407 39127.0063,2467.2407 Q39126.085,2467.2407 39125.1594,2467.0208 Q39124.2339,2466.8008 39123.3706,2466.3691 L39123.3706,2463.8374 Q39124.3501,2464.5347 39125.2673,2464.875 Q39126.1846,2465.2153 39127.0811,2465.2153 Q39127.9858,2465.2153 39128.4839,2464.8044 Q39128.9819,2464.3936 39128.9819,2463.6548 Q39128.9819,2463.0986 39128.6499,2462.6794 Q39128.3179,2462.2603 39127.687,2462.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="39147.75" y="2465.0352">groupConcat</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="38903.5" x2="39432.5" y1="2476.5" y2="2476.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="38903.5" x2="39432.5" y1="2484.5" y2="2484.5"/><ellipse cx="38913.5" cy="2495.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="38922.5" y="2499.1348">AllocPartialResult() PartialResult</text><ellipse cx="38913.5" cy="2508.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="38922.5" y="2512.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="38913.5" cy="2521.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="38922.5" y="2525.0449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="38913.5" cy="2534.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="38922.5" y="2538">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="38913.5" cy="2547.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="38922.5" y="2550.9551">SetTruncated(t *int32)</text><ellipse cx="38913.5" cy="2560.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="38922.5" y="2563.9102">GetTruncated() *int32</text><!--MD5=[8da7f7f131f200b93415059e2420f6bb]
class aggfuncs.groupConcatDistinct--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.groupConcatDistinct" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="38336.5" y="2451"/><ellipse cx="38540.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M38539.4834,2468.063 Q38537.6323,2467.3574 38536.9766,2466.5813 Q38536.3208,2465.8052 38536.3208,2464.4937 Q38536.3208,2462.8086 38537.3999,2461.8457 Q38538.479,2460.8828 38540.3633,2460.8828 Q38541.2183,2460.8828 38542.0732,2461.0779 Q38542.9282,2461.2729 38543.7666,2461.6548 L38543.7666,2464.0454 Q38542.978,2463.4893 38542.1646,2463.1987 Q38541.3511,2462.9082 38540.5542,2462.9082 Q38539.666,2462.9082 38539.1929,2463.2651 Q38538.7197,2463.6221 38538.7197,2464.2861 Q38538.7197,2464.8008 38539.0642,2465.137 Q38539.4087,2465.4731 38540.5044,2465.8799 L38541.5586,2466.2783 Q38543.0527,2466.8262 38543.7583,2467.731 Q38544.4639,2468.6357 38544.4639,2470.0137 Q38544.4639,2471.8896 38543.3557,2472.8152 Q38542.2476,2473.7407 38540.0063,2473.7407 Q38539.085,2473.7407 38538.1594,2473.5208 Q38537.2339,2473.3008 38536.3706,2472.8691 L38536.3706,2470.3374 Q38537.3501,2471.0347 38538.2673,2471.375 Q38539.1846,2471.7153 38540.0811,2471.7153 Q38540.9858,2471.7153 38541.4839,2471.3044 Q38541.9819,2470.8936 38541.9819,2470.1548 Q38541.9819,2469.5986 38541.6499,2469.1794 Q38541.3179,2468.7603 38540.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="38560.75" y="2471.5352">groupConcatDistinct</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="38337.5" x2="38866.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="38337.5" x2="38866.5" y1="2491" y2="2491"/><ellipse cx="38347.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="38356.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="38347.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="38356.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="38347.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="38356.5" y="2531.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="38347.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="38356.5" y="2544.5">SetTruncated(t *int32)</text><ellipse cx="38347.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="38356.5" y="2557.4551">GetTruncated() *int32</text><!--MD5=[67dc5ec21f2a6aeb0679d2b4ed13eae6]
class aggfuncs.groupConcatDistinctOrder--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.groupConcatDistinctOrder" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="39468.5" y="2451"/><ellipse cx="39655.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M39654.4834,2468.063 Q39652.6323,2467.3574 39651.9766,2466.5813 Q39651.3208,2465.8052 39651.3208,2464.4937 Q39651.3208,2462.8086 39652.3999,2461.8457 Q39653.479,2460.8828 39655.3633,2460.8828 Q39656.2183,2460.8828 39657.0732,2461.0779 Q39657.9282,2461.2729 39658.7666,2461.6548 L39658.7666,2464.0454 Q39657.978,2463.4893 39657.1646,2463.1987 Q39656.3511,2462.9082 39655.5542,2462.9082 Q39654.666,2462.9082 39654.1929,2463.2651 Q39653.7197,2463.6221 39653.7197,2464.2861 Q39653.7197,2464.8008 39654.0642,2465.137 Q39654.4087,2465.4731 39655.5044,2465.8799 L39656.5586,2466.2783 Q39658.0527,2466.8262 39658.7583,2467.731 Q39659.4639,2468.6357 39659.4639,2470.0137 Q39659.4639,2471.8896 39658.3557,2472.8152 Q39657.2476,2473.7407 39655.0063,2473.7407 Q39654.085,2473.7407 39653.1594,2473.5208 Q39652.2339,2473.3008 39651.3706,2472.8691 L39651.3706,2470.3374 Q39652.3501,2471.0347 39653.2673,2471.375 Q39654.1846,2471.7153 39655.0811,2471.7153 Q39655.9858,2471.7153 39656.4839,2471.3044 Q39656.9819,2470.8936 39656.9819,2470.1548 Q39656.9819,2469.5986 39656.6499,2469.1794 Q39656.3179,2468.7603 39655.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="149" x="39675.75" y="2471.5352">groupConcatDistinctOrder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39469.5" x2="39998.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39469.5" x2="39998.5" y1="2491" y2="2491"/><ellipse cx="39479.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="39488.5" y="2505.6348">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="39479.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="39488.5" y="2518.5898">AllocPartialResult() PartialResult</text><ellipse cx="39479.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="39488.5" y="2531.5449">ResetPartialResult(pr PartialResult)</text><ellipse cx="39479.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="39488.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="39479.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="39488.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[8fe3ea27be5b4c905ccfacc3ea7871d9]
class aggfuncs.groupConcatOrder--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="138.6855" id="aggfuncs.groupConcatOrder" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="40034.5" y="2438"/><ellipse cx="40242.25" cy="2454" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M40241.4834,2455.063 Q40239.6323,2454.3574 40238.9766,2453.5813 Q40238.3208,2452.8052 40238.3208,2451.4937 Q40238.3208,2449.8086 40239.3999,2448.8457 Q40240.479,2447.8828 40242.3633,2447.8828 Q40243.2183,2447.8828 40244.0732,2448.0779 Q40244.9282,2448.2729 40245.7666,2448.6548 L40245.7666,2451.0454 Q40244.978,2450.4893 40244.1646,2450.1987 Q40243.3511,2449.9082 40242.5542,2449.9082 Q40241.666,2449.9082 40241.1929,2450.2651 Q40240.7197,2450.6221 40240.7197,2451.2861 Q40240.7197,2451.8008 40241.0642,2452.137 Q40241.4087,2452.4731 40242.5044,2452.8799 L40243.5586,2453.2783 Q40245.0527,2453.8262 40245.7583,2454.731 Q40246.4639,2455.6357 40246.4639,2457.0137 Q40246.4639,2458.8896 40245.3557,2459.8152 Q40244.2476,2460.7407 40242.0063,2460.7407 Q40241.085,2460.7407 40240.1594,2460.5208 Q40239.2339,2460.3008 40238.3706,2459.8691 L40238.3706,2457.3374 Q40239.3501,2458.0347 40240.2673,2458.375 Q40241.1846,2458.7153 40242.0811,2458.7153 Q40242.9858,2458.7153 40243.4839,2458.3044 Q40243.9819,2457.8936 40243.9819,2457.1548 Q40243.9819,2456.5986 40243.6499,2456.1794 Q40243.3179,2455.7603 40242.687,2455.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="40262.75" y="2458.5352">groupConcatOrder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="40035.5" x2="40564.5" y1="2470" y2="2470"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="40035.5" x2="40564.5" y1="2478" y2="2478"/><ellipse cx="40045.5" cy="2489" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="40054.5" y="2492.6348">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="40045.5" cy="2501.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="40054.5" y="2505.5898">AllocPartialResult() PartialResult</text><ellipse cx="40045.5" cy="2514.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="40054.5" y="2518.5449">ResetPartialResult(pr PartialResult)</text><ellipse cx="40045.5" cy="2527.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="40054.5" y="2531.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="40045.5" cy="2540.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="40054.5" y="2544.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><ellipse cx="40045.5" cy="2553.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="40054.5" y="2557.4102">SetTruncated(t *int32)</text><ellipse cx="40045.5" cy="2566.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="40054.5" y="2570.3652">GetTruncated() *int32</text><!--MD5=[2c64bc1a4fe50d4b26c50704ea422ba9]
class aggfuncs.jsonObjectAgg--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.jsonObjectAgg" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="40600.5" y="2451"/><ellipse cx="40819.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M40818.9834,2468.063 Q40817.1323,2467.3574 40816.4766,2466.5813 Q40815.8208,2465.8052 40815.8208,2464.4937 Q40815.8208,2462.8086 40816.8999,2461.8457 Q40817.979,2460.8828 40819.8633,2460.8828 Q40820.7183,2460.8828 40821.5732,2461.0779 Q40822.4282,2461.2729 40823.2666,2461.6548 L40823.2666,2464.0454 Q40822.478,2463.4893 40821.6646,2463.1987 Q40820.8511,2462.9082 40820.0542,2462.9082 Q40819.166,2462.9082 40818.6929,2463.2651 Q40818.2197,2463.6221 40818.2197,2464.2861 Q40818.2197,2464.8008 40818.5642,2465.137 Q40818.9087,2465.4731 40820.0044,2465.8799 L40821.0586,2466.2783 Q40822.5527,2466.8262 40823.2583,2467.731 Q40823.9639,2468.6357 40823.9639,2470.0137 Q40823.9639,2471.8896 40822.8557,2472.8152 Q40821.7476,2473.7407 40819.5063,2473.7407 Q40818.585,2473.7407 40817.6594,2473.5208 Q40816.7339,2473.3008 40815.8706,2472.8691 L40815.8706,2470.3374 Q40816.8501,2471.0347 40817.7673,2471.375 Q40818.6846,2471.7153 40819.5811,2471.7153 Q40820.4858,2471.7153 40820.9839,2471.3044 Q40821.4819,2470.8936 40821.4819,2470.1548 Q40821.4819,2469.5986 40821.1499,2469.1794 Q40820.8179,2468.7603 40820.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="40840.25" y="2471.5352">jsonObjectAgg</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="40601.5" x2="41130.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="40601.5" x2="41130.5" y1="2491" y2="2491"/><ellipse cx="40611.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="40620.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="40611.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="40620.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="40611.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="40620.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="40611.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="40620.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="40611.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="40620.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[a7ee3310a5687720dc38e5aa830ff7ad]
class aggfuncs.lag--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.lag" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="37210" y="2477"/><ellipse cx="37461.25" cy="2493" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M37460.4834,2494.063 Q37458.6323,2493.3574 37457.9766,2492.5813 Q37457.3208,2491.8052 37457.3208,2490.4937 Q37457.3208,2488.8086 37458.3999,2487.8457 Q37459.479,2486.8828 37461.3633,2486.8828 Q37462.2183,2486.8828 37463.0732,2487.0779 Q37463.9282,2487.2729 37464.7666,2487.6548 L37464.7666,2490.0454 Q37463.978,2489.4893 37463.1646,2489.1987 Q37462.3511,2488.9082 37461.5542,2488.9082 Q37460.666,2488.9082 37460.1929,2489.2651 Q37459.7197,2489.6221 37459.7197,2490.2861 Q37459.7197,2490.8008 37460.0642,2491.137 Q37460.4087,2491.4731 37461.5044,2491.8799 L37462.5586,2492.2783 Q37464.0527,2492.8262 37464.7583,2493.731 Q37465.4639,2494.6357 37465.4639,2496.0137 Q37465.4639,2497.8896 37464.3557,2498.8152 Q37463.2476,2499.7407 37461.0063,2499.7407 Q37460.085,2499.7407 37459.1594,2499.5208 Q37458.2339,2499.3008 37457.3706,2498.8691 L37457.3706,2496.3374 Q37458.3501,2497.0347 37459.2673,2497.375 Q37460.1846,2497.7153 37461.0811,2497.7153 Q37461.9858,2497.7153 37462.4839,2497.3044 Q37462.9819,2496.8936 37462.9819,2496.1548 Q37462.9819,2495.5986 37462.6499,2495.1794 Q37462.3179,2494.7603 37461.687,2494.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="17" x="37481.75" y="2497.5352">lag</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="37211" x2="37737" y1="2509" y2="2509"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="37211" x2="37737" y1="2517" y2="2517"/><ellipse cx="37221" cy="2528" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="37230" y="2531.6348">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[0bf480f16223ea2fd74b7db7d926c5d4]
class aggfuncs.lastValue--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.lastValue" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="66816.5" y="1669.5"/><ellipse cx="67051.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M67050.9834,1686.563 Q67049.1323,1685.8574 67048.4766,1685.0813 Q67047.8208,1684.3052 67047.8208,1682.9937 Q67047.8208,1681.3086 67048.8999,1680.3457 Q67049.979,1679.3828 67051.8633,1679.3828 Q67052.7183,1679.3828 67053.5732,1679.5779 Q67054.4282,1679.7729 67055.2666,1680.1548 L67055.2666,1682.5454 Q67054.478,1681.9893 67053.6646,1681.6987 Q67052.8511,1681.4082 67052.0542,1681.4082 Q67051.166,1681.4082 67050.6929,1681.7651 Q67050.2197,1682.1221 67050.2197,1682.7861 Q67050.2197,1683.3008 67050.5642,1683.637 Q67050.9087,1683.9731 67052.0044,1684.3799 L67053.0586,1684.7783 Q67054.5527,1685.3262 67055.2583,1686.231 Q67055.9639,1687.1357 67055.9639,1688.5137 Q67055.9639,1690.3896 67054.8557,1691.3152 Q67053.7476,1692.2407 67051.5063,1692.2407 Q67050.585,1692.2407 67049.6594,1692.0208 Q67048.7339,1691.8008 67047.8706,1691.3691 L67047.8706,1688.8374 Q67048.8501,1689.5347 67049.7673,1689.875 Q67050.6846,1690.2153 67051.5811,1690.2153 Q67052.4858,1690.2153 67052.9839,1689.8044 Q67053.4819,1689.3936 67053.4819,1688.6548 Q67053.4819,1688.0986 67053.1499,1687.6794 Q67052.8179,1687.2603 67052.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="67072.25" y="1690.0352">lastValue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="66817.5" x2="67346.5" y1="1701.5" y2="1701.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="66824.5" y="1709.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="66836.5" y="1716.1348">tp *types.FieldType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="66817.5" x2="67346.5" y1="1722.4551" y2="1722.4551"/><ellipse cx="66827.5" cy="1733.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="66836.5" y="1737.0898">AllocPartialResult() PartialResult</text><ellipse cx="66827.5" cy="1746.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="66836.5" y="1750.0449">ResetPartialResult(pr PartialResult)</text><ellipse cx="66827.5" cy="1759.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="66836.5" y="1763">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="66827.5" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="66836.5" y="1775.9551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[7e91455913bbc1d6b3fc6e6b7f6999c4]
class aggfuncs.lead--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.lead" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="37773" y="2477"/><ellipse cx="38020.25" cy="2493" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M38019.4834,2494.063 Q38017.6323,2493.3574 38016.9766,2492.5813 Q38016.3208,2491.8052 38016.3208,2490.4937 Q38016.3208,2488.8086 38017.3999,2487.8457 Q38018.479,2486.8828 38020.3633,2486.8828 Q38021.2183,2486.8828 38022.0732,2487.0779 Q38022.9282,2487.2729 38023.7666,2487.6548 L38023.7666,2490.0454 Q38022.978,2489.4893 38022.1646,2489.1987 Q38021.3511,2488.9082 38020.5542,2488.9082 Q38019.666,2488.9082 38019.1929,2489.2651 Q38018.7197,2489.6221 38018.7197,2490.2861 Q38018.7197,2490.8008 38019.0642,2491.137 Q38019.4087,2491.4731 38020.5044,2491.8799 L38021.5586,2492.2783 Q38023.0527,2492.8262 38023.7583,2493.731 Q38024.4639,2494.6357 38024.4639,2496.0137 Q38024.4639,2497.8896 38023.3557,2498.8152 Q38022.2476,2499.7407 38020.0063,2499.7407 Q38019.085,2499.7407 38018.1594,2499.5208 Q38017.2339,2499.3008 38016.3706,2498.8691 L38016.3706,2496.3374 Q38017.3501,2497.0347 38018.2673,2497.375 Q38019.1846,2497.7153 38020.0811,2497.7153 Q38020.9858,2497.7153 38021.4839,2497.3044 Q38021.9819,2496.8936 38021.9819,2496.1548 Q38021.9819,2495.5986 38021.6499,2495.1794 Q38021.3179,2494.7603 38020.687,2494.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="25" x="38040.75" y="2497.5352">lead</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="37774" x2="38300" y1="2509" y2="2509"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="37774" x2="38300" y1="2517" y2="2517"/><ellipse cx="37784" cy="2528" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="37793" y="2531.6348">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[a1587633868412ab6891eb0e377fc451]
class aggfuncs.maxMin4Decimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.maxMin4Decimal" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="45128.5" y="2451"/><ellipse cx="45340.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M45339.4834,2468.063 Q45337.6323,2467.3574 45336.9766,2466.5813 Q45336.3208,2465.8052 45336.3208,2464.4937 Q45336.3208,2462.8086 45337.3999,2461.8457 Q45338.479,2460.8828 45340.3633,2460.8828 Q45341.2183,2460.8828 45342.0732,2461.0779 Q45342.9282,2461.2729 45343.7666,2461.6548 L45343.7666,2464.0454 Q45342.978,2463.4893 45342.1646,2463.1987 Q45341.3511,2462.9082 45340.5542,2462.9082 Q45339.666,2462.9082 45339.1929,2463.2651 Q45338.7197,2463.6221 45338.7197,2464.2861 Q45338.7197,2464.8008 45339.0642,2465.137 Q45339.4087,2465.4731 45340.5044,2465.8799 L45341.5586,2466.2783 Q45343.0527,2466.8262 45343.7583,2467.731 Q45344.4639,2468.6357 45344.4639,2470.0137 Q45344.4639,2471.8896 45343.3557,2472.8152 Q45342.2476,2473.7407 45340.0063,2473.7407 Q45339.085,2473.7407 45338.1594,2473.5208 Q45337.2339,2473.3008 45336.3706,2472.8691 L45336.3706,2470.3374 Q45337.3501,2471.0347 45338.2673,2471.375 Q45339.1846,2471.7153 45340.0811,2471.7153 Q45340.9858,2471.7153 45341.4839,2471.3044 Q45341.9819,2470.8936 45341.9819,2470.1548 Q45341.9819,2469.5986 45341.6499,2469.1794 Q45341.3179,2468.7603 45340.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="99" x="45360.75" y="2471.5352">maxMin4Decimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="45129.5" x2="45658.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="45129.5" x2="45658.5" y1="2491" y2="2491"/><ellipse cx="45139.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="45148.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="45139.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="45148.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="45139.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="45148.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="45139.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="45148.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="45139.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="45148.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[43a30c5435ddf8d2b8e2e13ea9e2bc63]
class aggfuncs.maxMin4Duration--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.maxMin4Duration" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="45694.5" y="2451"/><ellipse cx="45904.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M45903.9834,2468.063 Q45902.1323,2467.3574 45901.4766,2466.5813 Q45900.8208,2465.8052 45900.8208,2464.4937 Q45900.8208,2462.8086 45901.8999,2461.8457 Q45902.979,2460.8828 45904.8633,2460.8828 Q45905.7183,2460.8828 45906.5732,2461.0779 Q45907.4282,2461.2729 45908.2666,2461.6548 L45908.2666,2464.0454 Q45907.478,2463.4893 45906.6646,2463.1987 Q45905.8511,2462.9082 45905.0542,2462.9082 Q45904.166,2462.9082 45903.6929,2463.2651 Q45903.2197,2463.6221 45903.2197,2464.2861 Q45903.2197,2464.8008 45903.5642,2465.137 Q45903.9087,2465.4731 45905.0044,2465.8799 L45906.0586,2466.2783 Q45907.5527,2466.8262 45908.2583,2467.731 Q45908.9639,2468.6357 45908.9639,2470.0137 Q45908.9639,2471.8896 45907.8557,2472.8152 Q45906.7476,2473.7407 45904.5063,2473.7407 Q45903.585,2473.7407 45902.6594,2473.5208 Q45901.7339,2473.3008 45900.8706,2472.8691 L45900.8706,2470.3374 Q45901.8501,2471.0347 45902.7673,2471.375 Q45903.6846,2471.7153 45904.5811,2471.7153 Q45905.4858,2471.7153 45905.9839,2471.3044 Q45906.4819,2470.8936 45906.4819,2470.1548 Q45906.4819,2469.5986 45906.1499,2469.1794 Q45905.8179,2468.7603 45905.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="102" x="45925.25" y="2471.5352">maxMin4Duration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="45695.5" x2="46224.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="45695.5" x2="46224.5" y1="2491" y2="2491"/><ellipse cx="45705.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="45714.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="45705.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="45714.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="45705.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="45714.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="45705.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="45714.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="45705.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="45714.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[4d0633849921ab2ccd8fc07bcc54b0c5]
class aggfuncs.maxMin4Float32--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.maxMin4Float32" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="41166.5" y="2451"/><ellipse cx="41379.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M41378.9834,2468.063 Q41377.1323,2467.3574 41376.4766,2466.5813 Q41375.8208,2465.8052 41375.8208,2464.4937 Q41375.8208,2462.8086 41376.8999,2461.8457 Q41377.979,2460.8828 41379.8633,2460.8828 Q41380.7183,2460.8828 41381.5732,2461.0779 Q41382.4282,2461.2729 41383.2666,2461.6548 L41383.2666,2464.0454 Q41382.478,2463.4893 41381.6646,2463.1987 Q41380.8511,2462.9082 41380.0542,2462.9082 Q41379.166,2462.9082 41378.6929,2463.2651 Q41378.2197,2463.6221 41378.2197,2464.2861 Q41378.2197,2464.8008 41378.5642,2465.137 Q41378.9087,2465.4731 41380.0044,2465.8799 L41381.0586,2466.2783 Q41382.5527,2466.8262 41383.2583,2467.731 Q41383.9639,2468.6357 41383.9639,2470.0137 Q41383.9639,2471.8896 41382.8557,2472.8152 Q41381.7476,2473.7407 41379.5063,2473.7407 Q41378.585,2473.7407 41377.6594,2473.5208 Q41376.7339,2473.3008 41375.8706,2472.8691 L41375.8706,2470.3374 Q41376.8501,2471.0347 41377.7673,2471.375 Q41378.6846,2471.7153 41379.5811,2471.7153 Q41380.4858,2471.7153 41380.9839,2471.3044 Q41381.4819,2470.8936 41381.4819,2470.1548 Q41381.4819,2469.5986 41381.1499,2469.1794 Q41380.8179,2468.7603 41380.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="41400.25" y="2471.5352">maxMin4Float32</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41167.5" x2="41696.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="41167.5" x2="41696.5" y1="2491" y2="2491"/><ellipse cx="41177.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="41186.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="41177.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="41186.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="41177.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="41186.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="41177.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="41186.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="41177.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="41186.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[41b65e8b246e4f31d1ef7b41c49530d7]
class aggfuncs.maxMin4Float64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.maxMin4Float64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="41732.5" y="2451"/><ellipse cx="41945.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M41944.9834,2468.063 Q41943.1323,2467.3574 41942.4766,2466.5813 Q41941.8208,2465.8052 41941.8208,2464.4937 Q41941.8208,2462.8086 41942.8999,2461.8457 Q41943.979,2460.8828 41945.8633,2460.8828 Q41946.7183,2460.8828 41947.5732,2461.0779 Q41948.4282,2461.2729 41949.2666,2461.6548 L41949.2666,2464.0454 Q41948.478,2463.4893 41947.6646,2463.1987 Q41946.8511,2462.9082 41946.0542,2462.9082 Q41945.166,2462.9082 41944.6929,2463.2651 Q41944.2197,2463.6221 41944.2197,2464.2861 Q41944.2197,2464.8008 41944.5642,2465.137 Q41944.9087,2465.4731 41946.0044,2465.8799 L41947.0586,2466.2783 Q41948.5527,2466.8262 41949.2583,2467.731 Q41949.9639,2468.6357 41949.9639,2470.0137 Q41949.9639,2471.8896 41948.8557,2472.8152 Q41947.7476,2473.7407 41945.5063,2473.7407 Q41944.585,2473.7407 41943.6594,2473.5208 Q41942.7339,2473.3008 41941.8706,2472.8691 L41941.8706,2470.3374 Q41942.8501,2471.0347 41943.7673,2471.375 Q41944.6846,2471.7153 41945.5811,2471.7153 Q41946.4858,2471.7153 41946.9839,2471.3044 Q41947.4819,2470.8936 41947.4819,2470.1548 Q41947.4819,2469.5986 41947.1499,2469.1794 Q41946.8179,2468.7603 41946.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="41966.25" y="2471.5352">maxMin4Float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41733.5" x2="42262.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="41733.5" x2="42262.5" y1="2491" y2="2491"/><ellipse cx="41743.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="41752.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="41743.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="41752.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="41743.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="41752.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="41743.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="41752.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="41743.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="41752.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[422d5fbcfd590fa1c4a00f71f416439a]
class aggfuncs.maxMin4Int--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.maxMin4Int" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="42298.5" y="2451"/><ellipse cx="42526.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M42525.4834,2468.063 Q42523.6323,2467.3574 42522.9766,2466.5813 Q42522.3208,2465.8052 42522.3208,2464.4937 Q42522.3208,2462.8086 42523.3999,2461.8457 Q42524.479,2460.8828 42526.3633,2460.8828 Q42527.2183,2460.8828 42528.0732,2461.0779 Q42528.9282,2461.2729 42529.7666,2461.6548 L42529.7666,2464.0454 Q42528.978,2463.4893 42528.1646,2463.1987 Q42527.3511,2462.9082 42526.5542,2462.9082 Q42525.666,2462.9082 42525.1929,2463.2651 Q42524.7197,2463.6221 42524.7197,2464.2861 Q42524.7197,2464.8008 42525.0642,2465.137 Q42525.4087,2465.4731 42526.5044,2465.8799 L42527.5586,2466.2783 Q42529.0527,2466.8262 42529.7583,2467.731 Q42530.4639,2468.6357 42530.4639,2470.0137 Q42530.4639,2471.8896 42529.3557,2472.8152 Q42528.2476,2473.7407 42526.0063,2473.7407 Q42525.085,2473.7407 42524.1594,2473.5208 Q42523.2339,2473.3008 42522.3706,2472.8691 L42522.3706,2470.3374 Q42523.3501,2471.0347 42524.2673,2471.375 Q42525.1846,2471.7153 42526.0811,2471.7153 Q42526.9858,2471.7153 42527.4839,2471.3044 Q42527.9819,2470.8936 42527.9819,2470.1548 Q42527.9819,2469.5986 42527.6499,2469.1794 Q42527.3179,2468.7603 42526.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="42546.75" y="2471.5352">maxMin4Int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42299.5" x2="42828.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="42299.5" x2="42828.5" y1="2491" y2="2491"/><ellipse cx="42309.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="42318.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="42309.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="42318.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="42309.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="42318.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="42309.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="42318.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="42309.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="42318.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[ddcdb1adfa3ef3dfc81b9900d6b8c999]
class aggfuncs.maxMin4JSON--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.maxMin4JSON" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="42864.5" y="2451"/><ellipse cx="43085.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M43084.4834,2468.063 Q43082.6323,2467.3574 43081.9766,2466.5813 Q43081.3208,2465.8052 43081.3208,2464.4937 Q43081.3208,2462.8086 43082.3999,2461.8457 Q43083.479,2460.8828 43085.3633,2460.8828 Q43086.2183,2460.8828 43087.0732,2461.0779 Q43087.9282,2461.2729 43088.7666,2461.6548 L43088.7666,2464.0454 Q43087.978,2463.4893 43087.1646,2463.1987 Q43086.3511,2462.9082 43085.5542,2462.9082 Q43084.666,2462.9082 43084.1929,2463.2651 Q43083.7197,2463.6221 43083.7197,2464.2861 Q43083.7197,2464.8008 43084.0642,2465.137 Q43084.4087,2465.4731 43085.5044,2465.8799 L43086.5586,2466.2783 Q43088.0527,2466.8262 43088.7583,2467.731 Q43089.4639,2468.6357 43089.4639,2470.0137 Q43089.4639,2471.8896 43088.3557,2472.8152 Q43087.2476,2473.7407 43085.0063,2473.7407 Q43084.085,2473.7407 43083.1594,2473.5208 Q43082.2339,2473.3008 43081.3706,2472.8691 L43081.3706,2470.3374 Q43082.3501,2471.0347 43083.2673,2471.375 Q43084.1846,2471.7153 43085.0811,2471.7153 Q43085.9858,2471.7153 43086.4839,2471.3044 Q43086.9819,2470.8936 43086.9819,2470.1548 Q43086.9819,2469.5986 43086.6499,2469.1794 Q43086.3179,2468.7603 43085.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="43105.75" y="2471.5352">maxMin4JSON</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42865.5" x2="43394.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="42865.5" x2="43394.5" y1="2491" y2="2491"/><ellipse cx="42875.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="42884.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="42875.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="42884.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="42875.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="42884.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="42875.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="42884.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="42875.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="42884.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[26fd1f93cc6e3b63306507c8df554810]
class aggfuncs.maxMin4String--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="aggfuncs.maxMin4String" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="43430.5" y="2444.5"/><ellipse cx="43649.25" cy="2460.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M43648.4834,2461.563 Q43646.6323,2460.8574 43645.9766,2460.0813 Q43645.3208,2459.3052 43645.3208,2457.9937 Q43645.3208,2456.3086 43646.3999,2455.3457 Q43647.479,2454.3828 43649.3633,2454.3828 Q43650.2183,2454.3828 43651.0732,2454.5779 Q43651.9282,2454.7729 43652.7666,2455.1548 L43652.7666,2457.5454 Q43651.978,2456.9893 43651.1646,2456.6987 Q43650.3511,2456.4082 43649.5542,2456.4082 Q43648.666,2456.4082 43648.1929,2456.7651 Q43647.7197,2457.1221 43647.7197,2457.7861 Q43647.7197,2458.3008 43648.0642,2458.637 Q43648.4087,2458.9731 43649.5044,2459.3799 L43650.5586,2459.7783 Q43652.0527,2460.3262 43652.7583,2461.231 Q43653.4639,2462.1357 43653.4639,2463.5137 Q43653.4639,2465.3896 43652.3557,2466.3152 Q43651.2476,2467.2407 43649.0063,2467.2407 Q43648.085,2467.2407 43647.1594,2467.0208 Q43646.2339,2466.8008 43645.3706,2466.3691 L43645.3706,2463.8374 Q43646.3501,2464.5347 43647.2673,2464.875 Q43648.1846,2465.2153 43649.0811,2465.2153 Q43649.9858,2465.2153 43650.4839,2464.8044 Q43650.9819,2464.3936 43650.9819,2463.6548 Q43650.9819,2463.0986 43650.6499,2462.6794 Q43650.3179,2462.2603 43649.687,2462.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="43669.75" y="2465.0352">maxMin4String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43431.5" x2="43960.5" y1="2476.5" y2="2476.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="43438.5" y="2484.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="43450.5" y="2491.1348">retTp *types.FieldType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43431.5" x2="43960.5" y1="2497.4551" y2="2497.4551"/><ellipse cx="43441.5" cy="2508.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="43450.5" y="2512.0898">AllocPartialResult() PartialResult</text><ellipse cx="43441.5" cy="2521.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="43450.5" y="2525.0449">ResetPartialResult(pr PartialResult)</text><ellipse cx="43441.5" cy="2534.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="43450.5" y="2538">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="43441.5" cy="2547.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="43450.5" y="2550.9551">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="43441.5" cy="2560.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="43450.5" y="2563.9102">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[4b9f95218df930b98e7abfb0a0c2a5bb]
class aggfuncs.maxMin4Time--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.maxMin4Time" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="43996.5" y="2451"/><ellipse cx="44216.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M44215.9834,2468.063 Q44214.1323,2467.3574 44213.4766,2466.5813 Q44212.8208,2465.8052 44212.8208,2464.4937 Q44212.8208,2462.8086 44213.8999,2461.8457 Q44214.979,2460.8828 44216.8633,2460.8828 Q44217.7183,2460.8828 44218.5732,2461.0779 Q44219.4282,2461.2729 44220.2666,2461.6548 L44220.2666,2464.0454 Q44219.478,2463.4893 44218.6646,2463.1987 Q44217.8511,2462.9082 44217.0542,2462.9082 Q44216.166,2462.9082 44215.6929,2463.2651 Q44215.2197,2463.6221 44215.2197,2464.2861 Q44215.2197,2464.8008 44215.5642,2465.137 Q44215.9087,2465.4731 44217.0044,2465.8799 L44218.0586,2466.2783 Q44219.5527,2466.8262 44220.2583,2467.731 Q44220.9639,2468.6357 44220.9639,2470.0137 Q44220.9639,2471.8896 44219.8557,2472.8152 Q44218.7476,2473.7407 44216.5063,2473.7407 Q44215.585,2473.7407 44214.6594,2473.5208 Q44213.7339,2473.3008 44212.8706,2472.8691 L44212.8706,2470.3374 Q44213.8501,2471.0347 44214.7673,2471.375 Q44215.6846,2471.7153 44216.5811,2471.7153 Q44217.4858,2471.7153 44217.9839,2471.3044 Q44218.4819,2470.8936 44218.4819,2470.1548 Q44218.4819,2469.5986 44218.1499,2469.1794 Q44217.8179,2468.7603 44217.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="44237.25" y="2471.5352">maxMin4Time</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43997.5" x2="44526.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="43997.5" x2="44526.5" y1="2491" y2="2491"/><ellipse cx="44007.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="44016.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="44007.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="44016.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="44007.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="44016.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="44007.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="44016.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="44007.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="44016.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[8941f2cb28029cca61cf64964383e857]
class aggfuncs.maxMin4Uint--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.maxMin4Uint" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="44562.5" y="2451"/><ellipse cx="44786.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M44785.4834,2468.063 Q44783.6323,2467.3574 44782.9766,2466.5813 Q44782.3208,2465.8052 44782.3208,2464.4937 Q44782.3208,2462.8086 44783.3999,2461.8457 Q44784.479,2460.8828 44786.3633,2460.8828 Q44787.2183,2460.8828 44788.0732,2461.0779 Q44788.9282,2461.2729 44789.7666,2461.6548 L44789.7666,2464.0454 Q44788.978,2463.4893 44788.1646,2463.1987 Q44787.3511,2462.9082 44786.5542,2462.9082 Q44785.666,2462.9082 44785.1929,2463.2651 Q44784.7197,2463.6221 44784.7197,2464.2861 Q44784.7197,2464.8008 44785.0642,2465.137 Q44785.4087,2465.4731 44786.5044,2465.8799 L44787.5586,2466.2783 Q44789.0527,2466.8262 44789.7583,2467.731 Q44790.4639,2468.6357 44790.4639,2470.0137 Q44790.4639,2471.8896 44789.3557,2472.8152 Q44788.2476,2473.7407 44786.0063,2473.7407 Q44785.085,2473.7407 44784.1594,2473.5208 Q44783.2339,2473.3008 44782.3706,2472.8691 L44782.3706,2470.3374 Q44783.3501,2471.0347 44784.2673,2471.375 Q44785.1846,2471.7153 44786.0811,2471.7153 Q44786.9858,2471.7153 44787.4839,2471.3044 Q44787.9819,2470.8936 44787.9819,2470.1548 Q44787.9819,2469.5986 44787.6499,2469.1794 Q44787.3179,2468.7603 44786.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="44806.75" y="2471.5352">maxMin4Uint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44563.5" x2="45092.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="44563.5" x2="45092.5" y1="2491" y2="2491"/><ellipse cx="44573.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="44582.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="44573.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="44582.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="44573.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="44582.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="44573.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="44582.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="44573.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="44582.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[703dcdcf5ebf2873a3b54ce508786aab]
class aggfuncs.nthValue--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="aggfuncs.nthValue" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="47190.5" y="1663"/><ellipse cx="47426.75" cy="1679" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M47425.9834,1680.063 Q47424.1323,1679.3574 47423.4766,1678.5813 Q47422.8208,1677.8052 47422.8208,1676.4937 Q47422.8208,1674.8086 47423.8999,1673.8457 Q47424.979,1672.8828 47426.8633,1672.8828 Q47427.7183,1672.8828 47428.5732,1673.0779 Q47429.4282,1673.2729 47430.2666,1673.6548 L47430.2666,1676.0454 Q47429.478,1675.4893 47428.6646,1675.1987 Q47427.8511,1674.9082 47427.0542,1674.9082 Q47426.166,1674.9082 47425.6929,1675.2651 Q47425.2197,1675.6221 47425.2197,1676.2861 Q47425.2197,1676.8008 47425.5642,1677.137 Q47425.9087,1677.4731 47427.0044,1677.8799 L47428.0586,1678.2783 Q47429.5527,1678.8262 47430.2583,1679.731 Q47430.9639,1680.6357 47430.9639,1682.0137 Q47430.9639,1683.8896 47429.8557,1684.8152 Q47428.7476,1685.7407 47426.5063,1685.7407 Q47425.585,1685.7407 47424.6594,1685.5208 Q47423.7339,1685.3008 47422.8706,1684.8691 L47422.8706,1682.3374 Q47423.8501,1683.0347 47424.7673,1683.375 Q47425.6846,1683.7153 47426.5811,1683.7153 Q47427.4858,1683.7153 47427.9839,1683.3044 Q47428.4819,1682.8936 47428.4819,1682.1548 Q47428.4819,1681.5986 47428.1499,1681.1794 Q47427.8179,1680.7603 47427.187,1680.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="47447.25" y="1683.5352">nthValue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="47191.5" x2="47720.5" y1="1695" y2="1695"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="47198.5" y="1703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="47210.5" y="1709.6348">tp *types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="47198.5" y="1715.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="47210.5" y="1722.5898">nth uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="47191.5" x2="47720.5" y1="1728.9102" y2="1728.9102"/><ellipse cx="47201.5" cy="1739.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="47210.5" y="1743.5449">AllocPartialResult() PartialResult</text><ellipse cx="47201.5" cy="1752.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="47210.5" y="1756.5">ResetPartialResult(pr PartialResult)</text><ellipse cx="47201.5" cy="1765.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="47210.5" y="1769.4551">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="47201.5" cy="1778.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="47210.5" y="1782.4102">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[4a6ca1f52c4daabbc1eb6e37e135894c]
class aggfuncs.ntile--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.ntile" style="stroke: #A80036; stroke-width: 1.5;" width="514" x="47757" y="1669.5"/><ellipse cx="47997.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M47996.9834,1686.563 Q47995.1323,1685.8574 47994.4766,1685.0813 Q47993.8208,1684.3052 47993.8208,1682.9937 Q47993.8208,1681.3086 47994.8999,1680.3457 Q47995.979,1679.3828 47997.8633,1679.3828 Q47998.7183,1679.3828 47999.5732,1679.5779 Q48000.4282,1679.7729 48001.2666,1680.1548 L48001.2666,1682.5454 Q48000.478,1681.9893 47999.6646,1681.6987 Q47998.8511,1681.4082 47998.0542,1681.4082 Q47997.166,1681.4082 47996.6929,1681.7651 Q47996.2197,1682.1221 47996.2197,1682.7861 Q47996.2197,1683.3008 47996.5642,1683.637 Q47996.9087,1683.9731 47998.0044,1684.3799 L47999.0586,1684.7783 Q48000.5527,1685.3262 48001.2583,1686.231 Q48001.9639,1687.1357 48001.9639,1688.5137 Q48001.9639,1690.3896 48000.8557,1691.3152 Q47999.7476,1692.2407 47997.5063,1692.2407 Q47996.585,1692.2407 47995.6594,1692.0208 Q47994.7339,1691.8008 47993.8706,1691.3691 L47993.8706,1688.8374 Q47994.8501,1689.5347 47995.7673,1689.875 Q47996.6846,1690.2153 47997.5811,1690.2153 Q47998.4858,1690.2153 47998.9839,1689.8044 Q47999.4819,1689.3936 47999.4819,1688.6548 Q47999.4819,1688.0986 47999.1499,1687.6794 Q47998.8179,1687.2603 47998.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="48018.25" y="1690.0352">ntile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="47758" x2="48270" y1="1701.5" y2="1701.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="47765" y="1709.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="47777" y="1716.1348">n uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="47758" x2="48270" y1="1722.4551" y2="1722.4551"/><ellipse cx="47768" cy="1733.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="47777" y="1737.0898">AllocPartialResult() PartialResult</text><ellipse cx="47768" cy="1746.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="47777" y="1750.0449">ResetPartialResult(pr PartialResult)</text><ellipse cx="47768" cy="1759.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="47777" y="1763">UpdatePartialResult(_ sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="47768" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="47777" y="1775.9551">AppendFinalResult2Chunk(_ sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[0fe14906a49f98791dd72a4eb64e40c0]
class aggfuncs.partialResult4ApproxCountDistinct--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="358.9219" id="aggfuncs.partialResult4ApproxCountDistinct" style="stroke: #A80036; stroke-width: 1.5;" width="319" x="69350.5" y="609.5"/><ellipse cx="69406.75" cy="625.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69405.9834,626.563 Q69404.1323,625.8574 69403.4766,625.0813 Q69402.8208,624.3052 69402.8208,622.9937 Q69402.8208,621.3086 69403.8999,620.3457 Q69404.979,619.3828 69406.8633,619.3828 Q69407.7183,619.3828 69408.5732,619.5779 Q69409.4282,619.7729 69410.2666,620.1548 L69410.2666,622.5454 Q69409.478,621.9893 69408.6646,621.6987 Q69407.8511,621.4082 69407.0542,621.4082 Q69406.166,621.4082 69405.6929,621.7651 Q69405.2197,622.1221 69405.2197,622.7861 Q69405.2197,623.3008 69405.5642,623.637 Q69405.9087,623.9731 69407.0044,624.3799 L69408.0586,624.7783 Q69409.5527,625.3262 69410.2583,626.231 Q69410.9639,627.1357 69410.9639,628.5137 Q69410.9639,630.3896 69409.8557,631.3152 Q69408.7476,632.2407 69406.5063,632.2407 Q69405.585,632.2407 69404.6594,632.0208 Q69403.7339,631.8008 69402.8706,631.3691 L69402.8706,628.8374 Q69403.8501,629.5347 69404.7673,629.875 Q69405.6846,630.2153 69406.5811,630.2153 Q69407.4858,630.2153 69407.9839,629.8044 Q69408.4819,629.3936 69408.4819,628.6548 Q69408.4819,628.0986 69408.1499,627.6794 Q69407.8179,627.2603 69407.187,627.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="69427.25" y="630.0352">partialResult4ApproxCountDistinct</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69351.5" x2="69668.5" y1="641.5" y2="641.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="649.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="69370.5" y="656.1348">size uint32</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="662.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="69370.5" y="669.0898">sizeDegree uint8</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="675.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="69370.5" y="682.0449">skipDegree uint8</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="688.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="69370.5" y="695">hasZero bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="701.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="69370.5" y="707.9551">buf []approxCountDistinctHashValue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69351.5" x2="69668.5" y1="714.2754" y2="714.2754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="722.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="69370.5" y="728.9102">alloc(newSizeDegree uint8)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="735.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="69370.5" y="741.8652">reset()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="748.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="69370.5" y="754.8203">bufSize() uint32</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="761.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="69370.5" y="767.7754">mask() uint32</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="774.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="69370.5" y="780.7305">place(x approxCountDistinctHashValue) uint32</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="787.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="69370.5" y="793.6855">resize(newSizeDegree uint8)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="800.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="69370.5" y="806.6406">readAndMerge(rb []byte) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="812.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="69370.5" y="819.5957">fixedSize() uint64</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="825.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="69370.5" y="832.5508">insertHash(hashValue approxCountDistinctHashValue)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="838.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="69370.5" y="845.5059">good(hash approxCountDistinctHashValue) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="851.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="69370.5" y="858.4609">insertImpl(x approxCountDistinctHashValue)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="864.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="69370.5" y="871.416">shrinkIfNeed()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="877.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="69370.5" y="884.3711">maxFill() uint32</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="890.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="69370.5" y="897.3262">rehash()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="903.6465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="69370.5" y="910.2813">reinsertImpl(x approxCountDistinctHashValue)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69358.5" y="916.6016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="69370.5" y="923.2363">merge(tar *partialResult4ApproxCountDistinct)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="69373.5" y="936.1914"/><ellipse cx="69361.5" cy="945.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="69370.5" y="949.1465">InsertHash64(x uint64)</text><ellipse cx="69361.5" cy="958.4668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="69370.5" y="962.1016">Serialize() []byte</text><!--MD5=[e251c065d4b83419b2cad5b896fbab33]
class aggfuncs.partialResult4AvgDecimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4AvgDecimal" style="stroke: #A80036; stroke-width: 1.5;" width="179" x="42461.5" y="752"/><ellipse cx="42476.5" cy="768" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M42475.7334,769.063 Q42473.8823,768.3574 42473.2266,767.5813 Q42472.5708,766.8052 42472.5708,765.4937 Q42472.5708,763.8086 42473.6499,762.8457 Q42474.729,761.8828 42476.6133,761.8828 Q42477.4683,761.8828 42478.3232,762.0779 Q42479.1782,762.2729 42480.0166,762.6548 L42480.0166,765.0454 Q42479.228,764.4893 42478.4146,764.1987 Q42477.6011,763.9082 42476.8042,763.9082 Q42475.916,763.9082 42475.4429,764.2651 Q42474.9697,764.6221 42474.9697,765.2861 Q42474.9697,765.8008 42475.3142,766.137 Q42475.6587,766.4731 42476.7544,766.8799 L42477.8086,767.2783 Q42479.3027,767.8262 42480.0083,768.731 Q42480.7139,769.6357 42480.7139,771.0137 Q42480.7139,772.8896 42479.6057,773.8152 Q42478.4976,774.7407 42476.2563,774.7407 Q42475.335,774.7407 42474.4094,774.5208 Q42473.4839,774.3008 42472.6206,773.8691 L42472.6206,771.3374 Q42473.6001,772.0347 42474.5173,772.375 Q42475.4346,772.7153 42476.3311,772.7153 Q42477.2358,772.7153 42477.7339,772.3044 Q42478.2319,771.8936 42478.2319,771.1548 Q42478.2319,770.5986 42477.8999,770.1794 Q42477.5679,769.7603 42476.937,769.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="147" x="42490.5" y="772.5352">partialResult4AvgDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42462.5" x2="42639.5" y1="784" y2="784"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="42469.5" y="792"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="42481.5" y="798.6348">sum types.MyDecimal</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="42469.5" y="804.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="42481.5" y="811.5898">count int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42462.5" x2="42639.5" y1="817.9102" y2="817.9102"/><!--MD5=[f27603234fd07dbf70580380ebf33c70]
class aggfuncs.partialResult4AvgDistinctDecimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4AvgDistinctDecimal" style="stroke: #A80036; stroke-width: 1.5;" width="221" x="42440.5" y="1695.5"/><ellipse cx="42455.5" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M42454.7334,1712.563 Q42452.8823,1711.8574 42452.2266,1711.0813 Q42451.5708,1710.3052 42451.5708,1708.9937 Q42451.5708,1707.3086 42452.6499,1706.3457 Q42453.729,1705.3828 42455.6133,1705.3828 Q42456.4683,1705.3828 42457.3232,1705.5779 Q42458.1782,1705.7729 42459.0166,1706.1548 L42459.0166,1708.5454 Q42458.228,1707.9893 42457.4146,1707.6987 Q42456.6011,1707.4082 42455.8042,1707.4082 Q42454.916,1707.4082 42454.4429,1707.7651 Q42453.9697,1708.1221 42453.9697,1708.7861 Q42453.9697,1709.3008 42454.3142,1709.637 Q42454.6587,1709.9731 42455.7544,1710.3799 L42456.8086,1710.7783 Q42458.3027,1711.3262 42459.0083,1712.231 Q42459.7139,1713.1357 42459.7139,1714.5137 Q42459.7139,1716.3896 42458.6057,1717.3152 Q42457.4976,1718.2407 42455.2563,1718.2407 Q42454.335,1718.2407 42453.4094,1718.0208 Q42452.4839,1717.8008 42451.6206,1717.3691 L42451.6206,1714.8374 Q42452.6001,1715.5347 42453.5173,1715.875 Q42454.4346,1716.2153 42455.3311,1716.2153 Q42456.2358,1716.2153 42456.7339,1715.8044 Q42457.2319,1715.3936 42457.2319,1714.6548 Q42457.2319,1714.0986 42456.8999,1713.6794 Q42456.5679,1713.2603 42455.937,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="189" x="42469.5" y="1716.0352">partialResult4AvgDistinctDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42441.5" x2="42660.5" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="42448.5" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="42460.5" y="1742.1348">valSet set.StringSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42441.5" x2="42660.5" y1="1748.4551" y2="1748.4551"/><!--MD5=[56f17131775bd2ea411602dfcf3c0bee]
class aggfuncs.partialResult4AvgDistinctFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4AvgDistinctFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="41621" y="1695.5"/><ellipse cx="41636" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M41635.2334,1712.563 Q41633.3823,1711.8574 41632.7266,1711.0813 Q41632.0708,1710.3052 41632.0708,1708.9937 Q41632.0708,1707.3086 41633.1499,1706.3457 Q41634.229,1705.3828 41636.1133,1705.3828 Q41636.9683,1705.3828 41637.8232,1705.5779 Q41638.6782,1705.7729 41639.5166,1706.1548 L41639.5166,1708.5454 Q41638.728,1707.9893 41637.9146,1707.6987 Q41637.1011,1707.4082 41636.3042,1707.4082 Q41635.416,1707.4082 41634.9429,1707.7651 Q41634.4697,1708.1221 41634.4697,1708.7861 Q41634.4697,1709.3008 41634.8142,1709.637 Q41635.1587,1709.9731 41636.2544,1710.3799 L41637.3086,1710.7783 Q41638.8027,1711.3262 41639.5083,1712.231 Q41640.2139,1713.1357 41640.2139,1714.5137 Q41640.2139,1716.3896 41639.1057,1717.3152 Q41637.9976,1718.2407 41635.7563,1718.2407 Q41634.835,1718.2407 41633.9094,1718.0208 Q41632.9839,1717.8008 41632.1206,1717.3691 L41632.1206,1714.8374 Q41633.1001,1715.5347 41634.0173,1715.875 Q41634.9346,1716.2153 41635.8311,1716.2153 Q41636.7358,1716.2153 41637.2339,1715.8044 Q41637.7319,1715.3936 41637.7319,1714.6548 Q41637.7319,1714.0986 41637.3999,1713.6794 Q41637.0679,1713.2603 41636.437,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="186" x="41650" y="1716.0352">partialResult4AvgDistinctFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41622" x2="41838" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="41629" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="41641" y="1742.1348">valSet set.Float64Set</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41622" x2="41838" y1="1748.4551" y2="1748.4551"/><!--MD5=[89610743ccdf3bfaf8bea2ed82a06941]
class aggfuncs.partialResult4AvgFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4AvgFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="176" x="41642" y="752"/><ellipse cx="41657" cy="768" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M41656.2334,769.063 Q41654.3823,768.3574 41653.7266,767.5813 Q41653.0708,766.8052 41653.0708,765.4937 Q41653.0708,763.8086 41654.1499,762.8457 Q41655.229,761.8828 41657.1133,761.8828 Q41657.9683,761.8828 41658.8232,762.0779 Q41659.6782,762.2729 41660.5166,762.6548 L41660.5166,765.0454 Q41659.728,764.4893 41658.9146,764.1987 Q41658.1011,763.9082 41657.3042,763.9082 Q41656.416,763.9082 41655.9429,764.2651 Q41655.4697,764.6221 41655.4697,765.2861 Q41655.4697,765.8008 41655.8142,766.137 Q41656.1587,766.4731 41657.2544,766.8799 L41658.3086,767.2783 Q41659.8027,767.8262 41660.5083,768.731 Q41661.2139,769.6357 41661.2139,771.0137 Q41661.2139,772.8896 41660.1057,773.8152 Q41658.9976,774.7407 41656.7563,774.7407 Q41655.835,774.7407 41654.9094,774.5208 Q41653.9839,774.3008 41653.1206,773.8691 L41653.1206,771.3374 Q41654.1001,772.0347 41655.0173,772.375 Q41655.9346,772.7153 41656.8311,772.7153 Q41657.7358,772.7153 41658.2339,772.3044 Q41658.7319,771.8936 41658.7319,771.1548 Q41658.7319,770.5986 41658.3999,770.1794 Q41658.0679,769.7603 41657.437,769.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="144" x="41671" y="772.5352">partialResult4AvgFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41643" x2="41817" y1="784" y2="784"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="41650" y="792"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="41662" y="798.6348">sum float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="41650" y="804.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="41662" y="811.5898">count int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41643" x2="41817" y1="817.9102" y2="817.9102"/><!--MD5=[540d04aff0e341834df3f9518e8bbcd9]
class aggfuncs.partialResult4CountDistinctDecimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4CountDistinctDecimal" style="stroke: #A80036; stroke-width: 1.5;" width="233" x="69704.5" y="758.5"/><ellipse cx="69719.5" cy="774.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69718.7334,775.563 Q69716.8823,774.8574 69716.2266,774.0813 Q69715.5708,773.3052 69715.5708,771.9937 Q69715.5708,770.3086 69716.6499,769.3457 Q69717.729,768.3828 69719.6133,768.3828 Q69720.4683,768.3828 69721.3232,768.5779 Q69722.1782,768.7729 69723.0166,769.1548 L69723.0166,771.5454 Q69722.228,770.9893 69721.4146,770.6987 Q69720.6011,770.4082 69719.8042,770.4082 Q69718.916,770.4082 69718.4429,770.7651 Q69717.9697,771.1221 69717.9697,771.7861 Q69717.9697,772.3008 69718.3142,772.637 Q69718.6587,772.9731 69719.7544,773.3799 L69720.8086,773.7783 Q69722.3027,774.3262 69723.0083,775.231 Q69723.7139,776.1357 69723.7139,777.5137 Q69723.7139,779.3896 69722.6057,780.3152 Q69721.4976,781.2407 69719.2563,781.2407 Q69718.335,781.2407 69717.4094,781.0208 Q69716.4839,780.8008 69715.6206,780.3691 L69715.6206,777.8374 Q69716.6001,778.5347 69717.5173,778.875 Q69718.4346,779.2153 69719.3311,779.2153 Q69720.2358,779.2153 69720.7339,778.8044 Q69721.2319,778.3936 69721.2319,777.6548 Q69721.2319,777.0986 69720.8999,776.6794 Q69720.5679,776.2603 69719.937,776.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="201" x="69733.5" y="779.0352">partialResult4CountDistinctDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69705.5" x2="69936.5" y1="790.5" y2="790.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69712.5" y="798.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="69724.5" y="805.1348">valSet set.StringSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69705.5" x2="69936.5" y1="811.4551" y2="811.4551"/><!--MD5=[0b2a96a2acf01ba61a146ab49cf14c67]
class aggfuncs.partialResult4CountDistinctDuration--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4CountDistinctDuration" style="stroke: #A80036; stroke-width: 1.5;" width="236" x="69973" y="758.5"/><ellipse cx="69988" cy="774.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69987.2334,775.563 Q69985.3823,774.8574 69984.7266,774.0813 Q69984.0708,773.3052 69984.0708,771.9937 Q69984.0708,770.3086 69985.1499,769.3457 Q69986.229,768.3828 69988.1133,768.3828 Q69988.9683,768.3828 69989.8232,768.5779 Q69990.6782,768.7729 69991.5166,769.1548 L69991.5166,771.5454 Q69990.728,770.9893 69989.9146,770.6987 Q69989.1011,770.4082 69988.3042,770.4082 Q69987.416,770.4082 69986.9429,770.7651 Q69986.4697,771.1221 69986.4697,771.7861 Q69986.4697,772.3008 69986.8142,772.637 Q69987.1587,772.9731 69988.2544,773.3799 L69989.3086,773.7783 Q69990.8027,774.3262 69991.5083,775.231 Q69992.2139,776.1357 69992.2139,777.5137 Q69992.2139,779.3896 69991.1057,780.3152 Q69989.9976,781.2407 69987.7563,781.2407 Q69986.835,781.2407 69985.9094,781.0208 Q69984.9839,780.8008 69984.1206,780.3691 L69984.1206,777.8374 Q69985.1001,778.5347 69986.0173,778.875 Q69986.9346,779.2153 69987.8311,779.2153 Q69988.7358,779.2153 69989.2339,778.8044 Q69989.7319,778.3936 69989.7319,777.6548 Q69989.7319,777.0986 69989.3999,776.6794 Q69989.0679,776.2603 69988.437,776.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="204" x="70002" y="779.0352">partialResult4CountDistinctDuration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69974" x2="70208" y1="790.5" y2="790.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69981" y="798.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="69993" y="805.1348">valSet set.Int64Set</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69974" x2="70208" y1="811.4551" y2="811.4551"/><!--MD5=[c38540316af75a78274f4d7ad78eef76]
class aggfuncs.partialResult4CountDistinctInt--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4CountDistinctInt" style="stroke: #A80036; stroke-width: 1.5;" width="201" x="70244.5" y="758.5"/><ellipse cx="70259.5" cy="774.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70258.7334,775.563 Q70256.8823,774.8574 70256.2266,774.0813 Q70255.5708,773.3052 70255.5708,771.9937 Q70255.5708,770.3086 70256.6499,769.3457 Q70257.729,768.3828 70259.6133,768.3828 Q70260.4683,768.3828 70261.3232,768.5779 Q70262.1782,768.7729 70263.0166,769.1548 L70263.0166,771.5454 Q70262.228,770.9893 70261.4146,770.6987 Q70260.6011,770.4082 70259.8042,770.4082 Q70258.916,770.4082 70258.4429,770.7651 Q70257.9697,771.1221 70257.9697,771.7861 Q70257.9697,772.3008 70258.3142,772.637 Q70258.6587,772.9731 70259.7544,773.3799 L70260.8086,773.7783 Q70262.3027,774.3262 70263.0083,775.231 Q70263.7139,776.1357 70263.7139,777.5137 Q70263.7139,779.3896 70262.6057,780.3152 Q70261.4976,781.2407 70259.2563,781.2407 Q70258.335,781.2407 70257.4094,781.0208 Q70256.4839,780.8008 70255.6206,780.3691 L70255.6206,777.8374 Q70256.6001,778.5347 70257.5173,778.875 Q70258.4346,779.2153 70259.3311,779.2153 Q70260.2358,779.2153 70260.7339,778.8044 Q70261.2319,778.3936 70261.2319,777.6548 Q70261.2319,777.0986 70260.8999,776.6794 Q70260.5679,776.2603 70259.937,776.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="169" x="70273.5" y="779.0352">partialResult4CountDistinctInt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70245.5" x2="70444.5" y1="790.5" y2="790.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70252.5" y="798.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="70264.5" y="805.1348">valSet set.Int64Set</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70245.5" x2="70444.5" y1="811.4551" y2="811.4551"/><!--MD5=[2d50cbd44df35c47f5ddaa4c0188723a]
class aggfuncs.partialResult4CountDistinctReal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4CountDistinctReal" style="stroke: #A80036; stroke-width: 1.5;" width="212" x="70481" y="758.5"/><ellipse cx="70496" cy="774.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70495.2334,775.563 Q70493.3823,774.8574 70492.7266,774.0813 Q70492.0708,773.3052 70492.0708,771.9937 Q70492.0708,770.3086 70493.1499,769.3457 Q70494.229,768.3828 70496.1133,768.3828 Q70496.9683,768.3828 70497.8232,768.5779 Q70498.6782,768.7729 70499.5166,769.1548 L70499.5166,771.5454 Q70498.728,770.9893 70497.9146,770.6987 Q70497.1011,770.4082 70496.3042,770.4082 Q70495.416,770.4082 70494.9429,770.7651 Q70494.4697,771.1221 70494.4697,771.7861 Q70494.4697,772.3008 70494.8142,772.637 Q70495.1587,772.9731 70496.2544,773.3799 L70497.3086,773.7783 Q70498.8027,774.3262 70499.5083,775.231 Q70500.2139,776.1357 70500.2139,777.5137 Q70500.2139,779.3896 70499.1057,780.3152 Q70497.9976,781.2407 70495.7563,781.2407 Q70494.835,781.2407 70493.9094,781.0208 Q70492.9839,780.8008 70492.1206,780.3691 L70492.1206,777.8374 Q70493.1001,778.5347 70494.0173,778.875 Q70494.9346,779.2153 70495.8311,779.2153 Q70496.7358,779.2153 70497.2339,778.8044 Q70497.7319,778.3936 70497.7319,777.6548 Q70497.7319,777.0986 70497.3999,776.6794 Q70497.0679,776.2603 70496.437,776.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="180" x="70510" y="779.0352">partialResult4CountDistinctReal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70482" x2="70692" y1="790.5" y2="790.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70489" y="798.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="70501" y="805.1348">valSet set.Float64Set</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70482" x2="70692" y1="811.4551" y2="811.4551"/><!--MD5=[b11aa1a105a5319d8fff3cd096199808]
class aggfuncs.partialResult4CountDistinctString--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4CountDistinctString" style="stroke: #A80036; stroke-width: 1.5;" width="219" x="70728.5" y="758.5"/><ellipse cx="70743.5" cy="774.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70742.7334,775.563 Q70740.8823,774.8574 70740.2266,774.0813 Q70739.5708,773.3052 70739.5708,771.9937 Q70739.5708,770.3086 70740.6499,769.3457 Q70741.729,768.3828 70743.6133,768.3828 Q70744.4683,768.3828 70745.3232,768.5779 Q70746.1782,768.7729 70747.0166,769.1548 L70747.0166,771.5454 Q70746.228,770.9893 70745.4146,770.6987 Q70744.6011,770.4082 70743.8042,770.4082 Q70742.916,770.4082 70742.4429,770.7651 Q70741.9697,771.1221 70741.9697,771.7861 Q70741.9697,772.3008 70742.3142,772.637 Q70742.6587,772.9731 70743.7544,773.3799 L70744.8086,773.7783 Q70746.3027,774.3262 70747.0083,775.231 Q70747.7139,776.1357 70747.7139,777.5137 Q70747.7139,779.3896 70746.6057,780.3152 Q70745.4976,781.2407 70743.2563,781.2407 Q70742.335,781.2407 70741.4094,781.0208 Q70740.4839,780.8008 70739.6206,780.3691 L70739.6206,777.8374 Q70740.6001,778.5347 70741.5173,778.875 Q70742.4346,779.2153 70743.3311,779.2153 Q70744.2358,779.2153 70744.7339,778.8044 Q70745.2319,778.3936 70745.2319,777.6548 Q70745.2319,777.0986 70744.8999,776.6794 Q70744.5679,776.2603 70743.937,776.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="187" x="70757.5" y="779.0352">partialResult4CountDistinctString</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70729.5" x2="70946.5" y1="790.5" y2="790.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70736.5" y="798.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="70748.5" y="805.1348">valSet set.StringSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70729.5" x2="70946.5" y1="811.4551" y2="811.4551"/><!--MD5=[18556daec0532fbeab2ceee2c4309d8f]
class aggfuncs.partialResult4CountWithDistinct--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4CountWithDistinct" style="stroke: #A80036; stroke-width: 1.5;" width="211" x="69474.5" y="1695.5"/><ellipse cx="69489.5" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69488.7334,1712.563 Q69486.8823,1711.8574 69486.2266,1711.0813 Q69485.5708,1710.3052 69485.5708,1708.9937 Q69485.5708,1707.3086 69486.6499,1706.3457 Q69487.729,1705.3828 69489.6133,1705.3828 Q69490.4683,1705.3828 69491.3232,1705.5779 Q69492.1782,1705.7729 69493.0166,1706.1548 L69493.0166,1708.5454 Q69492.228,1707.9893 69491.4146,1707.6987 Q69490.6011,1707.4082 69489.8042,1707.4082 Q69488.916,1707.4082 69488.4429,1707.7651 Q69487.9697,1708.1221 69487.9697,1708.7861 Q69487.9697,1709.3008 69488.3142,1709.637 Q69488.6587,1709.9731 69489.7544,1710.3799 L69490.8086,1710.7783 Q69492.3027,1711.3262 69493.0083,1712.231 Q69493.7139,1713.1357 69493.7139,1714.5137 Q69493.7139,1716.3896 69492.6057,1717.3152 Q69491.4976,1718.2407 69489.2563,1718.2407 Q69488.335,1718.2407 69487.4094,1718.0208 Q69486.4839,1717.8008 69485.6206,1717.3691 L69485.6206,1714.8374 Q69486.6001,1715.5347 69487.5173,1715.875 Q69488.4346,1716.2153 69489.3311,1716.2153 Q69490.2358,1716.2153 69490.7339,1715.8044 Q69491.2319,1715.3936 69491.2319,1714.6548 Q69491.2319,1714.0986 69490.8999,1713.6794 Q69490.5679,1713.2603 69489.937,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="179" x="69503.5" y="1716.0352">partialResult4CountWithDistinct</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69475.5" x2="69684.5" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69482.5" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="69494.5" y="1742.1348">valSet set.StringSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69475.5" x2="69684.5" y1="1748.4551" y2="1748.4551"/><!--MD5=[4be9c3509c6e29f8d5fa34818dbbfe1f]
class aggfuncs.partialResult4CumeDist--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.partialResult4CumeDist" style="stroke: #A80036; stroke-width: 1.5;" width="167" x="69720.5" y="1682.5"/><ellipse cx="69735.5" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69734.7334,1699.563 Q69732.8823,1698.8574 69732.2266,1698.0813 Q69731.5708,1697.3052 69731.5708,1695.9937 Q69731.5708,1694.3086 69732.6499,1693.3457 Q69733.729,1692.3828 69735.6133,1692.3828 Q69736.4683,1692.3828 69737.3232,1692.5779 Q69738.1782,1692.7729 69739.0166,1693.1548 L69739.0166,1695.5454 Q69738.228,1694.9893 69737.4146,1694.6987 Q69736.6011,1694.4082 69735.8042,1694.4082 Q69734.916,1694.4082 69734.4429,1694.7651 Q69733.9697,1695.1221 69733.9697,1695.7861 Q69733.9697,1696.3008 69734.3142,1696.637 Q69734.6587,1696.9731 69735.7544,1697.3799 L69736.8086,1697.7783 Q69738.3027,1698.3262 69739.0083,1699.231 Q69739.7139,1700.1357 69739.7139,1701.5137 Q69739.7139,1703.3896 69738.6057,1704.3152 Q69737.4976,1705.2407 69735.2563,1705.2407 Q69734.335,1705.2407 69733.4094,1705.0208 Q69732.4839,1704.8008 69731.6206,1704.3691 L69731.6206,1701.8374 Q69732.6001,1702.5347 69733.5173,1702.875 Q69734.4346,1703.2153 69735.3311,1703.2153 Q69736.2358,1703.2153 69736.7339,1702.8044 Q69737.2319,1702.3936 69737.2319,1701.6548 Q69737.2319,1701.0986 69736.8999,1700.6794 Q69736.5679,1700.2603 69735.937,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="135" x="69749.5" y="1703.0352">partialResult4CumeDist</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69721.5" x2="69886.5" y1="1714.5" y2="1714.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69728.5" y="1722.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="69740.5" y="1729.1348">curIdx int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69728.5" y="1735.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="69740.5" y="1742.0898">lastRank int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69728.5" y="1748.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="69740.5" y="1755.0449">rows []chunk.Row</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69721.5" x2="69886.5" y1="1761.3652" y2="1761.3652"/><!--MD5=[c2ff25c2bcfcabe646a286ee4661238d]
class aggfuncs.partialResult4FirstRowDecimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4FirstRowDecimal" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="44071" y="1695.5"/><ellipse cx="44086" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M44085.2334,1712.563 Q44083.3823,1711.8574 44082.7266,1711.0813 Q44082.0708,1710.3052 44082.0708,1708.9937 Q44082.0708,1707.3086 44083.1499,1706.3457 Q44084.229,1705.3828 44086.1133,1705.3828 Q44086.9683,1705.3828 44087.8232,1705.5779 Q44088.6782,1705.7729 44089.5166,1706.1548 L44089.5166,1708.5454 Q44088.728,1707.9893 44087.9146,1707.6987 Q44087.1011,1707.4082 44086.3042,1707.4082 Q44085.416,1707.4082 44084.9429,1707.7651 Q44084.4697,1708.1221 44084.4697,1708.7861 Q44084.4697,1709.3008 44084.8142,1709.637 Q44085.1587,1709.9731 44086.2544,1710.3799 L44087.3086,1710.7783 Q44088.8027,1711.3262 44089.5083,1712.231 Q44090.2139,1713.1357 44090.2139,1714.5137 Q44090.2139,1716.3896 44089.1057,1717.3152 Q44087.9976,1718.2407 44085.7563,1718.2407 Q44084.835,1718.2407 44083.9094,1718.0208 Q44082.9839,1717.8008 44082.1206,1717.3691 L44082.1206,1714.8374 Q44083.1001,1715.5347 44084.0173,1715.875 Q44084.9346,1716.2153 44085.8311,1716.2153 Q44086.7358,1716.2153 44087.2339,1715.8044 Q44087.7319,1715.3936 44087.7319,1714.6548 Q44087.7319,1714.0986 44087.3999,1713.6794 Q44087.0679,1713.2603 44086.437,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="174" x="44100" y="1716.0352">partialResult4FirstRowDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44072" x2="44276" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="44079" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="44091" y="1742.1348">val types.MyDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44072" x2="44276" y1="1748.4551" y2="1748.4551"/><!--MD5=[3b661e460163ce97e0bfe972a3fcca5f]
class aggfuncs.partialResult4FirstRowDuration--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4FirstRowDuration" style="stroke: #A80036; stroke-width: 1.5;" width="209" x="44312.5" y="1695.5"/><ellipse cx="44327.5" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M44326.7334,1712.563 Q44324.8823,1711.8574 44324.2266,1711.0813 Q44323.5708,1710.3052 44323.5708,1708.9937 Q44323.5708,1707.3086 44324.6499,1706.3457 Q44325.729,1705.3828 44327.6133,1705.3828 Q44328.4683,1705.3828 44329.3232,1705.5779 Q44330.1782,1705.7729 44331.0166,1706.1548 L44331.0166,1708.5454 Q44330.228,1707.9893 44329.4146,1707.6987 Q44328.6011,1707.4082 44327.8042,1707.4082 Q44326.916,1707.4082 44326.4429,1707.7651 Q44325.9697,1708.1221 44325.9697,1708.7861 Q44325.9697,1709.3008 44326.3142,1709.637 Q44326.6587,1709.9731 44327.7544,1710.3799 L44328.8086,1710.7783 Q44330.3027,1711.3262 44331.0083,1712.231 Q44331.7139,1713.1357 44331.7139,1714.5137 Q44331.7139,1716.3896 44330.6057,1717.3152 Q44329.4976,1718.2407 44327.2563,1718.2407 Q44326.335,1718.2407 44325.4094,1718.0208 Q44324.4839,1717.8008 44323.6206,1717.3691 L44323.6206,1714.8374 Q44324.6001,1715.5347 44325.5173,1715.875 Q44326.4346,1716.2153 44327.3311,1716.2153 Q44328.2358,1716.2153 44328.7339,1715.8044 Q44329.2319,1715.3936 44329.2319,1714.6548 Q44329.2319,1714.0986 44328.8999,1713.6794 Q44328.5679,1713.2603 44327.937,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="177" x="44341.5" y="1716.0352">partialResult4FirstRowDuration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44313.5" x2="44520.5" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="44320.5" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="44332.5" y="1742.1348">val types.Duration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44313.5" x2="44520.5" y1="1748.4551" y2="1748.4551"/><!--MD5=[38a80b067a1524d4cd316977a7ecd130]
class aggfuncs.partialResult4FirstRowEnum--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4FirstRowEnum" style="stroke: #A80036; stroke-width: 1.5;" width="192" x="44557" y="1695.5"/><ellipse cx="44572" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M44571.2334,1712.563 Q44569.3823,1711.8574 44568.7266,1711.0813 Q44568.0708,1710.3052 44568.0708,1708.9937 Q44568.0708,1707.3086 44569.1499,1706.3457 Q44570.229,1705.3828 44572.1133,1705.3828 Q44572.9683,1705.3828 44573.8232,1705.5779 Q44574.6782,1705.7729 44575.5166,1706.1548 L44575.5166,1708.5454 Q44574.728,1707.9893 44573.9146,1707.6987 Q44573.1011,1707.4082 44572.3042,1707.4082 Q44571.416,1707.4082 44570.9429,1707.7651 Q44570.4697,1708.1221 44570.4697,1708.7861 Q44570.4697,1709.3008 44570.8142,1709.637 Q44571.1587,1709.9731 44572.2544,1710.3799 L44573.3086,1710.7783 Q44574.8027,1711.3262 44575.5083,1712.231 Q44576.2139,1713.1357 44576.2139,1714.5137 Q44576.2139,1716.3896 44575.1057,1717.3152 Q44573.9976,1718.2407 44571.7563,1718.2407 Q44570.835,1718.2407 44569.9094,1718.0208 Q44568.9839,1717.8008 44568.1206,1717.3691 L44568.1206,1714.8374 Q44569.1001,1715.5347 44570.0173,1715.875 Q44570.9346,1716.2153 44571.8311,1716.2153 Q44572.7358,1716.2153 44573.2339,1715.8044 Q44573.7319,1715.3936 44573.7319,1714.6548 Q44573.7319,1714.0986 44573.3999,1713.6794 Q44573.0679,1713.2603 44572.437,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="160" x="44586" y="1716.0352">partialResult4FirstRowEnum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44558" x2="44748" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="44565" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="44577" y="1742.1348">val types.Enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44558" x2="44748" y1="1748.4551" y2="1748.4551"/><!--MD5=[98205dbd6c8a5bb22cd6339374f42867]
class aggfuncs.partialResult4FirstRowFloat32--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4FirstRowFloat32" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="44784.5" y="1695.5"/><ellipse cx="44799.5" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M44798.7334,1712.563 Q44796.8823,1711.8574 44796.2266,1711.0813 Q44795.5708,1710.3052 44795.5708,1708.9937 Q44795.5708,1707.3086 44796.6499,1706.3457 Q44797.729,1705.3828 44799.6133,1705.3828 Q44800.4683,1705.3828 44801.3232,1705.5779 Q44802.1782,1705.7729 44803.0166,1706.1548 L44803.0166,1708.5454 Q44802.228,1707.9893 44801.4146,1707.6987 Q44800.6011,1707.4082 44799.8042,1707.4082 Q44798.916,1707.4082 44798.4429,1707.7651 Q44797.9697,1708.1221 44797.9697,1708.7861 Q44797.9697,1709.3008 44798.3142,1709.637 Q44798.6587,1709.9731 44799.7544,1710.3799 L44800.8086,1710.7783 Q44802.3027,1711.3262 44803.0083,1712.231 Q44803.7139,1713.1357 44803.7139,1714.5137 Q44803.7139,1716.3896 44802.6057,1717.3152 Q44801.4976,1718.2407 44799.2563,1718.2407 Q44798.335,1718.2407 44797.4094,1718.0208 Q44796.4839,1717.8008 44795.6206,1717.3691 L44795.6206,1714.8374 Q44796.6001,1715.5347 44797.5173,1715.875 Q44798.4346,1716.2153 44799.3311,1716.2153 Q44800.2358,1716.2153 44800.7339,1715.8044 Q44801.2319,1715.3936 44801.2319,1714.6548 Q44801.2319,1714.0986 44800.8999,1713.6794 Q44800.5679,1713.2603 44799.937,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="171" x="44813.5" y="1716.0352">partialResult4FirstRowFloat32</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44785.5" x2="44986.5" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="44792.5" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="44804.5" y="1742.1348">val float32</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44785.5" x2="44986.5" y1="1748.4551" y2="1748.4551"/><!--MD5=[997ff6c281b28805bd4c74059b813ef5]
class aggfuncs.partialResult4FirstRowFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4FirstRowFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="45022.5" y="1695.5"/><ellipse cx="45037.5" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M45036.7334,1712.563 Q45034.8823,1711.8574 45034.2266,1711.0813 Q45033.5708,1710.3052 45033.5708,1708.9937 Q45033.5708,1707.3086 45034.6499,1706.3457 Q45035.729,1705.3828 45037.6133,1705.3828 Q45038.4683,1705.3828 45039.3232,1705.5779 Q45040.1782,1705.7729 45041.0166,1706.1548 L45041.0166,1708.5454 Q45040.228,1707.9893 45039.4146,1707.6987 Q45038.6011,1707.4082 45037.8042,1707.4082 Q45036.916,1707.4082 45036.4429,1707.7651 Q45035.9697,1708.1221 45035.9697,1708.7861 Q45035.9697,1709.3008 45036.3142,1709.637 Q45036.6587,1709.9731 45037.7544,1710.3799 L45038.8086,1710.7783 Q45040.3027,1711.3262 45041.0083,1712.231 Q45041.7139,1713.1357 45041.7139,1714.5137 Q45041.7139,1716.3896 45040.6057,1717.3152 Q45039.4976,1718.2407 45037.2563,1718.2407 Q45036.335,1718.2407 45035.4094,1718.0208 Q45034.4839,1717.8008 45033.6206,1717.3691 L45033.6206,1714.8374 Q45034.6001,1715.5347 45035.5173,1715.875 Q45036.4346,1716.2153 45037.3311,1716.2153 Q45038.2358,1716.2153 45038.7339,1715.8044 Q45039.2319,1715.3936 45039.2319,1714.6548 Q45039.2319,1714.0986 45038.8999,1713.6794 Q45038.5679,1713.2603 45037.937,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="171" x="45051.5" y="1716.0352">partialResult4FirstRowFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="45023.5" x2="45224.5" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="45030.5" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="45042.5" y="1742.1348">val float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="45023.5" x2="45224.5" y1="1748.4551" y2="1748.4551"/><!--MD5=[4528b4d7c31079e8553da48635e9f988]
class aggfuncs.partialResult4FirstRowInt--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4FirstRowInt" style="stroke: #A80036; stroke-width: 1.5;" width="174" x="45261" y="1695.5"/><ellipse cx="45276" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M45275.2334,1712.563 Q45273.3823,1711.8574 45272.7266,1711.0813 Q45272.0708,1710.3052 45272.0708,1708.9937 Q45272.0708,1707.3086 45273.1499,1706.3457 Q45274.229,1705.3828 45276.1133,1705.3828 Q45276.9683,1705.3828 45277.8232,1705.5779 Q45278.6782,1705.7729 45279.5166,1706.1548 L45279.5166,1708.5454 Q45278.728,1707.9893 45277.9146,1707.6987 Q45277.1011,1707.4082 45276.3042,1707.4082 Q45275.416,1707.4082 45274.9429,1707.7651 Q45274.4697,1708.1221 45274.4697,1708.7861 Q45274.4697,1709.3008 45274.8142,1709.637 Q45275.1587,1709.9731 45276.2544,1710.3799 L45277.3086,1710.7783 Q45278.8027,1711.3262 45279.5083,1712.231 Q45280.2139,1713.1357 45280.2139,1714.5137 Q45280.2139,1716.3896 45279.1057,1717.3152 Q45277.9976,1718.2407 45275.7563,1718.2407 Q45274.835,1718.2407 45273.9094,1718.0208 Q45272.9839,1717.8008 45272.1206,1717.3691 L45272.1206,1714.8374 Q45273.1001,1715.5347 45274.0173,1715.875 Q45274.9346,1716.2153 45275.8311,1716.2153 Q45276.7358,1716.2153 45277.2339,1715.8044 Q45277.7319,1715.3936 45277.7319,1714.6548 Q45277.7319,1714.0986 45277.3999,1713.6794 Q45277.0679,1713.2603 45276.437,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="142" x="45290" y="1716.0352">partialResult4FirstRowInt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="45262" x2="45434" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="45269" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="45281" y="1742.1348">val int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="45262" x2="45434" y1="1748.4551" y2="1748.4551"/><!--MD5=[29b13015bd41506c309d3c283ddf2254]
class aggfuncs.partialResult4FirstRowJSON--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4FirstRowJSON" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="43183" y="1695.5"/><ellipse cx="43198" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M43197.2334,1712.563 Q43195.3823,1711.8574 43194.7266,1711.0813 Q43194.0708,1710.3052 43194.0708,1708.9937 Q43194.0708,1707.3086 43195.1499,1706.3457 Q43196.229,1705.3828 43198.1133,1705.3828 Q43198.9683,1705.3828 43199.8232,1705.5779 Q43200.6782,1705.7729 43201.5166,1706.1548 L43201.5166,1708.5454 Q43200.728,1707.9893 43199.9146,1707.6987 Q43199.1011,1707.4082 43198.3042,1707.4082 Q43197.416,1707.4082 43196.9429,1707.7651 Q43196.4697,1708.1221 43196.4697,1708.7861 Q43196.4697,1709.3008 43196.8142,1709.637 Q43197.1587,1709.9731 43198.2544,1710.3799 L43199.3086,1710.7783 Q43200.8027,1711.3262 43201.5083,1712.231 Q43202.2139,1713.1357 43202.2139,1714.5137 Q43202.2139,1716.3896 43201.1057,1717.3152 Q43199.9976,1718.2407 43197.7563,1718.2407 Q43196.835,1718.2407 43195.9094,1718.0208 Q43194.9839,1717.8008 43194.1206,1717.3691 L43194.1206,1714.8374 Q43195.1001,1715.5347 43196.0173,1715.875 Q43196.9346,1716.2153 43197.8311,1716.2153 Q43198.7358,1716.2153 43199.2339,1715.8044 Q43199.7319,1715.3936 43199.7319,1714.6548 Q43199.7319,1714.0986 43199.3999,1713.6794 Q43199.0679,1713.2603 43198.437,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="43212" y="1716.0352">partialResult4FirstRowJSON</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43184" x2="43370" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="43191" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="43203" y="1742.1348">val json.BinaryJSON</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43184" x2="43370" y1="1748.4551" y2="1748.4551"/><!--MD5=[5aa28e678d153c0effd592c654cd0b76]
class aggfuncs.partialResult4FirstRowSet--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4FirstRowSet" style="stroke: #A80036; stroke-width: 1.5;" width="177" x="43406.5" y="1695.5"/><ellipse cx="43421.5" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M43420.7334,1712.563 Q43418.8823,1711.8574 43418.2266,1711.0813 Q43417.5708,1710.3052 43417.5708,1708.9937 Q43417.5708,1707.3086 43418.6499,1706.3457 Q43419.729,1705.3828 43421.6133,1705.3828 Q43422.4683,1705.3828 43423.3232,1705.5779 Q43424.1782,1705.7729 43425.0166,1706.1548 L43425.0166,1708.5454 Q43424.228,1707.9893 43423.4146,1707.6987 Q43422.6011,1707.4082 43421.8042,1707.4082 Q43420.916,1707.4082 43420.4429,1707.7651 Q43419.9697,1708.1221 43419.9697,1708.7861 Q43419.9697,1709.3008 43420.3142,1709.637 Q43420.6587,1709.9731 43421.7544,1710.3799 L43422.8086,1710.7783 Q43424.3027,1711.3262 43425.0083,1712.231 Q43425.7139,1713.1357 43425.7139,1714.5137 Q43425.7139,1716.3896 43424.6057,1717.3152 Q43423.4976,1718.2407 43421.2563,1718.2407 Q43420.335,1718.2407 43419.4094,1718.0208 Q43418.4839,1717.8008 43417.6206,1717.3691 L43417.6206,1714.8374 Q43418.6001,1715.5347 43419.5173,1715.875 Q43420.4346,1716.2153 43421.3311,1716.2153 Q43422.2358,1716.2153 43422.7339,1715.8044 Q43423.2319,1715.3936 43423.2319,1714.6548 Q43423.2319,1714.0986 43422.8999,1713.6794 Q43422.5679,1713.2603 43421.937,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="145" x="43435.5" y="1716.0352">partialResult4FirstRowSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43407.5" x2="43582.5" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="43414.5" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="43426.5" y="1742.1348">val types.Set</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43407.5" x2="43582.5" y1="1748.4551" y2="1748.4551"/><!--MD5=[613d7247c3c6b6062bb2c24eefe97a93]
class aggfuncs.partialResult4FirstRowString--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4FirstRowString" style="stroke: #A80036; stroke-width: 1.5;" width="192" x="43619" y="1695.5"/><ellipse cx="43634" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M43633.2334,1712.563 Q43631.3823,1711.8574 43630.7266,1711.0813 Q43630.0708,1710.3052 43630.0708,1708.9937 Q43630.0708,1707.3086 43631.1499,1706.3457 Q43632.229,1705.3828 43634.1133,1705.3828 Q43634.9683,1705.3828 43635.8232,1705.5779 Q43636.6782,1705.7729 43637.5166,1706.1548 L43637.5166,1708.5454 Q43636.728,1707.9893 43635.9146,1707.6987 Q43635.1011,1707.4082 43634.3042,1707.4082 Q43633.416,1707.4082 43632.9429,1707.7651 Q43632.4697,1708.1221 43632.4697,1708.7861 Q43632.4697,1709.3008 43632.8142,1709.637 Q43633.1587,1709.9731 43634.2544,1710.3799 L43635.3086,1710.7783 Q43636.8027,1711.3262 43637.5083,1712.231 Q43638.2139,1713.1357 43638.2139,1714.5137 Q43638.2139,1716.3896 43637.1057,1717.3152 Q43635.9976,1718.2407 43633.7563,1718.2407 Q43632.835,1718.2407 43631.9094,1718.0208 Q43630.9839,1717.8008 43630.1206,1717.3691 L43630.1206,1714.8374 Q43631.1001,1715.5347 43632.0173,1715.875 Q43632.9346,1716.2153 43633.8311,1716.2153 Q43634.7358,1716.2153 43635.2339,1715.8044 Q43635.7319,1715.3936 43635.7319,1714.6548 Q43635.7319,1714.0986 43635.3999,1713.6794 Q43635.0679,1713.2603 43634.437,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="160" x="43648" y="1716.0352">partialResult4FirstRowString</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43620" x2="43810" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="43627" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="43639" y="1742.1348">val string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43620" x2="43810" y1="1748.4551" y2="1748.4551"/><!--MD5=[09834930522ec9422a04c2a3bf1a304a]
class aggfuncs.partialResult4FirstRowTime--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4FirstRowTime" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="43846.5" y="1695.5"/><ellipse cx="43861.5" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M43860.7334,1712.563 Q43858.8823,1711.8574 43858.2266,1711.0813 Q43857.5708,1710.3052 43857.5708,1708.9937 Q43857.5708,1707.3086 43858.6499,1706.3457 Q43859.729,1705.3828 43861.6133,1705.3828 Q43862.4683,1705.3828 43863.3232,1705.5779 Q43864.1782,1705.7729 43865.0166,1706.1548 L43865.0166,1708.5454 Q43864.228,1707.9893 43863.4146,1707.6987 Q43862.6011,1707.4082 43861.8042,1707.4082 Q43860.916,1707.4082 43860.4429,1707.7651 Q43859.9697,1708.1221 43859.9697,1708.7861 Q43859.9697,1709.3008 43860.3142,1709.637 Q43860.6587,1709.9731 43861.7544,1710.3799 L43862.8086,1710.7783 Q43864.3027,1711.3262 43865.0083,1712.231 Q43865.7139,1713.1357 43865.7139,1714.5137 Q43865.7139,1716.3896 43864.6057,1717.3152 Q43863.4976,1718.2407 43861.2563,1718.2407 Q43860.335,1718.2407 43859.4094,1718.0208 Q43858.4839,1717.8008 43857.6206,1717.3691 L43857.6206,1714.8374 Q43858.6001,1715.5347 43859.5173,1715.875 Q43860.4346,1716.2153 43861.3311,1716.2153 Q43862.2358,1716.2153 43862.7339,1715.8044 Q43863.2319,1715.3936 43863.2319,1714.6548 Q43863.2319,1714.0986 43862.8999,1713.6794 Q43862.5679,1713.2603 43861.937,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="157" x="43875.5" y="1716.0352">partialResult4FirstRowTime</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43847.5" x2="44034.5" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="43854.5" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="43866.5" y="1742.1348">val types.Time</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43847.5" x2="44034.5" y1="1748.4551" y2="1748.4551"/><!--MD5=[93e04cc6263d020c8497488bcdd6f96f]
class aggfuncs.partialResult4FirstValue--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4FirstValue" style="stroke: #A80036; stroke-width: 1.5;" width="168" x="69923" y="1689"/><ellipse cx="69938" cy="1705" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69937.2334,1706.063 Q69935.3823,1705.3574 69934.7266,1704.5813 Q69934.0708,1703.8052 69934.0708,1702.4937 Q69934.0708,1700.8086 69935.1499,1699.8457 Q69936.229,1698.8828 69938.1133,1698.8828 Q69938.9683,1698.8828 69939.8232,1699.0779 Q69940.6782,1699.2729 69941.5166,1699.6548 L69941.5166,1702.0454 Q69940.728,1701.4893 69939.9146,1701.1987 Q69939.1011,1700.9082 69938.3042,1700.9082 Q69937.416,1700.9082 69936.9429,1701.2651 Q69936.4697,1701.6221 69936.4697,1702.2861 Q69936.4697,1702.8008 69936.8142,1703.137 Q69937.1587,1703.4731 69938.2544,1703.8799 L69939.3086,1704.2783 Q69940.8027,1704.8262 69941.5083,1705.731 Q69942.2139,1706.6357 69942.2139,1708.0137 Q69942.2139,1709.8896 69941.1057,1710.8152 Q69939.9976,1711.7407 69937.7563,1711.7407 Q69936.835,1711.7407 69935.9094,1711.5208 Q69934.9839,1711.3008 69934.1206,1710.8691 L69934.1206,1708.3374 Q69935.1001,1709.0347 69936.0173,1709.375 Q69936.9346,1709.7153 69937.8311,1709.7153 Q69938.7358,1709.7153 69939.2339,1709.3044 Q69939.7319,1708.8936 69939.7319,1708.1548 Q69939.7319,1707.5986 69939.3999,1707.1794 Q69939.0679,1706.7603 69938.437,1706.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="136" x="69952" y="1709.5352">partialResult4FirstValue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69924" x2="70090" y1="1721" y2="1721"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69931" y="1729"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="69943" y="1735.6348">gotFirstValue bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69931" y="1741.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="69943" y="1748.5898">evaluator valueEvaluator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69924" x2="70090" y1="1754.9102" y2="1754.9102"/><!--MD5=[01d1ae8c229f91449cb8e14c2179626f]
class aggfuncs.partialResult4GroupConcat--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="aggfuncs.partialResult4GroupConcat" style="stroke: #A80036; stroke-width: 1.5;" width="187" x="42696.5" y="1702"/><ellipse cx="42711.5" cy="1718" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M42710.7334,1719.063 Q42708.8823,1718.3574 42708.2266,1717.5813 Q42707.5708,1716.8052 42707.5708,1715.4937 Q42707.5708,1713.8086 42708.6499,1712.8457 Q42709.729,1711.8828 42711.6133,1711.8828 Q42712.4683,1711.8828 42713.3232,1712.0779 Q42714.1782,1712.2729 42715.0166,1712.6548 L42715.0166,1715.0454 Q42714.228,1714.4893 42713.4146,1714.1987 Q42712.6011,1713.9082 42711.8042,1713.9082 Q42710.916,1713.9082 42710.4429,1714.2651 Q42709.9697,1714.6221 42709.9697,1715.2861 Q42709.9697,1715.8008 42710.3142,1716.137 Q42710.6587,1716.4731 42711.7544,1716.8799 L42712.8086,1717.2783 Q42714.3027,1717.8262 42715.0083,1718.731 Q42715.7139,1719.6357 42715.7139,1721.0137 Q42715.7139,1722.8896 42714.6057,1723.8152 Q42713.4976,1724.7407 42711.2563,1724.7407 Q42710.335,1724.7407 42709.4094,1724.5208 Q42708.4839,1724.3008 42707.6206,1723.8691 L42707.6206,1721.3374 Q42708.6001,1722.0347 42709.5173,1722.375 Q42710.4346,1722.7153 42711.3311,1722.7153 Q42712.2358,1722.7153 42712.7339,1722.3044 Q42713.2319,1721.8936 42713.2319,1721.1548 Q42713.2319,1720.5986 42712.8999,1720.1794 Q42712.5679,1719.7603 42711.937,1719.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="155" x="42725.5" y="1722.5352">partialResult4GroupConcat</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42697.5" x2="42882.5" y1="1734" y2="1734"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="42697.5" x2="42882.5" y1="1742" y2="1742"/><!--MD5=[0f5b83525838573fb31dbbc9585c3e32]
class aggfuncs.partialResult4GroupConcatDistinct--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4GroupConcatDistinct" style="stroke: #A80036; stroke-width: 1.5;" width="229" x="42918.5" y="1689"/><ellipse cx="42933.5" cy="1705" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M42932.7334,1706.063 Q42930.8823,1705.3574 42930.2266,1704.5813 Q42929.5708,1703.8052 42929.5708,1702.4937 Q42929.5708,1700.8086 42930.6499,1699.8457 Q42931.729,1698.8828 42933.6133,1698.8828 Q42934.4683,1698.8828 42935.3232,1699.0779 Q42936.1782,1699.2729 42937.0166,1699.6548 L42937.0166,1702.0454 Q42936.228,1701.4893 42935.4146,1701.1987 Q42934.6011,1700.9082 42933.8042,1700.9082 Q42932.916,1700.9082 42932.4429,1701.2651 Q42931.9697,1701.6221 42931.9697,1702.2861 Q42931.9697,1702.8008 42932.3142,1703.137 Q42932.6587,1703.4731 42933.7544,1703.8799 L42934.8086,1704.2783 Q42936.3027,1704.8262 42937.0083,1705.731 Q42937.7139,1706.6357 42937.7139,1708.0137 Q42937.7139,1709.8896 42936.6057,1710.8152 Q42935.4976,1711.7407 42933.2563,1711.7407 Q42932.335,1711.7407 42931.4094,1711.5208 Q42930.4839,1711.3008 42929.6206,1710.8691 L42929.6206,1708.3374 Q42930.6001,1709.0347 42931.5173,1709.375 Q42932.4346,1709.7153 42933.3311,1709.7153 Q42934.2358,1709.7153 42934.7339,1709.3044 Q42935.2319,1708.8936 42935.2319,1708.1548 Q42935.2319,1707.5986 42934.8999,1707.1794 Q42934.5679,1706.7603 42933.937,1706.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="197" x="42947.5" y="1709.5352">partialResult4GroupConcatDistinct</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42919.5" x2="43146.5" y1="1721" y2="1721"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="42926.5" y="1729"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="42938.5" y="1735.6348">valSet set.StringSet</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="42926.5" y="1741.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="42938.5" y="1748.5898">encodeBytesBuffer []byte</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42919.5" x2="43146.5" y1="1754.9102" y2="1754.9102"/><!--MD5=[94ffcf8784a0510a2f5c1d055f837ba7]
class aggfuncs.partialResult4GroupConcatOrder--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4GroupConcatOrder" style="stroke: #A80036; stroke-width: 1.5;" width="221" x="70126.5" y="1695.5"/><ellipse cx="70141.5" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70140.7334,1712.563 Q70138.8823,1711.8574 70138.2266,1711.0813 Q70137.5708,1710.3052 70137.5708,1708.9937 Q70137.5708,1707.3086 70138.6499,1706.3457 Q70139.729,1705.3828 70141.6133,1705.3828 Q70142.4683,1705.3828 70143.3232,1705.5779 Q70144.1782,1705.7729 70145.0166,1706.1548 L70145.0166,1708.5454 Q70144.228,1707.9893 70143.4146,1707.6987 Q70142.6011,1707.4082 70141.8042,1707.4082 Q70140.916,1707.4082 70140.4429,1707.7651 Q70139.9697,1708.1221 70139.9697,1708.7861 Q70139.9697,1709.3008 70140.3142,1709.637 Q70140.6587,1709.9731 70141.7544,1710.3799 L70142.8086,1710.7783 Q70144.3027,1711.3262 70145.0083,1712.231 Q70145.7139,1713.1357 70145.7139,1714.5137 Q70145.7139,1716.3896 70144.6057,1717.3152 Q70143.4976,1718.2407 70141.2563,1718.2407 Q70140.335,1718.2407 70139.4094,1718.0208 Q70138.4839,1717.8008 70137.6206,1717.3691 L70137.6206,1714.8374 Q70138.6001,1715.5347 70139.5173,1715.875 Q70140.4346,1716.2153 70141.3311,1716.2153 Q70142.2358,1716.2153 70142.7339,1715.8044 Q70143.2319,1715.3936 70143.2319,1714.6548 Q70143.2319,1714.0986 70142.8999,1713.6794 Q70142.5679,1713.2603 70141.937,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="189" x="70155.5" y="1716.0352">partialResult4GroupConcatOrder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70127.5" x2="70346.5" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70134.5" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="70146.5" y="1742.1348">topN *topNRows</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70127.5" x2="70346.5" y1="1748.4551" y2="1748.4551"/><!--MD5=[a809d1aba5eaa80605d9db6bbd868de8]
class aggfuncs.partialResult4GroupConcatOrderDistinct--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.partialResult4GroupConcatOrderDistinct" style="stroke: #A80036; stroke-width: 1.5;" width="263" x="70382.5" y="1682.5"/><ellipse cx="70397.5" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70396.7334,1699.563 Q70394.8823,1698.8574 70394.2266,1698.0813 Q70393.5708,1697.3052 70393.5708,1695.9937 Q70393.5708,1694.3086 70394.6499,1693.3457 Q70395.729,1692.3828 70397.6133,1692.3828 Q70398.4683,1692.3828 70399.3232,1692.5779 Q70400.1782,1692.7729 70401.0166,1693.1548 L70401.0166,1695.5454 Q70400.228,1694.9893 70399.4146,1694.6987 Q70398.6011,1694.4082 70397.8042,1694.4082 Q70396.916,1694.4082 70396.4429,1694.7651 Q70395.9697,1695.1221 70395.9697,1695.7861 Q70395.9697,1696.3008 70396.3142,1696.637 Q70396.6587,1696.9731 70397.7544,1697.3799 L70398.8086,1697.7783 Q70400.3027,1698.3262 70401.0083,1699.231 Q70401.7139,1700.1357 70401.7139,1701.5137 Q70401.7139,1703.3896 70400.6057,1704.3152 Q70399.4976,1705.2407 70397.2563,1705.2407 Q70396.335,1705.2407 70395.4094,1705.0208 Q70394.4839,1704.8008 70393.6206,1704.3691 L70393.6206,1701.8374 Q70394.6001,1702.5347 70395.5173,1702.875 Q70396.4346,1703.2153 70397.3311,1703.2153 Q70398.2358,1703.2153 70398.7339,1702.8044 Q70399.2319,1702.3936 70399.2319,1701.6548 Q70399.2319,1701.0986 70398.8999,1700.6794 Q70398.5679,1700.2603 70397.937,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="231" x="70411.5" y="1703.0352">partialResult4GroupConcatOrderDistinct</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70383.5" x2="70644.5" y1="1714.5" y2="1714.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70390.5" y="1722.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="70402.5" y="1729.1348">topN *topNRows</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70390.5" y="1735.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="70402.5" y="1742.0898">valSet set.StringSet</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70390.5" y="1748.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="70402.5" y="1755.0449">encodeBytesBuffer []byte</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70383.5" x2="70644.5" y1="1761.3652" y2="1761.3652"/><!--MD5=[db2bdec6f730d323f7e47706c6184a35]
class aggfuncs.partialResult4JsonObjectAgg--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4JsonObjectAgg" style="stroke: #A80036; stroke-width: 1.5;" width="196" x="70681" y="1695.5"/><ellipse cx="70696" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70695.2334,1712.563 Q70693.3823,1711.8574 70692.7266,1711.0813 Q70692.0708,1710.3052 70692.0708,1708.9937 Q70692.0708,1707.3086 70693.1499,1706.3457 Q70694.229,1705.3828 70696.1133,1705.3828 Q70696.9683,1705.3828 70697.8232,1705.5779 Q70698.6782,1705.7729 70699.5166,1706.1548 L70699.5166,1708.5454 Q70698.728,1707.9893 70697.9146,1707.6987 Q70697.1011,1707.4082 70696.3042,1707.4082 Q70695.416,1707.4082 70694.9429,1707.7651 Q70694.4697,1708.1221 70694.4697,1708.7861 Q70694.4697,1709.3008 70694.8142,1709.637 Q70695.1587,1709.9731 70696.2544,1710.3799 L70697.3086,1710.7783 Q70698.8027,1711.3262 70699.5083,1712.231 Q70700.2139,1713.1357 70700.2139,1714.5137 Q70700.2139,1716.3896 70699.1057,1717.3152 Q70697.9976,1718.2407 70695.7563,1718.2407 Q70694.835,1718.2407 70693.9094,1718.0208 Q70692.9839,1717.8008 70692.1206,1717.3691 L70692.1206,1714.8374 Q70693.1001,1715.5347 70694.0173,1715.875 Q70694.9346,1716.2153 70695.8311,1716.2153 Q70696.7358,1716.2153 70697.2339,1715.8044 Q70697.7319,1715.3936 70697.7319,1714.6548 Q70697.7319,1714.0986 70697.3999,1713.6794 Q70697.0679,1713.2603 70696.437,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="164" x="70710" y="1716.0352">partialResult4JsonObjectAgg</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70682" x2="70876" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70689" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="70701" y="1742.1348">entries</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="70741" y="1742.1348">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="70764" y="1742.1348">[string]</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="70804" y="1742.1348">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="70851" y="1742.1348">{}</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70682" x2="70876" y1="1748.4551" y2="1748.4551"/><!--MD5=[238645dceb2f9fe1e6229c629ef8fde4]
class aggfuncs.partialResult4LastValue--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4LastValue" style="stroke: #A80036; stroke-width: 1.5;" width="167" x="69639.5" y="2470.5"/><ellipse cx="69654.5" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69653.7334,2487.563 Q69651.8823,2486.8574 69651.2266,2486.0813 Q69650.5708,2485.3052 69650.5708,2483.9937 Q69650.5708,2482.3086 69651.6499,2481.3457 Q69652.729,2480.3828 69654.6133,2480.3828 Q69655.4683,2480.3828 69656.3232,2480.5779 Q69657.1782,2480.7729 69658.0166,2481.1548 L69658.0166,2483.5454 Q69657.228,2482.9893 69656.4146,2482.6987 Q69655.6011,2482.4082 69654.8042,2482.4082 Q69653.916,2482.4082 69653.4429,2482.7651 Q69652.9697,2483.1221 69652.9697,2483.7861 Q69652.9697,2484.3008 69653.3142,2484.637 Q69653.6587,2484.9731 69654.7544,2485.3799 L69655.8086,2485.7783 Q69657.3027,2486.3262 69658.0083,2487.231 Q69658.7139,2488.1357 69658.7139,2489.5137 Q69658.7139,2491.3896 69657.6057,2492.3152 Q69656.4976,2493.2407 69654.2563,2493.2407 Q69653.335,2493.2407 69652.4094,2493.0208 Q69651.4839,2492.8008 69650.6206,2492.3691 L69650.6206,2489.8374 Q69651.6001,2490.5347 69652.5173,2490.875 Q69653.4346,2491.2153 69654.3311,2491.2153 Q69655.2358,2491.2153 69655.7339,2490.8044 Q69656.2319,2490.3936 69656.2319,2489.6548 Q69656.2319,2489.0986 69655.8999,2488.6794 Q69655.5679,2488.2603 69654.937,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="135" x="69668.5" y="2491.0352">partialResult4LastValue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69640.5" x2="69805.5" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69647.5" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="69659.5" y="2517.1348">gotLastValue bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69647.5" y="2523.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="69659.5" y="2530.0898">evaluator valueEvaluator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69640.5" x2="69805.5" y1="2536.4102" y2="2536.4102"/><!--MD5=[b6900bc2453b8fbcf513c7425c000c02]
class aggfuncs.partialResult4LeadLag--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4LeadLag" style="stroke: #A80036; stroke-width: 1.5;" width="160" x="69842" y="2470.5"/><ellipse cx="69857" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69856.2334,2487.563 Q69854.3823,2486.8574 69853.7266,2486.0813 Q69853.0708,2485.3052 69853.0708,2483.9937 Q69853.0708,2482.3086 69854.1499,2481.3457 Q69855.229,2480.3828 69857.1133,2480.3828 Q69857.9683,2480.3828 69858.8232,2480.5779 Q69859.6782,2480.7729 69860.5166,2481.1548 L69860.5166,2483.5454 Q69859.728,2482.9893 69858.9146,2482.6987 Q69858.1011,2482.4082 69857.3042,2482.4082 Q69856.416,2482.4082 69855.9429,2482.7651 Q69855.4697,2483.1221 69855.4697,2483.7861 Q69855.4697,2484.3008 69855.8142,2484.637 Q69856.1587,2484.9731 69857.2544,2485.3799 L69858.3086,2485.7783 Q69859.8027,2486.3262 69860.5083,2487.231 Q69861.2139,2488.1357 69861.2139,2489.5137 Q69861.2139,2491.3896 69860.1057,2492.3152 Q69858.9976,2493.2407 69856.7563,2493.2407 Q69855.835,2493.2407 69854.9094,2493.0208 Q69853.9839,2492.8008 69853.1206,2492.3691 L69853.1206,2489.8374 Q69854.1001,2490.5347 69855.0173,2490.875 Q69855.9346,2491.2153 69856.8311,2491.2153 Q69857.7358,2491.2153 69858.2339,2490.8044 Q69858.7319,2490.3936 69858.7319,2489.6548 Q69858.7319,2489.0986 69858.3999,2488.6794 Q69858.0679,2488.2603 69857.437,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="69871" y="2491.0352">partialResult4LeadLag</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69843" x2="70001" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69850" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="69862" y="2517.1348">rows []chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69850" y="2523.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="69862" y="2530.0898">curIdx uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69843" x2="70001" y1="2536.4102" y2="2536.4102"/><!--MD5=[aa4ee9d44d2ffdccefc60409313505e5]
class aggfuncs.partialResult4MaxMinDecimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4MaxMinDecimal" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="70037" y="2470.5"/><ellipse cx="70052" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70051.2334,2487.563 Q70049.3823,2486.8574 70048.7266,2486.0813 Q70048.0708,2485.3052 70048.0708,2483.9937 Q70048.0708,2482.3086 70049.1499,2481.3457 Q70050.229,2480.3828 70052.1133,2480.3828 Q70052.9683,2480.3828 70053.8232,2480.5779 Q70054.6782,2480.7729 70055.5166,2481.1548 L70055.5166,2483.5454 Q70054.728,2482.9893 70053.9146,2482.6987 Q70053.1011,2482.4082 70052.3042,2482.4082 Q70051.416,2482.4082 70050.9429,2482.7651 Q70050.4697,2483.1221 70050.4697,2483.7861 Q70050.4697,2484.3008 70050.8142,2484.637 Q70051.1587,2484.9731 70052.2544,2485.3799 L70053.3086,2485.7783 Q70054.8027,2486.3262 70055.5083,2487.231 Q70056.2139,2488.1357 70056.2139,2489.5137 Q70056.2139,2491.3896 70055.1057,2492.3152 Q70053.9976,2493.2407 70051.7563,2493.2407 Q70050.835,2493.2407 70049.9094,2493.0208 Q70048.9839,2492.8008 70048.1206,2492.3691 L70048.1206,2489.8374 Q70049.1001,2490.5347 70050.0173,2490.875 Q70050.9346,2491.2153 70051.8311,2491.2153 Q70052.7358,2491.2153 70053.2339,2490.8044 Q70053.7319,2490.3936 70053.7319,2489.6548 Q70053.7319,2489.0986 70053.3999,2488.6794 Q70053.0679,2488.2603 70052.437,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="170" x="70066" y="2491.0352">partialResult4MaxMinDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70038" x2="70238" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70045" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="70057" y="2517.1348">val types.MyDecimal</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70045" y="2523.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="70057" y="2530.0898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70038" x2="70238" y1="2536.4102" y2="2536.4102"/><!--MD5=[3678297dc609ca39ea06f055ac9a4ea6]
class aggfuncs.partialResult4MaxMinDuration--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4MaxMinDuration" style="stroke: #A80036; stroke-width: 1.5;" width="205" x="70274.5" y="2470.5"/><ellipse cx="70289.5" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70288.7334,2487.563 Q70286.8823,2486.8574 70286.2266,2486.0813 Q70285.5708,2485.3052 70285.5708,2483.9937 Q70285.5708,2482.3086 70286.6499,2481.3457 Q70287.729,2480.3828 70289.6133,2480.3828 Q70290.4683,2480.3828 70291.3232,2480.5779 Q70292.1782,2480.7729 70293.0166,2481.1548 L70293.0166,2483.5454 Q70292.228,2482.9893 70291.4146,2482.6987 Q70290.6011,2482.4082 70289.8042,2482.4082 Q70288.916,2482.4082 70288.4429,2482.7651 Q70287.9697,2483.1221 70287.9697,2483.7861 Q70287.9697,2484.3008 70288.3142,2484.637 Q70288.6587,2484.9731 70289.7544,2485.3799 L70290.8086,2485.7783 Q70292.3027,2486.3262 70293.0083,2487.231 Q70293.7139,2488.1357 70293.7139,2489.5137 Q70293.7139,2491.3896 70292.6057,2492.3152 Q70291.4976,2493.2407 70289.2563,2493.2407 Q70288.335,2493.2407 70287.4094,2493.0208 Q70286.4839,2492.8008 70285.6206,2492.3691 L70285.6206,2489.8374 Q70286.6001,2490.5347 70287.5173,2490.875 Q70288.4346,2491.2153 70289.3311,2491.2153 Q70290.2358,2491.2153 70290.7339,2490.8044 Q70291.2319,2490.3936 70291.2319,2489.6548 Q70291.2319,2489.0986 70290.8999,2488.6794 Q70290.5679,2488.2603 70289.937,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="173" x="70303.5" y="2491.0352">partialResult4MaxMinDuration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70275.5" x2="70478.5" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70282.5" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="70294.5" y="2517.1348">val types.Duration</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70282.5" y="2523.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="70294.5" y="2530.0898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70275.5" x2="70478.5" y1="2536.4102" y2="2536.4102"/><!--MD5=[1bdb9532ecff95b497219423791f2dfb]
class aggfuncs.partialResult4MaxMinFloat32--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4MaxMinFloat32" style="stroke: #A80036; stroke-width: 1.5;" width="199" x="70514.5" y="2470.5"/><ellipse cx="70529.5" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70528.7334,2487.563 Q70526.8823,2486.8574 70526.2266,2486.0813 Q70525.5708,2485.3052 70525.5708,2483.9937 Q70525.5708,2482.3086 70526.6499,2481.3457 Q70527.729,2480.3828 70529.6133,2480.3828 Q70530.4683,2480.3828 70531.3232,2480.5779 Q70532.1782,2480.7729 70533.0166,2481.1548 L70533.0166,2483.5454 Q70532.228,2482.9893 70531.4146,2482.6987 Q70530.6011,2482.4082 70529.8042,2482.4082 Q70528.916,2482.4082 70528.4429,2482.7651 Q70527.9697,2483.1221 70527.9697,2483.7861 Q70527.9697,2484.3008 70528.3142,2484.637 Q70528.6587,2484.9731 70529.7544,2485.3799 L70530.8086,2485.7783 Q70532.3027,2486.3262 70533.0083,2487.231 Q70533.7139,2488.1357 70533.7139,2489.5137 Q70533.7139,2491.3896 70532.6057,2492.3152 Q70531.4976,2493.2407 70529.2563,2493.2407 Q70528.335,2493.2407 70527.4094,2493.0208 Q70526.4839,2492.8008 70525.6206,2492.3691 L70525.6206,2489.8374 Q70526.6001,2490.5347 70527.5173,2490.875 Q70528.4346,2491.2153 70529.3311,2491.2153 Q70530.2358,2491.2153 70530.7339,2490.8044 Q70531.2319,2490.3936 70531.2319,2489.6548 Q70531.2319,2489.0986 70530.8999,2488.6794 Q70530.5679,2488.2603 70529.937,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="167" x="70543.5" y="2491.0352">partialResult4MaxMinFloat32</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70515.5" x2="70712.5" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70522.5" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="70534.5" y="2517.1348">val float32</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70522.5" y="2523.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="70534.5" y="2530.0898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70515.5" x2="70712.5" y1="2536.4102" y2="2536.4102"/><!--MD5=[301e779cc8051a475223b29b1f3388d2]
class aggfuncs.partialResult4MaxMinFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4MaxMinFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="199" x="70748.5" y="2470.5"/><ellipse cx="70763.5" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70762.7334,2487.563 Q70760.8823,2486.8574 70760.2266,2486.0813 Q70759.5708,2485.3052 70759.5708,2483.9937 Q70759.5708,2482.3086 70760.6499,2481.3457 Q70761.729,2480.3828 70763.6133,2480.3828 Q70764.4683,2480.3828 70765.3232,2480.5779 Q70766.1782,2480.7729 70767.0166,2481.1548 L70767.0166,2483.5454 Q70766.228,2482.9893 70765.4146,2482.6987 Q70764.6011,2482.4082 70763.8042,2482.4082 Q70762.916,2482.4082 70762.4429,2482.7651 Q70761.9697,2483.1221 70761.9697,2483.7861 Q70761.9697,2484.3008 70762.3142,2484.637 Q70762.6587,2484.9731 70763.7544,2485.3799 L70764.8086,2485.7783 Q70766.3027,2486.3262 70767.0083,2487.231 Q70767.7139,2488.1357 70767.7139,2489.5137 Q70767.7139,2491.3896 70766.6057,2492.3152 Q70765.4976,2493.2407 70763.2563,2493.2407 Q70762.335,2493.2407 70761.4094,2493.0208 Q70760.4839,2492.8008 70759.6206,2492.3691 L70759.6206,2489.8374 Q70760.6001,2490.5347 70761.5173,2490.875 Q70762.4346,2491.2153 70763.3311,2491.2153 Q70764.2358,2491.2153 70764.7339,2490.8044 Q70765.2319,2490.3936 70765.2319,2489.6548 Q70765.2319,2489.0986 70764.8999,2488.6794 Q70764.5679,2488.2603 70763.937,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="167" x="70777.5" y="2491.0352">partialResult4MaxMinFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70749.5" x2="70946.5" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70756.5" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="70768.5" y="2517.1348">val float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70756.5" y="2523.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="70768.5" y="2530.0898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70749.5" x2="70946.5" y1="2536.4102" y2="2536.4102"/><!--MD5=[1de4956177de2add7fd2417c37e65c2f]
class aggfuncs.partialResult4MaxMinInt--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4MaxMinInt" style="stroke: #A80036; stroke-width: 1.5;" width="170" x="69638" y="3220"/><ellipse cx="69653" cy="3236" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69652.2334,3237.063 Q69650.3823,3236.3574 69649.7266,3235.5813 Q69649.0708,3234.8052 69649.0708,3233.4937 Q69649.0708,3231.8086 69650.1499,3230.8457 Q69651.229,3229.8828 69653.1133,3229.8828 Q69653.9683,3229.8828 69654.8232,3230.0779 Q69655.6782,3230.2729 69656.5166,3230.6548 L69656.5166,3233.0454 Q69655.728,3232.4893 69654.9146,3232.1987 Q69654.1011,3231.9082 69653.3042,3231.9082 Q69652.416,3231.9082 69651.9429,3232.2651 Q69651.4697,3232.6221 69651.4697,3233.2861 Q69651.4697,3233.8008 69651.8142,3234.137 Q69652.1587,3234.4731 69653.2544,3234.8799 L69654.3086,3235.2783 Q69655.8027,3235.8262 69656.5083,3236.731 Q69657.2139,3237.6357 69657.2139,3239.0137 Q69657.2139,3240.8896 69656.1057,3241.8152 Q69654.9976,3242.7407 69652.7563,3242.7407 Q69651.835,3242.7407 69650.9094,3242.5208 Q69649.9839,3242.3008 69649.1206,3241.8691 L69649.1206,3239.3374 Q69650.1001,3240.0347 69651.0173,3240.375 Q69651.9346,3240.7153 69652.8311,3240.7153 Q69653.7358,3240.7153 69654.2339,3240.3044 Q69654.7319,3239.8936 69654.7319,3239.1548 Q69654.7319,3238.5986 69654.3999,3238.1794 Q69654.0679,3237.7603 69653.437,3237.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="138" x="69667" y="3240.5352">partialResult4MaxMinInt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69639" x2="69807" y1="3252" y2="3252"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69646" y="3260"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="69658" y="3266.6348">val int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69646" y="3272.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="69658" y="3279.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69639" x2="69807" y1="3285.9102" y2="3285.9102"/><!--MD5=[9de0442b641b81d56ebff2debed49635]
class aggfuncs.partialResult4MaxMinJSON--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4MaxMinJSON" style="stroke: #A80036; stroke-width: 1.5;" width="184" x="69843" y="3220"/><ellipse cx="69858" cy="3236" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69857.2334,3237.063 Q69855.3823,3236.3574 69854.7266,3235.5813 Q69854.0708,3234.8052 69854.0708,3233.4937 Q69854.0708,3231.8086 69855.1499,3230.8457 Q69856.229,3229.8828 69858.1133,3229.8828 Q69858.9683,3229.8828 69859.8232,3230.0779 Q69860.6782,3230.2729 69861.5166,3230.6548 L69861.5166,3233.0454 Q69860.728,3232.4893 69859.9146,3232.1987 Q69859.1011,3231.9082 69858.3042,3231.9082 Q69857.416,3231.9082 69856.9429,3232.2651 Q69856.4697,3232.6221 69856.4697,3233.2861 Q69856.4697,3233.8008 69856.8142,3234.137 Q69857.1587,3234.4731 69858.2544,3234.8799 L69859.3086,3235.2783 Q69860.8027,3235.8262 69861.5083,3236.731 Q69862.2139,3237.6357 69862.2139,3239.0137 Q69862.2139,3240.8896 69861.1057,3241.8152 Q69859.9976,3242.7407 69857.7563,3242.7407 Q69856.835,3242.7407 69855.9094,3242.5208 Q69854.9839,3242.3008 69854.1206,3241.8691 L69854.1206,3239.3374 Q69855.1001,3240.0347 69856.0173,3240.375 Q69856.9346,3240.7153 69857.8311,3240.7153 Q69858.7358,3240.7153 69859.2339,3240.3044 Q69859.7319,3239.8936 69859.7319,3239.1548 Q69859.7319,3238.5986 69859.3999,3238.1794 Q69859.0679,3237.7603 69858.437,3237.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="69872" y="3240.5352">partialResult4MaxMinJSON</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69844" x2="70026" y1="3252" y2="3252"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69851" y="3260"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="69863" y="3266.6348">val json.BinaryJSON</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69851" y="3272.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="69863" y="3279.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69844" x2="70026" y1="3285.9102" y2="3285.9102"/><!--MD5=[dd034aa92c66244f38db7057b2a00ca0]
class aggfuncs.partialResult4MaxMinString--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4MaxMinString" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="70062" y="3220"/><ellipse cx="70077" cy="3236" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70076.2334,3237.063 Q70074.3823,3236.3574 70073.7266,3235.5813 Q70073.0708,3234.8052 70073.0708,3233.4937 Q70073.0708,3231.8086 70074.1499,3230.8457 Q70075.229,3229.8828 70077.1133,3229.8828 Q70077.9683,3229.8828 70078.8232,3230.0779 Q70079.6782,3230.2729 70080.5166,3230.6548 L70080.5166,3233.0454 Q70079.728,3232.4893 70078.9146,3232.1987 Q70078.1011,3231.9082 70077.3042,3231.9082 Q70076.416,3231.9082 70075.9429,3232.2651 Q70075.4697,3232.6221 70075.4697,3233.2861 Q70075.4697,3233.8008 70075.8142,3234.137 Q70076.1587,3234.4731 70077.2544,3234.8799 L70078.3086,3235.2783 Q70079.8027,3235.8262 70080.5083,3236.731 Q70081.2139,3237.6357 70081.2139,3239.0137 Q70081.2139,3240.8896 70080.1057,3241.8152 Q70078.9976,3242.7407 70076.7563,3242.7407 Q70075.835,3242.7407 70074.9094,3242.5208 Q70073.9839,3242.3008 70073.1206,3241.8691 L70073.1206,3239.3374 Q70074.1001,3240.0347 70075.0173,3240.375 Q70075.9346,3240.7153 70076.8311,3240.7153 Q70077.7358,3240.7153 70078.2339,3240.3044 Q70078.7319,3239.8936 70078.7319,3239.1548 Q70078.7319,3238.5986 70078.3999,3238.1794 Q70078.0679,3237.7603 70077.437,3237.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="70091" y="3240.5352">partialResult4MaxMinString</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70063" x2="70249" y1="3252" y2="3252"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70070" y="3260"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="70082" y="3266.6348">val string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70070" y="3272.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="70082" y="3279.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70063" x2="70249" y1="3285.9102" y2="3285.9102"/><!--MD5=[12b3804dabe18b946e4909a15805d2d3]
class aggfuncs.partialResult4MaxMinUint--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4MaxMinUint" style="stroke: #A80036; stroke-width: 1.5;" width="178" x="70285" y="3220"/><ellipse cx="70300" cy="3236" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70299.2334,3237.063 Q70297.3823,3236.3574 70296.7266,3235.5813 Q70296.0708,3234.8052 70296.0708,3233.4937 Q70296.0708,3231.8086 70297.1499,3230.8457 Q70298.229,3229.8828 70300.1133,3229.8828 Q70300.9683,3229.8828 70301.8232,3230.0779 Q70302.6782,3230.2729 70303.5166,3230.6548 L70303.5166,3233.0454 Q70302.728,3232.4893 70301.9146,3232.1987 Q70301.1011,3231.9082 70300.3042,3231.9082 Q70299.416,3231.9082 70298.9429,3232.2651 Q70298.4697,3232.6221 70298.4697,3233.2861 Q70298.4697,3233.8008 70298.8142,3234.137 Q70299.1587,3234.4731 70300.2544,3234.8799 L70301.3086,3235.2783 Q70302.8027,3235.8262 70303.5083,3236.731 Q70304.2139,3237.6357 70304.2139,3239.0137 Q70304.2139,3240.8896 70303.1057,3241.8152 Q70301.9976,3242.7407 70299.7563,3242.7407 Q70298.835,3242.7407 70297.9094,3242.5208 Q70296.9839,3242.3008 70296.1206,3241.8691 L70296.1206,3239.3374 Q70297.1001,3240.0347 70298.0173,3240.375 Q70298.9346,3240.7153 70299.8311,3240.7153 Q70300.7358,3240.7153 70301.2339,3240.3044 Q70301.7319,3239.8936 70301.7319,3239.1548 Q70301.7319,3238.5986 70301.3999,3238.1794 Q70301.0679,3237.7603 70300.437,3237.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="146" x="70314" y="3240.5352">partialResult4MaxMinUint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70286" x2="70462" y1="3252" y2="3252"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70293" y="3260"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="70305" y="3266.6348">val uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70293" y="3272.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="70305" y="3279.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70286" x2="70462" y1="3285.9102" y2="3285.9102"/><!--MD5=[699214df3c248805efc569f8fdd2eee7]
class aggfuncs.partialResult4NthValue--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4NthValue" style="stroke: #A80036; stroke-width: 1.5;" width="164" x="70498" y="3220"/><ellipse cx="70513" cy="3236" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70512.2334,3237.063 Q70510.3823,3236.3574 70509.7266,3235.5813 Q70509.0708,3234.8052 70509.0708,3233.4937 Q70509.0708,3231.8086 70510.1499,3230.8457 Q70511.229,3229.8828 70513.1133,3229.8828 Q70513.9683,3229.8828 70514.8232,3230.0779 Q70515.6782,3230.2729 70516.5166,3230.6548 L70516.5166,3233.0454 Q70515.728,3232.4893 70514.9146,3232.1987 Q70514.1011,3231.9082 70513.3042,3231.9082 Q70512.416,3231.9082 70511.9429,3232.2651 Q70511.4697,3232.6221 70511.4697,3233.2861 Q70511.4697,3233.8008 70511.8142,3234.137 Q70512.1587,3234.4731 70513.2544,3234.8799 L70514.3086,3235.2783 Q70515.8027,3235.8262 70516.5083,3236.731 Q70517.2139,3237.6357 70517.2139,3239.0137 Q70517.2139,3240.8896 70516.1057,3241.8152 Q70514.9976,3242.7407 70512.7563,3242.7407 Q70511.835,3242.7407 70510.9094,3242.5208 Q70509.9839,3242.3008 70509.1206,3241.8691 L70509.1206,3239.3374 Q70510.1001,3240.0347 70511.0173,3240.375 Q70511.9346,3240.7153 70512.8311,3240.7153 Q70513.7358,3240.7153 70514.2339,3240.3044 Q70514.7319,3239.8936 70514.7319,3239.1548 Q70514.7319,3238.5986 70514.3999,3238.1794 Q70514.0679,3237.7603 70513.437,3237.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="132" x="70527" y="3240.5352">partialResult4NthValue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70499" x2="70661" y1="3252" y2="3252"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70506" y="3260"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="70518" y="3266.6348">seenRows uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70506" y="3272.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="70518" y="3279.5898">evaluator valueEvaluator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70499" x2="70661" y1="3285.9102" y2="3285.9102"/><!--MD5=[9e3955205ff182e5f34ed2fe34bd6a76]
class aggfuncs.partialResult4Ntile--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.partialResult4Ntile" style="stroke: #A80036; stroke-width: 1.5;" width="138" x="70697" y="3200.5"/><ellipse cx="70712" cy="3216.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70711.2334,3217.563 Q70709.3823,3216.8574 70708.7266,3216.0813 Q70708.0708,3215.3052 70708.0708,3213.9937 Q70708.0708,3212.3086 70709.1499,3211.3457 Q70710.229,3210.3828 70712.1133,3210.3828 Q70712.9683,3210.3828 70713.8232,3210.5779 Q70714.6782,3210.7729 70715.5166,3211.1548 L70715.5166,3213.5454 Q70714.728,3212.9893 70713.9146,3212.6987 Q70713.1011,3212.4082 70712.3042,3212.4082 Q70711.416,3212.4082 70710.9429,3212.7651 Q70710.4697,3213.1221 70710.4697,3213.7861 Q70710.4697,3214.3008 70710.8142,3214.637 Q70711.1587,3214.9731 70712.2544,3215.3799 L70713.3086,3215.7783 Q70714.8027,3216.3262 70715.5083,3217.231 Q70716.2139,3218.1357 70716.2139,3219.5137 Q70716.2139,3221.3896 70715.1057,3222.3152 Q70713.9976,3223.2407 70711.7563,3223.2407 Q70710.835,3223.2407 70709.9094,3223.0208 Q70708.9839,3222.8008 70708.1206,3222.3691 L70708.1206,3219.8374 Q70709.1001,3220.5347 70710.0173,3220.875 Q70710.9346,3221.2153 70711.8311,3221.2153 Q70712.7358,3221.2153 70713.2339,3220.8044 Q70713.7319,3220.3936 70713.7319,3219.6548 Q70713.7319,3219.0986 70713.3999,3218.6794 Q70713.0679,3218.2603 70712.437,3218.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="70726" y="3221.0352">partialResult4Ntile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70698" x2="70834" y1="3232.5" y2="3232.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70705" y="3240.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="70717" y="3247.1348">curIdx uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70705" y="3253.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="70717" y="3260.0898">curGroupIdx uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70705" y="3266.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="70717" y="3273.0449">remainder uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70705" y="3279.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="70717" y="3286">quotient uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70705" y="3292.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="70717" y="3298.9551">numRows uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70698" x2="70834" y1="3305.2754" y2="3305.2754"/><!--MD5=[a1e7b5e6eb1c6f21daca9b46f2282969]
class aggfuncs.partialResult4Rank--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.partialResult4Rank" style="stroke: #A80036; stroke-width: 1.5;" width="141" x="69641.5" y="3619.5"/><ellipse cx="69656.5" cy="3635.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69655.7334,3636.563 Q69653.8823,3635.8574 69653.2266,3635.0813 Q69652.5708,3634.3052 69652.5708,3632.9937 Q69652.5708,3631.3086 69653.6499,3630.3457 Q69654.729,3629.3828 69656.6133,3629.3828 Q69657.4683,3629.3828 69658.3232,3629.5779 Q69659.1782,3629.7729 69660.0166,3630.1548 L69660.0166,3632.5454 Q69659.228,3631.9893 69658.4146,3631.6987 Q69657.6011,3631.4082 69656.8042,3631.4082 Q69655.916,3631.4082 69655.4429,3631.7651 Q69654.9697,3632.1221 69654.9697,3632.7861 Q69654.9697,3633.3008 69655.3142,3633.637 Q69655.6587,3633.9731 69656.7544,3634.3799 L69657.8086,3634.7783 Q69659.3027,3635.3262 69660.0083,3636.231 Q69660.7139,3637.1357 69660.7139,3638.5137 Q69660.7139,3640.3896 69659.6057,3641.3152 Q69658.4976,3642.2407 69656.2563,3642.2407 Q69655.335,3642.2407 69654.4094,3642.0208 Q69653.4839,3641.8008 69652.6206,3641.3691 L69652.6206,3638.8374 Q69653.6001,3639.5347 69654.5173,3639.875 Q69655.4346,3640.2153 69656.3311,3640.2153 Q69657.2358,3640.2153 69657.7339,3639.8044 Q69658.2319,3639.3936 69658.2319,3638.6548 Q69658.2319,3638.0986 69657.8999,3637.6794 Q69657.5679,3637.2603 69656.937,3637.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="69670.5" y="3640.0352">partialResult4Rank</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69642.5" x2="69781.5" y1="3651.5" y2="3651.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69649.5" y="3659.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="69661.5" y="3666.1348">curIdx int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69649.5" y="3672.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="69661.5" y="3679.0898">lastRank int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69649.5" y="3685.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="69661.5" y="3692.0449">rows []chunk.Row</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69642.5" x2="69781.5" y1="3698.3652" y2="3698.3652"/><!--MD5=[bb6337218e7d5ca1928f442169865f69]
class aggfuncs.partialResult4RowNumber--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.partialResult4RowNumber" style="stroke: #A80036; stroke-width: 1.5;" width="183" x="69817.5" y="3632.5"/><ellipse cx="69832.5" cy="3648.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69831.7334,3649.563 Q69829.8823,3648.8574 69829.2266,3648.0813 Q69828.5708,3647.3052 69828.5708,3645.9937 Q69828.5708,3644.3086 69829.6499,3643.3457 Q69830.729,3642.3828 69832.6133,3642.3828 Q69833.4683,3642.3828 69834.3232,3642.5779 Q69835.1782,3642.7729 69836.0166,3643.1548 L69836.0166,3645.5454 Q69835.228,3644.9893 69834.4146,3644.6987 Q69833.6011,3644.4082 69832.8042,3644.4082 Q69831.916,3644.4082 69831.4429,3644.7651 Q69830.9697,3645.1221 69830.9697,3645.7861 Q69830.9697,3646.3008 69831.3142,3646.637 Q69831.6587,3646.9731 69832.7544,3647.3799 L69833.8086,3647.7783 Q69835.3027,3648.3262 69836.0083,3649.231 Q69836.7139,3650.1357 69836.7139,3651.5137 Q69836.7139,3653.3896 69835.6057,3654.3152 Q69834.4976,3655.2407 69832.2563,3655.2407 Q69831.335,3655.2407 69830.4094,3655.0208 Q69829.4839,3654.8008 69828.6206,3654.3691 L69828.6206,3651.8374 Q69829.6001,3652.5347 69830.5173,3652.875 Q69831.4346,3653.2153 69832.3311,3653.2153 Q69833.2358,3653.2153 69833.7339,3652.8044 Q69834.2319,3652.3936 69834.2319,3651.6548 Q69834.2319,3651.0986 69833.8999,3650.6794 Q69833.5679,3650.2603 69832.937,3650.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="69846.5" y="3653.0352">partialResult4RowNumber</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69818.5" x2="69999.5" y1="3664.5" y2="3664.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69825.5" y="3672.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="69837.5" y="3679.1348">curIdx int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69818.5" x2="69999.5" y1="3685.4551" y2="3685.4551"/><!--MD5=[0865f5d55bf3c33e4ead3f132f5334ca]
class aggfuncs.partialResult4SumDecimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4SumDecimal" style="stroke: #A80036; stroke-width: 1.5;" width="182" x="70036" y="3626"/><ellipse cx="70051" cy="3642" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70050.2334,3643.063 Q70048.3823,3642.3574 70047.7266,3641.5813 Q70047.0708,3640.8052 70047.0708,3639.4937 Q70047.0708,3637.8086 70048.1499,3636.8457 Q70049.229,3635.8828 70051.1133,3635.8828 Q70051.9683,3635.8828 70052.8232,3636.0779 Q70053.6782,3636.2729 70054.5166,3636.6548 L70054.5166,3639.0454 Q70053.728,3638.4893 70052.9146,3638.1987 Q70052.1011,3637.9082 70051.3042,3637.9082 Q70050.416,3637.9082 70049.9429,3638.2651 Q70049.4697,3638.6221 70049.4697,3639.2861 Q70049.4697,3639.8008 70049.8142,3640.137 Q70050.1587,3640.4731 70051.2544,3640.8799 L70052.3086,3641.2783 Q70053.8027,3641.8262 70054.5083,3642.731 Q70055.2139,3643.6357 70055.2139,3645.0137 Q70055.2139,3646.8896 70054.1057,3647.8152 Q70052.9976,3648.7407 70050.7563,3648.7407 Q70049.835,3648.7407 70048.9094,3648.5208 Q70047.9839,3648.3008 70047.1206,3647.8691 L70047.1206,3645.3374 Q70048.1001,3646.0347 70049.0173,3646.375 Q70049.9346,3646.7153 70050.8311,3646.7153 Q70051.7358,3646.7153 70052.2339,3646.3044 Q70052.7319,3645.8936 70052.7319,3645.1548 Q70052.7319,3644.5986 70052.3999,3644.1794 Q70052.0679,3643.7603 70051.437,3643.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="150" x="70065" y="3646.5352">partialResult4SumDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70037" x2="70217" y1="3658" y2="3658"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70044" y="3666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="70056" y="3672.6348">val types.MyDecimal</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70044" y="3678.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="70056" y="3685.5898">notNullRowCount int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70037" x2="70217" y1="3691.9102" y2="3691.9102"/><!--MD5=[d2bbf478e1ea0b8e7fef15c2eb29a9da]
class aggfuncs.partialResult4SumDistinctDecimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.partialResult4SumDistinctDecimal" style="stroke: #A80036; stroke-width: 1.5;" width="224" x="70253" y="3619.5"/><ellipse cx="70268" cy="3635.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70267.2334,3636.563 Q70265.3823,3635.8574 70264.7266,3635.0813 Q70264.0708,3634.3052 70264.0708,3632.9937 Q70264.0708,3631.3086 70265.1499,3630.3457 Q70266.229,3629.3828 70268.1133,3629.3828 Q70268.9683,3629.3828 70269.8232,3629.5779 Q70270.6782,3629.7729 70271.5166,3630.1548 L70271.5166,3632.5454 Q70270.728,3631.9893 70269.9146,3631.6987 Q70269.1011,3631.4082 70268.3042,3631.4082 Q70267.416,3631.4082 70266.9429,3631.7651 Q70266.4697,3632.1221 70266.4697,3632.7861 Q70266.4697,3633.3008 70266.8142,3633.637 Q70267.1587,3633.9731 70268.2544,3634.3799 L70269.3086,3634.7783 Q70270.8027,3635.3262 70271.5083,3636.231 Q70272.2139,3637.1357 70272.2139,3638.5137 Q70272.2139,3640.3896 70271.1057,3641.3152 Q70269.9976,3642.2407 70267.7563,3642.2407 Q70266.835,3642.2407 70265.9094,3642.0208 Q70264.9839,3641.8008 70264.1206,3641.3691 L70264.1206,3638.8374 Q70265.1001,3639.5347 70266.0173,3639.875 Q70266.9346,3640.2153 70267.8311,3640.2153 Q70268.7358,3640.2153 70269.2339,3639.8044 Q70269.7319,3639.3936 70269.7319,3638.6548 Q70269.7319,3638.0986 70269.3999,3637.6794 Q70269.0679,3637.2603 70268.437,3637.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="192" x="70282" y="3640.0352">partialResult4SumDistinctDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70254" x2="70476" y1="3651.5" y2="3651.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70261" y="3659.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="70273" y="3666.1348">val types.MyDecimal</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70261" y="3672.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="70273" y="3679.0898">isNull bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70261" y="3685.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="70273" y="3692.0449">valSet set.StringSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70254" x2="70476" y1="3698.3652" y2="3698.3652"/><!--MD5=[ab5ba61e43dfafca2f8638690a322380]
class aggfuncs.partialResult4SumDistinctFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.partialResult4SumDistinctFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="221" x="70512.5" y="3619.5"/><ellipse cx="70527.5" cy="3635.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70526.7334,3636.563 Q70524.8823,3635.8574 70524.2266,3635.0813 Q70523.5708,3634.3052 70523.5708,3632.9937 Q70523.5708,3631.3086 70524.6499,3630.3457 Q70525.729,3629.3828 70527.6133,3629.3828 Q70528.4683,3629.3828 70529.3232,3629.5779 Q70530.1782,3629.7729 70531.0166,3630.1548 L70531.0166,3632.5454 Q70530.228,3631.9893 70529.4146,3631.6987 Q70528.6011,3631.4082 70527.8042,3631.4082 Q70526.916,3631.4082 70526.4429,3631.7651 Q70525.9697,3632.1221 70525.9697,3632.7861 Q70525.9697,3633.3008 70526.3142,3633.637 Q70526.6587,3633.9731 70527.7544,3634.3799 L70528.8086,3634.7783 Q70530.3027,3635.3262 70531.0083,3636.231 Q70531.7139,3637.1357 70531.7139,3638.5137 Q70531.7139,3640.3896 70530.6057,3641.3152 Q70529.4976,3642.2407 70527.2563,3642.2407 Q70526.335,3642.2407 70525.4094,3642.0208 Q70524.4839,3641.8008 70523.6206,3641.3691 L70523.6206,3638.8374 Q70524.6001,3639.5347 70525.5173,3639.875 Q70526.4346,3640.2153 70527.3311,3640.2153 Q70528.2358,3640.2153 70528.7339,3639.8044 Q70529.2319,3639.3936 70529.2319,3638.6548 Q70529.2319,3638.0986 70528.8999,3637.6794 Q70528.5679,3637.2603 70527.937,3637.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="189" x="70541.5" y="3640.0352">partialResult4SumDistinctFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70513.5" x2="70732.5" y1="3651.5" y2="3651.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70520.5" y="3659.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="70532.5" y="3666.1348">val float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70520.5" y="3672.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="70532.5" y="3679.0898">isNull bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70520.5" y="3685.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="70532.5" y="3692.0449">valSet set.Float64Set</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70513.5" x2="70732.5" y1="3698.3652" y2="3698.3652"/><!--MD5=[9905253681c75c48523309297b1dcaa6]
class aggfuncs.partialResult4SumFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4SumFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="179" x="70768.5" y="3626"/><ellipse cx="70783.5" cy="3642" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70782.7334,3643.063 Q70780.8823,3642.3574 70780.2266,3641.5813 Q70779.5708,3640.8052 70779.5708,3639.4937 Q70779.5708,3637.8086 70780.6499,3636.8457 Q70781.729,3635.8828 70783.6133,3635.8828 Q70784.4683,3635.8828 70785.3232,3636.0779 Q70786.1782,3636.2729 70787.0166,3636.6548 L70787.0166,3639.0454 Q70786.228,3638.4893 70785.4146,3638.1987 Q70784.6011,3637.9082 70783.8042,3637.9082 Q70782.916,3637.9082 70782.4429,3638.2651 Q70781.9697,3638.6221 70781.9697,3639.2861 Q70781.9697,3639.8008 70782.3142,3640.137 Q70782.6587,3640.4731 70783.7544,3640.8799 L70784.8086,3641.2783 Q70786.3027,3641.8262 70787.0083,3642.731 Q70787.7139,3643.6357 70787.7139,3645.0137 Q70787.7139,3646.8896 70786.6057,3647.8152 Q70785.4976,3648.7407 70783.2563,3648.7407 Q70782.335,3648.7407 70781.4094,3648.5208 Q70780.4839,3648.3008 70779.6206,3647.8691 L70779.6206,3645.3374 Q70780.6001,3646.0347 70781.5173,3646.375 Q70782.4346,3646.7153 70783.3311,3646.7153 Q70784.2358,3646.7153 70784.7339,3646.3044 Q70785.2319,3645.8936 70785.2319,3645.1548 Q70785.2319,3644.5986 70784.8999,3644.1794 Q70784.5679,3643.7603 70783.937,3643.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="147" x="70797.5" y="3646.5352">partialResult4SumFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70769.5" x2="70946.5" y1="3658" y2="3658"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70776.5" y="3666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="70788.5" y="3672.6348">val float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70776.5" y="3678.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="70788.5" y="3685.5898">notNullRowCount int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70769.5" x2="70946.5" y1="3691.9102" y2="3691.9102"/><!--MD5=[d0f2e9753043b7afbf1d896b6bf4423d]
class aggfuncs.partialResult4Time--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.partialResult4Time" style="stroke: #A80036; stroke-width: 1.5;" width="141" x="69641.5" y="3947.5"/><ellipse cx="69656.5" cy="3963.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69655.7334,3964.563 Q69653.8823,3963.8574 69653.2266,3963.0813 Q69652.5708,3962.3052 69652.5708,3960.9937 Q69652.5708,3959.3086 69653.6499,3958.3457 Q69654.729,3957.3828 69656.6133,3957.3828 Q69657.4683,3957.3828 69658.3232,3957.5779 Q69659.1782,3957.7729 69660.0166,3958.1548 L69660.0166,3960.5454 Q69659.228,3959.9893 69658.4146,3959.6987 Q69657.6011,3959.4082 69656.8042,3959.4082 Q69655.916,3959.4082 69655.4429,3959.7651 Q69654.9697,3960.1221 69654.9697,3960.7861 Q69654.9697,3961.3008 69655.3142,3961.637 Q69655.6587,3961.9731 69656.7544,3962.3799 L69657.8086,3962.7783 Q69659.3027,3963.3262 69660.0083,3964.231 Q69660.7139,3965.1357 69660.7139,3966.5137 Q69660.7139,3968.3896 69659.6057,3969.3152 Q69658.4976,3970.2407 69656.2563,3970.2407 Q69655.335,3970.2407 69654.4094,3970.0208 Q69653.4839,3969.8008 69652.6206,3969.3691 L69652.6206,3966.8374 Q69653.6001,3967.5347 69654.5173,3967.875 Q69655.4346,3968.2153 69656.3311,3968.2153 Q69657.2358,3968.2153 69657.7339,3967.8044 Q69658.2319,3967.3936 69658.2319,3966.6548 Q69658.2319,3966.0986 69657.8999,3965.6794 Q69657.5679,3965.2603 69656.937,3965.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="69670.5" y="3968.0352">partialResult4Time</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69642.5" x2="69781.5" y1="3979.5" y2="3979.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69649.5" y="3987.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="69661.5" y="3994.1348">val types.Time</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69649.5" y="4000.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="69661.5" y="4007.0898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69642.5" x2="69781.5" y1="4013.4102" y2="4013.4102"/><!--MD5=[6eb7f38956d4b5c7e74c551fd4275bcc]
class aggfuncs.partialResult4VarPopDistinctFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.partialResult4VarPopDistinctFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="239" x="69817.5" y="3934.5"/><ellipse cx="69832.5" cy="3950.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M69831.7334,3951.563 Q69829.8823,3950.8574 69829.2266,3950.0813 Q69828.5708,3949.3052 69828.5708,3947.9937 Q69828.5708,3946.3086 69829.6499,3945.3457 Q69830.729,3944.3828 69832.6133,3944.3828 Q69833.4683,3944.3828 69834.3232,3944.5779 Q69835.1782,3944.7729 69836.0166,3945.1548 L69836.0166,3947.5454 Q69835.228,3946.9893 69834.4146,3946.6987 Q69833.6011,3946.4082 69832.8042,3946.4082 Q69831.916,3946.4082 69831.4429,3946.7651 Q69830.9697,3947.1221 69830.9697,3947.7861 Q69830.9697,3948.3008 69831.3142,3948.637 Q69831.6587,3948.9731 69832.7544,3949.3799 L69833.8086,3949.7783 Q69835.3027,3950.3262 69836.0083,3951.231 Q69836.7139,3952.1357 69836.7139,3953.5137 Q69836.7139,3955.3896 69835.6057,3956.3152 Q69834.4976,3957.2407 69832.2563,3957.2407 Q69831.335,3957.2407 69830.4094,3957.0208 Q69829.4839,3956.8008 69828.6206,3956.3691 L69828.6206,3953.8374 Q69829.6001,3954.5347 69830.5173,3954.875 Q69831.4346,3955.2153 69832.3311,3955.2153 Q69833.2358,3955.2153 69833.7339,3954.8044 Q69834.2319,3954.3936 69834.2319,3953.6548 Q69834.2319,3953.0986 69833.8999,3952.6794 Q69833.5679,3952.2603 69832.937,3952.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="207" x="69846.5" y="3955.0352">partialResult4VarPopDistinctFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69818.5" x2="70055.5" y1="3966.5" y2="3966.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69825.5" y="3974.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="69837.5" y="3981.1348">count int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69825.5" y="3987.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="69837.5" y="3994.0898">sum float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69825.5" y="4000.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="69837.5" y="4007.0449">variance float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="69825.5" y="4013.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="69837.5" y="4020">valSet set.Float64Set</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="69818.5" x2="70055.5" y1="4026.3203" y2="4026.3203"/><!--MD5=[00909117356411a7a7676e53773227c2]
class aggfuncs.partialResult4VarPopFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.partialResult4VarPopFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="197" x="70091.5" y="3941"/><ellipse cx="70106.5" cy="3957" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70105.7334,3958.063 Q70103.8823,3957.3574 70103.2266,3956.5813 Q70102.5708,3955.8052 70102.5708,3954.4937 Q70102.5708,3952.8086 70103.6499,3951.8457 Q70104.729,3950.8828 70106.6133,3950.8828 Q70107.4683,3950.8828 70108.3232,3951.0779 Q70109.1782,3951.2729 70110.0166,3951.6548 L70110.0166,3954.0454 Q70109.228,3953.4893 70108.4146,3953.1987 Q70107.6011,3952.9082 70106.8042,3952.9082 Q70105.916,3952.9082 70105.4429,3953.2651 Q70104.9697,3953.6221 70104.9697,3954.2861 Q70104.9697,3954.8008 70105.3142,3955.137 Q70105.6587,3955.4731 70106.7544,3955.8799 L70107.8086,3956.2783 Q70109.3027,3956.8262 70110.0083,3957.731 Q70110.7139,3958.6357 70110.7139,3960.0137 Q70110.7139,3961.8896 70109.6057,3962.8152 Q70108.4976,3963.7407 70106.2563,3963.7407 Q70105.335,3963.7407 70104.4094,3963.5208 Q70103.4839,3963.3008 70102.6206,3962.8691 L70102.6206,3960.3374 Q70103.6001,3961.0347 70104.5173,3961.375 Q70105.4346,3961.7153 70106.3311,3961.7153 Q70107.2358,3961.7153 70107.7339,3961.3044 Q70108.2319,3960.8936 70108.2319,3960.1548 Q70108.2319,3959.5986 70107.8999,3959.1794 Q70107.5679,3958.7603 70106.937,3958.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="165" x="70120.5" y="3961.5352">partialResult4VarPopFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70092.5" x2="70287.5" y1="3973" y2="3973"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70099.5" y="3981"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="70111.5" y="3987.6348">count int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70099.5" y="3993.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="70111.5" y="4000.5898">sum float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70099.5" y="4006.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="70111.5" y="4013.5449">variance float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70092.5" x2="70287.5" y1="4019.8652" y2="4019.8652"/><!--MD5=[00ed9735f4b57349289aca48d3d41424]
class aggfuncs.percentRank--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.percentRank" style="stroke: #A80036; stroke-width: 1.5;" width="553" x="46602.5" y="1676"/><ellipse cx="46838.25" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M46837.4834,1693.063 Q46835.6323,1692.3574 46834.9766,1691.5813 Q46834.3208,1690.8052 46834.3208,1689.4937 Q46834.3208,1687.8086 46835.3999,1686.8457 Q46836.479,1685.8828 46838.3633,1685.8828 Q46839.2183,1685.8828 46840.0732,1686.0779 Q46840.9282,1686.2729 46841.7666,1686.6548 L46841.7666,1689.0454 Q46840.978,1688.4893 46840.1646,1688.1987 Q46839.3511,1687.9082 46838.5542,1687.9082 Q46837.666,1687.9082 46837.1929,1688.2651 Q46836.7197,1688.6221 46836.7197,1689.2861 Q46836.7197,1689.8008 46837.0642,1690.137 Q46837.4087,1690.4731 46838.5044,1690.8799 L46839.5586,1691.2783 Q46841.0527,1691.8262 46841.7583,1692.731 Q46842.4639,1693.6357 46842.4639,1695.0137 Q46842.4639,1696.8896 46841.3557,1697.8152 Q46840.2476,1698.7407 46838.0063,1698.7407 Q46837.085,1698.7407 46836.1594,1698.5208 Q46835.2339,1698.3008 46834.3706,1697.8691 L46834.3706,1695.3374 Q46835.3501,1696.0347 46836.2673,1696.375 Q46837.1846,1696.7153 46838.0811,1696.7153 Q46838.9858,1696.7153 46839.4839,1696.3044 Q46839.9819,1695.8936 46839.9819,1695.1548 Q46839.9819,1694.5986 46839.6499,1694.1794 Q46839.3179,1693.7603 46838.687,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="46858.75" y="1696.5352">percentRank</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="46603.5" x2="47154.5" y1="1708" y2="1708"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="46603.5" x2="47154.5" y1="1716" y2="1716"/><ellipse cx="46613.5" cy="1727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="46622.5" y="1730.6348">AllocPartialResult() PartialResult</text><ellipse cx="46613.5" cy="1739.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="46622.5" y="1743.5898">ResetPartialResult(partial PartialResult)</text><ellipse cx="46613.5" cy="1752.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="527" x="46622.5" y="1756.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, partial PartialResult) error</text><ellipse cx="46613.5" cy="1765.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="46622.5" y="1769.5">AppendFinalResult2Chunk(sctx sessionctx.Context, partial PartialResult, chk *chunk.Chunk) error</text><!--MD5=[e921cc19a2093cf4f7a80449b82fb5f5]
class aggfuncs.rank--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.rank" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="45470.5" y="1669.5"/><ellipse cx="45718.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M45717.9834,1686.563 Q45716.1323,1685.8574 45715.4766,1685.0813 Q45714.8208,1684.3052 45714.8208,1682.9937 Q45714.8208,1681.3086 45715.8999,1680.3457 Q45716.979,1679.3828 45718.8633,1679.3828 Q45719.7183,1679.3828 45720.5732,1679.5779 Q45721.4282,1679.7729 45722.2666,1680.1548 L45722.2666,1682.5454 Q45721.478,1681.9893 45720.6646,1681.6987 Q45719.8511,1681.4082 45719.0542,1681.4082 Q45718.166,1681.4082 45717.6929,1681.7651 Q45717.2197,1682.1221 45717.2197,1682.7861 Q45717.2197,1683.3008 45717.5642,1683.637 Q45717.9087,1683.9731 45719.0044,1684.3799 L45720.0586,1684.7783 Q45721.5527,1685.3262 45722.2583,1686.231 Q45722.9639,1687.1357 45722.9639,1688.5137 Q45722.9639,1690.3896 45721.8557,1691.3152 Q45720.7476,1692.2407 45718.5063,1692.2407 Q45717.585,1692.2407 45716.6594,1692.0208 Q45715.7339,1691.8008 45714.8706,1691.3691 L45714.8706,1688.8374 Q45715.8501,1689.5347 45716.7673,1689.875 Q45717.6846,1690.2153 45718.5811,1690.2153 Q45719.4858,1690.2153 45719.9839,1689.8044 Q45720.4819,1689.3936 45720.4819,1688.6548 Q45720.4819,1688.0986 45720.1499,1687.6794 Q45719.8179,1687.2603 45719.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="26" x="45739.25" y="1690.0352">rank</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="45471.5" x2="46000.5" y1="1701.5" y2="1701.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="45478.5" y="1709.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="45490.5" y="1716.1348">isDense bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="45471.5" x2="46000.5" y1="1722.4551" y2="1722.4551"/><ellipse cx="45481.5" cy="1733.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="45490.5" y="1737.0898">AllocPartialResult() PartialResult</text><ellipse cx="45481.5" cy="1746.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="45490.5" y="1750.0449">ResetPartialResult(pr PartialResult)</text><ellipse cx="45481.5" cy="1759.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="45490.5" y="1763">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="45481.5" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="45490.5" y="1775.9551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[85a7bac4481a0a95952c6455d0ff377d]
class aggfuncs.rowComparer--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="aggfuncs.rowComparer" style="stroke: #A80036; stroke-width: 1.5;" width="301" x="46151.5" y="745.5"/><ellipse cx="46258.25" cy="761.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M46257.4834,762.563 Q46255.6323,761.8574 46254.9766,761.0813 Q46254.3208,760.3052 46254.3208,758.9937 Q46254.3208,757.3086 46255.3999,756.3457 Q46256.479,755.3828 46258.3633,755.3828 Q46259.2183,755.3828 46260.0732,755.5779 Q46260.9282,755.7729 46261.7666,756.1548 L46261.7666,758.5454 Q46260.978,757.9893 46260.1646,757.6987 Q46259.3511,757.4082 46258.5542,757.4082 Q46257.666,757.4082 46257.1929,757.7651 Q46256.7197,758.1221 46256.7197,758.7861 Q46256.7197,759.3008 46257.0642,759.637 Q46257.4087,759.9731 46258.5044,760.3799 L46259.5586,760.7783 Q46261.0527,761.3262 46261.7583,762.231 Q46262.4639,763.1357 46262.4639,764.5137 Q46262.4639,766.3896 46261.3557,767.3152 Q46260.2476,768.2407 46258.0063,768.2407 Q46257.085,768.2407 46256.1594,768.0208 Q46255.2339,767.8008 46254.3706,767.3691 L46254.3706,764.8374 Q46255.3501,765.5347 46256.2673,765.875 Q46257.1846,766.2153 46258.0811,766.2153 Q46258.9858,766.2153 46259.4839,765.8044 Q46259.9819,765.3936 46259.9819,764.6548 Q46259.9819,764.0986 46259.6499,763.6794 Q46259.3179,763.2603 46258.687,763.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="46278.75" y="766.0352">rowComparer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="46152.5" x2="46451.5" y1="777.5" y2="777.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46159.5" y="785.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="46171.5" y="792.1348">cmpFuncs []chunk.CompareFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46159.5" y="798.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="46171.5" y="805.0898">colIdx []int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="46152.5" x2="46451.5" y1="811.4102" y2="811.4102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46159.5" y="819.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="46171.5" y="826.0449">compareRows(prev chunk.Row, curr chunk.Row) int</text><!--MD5=[9b9485e540899175dce39417f56640a8]
class aggfuncs.rowNumber--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.rowNumber" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="48306.5" y="1676"/><ellipse cx="48533.75" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M48532.9834,1693.063 Q48531.1323,1692.3574 48530.4766,1691.5813 Q48529.8208,1690.8052 48529.8208,1689.4937 Q48529.8208,1687.8086 48530.8999,1686.8457 Q48531.979,1685.8828 48533.8633,1685.8828 Q48534.7183,1685.8828 48535.5732,1686.0779 Q48536.4282,1686.2729 48537.2666,1686.6548 L48537.2666,1689.0454 Q48536.478,1688.4893 48535.6646,1688.1987 Q48534.8511,1687.9082 48534.0542,1687.9082 Q48533.166,1687.9082 48532.6929,1688.2651 Q48532.2197,1688.6221 48532.2197,1689.2861 Q48532.2197,1689.8008 48532.5642,1690.137 Q48532.9087,1690.4731 48534.0044,1690.8799 L48535.0586,1691.2783 Q48536.5527,1691.8262 48537.2583,1692.731 Q48537.9639,1693.6357 48537.9639,1695.0137 Q48537.9639,1696.8896 48536.8557,1697.8152 Q48535.7476,1698.7407 48533.5063,1698.7407 Q48532.585,1698.7407 48531.6594,1698.5208 Q48530.7339,1698.3008 48529.8706,1697.8691 L48529.8706,1695.3374 Q48530.8501,1696.0347 48531.7673,1696.375 Q48532.6846,1696.7153 48533.5811,1696.7153 Q48534.4858,1696.7153 48534.9839,1696.3044 Q48535.4819,1695.8936 48535.4819,1695.1548 Q48535.4819,1694.5986 48535.1499,1694.1794 Q48534.8179,1693.7603 48534.187,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="48554.25" y="1696.5352">rowNumber</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="48307.5" x2="48836.5" y1="1708" y2="1708"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="48307.5" x2="48836.5" y1="1716" y2="1716"/><ellipse cx="48317.5" cy="1727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="48326.5" y="1730.6348">AllocPartialResult() PartialResult</text><ellipse cx="48317.5" cy="1739.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="48326.5" y="1743.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="48317.5" cy="1752.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="48326.5" y="1756.5449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="48317.5" cy="1765.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="48326.5" y="1769.5">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[452f4677b56ce690070ed5755e2dbc18]
class aggfuncs.sortRow--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.sortRow" style="stroke: #A80036; stroke-width: 1.5;" width="151" x="70323.5" y="3947.5"/><ellipse cx="70371.75" cy="3963.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70370.9834,3964.563 Q70369.1323,3963.8574 70368.4766,3963.0813 Q70367.8208,3962.3052 70367.8208,3960.9937 Q70367.8208,3959.3086 70368.8999,3958.3457 Q70369.979,3957.3828 70371.8633,3957.3828 Q70372.7183,3957.3828 70373.5732,3957.5779 Q70374.4282,3957.7729 70375.2666,3958.1548 L70375.2666,3960.5454 Q70374.478,3959.9893 70373.6646,3959.6987 Q70372.8511,3959.4082 70372.0542,3959.4082 Q70371.166,3959.4082 70370.6929,3959.7651 Q70370.2197,3960.1221 70370.2197,3960.7861 Q70370.2197,3961.3008 70370.5642,3961.637 Q70370.9087,3961.9731 70372.0044,3962.3799 L70373.0586,3962.7783 Q70374.5527,3963.3262 70375.2583,3964.231 Q70375.9639,3965.1357 70375.9639,3966.5137 Q70375.9639,3968.3896 70374.8557,3969.3152 Q70373.7476,3970.2407 70371.5063,3970.2407 Q70370.585,3970.2407 70369.6594,3970.0208 Q70368.7339,3969.8008 70367.8706,3969.3691 L70367.8706,3966.8374 Q70368.8501,3967.5347 70369.7673,3967.875 Q70370.6846,3968.2153 70371.5811,3968.2153 Q70372.4858,3968.2153 70372.9839,3967.8044 Q70373.4819,3967.3936 70373.4819,3966.6548 Q70373.4819,3966.0986 70373.1499,3965.6794 Q70372.8179,3965.2603 70372.187,3965.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46" x="70392.25" y="3968.0352">sortRow</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70324.5" x2="70473.5" y1="3979.5" y2="3979.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70331.5" y="3987.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="70343.5" y="3994.1348">buffer *bytes.Buffer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70331.5" y="4000.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="70343.5" y="4007.0898">byItems []*types.Datum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70324.5" x2="70473.5" y1="4013.4102" y2="4013.4102"/><!--MD5=[14cbecbcadb214e6756bcc61cefd5408]
class aggfuncs.sum4Decimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="aggfuncs.sum4Decimal" style="stroke: #A80036; stroke-width: 1.5;" width="760" x="58713" y="2444.5"/><ellipse cx="59049.75" cy="2460.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M59048.9834,2461.563 Q59047.1323,2460.8574 59046.4766,2460.0813 Q59045.8208,2459.3052 59045.8208,2457.9937 Q59045.8208,2456.3086 59046.8999,2455.3457 Q59047.979,2454.3828 59049.8633,2454.3828 Q59050.7183,2454.3828 59051.5732,2454.5779 Q59052.4282,2454.7729 59053.2666,2455.1548 L59053.2666,2457.5454 Q59052.478,2456.9893 59051.6646,2456.6987 Q59050.8511,2456.4082 59050.0542,2456.4082 Q59049.166,2456.4082 59048.6929,2456.7651 Q59048.2197,2457.1221 59048.2197,2457.7861 Q59048.2197,2458.3008 59048.5642,2458.637 Q59048.9087,2458.9731 59050.0044,2459.3799 L59051.0586,2459.7783 Q59052.5527,2460.3262 59053.2583,2461.231 Q59053.9639,2462.1357 59053.9639,2463.5137 Q59053.9639,2465.3896 59052.8557,2466.3152 Q59051.7476,2467.2407 59049.5063,2467.2407 Q59048.585,2467.2407 59047.6594,2467.0208 Q59046.7339,2466.8008 59045.8706,2466.3691 L59045.8706,2463.8374 Q59046.8501,2464.5347 59047.7673,2464.875 Q59048.6846,2465.2153 59049.5811,2465.2153 Q59050.4858,2465.2153 59050.9839,2464.8044 Q59051.4819,2464.3936 59051.4819,2463.6548 Q59051.4819,2463.0986 59051.1499,2462.6794 Q59050.8179,2462.2603 59050.187,2462.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="59070.25" y="2465.0352">sum4Decimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="58714" x2="59472" y1="2476.5" y2="2476.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="58714" x2="59472" y1="2484.5" y2="2484.5"/><ellipse cx="58724" cy="2495.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="58733" y="2499.1348">AllocPartialResult() PartialResult</text><ellipse cx="58724" cy="2508.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="58733" y="2512.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="58724" cy="2521.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="58733" y="2525.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="58724" cy="2534.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="58733" y="2538">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="58724" cy="2547.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="734" x="58733" y="2550.9551">Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error</text><ellipse cx="58724" cy="2560.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="58733" y="2563.9102">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[0a29c9f82721d6059594fdaed267b29b]
class aggfuncs.sum4DistinctDecimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.sum4DistinctDecimal" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="57580.5" y="2457.5"/><ellipse cx="57781.75" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M57780.9834,2474.563 Q57779.1323,2473.8574 57778.4766,2473.0813 Q57777.8208,2472.3052 57777.8208,2470.9937 Q57777.8208,2469.3086 57778.8999,2468.3457 Q57779.979,2467.3828 57781.8633,2467.3828 Q57782.7183,2467.3828 57783.5732,2467.5779 Q57784.4282,2467.7729 57785.2666,2468.1548 L57785.2666,2470.5454 Q57784.478,2469.9893 57783.6646,2469.6987 Q57782.8511,2469.4082 57782.0542,2469.4082 Q57781.166,2469.4082 57780.6929,2469.7651 Q57780.2197,2470.1221 57780.2197,2470.7861 Q57780.2197,2471.3008 57780.5642,2471.637 Q57780.9087,2471.9731 57782.0044,2472.3799 L57783.0586,2472.7783 Q57784.5527,2473.3262 57785.2583,2474.231 Q57785.9639,2475.1357 57785.9639,2476.5137 Q57785.9639,2478.3896 57784.8557,2479.3152 Q57783.7476,2480.2407 57781.5063,2480.2407 Q57780.585,2480.2407 57779.6594,2480.0208 Q57778.7339,2479.8008 57777.8706,2479.3691 L57777.8706,2476.8374 Q57778.8501,2477.5347 57779.7673,2477.875 Q57780.6846,2478.2153 57781.5811,2478.2153 Q57782.4858,2478.2153 57782.9839,2477.8044 Q57783.4819,2477.3936 57783.4819,2476.6548 Q57783.4819,2476.0986 57783.1499,2475.6794 Q57782.8179,2475.2603 57782.187,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="120" x="57802.25" y="2478.0352">sum4DistinctDecimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="57581.5" x2="58110.5" y1="2489.5" y2="2489.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="57581.5" x2="58110.5" y1="2497.5" y2="2497.5"/><ellipse cx="57591.5" cy="2508.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="57600.5" y="2512.1348">AllocPartialResult() PartialResult</text><ellipse cx="57591.5" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="57600.5" y="2525.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="57591.5" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="57600.5" y="2538.0449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="57591.5" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="57600.5" y="2551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[2f447b2cf2f5aa57e1e1d7743ab3cd6e]
class aggfuncs.sum4DistinctFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.sum4DistinctFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="58146.5" y="2457.5"/><ellipse cx="58349.25" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M58348.4834,2474.563 Q58346.6323,2473.8574 58345.9766,2473.0813 Q58345.3208,2472.3052 58345.3208,2470.9937 Q58345.3208,2469.3086 58346.3999,2468.3457 Q58347.479,2467.3828 58349.3633,2467.3828 Q58350.2183,2467.3828 58351.0732,2467.5779 Q58351.9282,2467.7729 58352.7666,2468.1548 L58352.7666,2470.5454 Q58351.978,2469.9893 58351.1646,2469.6987 Q58350.3511,2469.4082 58349.5542,2469.4082 Q58348.666,2469.4082 58348.1929,2469.7651 Q58347.7197,2470.1221 58347.7197,2470.7861 Q58347.7197,2471.3008 58348.0642,2471.637 Q58348.4087,2471.9731 58349.5044,2472.3799 L58350.5586,2472.7783 Q58352.0527,2473.3262 58352.7583,2474.231 Q58353.4639,2475.1357 58353.4639,2476.5137 Q58353.4639,2478.3896 58352.3557,2479.3152 Q58351.2476,2480.2407 58349.0063,2480.2407 Q58348.085,2480.2407 58347.1594,2480.0208 Q58346.2339,2479.8008 58345.3706,2479.3691 L58345.3706,2476.8374 Q58346.3501,2477.5347 58347.2673,2477.875 Q58348.1846,2478.2153 58349.0811,2478.2153 Q58349.9858,2478.2153 58350.4839,2477.8044 Q58350.9819,2477.3936 58350.9819,2476.6548 Q58350.9819,2476.0986 58350.6499,2475.6794 Q58350.3179,2475.2603 58349.687,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="117" x="58369.75" y="2478.0352">sum4DistinctFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="58147.5" x2="58676.5" y1="2489.5" y2="2489.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="58147.5" x2="58676.5" y1="2497.5" y2="2497.5"/><ellipse cx="58157.5" cy="2508.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="58166.5" y="2512.1348">AllocPartialResult() PartialResult</text><ellipse cx="58157.5" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="58166.5" y="2525.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="58157.5" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="58166.5" y="2538.0449">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="58157.5" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="58166.5" y="2551">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><!--MD5=[809eea67adb4550f8439b09e0b0f01ef]
class aggfuncs.sum4Float64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="aggfuncs.sum4Float64" style="stroke: #A80036; stroke-width: 1.5;" width="760" x="60580" y="3226.5"/><ellipse cx="60918.25" cy="3242.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M60917.4834,3243.563 Q60915.6323,3242.8574 60914.9766,3242.0813 Q60914.3208,3241.3052 60914.3208,3239.9937 Q60914.3208,3238.3086 60915.3999,3237.3457 Q60916.479,3236.3828 60918.3633,3236.3828 Q60919.2183,3236.3828 60920.0732,3236.5779 Q60920.9282,3236.7729 60921.7666,3237.1548 L60921.7666,3239.5454 Q60920.978,3238.9893 60920.1646,3238.6987 Q60919.3511,3238.4082 60918.5542,3238.4082 Q60917.666,3238.4082 60917.1929,3238.7651 Q60916.7197,3239.1221 60916.7197,3239.7861 Q60916.7197,3240.3008 60917.0642,3240.637 Q60917.4087,3240.9731 60918.5044,3241.3799 L60919.5586,3241.7783 Q60921.0527,3242.3262 60921.7583,3243.231 Q60922.4639,3244.1357 60922.4639,3245.5137 Q60922.4639,3247.3896 60921.3557,3248.3152 Q60920.2476,3249.2407 60918.0063,3249.2407 Q60917.085,3249.2407 60916.1594,3249.0208 Q60915.2339,3248.8008 60914.3706,3248.3691 L60914.3706,3245.8374 Q60915.3501,3246.5347 60916.2673,3246.875 Q60917.1846,3247.2153 60918.0811,3247.2153 Q60918.9858,3247.2153 60919.4839,3246.8044 Q60919.9819,3246.3936 60919.9819,3245.6548 Q60919.9819,3245.0986 60919.6499,3244.6794 Q60919.3179,3244.2603 60918.687,3244.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="60938.75" y="3247.0352">sum4Float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="60581" x2="61339" y1="3258.5" y2="3258.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="60581" x2="61339" y1="3266.5" y2="3266.5"/><ellipse cx="60591" cy="3277.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="734" x="60600" y="3281.1348">Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error</text><!--MD5=[43377af0bd21540998460a8f82731ab2]
class aggfuncs.sum4Float64HighPrecision--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="aggfuncs.sum4Float64HighPrecision" style="stroke: #A80036; stroke-width: 1.5;" width="184" x="52660" y="3233"/><ellipse cx="52675" cy="3249" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M52674.2334,3250.063 Q52672.3823,3249.3574 52671.7266,3248.5813 Q52671.0708,3247.8052 52671.0708,3246.4937 Q52671.0708,3244.8086 52672.1499,3243.8457 Q52673.229,3242.8828 52675.1133,3242.8828 Q52675.9683,3242.8828 52676.8232,3243.0779 Q52677.6782,3243.2729 52678.5166,3243.6548 L52678.5166,3246.0454 Q52677.728,3245.4893 52676.9146,3245.1987 Q52676.1011,3244.9082 52675.3042,3244.9082 Q52674.416,3244.9082 52673.9429,3245.2651 Q52673.4697,3245.6221 52673.4697,3246.2861 Q52673.4697,3246.8008 52673.8142,3247.137 Q52674.1587,3247.4731 52675.2544,3247.8799 L52676.3086,3248.2783 Q52677.8027,3248.8262 52678.5083,3249.731 Q52679.2139,3250.6357 52679.2139,3252.0137 Q52679.2139,3253.8896 52678.1057,3254.8152 Q52676.9976,3255.7407 52674.7563,3255.7407 Q52673.835,3255.7407 52672.9094,3255.5208 Q52671.9839,3255.3008 52671.1206,3254.8691 L52671.1206,3252.3374 Q52672.1001,3253.0347 52673.0173,3253.375 Q52673.9346,3253.7153 52674.8311,3253.7153 Q52675.7358,3253.7153 52676.2339,3253.3044 Q52676.7319,3252.8936 52676.7319,3252.1548 Q52676.7319,3251.5986 52676.3999,3251.1794 Q52676.0679,3250.7603 52675.437,3250.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="52689" y="3253.5352">sum4Float64HighPrecision</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="52661" x2="52843" y1="3265" y2="3265"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="52661" x2="52843" y1="3273" y2="3273"/><!--MD5=[6143f1085b06974b9a5c2ba1b14fbd3b]
class aggfuncs.topNRows--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="255.2813" id="aggfuncs.topNRows" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="70510" y="3857"/><ellipse cx="70598.75" cy="3873" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70597.9834,3874.063 Q70596.1323,3873.3574 70595.4766,3872.5813 Q70594.8208,3871.8052 70594.8208,3870.4937 Q70594.8208,3868.8086 70595.8999,3867.8457 Q70596.979,3866.8828 70598.8633,3866.8828 Q70599.7183,3866.8828 70600.5732,3867.0779 Q70601.4282,3867.2729 70602.2666,3867.6548 L70602.2666,3870.0454 Q70601.478,3869.4893 70600.6646,3869.1987 Q70599.8511,3868.9082 70599.0542,3868.9082 Q70598.166,3868.9082 70597.6929,3869.2651 Q70597.2197,3869.6221 70597.2197,3870.2861 Q70597.2197,3870.8008 70597.5642,3871.137 Q70597.9087,3871.4731 70599.0044,3871.8799 L70600.0586,3872.2783 Q70601.5527,3872.8262 70602.2583,3873.731 Q70602.9639,3874.6357 70602.9639,3876.0137 Q70602.9639,3877.8896 70601.8557,3878.8152 Q70600.7476,3879.7407 70598.5063,3879.7407 Q70597.585,3879.7407 70596.6594,3879.5208 Q70595.7339,3879.3008 70594.8706,3878.8691 L70594.8706,3876.3374 Q70595.8501,3877.0347 70596.7673,3877.375 Q70597.6846,3877.7153 70598.5811,3877.7153 Q70599.4858,3877.7153 70599.9839,3877.3044 Q70600.4819,3876.8936 70600.4819,3876.1548 Q70600.4819,3875.5986 70600.1499,3875.1794 Q70599.8179,3874.7603 70599.187,3874.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="70619.25" y="3877.5352">topNRows</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70511" x2="70753" y1="3889" y2="3889"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70518" y="3897"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="70530" y="3903.6348">rows []sortRow</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70518" y="3909.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="70530" y="3916.5898">desc []bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70518" y="3922.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="70530" y="3929.5449">sctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70518" y="3935.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="70530" y="3942.5">err error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70518" y="3948.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="70530" y="3955.4551">currSize uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70518" y="3961.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="70530" y="3968.4102">limitSize uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70518" y="3974.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="70530" y="3981.3652">sepSize uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="70511" x2="70753" y1="3987.6855" y2="3987.6855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70518" y="3995.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="70530" y="4002.3203">tryToAdd(row sortRow) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70518" y="4008.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="70530" y="4015.2754">reset()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70518" y="4021.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="70530" y="4028.2305">concat(sep string, truncated bool) string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="70533" y="4041.1855"/><ellipse cx="70521" cy="4050.5059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="70530" y="4054.1406">Len() int</text><ellipse cx="70521" cy="4063.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="70530" y="4067.0957">Less(i int, j int) bool</text><ellipse cx="70521" cy="4076.416" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="70530" y="4080.0508">Swap(i int, j int)</text><ellipse cx="70521" cy="4089.3711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="70530" y="4093.0059">Push(x</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="70570" y="4093.0059">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="70617" y="4093.0059">{})</text><ellipse cx="70521" cy="4102.3262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="70530" y="4105.9609">Pop()</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="70561" y="4105.9609">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="70608" y="4105.9609">{}</text><!--MD5=[b75d6f85899d3940d3f7231ccf3038bc]
class aggfuncs.value4Decimal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.value4Decimal" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="41086.5" y="1676"/><ellipse cx="41289.75" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M41288.9834,1693.063 Q41287.1323,1692.3574 41286.4766,1691.5813 Q41285.8208,1690.8052 41285.8208,1689.4937 Q41285.8208,1687.8086 41286.8999,1686.8457 Q41287.979,1685.8828 41289.8633,1685.8828 Q41290.7183,1685.8828 41291.5732,1686.0779 Q41292.4282,1686.2729 41293.2666,1686.6548 L41293.2666,1689.0454 Q41292.478,1688.4893 41291.6646,1688.1987 Q41290.8511,1687.9082 41290.0542,1687.9082 Q41289.166,1687.9082 41288.6929,1688.2651 Q41288.2197,1688.6221 41288.2197,1689.2861 Q41288.2197,1689.8008 41288.5642,1690.137 Q41288.9087,1690.4731 41290.0044,1690.8799 L41291.0586,1691.2783 Q41292.5527,1691.8262 41293.2583,1692.731 Q41293.9639,1693.6357 41293.9639,1695.0137 Q41293.9639,1696.8896 41292.8557,1697.8152 Q41291.7476,1698.7407 41289.5063,1698.7407 Q41288.585,1698.7407 41287.6594,1698.5208 Q41286.7339,1698.3008 41285.8706,1697.8691 L41285.8706,1695.3374 Q41286.8501,1696.0347 41287.7673,1696.375 Q41288.6846,1696.7153 41289.5811,1696.7153 Q41290.4858,1696.7153 41290.9839,1696.3044 Q41291.4819,1695.8936 41291.4819,1695.1548 Q41291.4819,1694.5986 41291.1499,1694.1794 Q41290.8179,1693.7603 41290.187,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="41310.25" y="1696.5352">value4Decimal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41087.5" x2="41584.5" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="41094.5" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="41106.5" y="1722.6348">val *types.MyDecimal</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="41094.5" y="1728.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="41106.5" y="1735.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41087.5" x2="41584.5" y1="1741.9102" y2="1741.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="41094.5" y="1749.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="41106.5" y="1756.5449">evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="41094.5" y="1762.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="41106.5" y="1769.5">appendResult(chk *chunk.Chunk, colIdx int)</text><!--MD5=[5ae25bb603ec7074b06870eb45a19e17]
class aggfuncs.value4Duration--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.value4Duration" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="37348.5" y="1676"/><ellipse cx="37550.25" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M37549.4834,1693.063 Q37547.6323,1692.3574 37546.9766,1691.5813 Q37546.3208,1690.8052 37546.3208,1689.4937 Q37546.3208,1687.8086 37547.3999,1686.8457 Q37548.479,1685.8828 37550.3633,1685.8828 Q37551.2183,1685.8828 37552.0732,1686.0779 Q37552.9282,1686.2729 37553.7666,1686.6548 L37553.7666,1689.0454 Q37552.978,1688.4893 37552.1646,1688.1987 Q37551.3511,1687.9082 37550.5542,1687.9082 Q37549.666,1687.9082 37549.1929,1688.2651 Q37548.7197,1688.6221 37548.7197,1689.2861 Q37548.7197,1689.8008 37549.0642,1690.137 Q37549.4087,1690.4731 37550.5044,1690.8799 L37551.5586,1691.2783 Q37553.0527,1691.8262 37553.7583,1692.731 Q37554.4639,1693.6357 37554.4639,1695.0137 Q37554.4639,1696.8896 37553.3557,1697.8152 Q37552.2476,1698.7407 37550.0063,1698.7407 Q37549.085,1698.7407 37548.1594,1698.5208 Q37547.2339,1698.3008 37546.3706,1697.8691 L37546.3706,1695.3374 Q37547.3501,1696.0347 37548.2673,1696.375 Q37549.1846,1696.7153 37550.0811,1696.7153 Q37550.9858,1696.7153 37551.4839,1696.3044 Q37551.9819,1695.8936 37551.9819,1695.1548 Q37551.9819,1694.5986 37551.6499,1694.1794 Q37551.3179,1693.7603 37550.687,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="37570.75" y="1696.5352">value4Duration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="37349.5" x2="37846.5" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37356.5" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="37368.5" y="1722.6348">val types.Duration</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37356.5" y="1728.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="37368.5" y="1735.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="37349.5" x2="37846.5" y1="1741.9102" y2="1741.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37356.5" y="1749.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="37368.5" y="1756.5449">evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37356.5" y="1762.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="37368.5" y="1769.5">appendResult(chk *chunk.Chunk, colIdx int)</text><!--MD5=[d8a932cf58b56a80001ba36f4a91aa15]
class aggfuncs.value4Float32--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.value4Float32" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="37882.5" y="1676"/><ellipse cx="38087.25" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M38086.4834,1693.063 Q38084.6323,1692.3574 38083.9766,1691.5813 Q38083.3208,1690.8052 38083.3208,1689.4937 Q38083.3208,1687.8086 38084.3999,1686.8457 Q38085.479,1685.8828 38087.3633,1685.8828 Q38088.2183,1685.8828 38089.0732,1686.0779 Q38089.9282,1686.2729 38090.7666,1686.6548 L38090.7666,1689.0454 Q38089.978,1688.4893 38089.1646,1688.1987 Q38088.3511,1687.9082 38087.5542,1687.9082 Q38086.666,1687.9082 38086.1929,1688.2651 Q38085.7197,1688.6221 38085.7197,1689.2861 Q38085.7197,1689.8008 38086.0642,1690.137 Q38086.4087,1690.4731 38087.5044,1690.8799 L38088.5586,1691.2783 Q38090.0527,1691.8262 38090.7583,1692.731 Q38091.4639,1693.6357 38091.4639,1695.0137 Q38091.4639,1696.8896 38090.3557,1697.8152 Q38089.2476,1698.7407 38087.0063,1698.7407 Q38086.085,1698.7407 38085.1594,1698.5208 Q38084.2339,1698.3008 38083.3706,1697.8691 L38083.3706,1695.3374 Q38084.3501,1696.0347 38085.2673,1696.375 Q38086.1846,1696.7153 38087.0811,1696.7153 Q38087.9858,1696.7153 38088.4839,1696.3044 Q38088.9819,1695.8936 38088.9819,1695.1548 Q38088.9819,1694.5986 38088.6499,1694.1794 Q38088.3179,1693.7603 38087.687,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="38107.75" y="1696.5352">value4Float32</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="37883.5" x2="38380.5" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37890.5" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="37902.5" y="1722.6348">val float32</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37890.5" y="1728.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="37902.5" y="1735.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="37883.5" x2="38380.5" y1="1741.9102" y2="1741.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37890.5" y="1749.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="37902.5" y="1756.5449">evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37890.5" y="1762.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="37902.5" y="1769.5">appendResult(chk *chunk.Chunk, colIdx int)</text><!--MD5=[bb08a968c16647599ed416b8995008b7]
class aggfuncs.value4Float64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.value4Float64" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="38416.5" y="1676"/><ellipse cx="38621.25" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M38620.4834,1693.063 Q38618.6323,1692.3574 38617.9766,1691.5813 Q38617.3208,1690.8052 38617.3208,1689.4937 Q38617.3208,1687.8086 38618.3999,1686.8457 Q38619.479,1685.8828 38621.3633,1685.8828 Q38622.2183,1685.8828 38623.0732,1686.0779 Q38623.9282,1686.2729 38624.7666,1686.6548 L38624.7666,1689.0454 Q38623.978,1688.4893 38623.1646,1688.1987 Q38622.3511,1687.9082 38621.5542,1687.9082 Q38620.666,1687.9082 38620.1929,1688.2651 Q38619.7197,1688.6221 38619.7197,1689.2861 Q38619.7197,1689.8008 38620.0642,1690.137 Q38620.4087,1690.4731 38621.5044,1690.8799 L38622.5586,1691.2783 Q38624.0527,1691.8262 38624.7583,1692.731 Q38625.4639,1693.6357 38625.4639,1695.0137 Q38625.4639,1696.8896 38624.3557,1697.8152 Q38623.2476,1698.7407 38621.0063,1698.7407 Q38620.085,1698.7407 38619.1594,1698.5208 Q38618.2339,1698.3008 38617.3706,1697.8691 L38617.3706,1695.3374 Q38618.3501,1696.0347 38619.2673,1696.375 Q38620.1846,1696.7153 38621.0811,1696.7153 Q38621.9858,1696.7153 38622.4839,1696.3044 Q38622.9819,1695.8936 38622.9819,1695.1548 Q38622.9819,1694.5986 38622.6499,1694.1794 Q38622.3179,1693.7603 38621.687,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="38641.75" y="1696.5352">value4Float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="38417.5" x2="38914.5" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38424.5" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="38436.5" y="1722.6348">val float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38424.5" y="1728.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="38436.5" y="1735.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="38417.5" x2="38914.5" y1="1741.9102" y2="1741.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38424.5" y="1749.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="38436.5" y="1756.5449">evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38424.5" y="1762.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="38436.5" y="1769.5">appendResult(chk *chunk.Chunk, colIdx int)</text><!--MD5=[c6c0da7949e40f1deec2cd4ee140bc83]
class aggfuncs.value4Int--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.value4Int" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="38950.5" y="1676"/><ellipse cx="39169.75" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M39168.9834,1693.063 Q39167.1323,1692.3574 39166.4766,1691.5813 Q39165.8208,1690.8052 39165.8208,1689.4937 Q39165.8208,1687.8086 39166.8999,1686.8457 Q39167.979,1685.8828 39169.8633,1685.8828 Q39170.7183,1685.8828 39171.5732,1686.0779 Q39172.4282,1686.2729 39173.2666,1686.6548 L39173.2666,1689.0454 Q39172.478,1688.4893 39171.6646,1688.1987 Q39170.8511,1687.9082 39170.0542,1687.9082 Q39169.166,1687.9082 39168.6929,1688.2651 Q39168.2197,1688.6221 39168.2197,1689.2861 Q39168.2197,1689.8008 39168.5642,1690.137 Q39168.9087,1690.4731 39170.0044,1690.8799 L39171.0586,1691.2783 Q39172.5527,1691.8262 39173.2583,1692.731 Q39173.9639,1693.6357 39173.9639,1695.0137 Q39173.9639,1696.8896 39172.8557,1697.8152 Q39171.7476,1698.7407 39169.5063,1698.7407 Q39168.585,1698.7407 39167.6594,1698.5208 Q39166.7339,1698.3008 39165.8706,1697.8691 L39165.8706,1695.3374 Q39166.8501,1696.0347 39167.7673,1696.375 Q39168.6846,1696.7153 39169.5811,1696.7153 Q39170.4858,1696.7153 39170.9839,1696.3044 Q39171.4819,1695.8936 39171.4819,1695.1548 Q39171.4819,1694.5986 39171.1499,1694.1794 Q39170.8179,1693.7603 39170.187,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="39190.25" y="1696.5352">value4Int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="38951.5" x2="39448.5" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38958.5" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="38970.5" y="1722.6348">val int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38958.5" y="1728.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="38970.5" y="1735.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="38951.5" x2="39448.5" y1="1741.9102" y2="1741.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38958.5" y="1749.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="38970.5" y="1756.5449">evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38958.5" y="1762.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="38970.5" y="1769.5">appendResult(chk *chunk.Chunk, colIdx int)</text><!--MD5=[5a2f9c16a6277ad057ae5b9f630a0e60]
class aggfuncs.value4JSON--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.value4JSON" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="39484.5" y="1676"/><ellipse cx="39696.75" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M39695.9834,1693.063 Q39694.1323,1692.3574 39693.4766,1691.5813 Q39692.8208,1690.8052 39692.8208,1689.4937 Q39692.8208,1687.8086 39693.8999,1686.8457 Q39694.979,1685.8828 39696.8633,1685.8828 Q39697.7183,1685.8828 39698.5732,1686.0779 Q39699.4282,1686.2729 39700.2666,1686.6548 L39700.2666,1689.0454 Q39699.478,1688.4893 39698.6646,1688.1987 Q39697.8511,1687.9082 39697.0542,1687.9082 Q39696.166,1687.9082 39695.6929,1688.2651 Q39695.2197,1688.6221 39695.2197,1689.2861 Q39695.2197,1689.8008 39695.5642,1690.137 Q39695.9087,1690.4731 39697.0044,1690.8799 L39698.0586,1691.2783 Q39699.5527,1691.8262 39700.2583,1692.731 Q39700.9639,1693.6357 39700.9639,1695.0137 Q39700.9639,1696.8896 39699.8557,1697.8152 Q39698.7476,1698.7407 39696.5063,1698.7407 Q39695.585,1698.7407 39694.6594,1698.5208 Q39693.7339,1698.3008 39692.8706,1697.8691 L39692.8706,1695.3374 Q39693.8501,1696.0347 39694.7673,1696.375 Q39695.6846,1696.7153 39696.5811,1696.7153 Q39697.4858,1696.7153 39697.9839,1696.3044 Q39698.4819,1695.8936 39698.4819,1695.1548 Q39698.4819,1694.5986 39698.1499,1694.1794 Q39697.8179,1693.7603 39697.187,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="39717.25" y="1696.5352">value4JSON</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39485.5" x2="39982.5" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="39492.5" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="39504.5" y="1722.6348">val json.BinaryJSON</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="39492.5" y="1728.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="39504.5" y="1735.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39485.5" x2="39982.5" y1="1741.9102" y2="1741.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="39492.5" y="1749.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="39504.5" y="1756.5449">evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="39492.5" y="1762.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="39504.5" y="1769.5">appendResult(chk *chunk.Chunk, colIdx int)</text><!--MD5=[bf84360208ddeca3cb02feaa48711d5b]
class aggfuncs.value4String--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.value4String" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="40018.5" y="1676"/><ellipse cx="40228.75" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M40227.9834,1693.063 Q40226.1323,1692.3574 40225.4766,1691.5813 Q40224.8208,1690.8052 40224.8208,1689.4937 Q40224.8208,1687.8086 40225.8999,1686.8457 Q40226.979,1685.8828 40228.8633,1685.8828 Q40229.7183,1685.8828 40230.5732,1686.0779 Q40231.4282,1686.2729 40232.2666,1686.6548 L40232.2666,1689.0454 Q40231.478,1688.4893 40230.6646,1688.1987 Q40229.8511,1687.9082 40229.0542,1687.9082 Q40228.166,1687.9082 40227.6929,1688.2651 Q40227.2197,1688.6221 40227.2197,1689.2861 Q40227.2197,1689.8008 40227.5642,1690.137 Q40227.9087,1690.4731 40229.0044,1690.8799 L40230.0586,1691.2783 Q40231.5527,1691.8262 40232.2583,1692.731 Q40232.9639,1693.6357 40232.9639,1695.0137 Q40232.9639,1696.8896 40231.8557,1697.8152 Q40230.7476,1698.7407 40228.5063,1698.7407 Q40227.585,1698.7407 40226.6594,1698.5208 Q40225.7339,1698.3008 40224.8706,1697.8691 L40224.8706,1695.3374 Q40225.8501,1696.0347 40226.7673,1696.375 Q40227.6846,1696.7153 40228.5811,1696.7153 Q40229.4858,1696.7153 40229.9839,1696.3044 Q40230.4819,1695.8936 40230.4819,1695.1548 Q40230.4819,1694.5986 40230.1499,1694.1794 Q40229.8179,1693.7603 40229.187,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="40249.25" y="1696.5352">value4String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="40019.5" x2="40516.5" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40026.5" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="40038.5" y="1722.6348">val string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40026.5" y="1728.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="40038.5" y="1735.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="40019.5" x2="40516.5" y1="1741.9102" y2="1741.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40026.5" y="1749.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="40038.5" y="1756.5449">evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40026.5" y="1762.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="40038.5" y="1769.5">appendResult(chk *chunk.Chunk, colIdx int)</text><!--MD5=[e3feefcb8f607c8a87738e0a77d494c8]
class aggfuncs.value4Time--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.value4Time" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="40552.5" y="1676"/><ellipse cx="40764.25" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M40763.4834,1693.063 Q40761.6323,1692.3574 40760.9766,1691.5813 Q40760.3208,1690.8052 40760.3208,1689.4937 Q40760.3208,1687.8086 40761.3999,1686.8457 Q40762.479,1685.8828 40764.3633,1685.8828 Q40765.2183,1685.8828 40766.0732,1686.0779 Q40766.9282,1686.2729 40767.7666,1686.6548 L40767.7666,1689.0454 Q40766.978,1688.4893 40766.1646,1688.1987 Q40765.3511,1687.9082 40764.5542,1687.9082 Q40763.666,1687.9082 40763.1929,1688.2651 Q40762.7197,1688.6221 40762.7197,1689.2861 Q40762.7197,1689.8008 40763.0642,1690.137 Q40763.4087,1690.4731 40764.5044,1690.8799 L40765.5586,1691.2783 Q40767.0527,1691.8262 40767.7583,1692.731 Q40768.4639,1693.6357 40768.4639,1695.0137 Q40768.4639,1696.8896 40767.3557,1697.8152 Q40766.2476,1698.7407 40764.0063,1698.7407 Q40763.085,1698.7407 40762.1594,1698.5208 Q40761.2339,1698.3008 40760.3706,1697.8691 L40760.3706,1695.3374 Q40761.3501,1696.0347 40762.2673,1696.375 Q40763.1846,1696.7153 40764.0811,1696.7153 Q40764.9858,1696.7153 40765.4839,1696.3044 Q40765.9819,1695.8936 40765.9819,1695.1548 Q40765.9819,1694.5986 40765.6499,1694.1794 Q40765.3179,1693.7603 40764.687,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="40784.75" y="1696.5352">value4Time</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="40553.5" x2="41050.5" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40560.5" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="40572.5" y="1722.6348">val types.Time</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40560.5" y="1728.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="40572.5" y="1735.5898">isNull bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="40553.5" x2="41050.5" y1="1741.9102" y2="1741.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40560.5" y="1749.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="40572.5" y="1756.5449">evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40560.5" y="1762.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="40572.5" y="1769.5">appendResult(chk *chunk.Chunk, colIdx int)</text><!--MD5=[800fafd27582cfd066e4a721180f4597]
class aggfuncs.valueEvaluator--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="aggfuncs.valueEvaluator" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="39484.5" y="752"/><ellipse cx="39688.25" cy="768" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M39684.6777,764.2651 L39684.6777,762.1069 L39692.0571,762.1069 L39692.0571,764.2651 L39689.5918,764.2651 L39689.5918,772.3418 L39692.0571,772.3418 L39692.0571,774.5 L39684.6777,774.5 L39684.6777,772.3418 L39687.1431,772.3418 L39687.1431,764.2651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="83" x="39708.75" y="772.5352">valueEvaluator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39485.5" x2="39982.5" y1="784" y2="784"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39485.5" x2="39982.5" y1="792" y2="792"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="39492.5" y="800"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="39504.5" y="806.6348">evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="39492.5" y="812.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="39504.5" y="819.5898">appendResult(chk *chunk.Chunk, colIdx int)</text><!--MD5=[f9b063bcbf0892fc9c92d74f5bed7e77]
class aggfuncs.varPop4DistinctFloat64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="aggfuncs.varPop4DistinctFloat64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="53052.5" y="2457.5"/><ellipse cx="53247.25" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M53246.4834,2474.563 Q53244.6323,2473.8574 53243.9766,2473.0813 Q53243.3208,2472.3052 53243.3208,2470.9937 Q53243.3208,2469.3086 53244.3999,2468.3457 Q53245.479,2467.3828 53247.3633,2467.3828 Q53248.2183,2467.3828 53249.0732,2467.5779 Q53249.9282,2467.7729 53250.7666,2468.1548 L53250.7666,2470.5454 Q53249.978,2469.9893 53249.1646,2469.6987 Q53248.3511,2469.4082 53247.5542,2469.4082 Q53246.666,2469.4082 53246.1929,2469.7651 Q53245.7197,2470.1221 53245.7197,2470.7861 Q53245.7197,2471.3008 53246.0642,2471.637 Q53246.4087,2471.9731 53247.5044,2472.3799 L53248.5586,2472.7783 Q53250.0527,2473.3262 53250.7583,2474.231 Q53251.4639,2475.1357 53251.4639,2476.5137 Q53251.4639,2478.3896 53250.3557,2479.3152 Q53249.2476,2480.2407 53247.0063,2480.2407 Q53246.085,2480.2407 53245.1594,2480.0208 Q53244.2339,2479.8008 53243.3706,2479.3691 L53243.3706,2476.8374 Q53244.3501,2477.5347 53245.2673,2477.875 Q53246.1846,2478.2153 53247.0811,2478.2153 Q53247.9858,2478.2153 53248.4839,2477.8044 Q53248.9819,2477.3936 53248.9819,2476.6548 Q53248.9819,2476.0986 53248.6499,2475.6794 Q53248.3179,2475.2603 53247.687,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="133" x="53267.75" y="2478.0352">varPop4DistinctFloat64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="53053.5" x2="53582.5" y1="2489.5" y2="2489.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="53053.5" x2="53582.5" y1="2497.5" y2="2497.5"/><ellipse cx="53063.5" cy="2508.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="53072.5" y="2512.1348">AllocPartialResult() PartialResult</text><ellipse cx="53063.5" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="53072.5" y="2525.0898">ResetPartialResult(pr PartialResult)</text><ellipse cx="53063.5" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="53072.5" y="2538.0449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="53063.5" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="53072.5" y="2551">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><!--MD5=[674b5f10ca8bb544ce279d6729d0fa52]
class aggfuncs.varPop4Float64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="aggfuncs.varPop4Float64" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="51920.5" y="2451"/><ellipse cx="52136.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M52135.4834,2468.063 Q52133.6323,2467.3574 52132.9766,2466.5813 Q52132.3208,2465.8052 52132.3208,2464.4937 Q52132.3208,2462.8086 52133.3999,2461.8457 Q52134.479,2460.8828 52136.3633,2460.8828 Q52137.2183,2460.8828 52138.0732,2461.0779 Q52138.9282,2461.2729 52139.7666,2461.6548 L52139.7666,2464.0454 Q52138.978,2463.4893 52138.1646,2463.1987 Q52137.3511,2462.9082 52136.5542,2462.9082 Q52135.666,2462.9082 52135.1929,2463.2651 Q52134.7197,2463.6221 52134.7197,2464.2861 Q52134.7197,2464.8008 52135.0642,2465.137 Q52135.4087,2465.4731 52136.5044,2465.8799 L52137.5586,2466.2783 Q52139.0527,2466.8262 52139.7583,2467.731 Q52140.4639,2468.6357 52140.4639,2470.0137 Q52140.4639,2471.8896 52139.3557,2472.8152 Q52138.2476,2473.7407 52136.0063,2473.7407 Q52135.085,2473.7407 52134.1594,2473.5208 Q52133.2339,2473.3008 52132.3706,2472.8691 L52132.3706,2470.3374 Q52133.3501,2471.0347 52134.2673,2471.375 Q52135.1846,2471.7153 52136.0811,2471.7153 Q52136.9858,2471.7153 52137.4839,2471.3044 Q52137.9819,2470.8936 52137.9819,2470.1548 Q52137.9819,2469.5986 52137.6499,2469.1794 Q52137.3179,2468.7603 52136.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="52156.75" y="2471.5352">varPop4Float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="51921.5" x2="52450.5" y1="2483" y2="2483"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="51921.5" x2="52450.5" y1="2491" y2="2491"/><ellipse cx="51931.5" cy="2502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="51940.5" y="2505.6348">AllocPartialResult() PartialResult</text><ellipse cx="51931.5" cy="2514.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="51940.5" y="2518.5898">ResetPartialResult(pr PartialResult)</text><ellipse cx="51931.5" cy="2527.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="51940.5" y="2531.5449">AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error</text><ellipse cx="51931.5" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="51940.5" y="2544.5">UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error</text><ellipse cx="51931.5" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="51940.5" y="2557.4551">MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error</text><!--MD5=[aa984bbd58c963a0c74f1d44807c250c]
class aggfuncs.unsafePointer--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="aggfuncs.unsafePointer" style="stroke: #A80036; stroke-width: 1.5;" width="114" x="37210" y="765"/><ellipse cx="37225" cy="781" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M37227.4731,787.1431 Q37226.8921,787.4419 37226.2529,787.5913 Q37225.6138,787.7407 37224.9082,787.7407 Q37222.4014,787.7407 37221.0815,786.0889 Q37219.7617,784.437 37219.7617,781.3159 Q37219.7617,778.1865 37221.0815,776.5347 Q37222.4014,774.8828 37224.9082,774.8828 Q37225.6138,774.8828 37226.2612,775.0322 Q37226.9087,775.1816 37227.4731,775.4805 L37227.4731,778.2031 Q37226.8423,777.6221 37226.2488,777.3523 Q37225.6553,777.0825 37225.0244,777.0825 Q37223.6797,777.0825 37222.9949,778.1492 Q37222.3101,779.2158 37222.3101,781.3159 Q37222.3101,783.4077 37222.9949,784.4744 Q37223.6797,785.541 37225.0244,785.541 Q37225.6553,785.541 37226.2488,785.2712 Q37226.8423,785.0015 37227.4731,784.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="37239" y="785.5352">unsafe.Pointer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="37211" x2="37323" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="37211" x2="37323" y1="805" y2="805"/><!--MD5=[20ac18227a96569820a758653f17138d]
class executor.AdminPluginsExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.AdminPluginsExec" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="16518" y="2451"/><ellipse cx="16605.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M16604.9834,2468.063 Q16603.1323,2467.3574 16602.4766,2466.5813 Q16601.8208,2465.8052 16601.8208,2464.4937 Q16601.8208,2462.8086 16602.8999,2461.8457 Q16603.979,2460.8828 16605.8633,2460.8828 Q16606.7183,2460.8828 16607.5732,2461.0779 Q16608.4282,2461.2729 16609.2666,2461.6548 L16609.2666,2464.0454 Q16608.478,2463.4893 16607.6646,2463.1987 Q16606.8511,2462.9082 16606.0542,2462.9082 Q16605.166,2462.9082 16604.6929,2463.2651 Q16604.2197,2463.6221 16604.2197,2464.2861 Q16604.2197,2464.8008 16604.5642,2465.137 Q16604.9087,2465.4731 16606.0044,2465.8799 L16607.0586,2466.2783 Q16608.5527,2466.8262 16609.2583,2467.731 Q16609.9639,2468.6357 16609.9639,2470.0137 Q16609.9639,2471.8896 16608.8557,2472.8152 Q16607.7476,2473.7407 16605.5063,2473.7407 Q16604.585,2473.7407 16603.6594,2473.5208 Q16602.7339,2473.3008 16601.8706,2472.8691 L16601.8706,2470.3374 Q16602.8501,2471.0347 16603.7673,2471.375 Q16604.6846,2471.7153 16605.5811,2471.7153 Q16606.4858,2471.7153 16606.9839,2471.3044 Q16607.4819,2470.8936 16607.4819,2470.1548 Q16607.4819,2469.5986 16607.1499,2469.1794 Q16606.8179,2468.7603 16606.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="16626.25" y="2471.5352">AdminPluginsExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16519" x2="16805" y1="2483" y2="2483"/><ellipse cx="16529" cy="2494" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="16538" y="2497.6348">Action core.AdminPluginsAction</text><ellipse cx="16529" cy="2506.9551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="16538" y="2510.5898">Plugins []string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16519" x2="16805" y1="2516.9102" y2="2516.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16526" y="2524.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="16538" y="2531.5449">changeDisableFlagAndFlush(disabled bool) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="16541" y="2544.5"/><ellipse cx="16529" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="16538" y="2557.4551">Next(ctx context.Context, _ *chunk.Chunk) error</text><!--MD5=[9bc4100fd1f1f3c6049777f31cff0277]
class executor.AdminResetTelemetryIDExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.AdminResetTelemetryIDExec" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="17764" y="2470.5"/><ellipse cx="17820.75" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M17819.9834,2487.563 Q17818.1323,2486.8574 17817.4766,2486.0813 Q17816.8208,2485.3052 17816.8208,2483.9937 Q17816.8208,2482.3086 17817.8999,2481.3457 Q17818.979,2480.3828 17820.8633,2480.3828 Q17821.7183,2480.3828 17822.5732,2480.5779 Q17823.4282,2480.7729 17824.2666,2481.1548 L17824.2666,2483.5454 Q17823.478,2482.9893 17822.6646,2482.6987 Q17821.8511,2482.4082 17821.0542,2482.4082 Q17820.166,2482.4082 17819.6929,2482.7651 Q17819.2197,2483.1221 17819.2197,2483.7861 Q17819.2197,2484.3008 17819.5642,2484.637 Q17819.9087,2484.9731 17821.0044,2485.3799 L17822.0586,2485.7783 Q17823.5527,2486.3262 17824.2583,2487.231 Q17824.9639,2488.1357 17824.9639,2489.5137 Q17824.9639,2491.3896 17823.8557,2492.3152 Q17822.7476,2493.2407 17820.5063,2493.2407 Q17819.585,2493.2407 17818.6594,2493.0208 Q17817.7339,2492.8008 17816.8706,2492.3691 L17816.8706,2489.8374 Q17817.8501,2490.5347 17818.7673,2490.875 Q17819.6846,2491.2153 17820.5811,2491.2153 Q17821.4858,2491.2153 17821.9839,2490.8044 Q17822.4819,2490.3936 17822.4819,2489.6548 Q17822.4819,2489.0986 17822.1499,2488.6794 Q17821.8179,2488.2603 17821.187,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="166" x="17841.25" y="2491.0352">AdminResetTelemetryIDExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="17765" x2="18051" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17772" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="17784" y="2517.1348">done bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="17765" x2="18051" y1="2523.4551" y2="2523.4551"/><ellipse cx="17775" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="17784" y="2538.0898">Next(ctx context.Context, _ *chunk.Chunk) error</text><!--MD5=[5502e3e075542fb26933af898db168e2]
class executor.AdminShowTelemetryExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.AdminShowTelemetryExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="7233" y="2470.5"/><ellipse cx="7303.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7302.4834,2487.563 Q7300.6323,2486.8574 7299.9766,2486.0813 Q7299.3208,2485.3052 7299.3208,2483.9937 Q7299.3208,2482.3086 7300.3999,2481.3457 Q7301.479,2480.3828 7303.3633,2480.3828 Q7304.2183,2480.3828 7305.0732,2480.5779 Q7305.9282,2480.7729 7306.7666,2481.1548 L7306.7666,2483.5454 Q7305.978,2482.9893 7305.1646,2482.6987 Q7304.3511,2482.4082 7303.5542,2482.4082 Q7302.666,2482.4082 7302.1929,2482.7651 Q7301.7197,2483.1221 7301.7197,2483.7861 Q7301.7197,2484.3008 7302.0642,2484.637 Q7302.4087,2484.9731 7303.5044,2485.3799 L7304.5586,2485.7783 Q7306.0527,2486.3262 7306.7583,2487.231 Q7307.4639,2488.1357 7307.4639,2489.5137 Q7307.4639,2491.3896 7306.3557,2492.3152 Q7305.2476,2493.2407 7303.0063,2493.2407 Q7302.085,2493.2407 7301.1594,2493.0208 Q7300.2339,2492.8008 7299.3706,2492.3691 L7299.3706,2489.8374 Q7300.3501,2490.5347 7301.2673,2490.875 Q7302.1846,2491.2153 7303.0811,2491.2153 Q7303.9858,2491.2153 7304.4839,2490.8044 Q7304.9819,2490.3936 7304.9819,2489.6548 Q7304.9819,2489.0986 7304.6499,2488.6794 Q7304.3179,2488.2603 7303.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="7323.75" y="2491.0352">AdminShowTelemetryExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7234" x2="7532" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7241" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="7253" y="2517.1348">done bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7234" x2="7532" y1="2523.4551" y2="2523.4551"/><ellipse cx="7244" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="7253" y="2538.0898">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[ba89c7134bbebff0428c4fe08e3eec7a]
class executor.AfFinalResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.AfFinalResult" style="stroke: #A80036; stroke-width: 1.5;" width="195" x="33194.5" y="745.5"/><ellipse cx="33251.25" cy="761.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33250.4834,762.563 Q33248.6323,761.8574 33247.9766,761.0813 Q33247.3208,760.3052 33247.3208,758.9937 Q33247.3208,757.3086 33248.3999,756.3457 Q33249.479,755.3828 33251.3633,755.3828 Q33252.2183,755.3828 33253.0732,755.5779 Q33253.9282,755.7729 33254.7666,756.1548 L33254.7666,758.5454 Q33253.978,757.9893 33253.1646,757.6987 Q33252.3511,757.4082 33251.5542,757.4082 Q33250.666,757.4082 33250.1929,757.7651 Q33249.7197,758.1221 33249.7197,758.7861 Q33249.7197,759.3008 33250.0642,759.637 Q33250.4087,759.9731 33251.5044,760.3799 L33252.5586,760.7783 Q33254.0527,761.3262 33254.7583,762.231 Q33255.4639,763.1357 33255.4639,764.5137 Q33255.4639,766.3896 33254.3557,767.3152 Q33253.2476,768.2407 33251.0063,768.2407 Q33250.085,768.2407 33249.1594,768.0208 Q33248.2339,767.8008 33247.3706,767.3691 L33247.3706,764.8374 Q33248.3501,765.5347 33249.2673,765.875 Q33250.1846,766.2153 33251.0811,766.2153 Q33251.9858,766.2153 33252.4839,765.8044 Q33252.9819,765.3936 33252.9819,764.6548 Q33252.9819,764.0986 33252.6499,763.6794 Q33252.3179,763.2603 33251.687,763.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="33271.75" y="766.0352">AfFinalResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33195.5" x2="33388.5" y1="777.5" y2="777.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33202.5" y="785.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="33214.5" y="792.1348">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33202.5" y="798.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="33214.5" y="805.0898">err error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33202.5" y="811.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="33214.5" y="818.0449">giveBackCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33278.5" y="818.0449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="33307.5" y="818.0449">*chunk.Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33195.5" x2="33388.5" y1="824.3652" y2="824.3652"/><!--MD5=[072934fc29f91c2b4af6818e02d5fce3]
class executor.AnalyzeColumnsExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="216.416" id="executor.AnalyzeColumnsExec" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="32660.5" y="681"/><ellipse cx="32845.25" cy="697" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32844.4834,698.063 Q32842.6323,697.3574 32841.9766,696.5813 Q32841.3208,695.8052 32841.3208,694.4937 Q32841.3208,692.8086 32842.3999,691.8457 Q32843.479,690.8828 32845.3633,690.8828 Q32846.2183,690.8828 32847.0732,691.0779 Q32847.9282,691.2729 32848.7666,691.6548 L32848.7666,694.0454 Q32847.978,693.4893 32847.1646,693.1987 Q32846.3511,692.9082 32845.5542,692.9082 Q32844.666,692.9082 32844.1929,693.2651 Q32843.7197,693.6221 32843.7197,694.2861 Q32843.7197,694.8008 32844.0642,695.137 Q32844.4087,695.4731 32845.5044,695.8799 L32846.5586,696.2783 Q32848.0527,696.8262 32848.7583,697.731 Q32849.4639,698.6357 32849.4639,700.0137 Q32849.4639,701.8896 32848.3557,702.8152 Q32847.2476,703.7407 32845.0063,703.7407 Q32844.085,703.7407 32843.1594,703.5208 Q32842.2339,703.3008 32841.3706,702.8691 L32841.3706,700.3374 Q32842.3501,701.0347 32843.2673,701.375 Q32844.1846,701.7153 32845.0811,701.7153 Q32845.9858,701.7153 32846.4839,701.3044 Q32846.9819,700.8936 32846.9819,700.1548 Q32846.9819,699.5986 32846.6499,699.1794 Q32846.3179,698.7603 32845.687,698.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="121" x="32865.75" y="701.5352">AnalyzeColumnsExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32661.5" x2="33158.5" y1="713" y2="713"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="721"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="32680.5" y="727.6348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="733.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="32680.5" y="740.5898">physicalTableID int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="746.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="32680.5" y="753.5449">colsInfo []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="759.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="32680.5" y="766.5">pkInfo *model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="772.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="32680.5" y="779.4551">concurrency int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="785.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="32680.5" y="792.4102">priority int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="798.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="32680.5" y="805.3652">analyzePB *tipb.AnalyzeReq</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="811.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="32680.5" y="818.3203">resultHandler *tableResultHandler</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="824.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="32680.5" y="831.2754">opts</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="32707.5" y="831.2754">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="32730.5" y="831.2754">[ast.AnalyzeOptionType]uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="837.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="32680.5" y="844.2305">job *statistics.AnalyzeJob</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32661.5" x2="33158.5" y1="850.5508" y2="850.5508"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="858.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="32680.5" y="865.1855">open(ranges []*ranger.Range) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="871.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="32680.5" y="878.1406">buildResp(ranges []*ranger.Range) (distsql.SelectResult, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32668.5" y="884.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="32680.5" y="891.0957">buildStats(ranges []*ranger.Range) ([]*statistics.Histogram, []*statistics.CMSketch, error)</text><!--MD5=[76a074c4ccd63f4499b558ce1438670a]
class executor.AnalyzeExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.AnalyzeExec" style="stroke: #A80036; stroke-width: 1.5;" width="546" x="8238" y="2451"/><ellipse cx="8470.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8469.9834,2468.063 Q8468.1323,2467.3574 8467.4766,2466.5813 Q8466.8208,2465.8052 8466.8208,2464.4937 Q8466.8208,2462.8086 8467.8999,2461.8457 Q8468.979,2460.8828 8470.8633,2460.8828 Q8471.7183,2460.8828 8472.5732,2461.0779 Q8473.4282,2461.2729 8474.2666,2461.6548 L8474.2666,2464.0454 Q8473.478,2463.4893 8472.6646,2463.1987 Q8471.8511,2462.9082 8471.0542,2462.9082 Q8470.166,2462.9082 8469.6929,2463.2651 Q8469.2197,2463.6221 8469.2197,2464.2861 Q8469.2197,2464.8008 8469.5642,2465.137 Q8469.9087,2465.4731 8471.0044,2465.8799 L8472.0586,2466.2783 Q8473.5527,2466.8262 8474.2583,2467.731 Q8474.9639,2468.6357 8474.9639,2470.0137 Q8474.9639,2471.8896 8473.8557,2472.8152 Q8472.7476,2473.7407 8470.5063,2473.7407 Q8469.585,2473.7407 8468.6594,2473.5208 Q8467.7339,2473.3008 8466.8706,2472.8691 L8466.8706,2470.3374 Q8467.8501,2471.0347 8468.7673,2471.375 Q8469.6846,2471.7153 8470.5811,2471.7153 Q8471.4858,2471.7153 8471.9839,2471.3044 Q8472.4819,2470.8936 8472.4819,2470.1548 Q8472.4819,2469.5986 8472.1499,2469.1794 Q8471.8179,2468.7603 8471.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="8491.25" y="2471.5352">AnalyzeExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8239" x2="8783" y1="2483" y2="2483"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8246" y="2491"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="8258" y="2497.6348">tasks []*analyzeTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8246" y="2503.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="8258" y="2510.5898">wg *sync.WaitGroup</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8239" x2="8783" y1="2516.9102" y2="2516.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8246" y="2524.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="8258" y="2531.5449">analyzeWorker(taskCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="8380" y="2531.5449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="8409" y="2531.5449">*analyzeTask, resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="8534" y="2531.5449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="8563" y="2531.5449">analyzeResult, isCloseChanThread bool)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="8261" y="2544.5"/><ellipse cx="8249" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="8258" y="2557.4551">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[ac89b5995fe31d434df5e4f38a3a4ed0]
class executor.AnalyzeFastExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="462.5625" id="executor.AnalyzeFastExec" style="stroke: #A80036; stroke-width: 1.5;" width="839" x="31786.5" y="557.5"/><ellipse cx="32154.25" cy="573.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32153.4834,574.563 Q32151.6323,573.8574 32150.9766,573.0813 Q32150.3208,572.3052 32150.3208,570.9937 Q32150.3208,569.3086 32151.3999,568.3457 Q32152.479,567.3828 32154.3633,567.3828 Q32155.2183,567.3828 32156.0732,567.5779 Q32156.9282,567.7729 32157.7666,568.1548 L32157.7666,570.5454 Q32156.978,569.9893 32156.1646,569.6987 Q32155.3511,569.4082 32154.5542,569.4082 Q32153.666,569.4082 32153.1929,569.7651 Q32152.7197,570.1221 32152.7197,570.7861 Q32152.7197,571.3008 32153.0642,571.637 Q32153.4087,571.9731 32154.5044,572.3799 L32155.5586,572.7783 Q32157.0527,573.3262 32157.7583,574.231 Q32158.4639,575.1357 32158.4639,576.5137 Q32158.4639,578.3896 32157.3557,579.3152 Q32156.2476,580.2407 32154.0063,580.2407 Q32153.085,580.2407 32152.1594,580.0208 Q32151.2339,579.8008 32150.3706,579.3691 L32150.3706,576.8374 Q32151.3501,577.5347 32152.2673,577.875 Q32153.1846,578.2153 32154.0811,578.2153 Q32154.9858,578.2153 32155.4839,577.8044 Q32155.9819,577.3936 32155.9819,576.6548 Q32155.9819,576.0986 32155.6499,575.6794 Q32155.3179,575.2603 32154.687,575.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="32174.75" y="578.0352">AnalyzeFastExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31787.5" x2="32624.5" y1="589.5" y2="589.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="597.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="31806.5" y="604.1348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="610.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="31806.5" y="617.0898">physicalTableID int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="623.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="31806.5" y="630.0449">pkInfo *model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="636.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="31806.5" y="643">colsInfo []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="649.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="31806.5" y="655.9551">idxsInfo []*model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="662.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="31806.5" y="668.9102">concurrency int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="675.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="31806.5" y="681.8652">opts</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="31833.5" y="681.8652">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="31856.5" y="681.8652">[ast.AnalyzeOptionType]uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="688.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="31806.5" y="694.8203">tblInfo *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="701.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="31806.5" y="707.7754">cache *tikv.RegionCache</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="714.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="31806.5" y="720.7305">wg *sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="727.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="31806.5" y="733.6855">sampLocs</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="31863.5" y="733.6855">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="31892.5" y="733.6855">*tikv.KeyLocation</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="740.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="31806.5" y="746.6406">rowCount uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="752.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="31806.5" y="759.5957">sampCursor int32</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="765.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="31806.5" y="772.5508">sampTasks []*AnalyzeFastTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="778.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="31806.5" y="785.5059">scanTasks []*tikv.KeyLocation</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="791.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="31806.5" y="798.4609">collectors []*statistics.SampleCollector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="804.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="31806.5" y="811.416">randSeed int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="817.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="31806.5" y="824.3711">job *statistics.AnalyzeJob</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31787.5" x2="32624.5" y1="830.6914" y2="830.6914"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="838.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="584" x="31806.5" y="845.3262">getSampRegionsRowCount(bo *tikv.Backoffer, needRebuild *bool, err *error, sampTasks *[]*AnalyzeFastTask)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="851.6465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="31806.5" y="858.2813">getNextSampleKey(bo *tikv.Backoffer, startKey kv.Key) (kv.Key, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="864.6016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="31806.5" y="871.2363">buildSampTask() (bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="877.5566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="31806.5" y="884.1914">decodeValues(sValue []byte) (</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="31964.5" y="884.1914">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="31987.5" y="884.1914">[int64]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="890.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="31806.5" y="897.1465">getValueByInfo(colInfo *model.ColumnInfo, values</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="32076.5" y="897.1465">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="32099.5" y="897.1465">[int64]types.Datum) (types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="903.4668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="31806.5" y="910.1016">updateCollectorSamples(sValue []byte, sKey kv.Key, samplePos int32, hasPKInfo int) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="916.4219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="31806.5" y="923.0566">handleBatchSeekResponse(kvMap</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="31988.5" y="923.0566">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="32011.5" y="923.0566">[string][]byte) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="929.377"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="31806.5" y="936.0117">handleScanIter(iter kv.Iterator) (int, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="942.332"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="31806.5" y="948.9668">handleScanTasks(bo *tikv.Backoffer) (int, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="955.2871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="31806.5" y="961.9219">handleSampTasks(bo *tikv.Backoffer, workID int, err *error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="968.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="813" x="31806.5" y="974.877">buildColumnStats(ID int64, collector *statistics.SampleCollector, tp *types.FieldType, rowCount int64) (*statistics.Histogram, *statistics.CMSketch, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="981.1973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="784" x="31806.5" y="987.832">buildIndexStats(idxInfo *model.IndexInfo, collector *statistics.SampleCollector, rowCount int64) (*statistics.Histogram, *statistics.CMSketch, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="994.1523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="31806.5" y="1000.7871">runTasks() ([]*statistics.Histogram, []*statistics.CMSketch, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31794.5" y="1007.1074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="31806.5" y="1013.7422">buildStats() ([]*statistics.Histogram, []*statistics.CMSketch, error)</text><!--MD5=[c118a2f3834a7cf933c9a89c5272cda9]
class executor.AnalyzeFastTask--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.AnalyzeFastTask" style="stroke: #A80036; stroke-width: 1.5;" width="167" x="33424.5" y="739"/><ellipse cx="33457.05" cy="755" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33456.2834,756.063 Q33454.4323,755.3574 33453.7766,754.5813 Q33453.1208,753.8052 33453.1208,752.4937 Q33453.1208,750.8086 33454.1999,749.8457 Q33455.279,748.8828 33457.1633,748.8828 Q33458.0183,748.8828 33458.8732,749.0779 Q33459.7282,749.2729 33460.5666,749.6548 L33460.5666,752.0454 Q33459.778,751.4893 33458.9646,751.1987 Q33458.1511,750.9082 33457.3542,750.9082 Q33456.466,750.9082 33455.9929,751.2651 Q33455.5197,751.6221 33455.5197,752.2861 Q33455.5197,752.8008 33455.8642,753.137 Q33456.2087,753.4731 33457.3044,753.8799 L33458.3586,754.2783 Q33459.8527,754.8262 33460.5583,755.731 Q33461.2639,756.6357 33461.2639,758.0137 Q33461.2639,759.8896 33460.1557,760.8152 Q33459.0476,761.7407 33456.8063,761.7407 Q33455.885,761.7407 33454.9594,761.5208 Q33454.0339,761.3008 33453.1706,760.8691 L33453.1706,758.3374 Q33454.1501,759.0347 33455.0673,759.375 Q33455.9846,759.7153 33456.8811,759.7153 Q33457.7858,759.7153 33458.2839,759.3044 Q33458.7819,758.8936 33458.7819,758.1548 Q33458.7819,757.5986 33458.4499,757.1794 Q33458.1179,756.7603 33457.487,756.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="33474.95" y="759.5352">AnalyzeFastTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33425.5" x2="33590.5" y1="771" y2="771"/><ellipse cx="33435.5" cy="782" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="33444.5" y="785.6348">Location *tikv.KeyLocation</text><ellipse cx="33435.5" cy="794.9551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="33444.5" y="798.5898">SampSize uint64</text><ellipse cx="33435.5" cy="807.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="33444.5" y="811.5449">BeginOffset uint64</text><ellipse cx="33435.5" cy="820.8652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="33444.5" y="824.5">EndOffset uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33425.5" x2="33590.5" y1="830.8203" y2="830.8203"/><!--MD5=[64bd7d145df8daa150c79ebc39ffda4b]
class executor.AnalyzeIndexExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="229.3711" id="executor.AnalyzeIndexExec" style="stroke: #A80036; stroke-width: 1.5;" width="638" x="31113" y="674.5"/><ellipse cx="31375.75" cy="690.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31374.9834,691.563 Q31373.1323,690.8574 31372.4766,690.0813 Q31371.8208,689.3052 31371.8208,687.9937 Q31371.8208,686.3086 31372.8999,685.3457 Q31373.979,684.3828 31375.8633,684.3828 Q31376.7183,684.3828 31377.5732,684.5779 Q31378.4282,684.7729 31379.2666,685.1548 L31379.2666,687.5454 Q31378.478,686.9893 31377.6646,686.6987 Q31376.8511,686.4082 31376.0542,686.4082 Q31375.166,686.4082 31374.6929,686.7651 Q31374.2197,687.1221 31374.2197,687.7861 Q31374.2197,688.3008 31374.5642,688.637 Q31374.9087,688.9731 31376.0044,689.3799 L31377.0586,689.7783 Q31378.5527,690.3262 31379.2583,691.231 Q31379.9639,692.1357 31379.9639,693.5137 Q31379.9639,695.3896 31378.8557,696.3152 Q31377.7476,697.2407 31375.5063,697.2407 Q31374.585,697.2407 31373.6594,697.0208 Q31372.7339,696.8008 31371.8706,696.3691 L31371.8706,693.8374 Q31372.8501,694.5347 31373.7673,694.875 Q31374.6846,695.2153 31375.5811,695.2153 Q31376.4858,695.2153 31376.9839,694.8044 Q31377.4819,694.3936 31377.4819,693.6548 Q31377.4819,693.0986 31377.1499,692.6794 Q31376.8179,692.2603 31376.187,692.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="31396.25" y="695.0352">AnalyzeIndexExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31114" x2="31750" y1="706.5" y2="706.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="714.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="31133" y="721.1348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="727.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="31133" y="734.0898">physicalTableID int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="740.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="31133" y="747.0449">idxInfo *model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="753.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="31133" y="760">concurrency int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="766.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="31133" y="772.9551">priority int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="779.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="31133" y="785.9102">analyzePB *tipb.AnalyzeReq</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="792.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="31133" y="798.8652">result distsql.SelectResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="805.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="31133" y="811.8203">countNullRes distsql.SelectResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="818.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="31133" y="824.7754">opts</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="31160" y="824.7754">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="31183" y="824.7754">[ast.AnalyzeOptionType]uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="831.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="31133" y="837.7305">job *statistics.AnalyzeJob</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31114" x2="31750" y1="844.0508" y2="844.0508"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="852.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="31133" y="858.6855">fetchAnalyzeResult(ranges []*ranger.Range, isNullRange bool) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="865.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="31133" y="871.6406">open(ranges []*ranger.Range, considerNull bool) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="877.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="31133" y="884.5957">buildStatsFromResult(result distsql.SelectResult, needCMS bool) (*statistics.Histogram, *statistics.CMSketch, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31121" y="890.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="31133" y="897.5508">buildStats(ranges []*ranger.Range, considerNull bool) (*statistics.Histogram, *statistics.CMSketch, error)</text><!--MD5=[ac4abc45da7dfc4901354cff4b066784]
class executor.AnalyzeTestFastExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="177.5508" id="executor.AnalyzeTestFastExec" style="stroke: #A80036; stroke-width: 1.5;" width="245" x="34015.5" y="1637"/><ellipse cx="34073.75" cy="1653" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34072.9834,1654.063 Q34071.1323,1653.3574 34070.4766,1652.5813 Q34069.8208,1651.8052 34069.8208,1650.4937 Q34069.8208,1648.8086 34070.8999,1647.8457 Q34071.979,1646.8828 34073.8633,1646.8828 Q34074.7183,1646.8828 34075.5732,1647.0779 Q34076.4282,1647.2729 34077.2666,1647.6548 L34077.2666,1650.0454 Q34076.478,1649.4893 34075.6646,1649.1987 Q34074.8511,1648.9082 34074.0542,1648.9082 Q34073.166,1648.9082 34072.6929,1649.2651 Q34072.2197,1649.6221 34072.2197,1650.2861 Q34072.2197,1650.8008 34072.5642,1651.137 Q34072.9087,1651.4731 34074.0044,1651.8799 L34075.0586,1652.2783 Q34076.5527,1652.8262 34077.2583,1653.731 Q34077.9639,1654.6357 34077.9639,1656.0137 Q34077.9639,1657.8896 34076.8557,1658.8152 Q34075.7476,1659.7407 34073.5063,1659.7407 Q34072.585,1659.7407 34071.6594,1659.5208 Q34070.7339,1659.3008 34069.8706,1658.8691 L34069.8706,1656.3374 Q34070.8501,1657.0347 34071.7673,1657.375 Q34072.6846,1657.7153 34073.5811,1657.7153 Q34074.4858,1657.7153 34074.9839,1657.3044 Q34075.4819,1656.8936 34075.4819,1656.1548 Q34075.4819,1655.5986 34075.1499,1655.1794 Q34074.8179,1654.7603 34074.187,1654.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="120" x="34094.25" y="1657.5352">AnalyzeTestFastExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34016.5" x2="34259.5" y1="1669" y2="1669"/><ellipse cx="34026.5" cy="1680" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="34035.5" y="1683.6348">Ctx sessionctx.Context</text><ellipse cx="34026.5" cy="1692.9551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="34035.5" y="1696.5898">PhysicalTableID int64</text><ellipse cx="34026.5" cy="1705.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="34035.5" y="1709.5449">PKInfo *model.ColumnInfo</text><ellipse cx="34026.5" cy="1718.8652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="34035.5" y="1722.5">ColsInfo []*model.ColumnInfo</text><ellipse cx="34026.5" cy="1731.8203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="34035.5" y="1735.4551">IdxsInfo []*model.IndexInfo</text><ellipse cx="34026.5" cy="1744.7754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="34035.5" y="1748.4102">Concurrency int</text><ellipse cx="34026.5" cy="1757.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="34035.5" y="1761.3652">Collectors []*statistics.SampleCollector</text><ellipse cx="34026.5" cy="1770.6855" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="34035.5" y="1774.3203">TblInfo *model.TableInfo</text><ellipse cx="34026.5" cy="1783.6406" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="34035.5" y="1787.2754">Opts</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="34064.5" y="1787.2754">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="34087.5" y="1787.2754">[ast.AnalyzeOptionType]uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34016.5" x2="34259.5" y1="1793.5957" y2="1793.5957"/><ellipse cx="34026.5" cy="1804.5957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="34035.5" y="1808.2305">TestFastSample() error</text><!--MD5=[426f64b137ed76238e3bda4e2d7acb7a]
class executor.BRIEExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.BRIEExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="9154" y="2457.5"/><ellipse cx="9273.75" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9272.9834,2474.563 Q9271.1323,2473.8574 9270.4766,2473.0813 Q9269.8208,2472.3052 9269.8208,2470.9937 Q9269.8208,2469.3086 9270.8999,2468.3457 Q9271.979,2467.3828 9273.8633,2467.3828 Q9274.7183,2467.3828 9275.5732,2467.5779 Q9276.4282,2467.7729 9277.2666,2468.1548 L9277.2666,2470.5454 Q9276.478,2469.9893 9275.6646,2469.6987 Q9274.8511,2469.4082 9274.0542,2469.4082 Q9273.166,2469.4082 9272.6929,2469.7651 Q9272.2197,2470.1221 9272.2197,2470.7861 Q9272.2197,2471.3008 9272.5642,2471.637 Q9272.9087,2471.9731 9274.0044,2472.3799 L9275.0586,2472.7783 Q9276.5527,2473.3262 9277.2583,2474.231 Q9277.9639,2475.1357 9277.9639,2476.5137 Q9277.9639,2478.3896 9276.8557,2479.3152 Q9275.7476,2480.2407 9273.5063,2480.2407 Q9272.585,2480.2407 9271.6594,2480.0208 Q9270.7339,2479.8008 9269.8706,2479.3691 L9269.8706,2476.8374 Q9270.8501,2477.5347 9271.7673,2477.875 Q9272.6846,2478.2153 9273.5811,2478.2153 Q9274.4858,2478.2153 9274.9839,2477.8044 Q9275.4819,2477.3936 9275.4819,2476.6548 Q9275.4819,2476.0986 9275.1499,2475.6794 Q9274.8179,2475.2603 9274.187,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="9294.25" y="2478.0352">BRIEExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9155" x2="9453" y1="2489.5" y2="2489.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9162" y="2497.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="9174" y="2504.1348">backupCfg *task.BackupConfig</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9162" y="2510.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="9174" y="2517.0898">restoreCfg *task.RestoreConfig</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9162" y="2523.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="9174" y="2530.0449">info *brieTaskInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9155" x2="9453" y1="2536.3652" y2="2536.3652"/><ellipse cx="9165" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="9174" y="2551">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[14e6bc979041d011e28148dfe01c733c]
class executor.BatchPointGetExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="397.7871" id="executor.BatchPointGetExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="25237" y="2308.5"/><ellipse cx="25329.75" cy="2324.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25328.9834,2325.563 Q25327.1323,2324.8574 25326.4766,2324.0813 Q25325.8208,2323.3052 25325.8208,2321.9937 Q25325.8208,2320.3086 25326.8999,2319.3457 Q25327.979,2318.3828 25329.8633,2318.3828 Q25330.7183,2318.3828 25331.5732,2318.5779 Q25332.4282,2318.7729 25333.2666,2319.1548 L25333.2666,2321.5454 Q25332.478,2320.9893 25331.6646,2320.6987 Q25330.8511,2320.4082 25330.0542,2320.4082 Q25329.166,2320.4082 25328.6929,2320.7651 Q25328.2197,2321.1221 25328.2197,2321.7861 Q25328.2197,2322.3008 25328.5642,2322.637 Q25328.9087,2322.9731 25330.0044,2323.3799 L25331.0586,2323.7783 Q25332.5527,2324.3262 25333.2583,2325.231 Q25333.9639,2326.1357 25333.9639,2327.5137 Q25333.9639,2329.3896 25332.8557,2330.3152 Q25331.7476,2331.2407 25329.5063,2331.2407 Q25328.585,2331.2407 25327.6594,2331.0208 Q25326.7339,2330.8008 25325.8706,2330.3691 L25325.8706,2327.8374 Q25326.8501,2328.5347 25327.7673,2328.875 Q25328.6846,2329.2153 25329.5811,2329.2153 Q25330.4858,2329.2153 25330.9839,2328.8044 Q25331.4819,2328.3936 25331.4819,2327.6548 Q25331.4819,2327.0986 25331.1499,2326.6794 Q25330.8179,2326.2603 25330.187,2326.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="25350.25" y="2329.0352">BatchPointGetExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25238" x2="25536" y1="2340.5" y2="2340.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2348.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="25257" y="2355.1348">tblInfo *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2361.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="25257" y="2368.0898">idxInfo *model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2374.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="25257" y="2381.0449">handles []int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2387.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="25257" y="2394">physIDs []int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2400.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="25257" y="2406.9551">partPos int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2413.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="25257" y="2419.9102">idxVals [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2426.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="25257" y="2432.8652">startTS uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2439.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="25257" y="2445.8203">snapshotTS uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2452.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="25257" y="2458.7754">txn kv.Transaction</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2465.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="25257" y="2471.7305">lock bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2478.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="25257" y="2484.6855">waitTime int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2491.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="25257" y="2497.6406">inited bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2503.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="25257" y="2510.5957">values [][]byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2516.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="25257" y="2523.5508">index int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2529.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="25257" y="2536.5059">rowDecoder *rowcodec.ChunkDecoder</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2542.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="25257" y="2549.4609">keepOrder bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2555.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="25257" y="2562.416">desc bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2568.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="25257" y="2575.3711">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2581.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="25257" y="2588.3262">virtualColumnIndex []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2594.6465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="25257" y="2601.2813">virtualColumnRetFieldTypes []*types.FieldType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25238" x2="25536" y1="2607.6016" y2="2607.6016"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2615.6016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="25257" y="2622.2363">buildVirtualColumnInfo()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2628.5566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="25257" y="2635.1914">initialize(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25245" y="2641.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="25257" y="2648.1465">lockKeys(ctx context.Context, keys []kv.Key) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="25260" y="2661.1016"/><ellipse cx="25248" cy="2670.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="25257" y="2674.0566">Open( context.Context) error</text><ellipse cx="25248" cy="2683.377" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="25257" y="2687.0117">Close() error</text><ellipse cx="25248" cy="2696.332" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="25257" y="2699.9668">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[635cbdca93a7534fa53861ec4ef01228]
class executor.CancelDDLJobsExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.CancelDDLJobsExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="13142" y="2457.5"/><ellipse cx="13230.75" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M13229.9834,2474.563 Q13228.1323,2473.8574 13227.4766,2473.0813 Q13226.8208,2472.3052 13226.8208,2470.9937 Q13226.8208,2469.3086 13227.8999,2468.3457 Q13228.979,2467.3828 13230.8633,2467.3828 Q13231.7183,2467.3828 13232.5732,2467.5779 Q13233.4282,2467.7729 13234.2666,2468.1548 L13234.2666,2470.5454 Q13233.478,2469.9893 13232.6646,2469.6987 Q13231.8511,2469.4082 13231.0542,2469.4082 Q13230.166,2469.4082 13229.6929,2469.7651 Q13229.2197,2470.1221 13229.2197,2470.7861 Q13229.2197,2471.3008 13229.5642,2471.637 Q13229.9087,2471.9731 13231.0044,2472.3799 L13232.0586,2472.7783 Q13233.5527,2473.3262 13234.2583,2474.231 Q13234.9639,2475.1357 13234.9639,2476.5137 Q13234.9639,2478.3896 13233.8557,2479.3152 Q13232.7476,2480.2407 13230.5063,2480.2407 Q13229.585,2480.2407 13228.6594,2480.0208 Q13227.7339,2479.8008 13226.8706,2479.3691 L13226.8706,2476.8374 Q13227.8501,2477.5347 13228.7673,2477.875 Q13229.6846,2478.2153 13230.5811,2478.2153 Q13231.4858,2478.2153 13231.9839,2477.8044 Q13232.4819,2477.3936 13232.4819,2476.6548 Q13232.4819,2476.0986 13232.1499,2475.6794 Q13231.8179,2475.2603 13231.187,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="13251.25" y="2478.0352">CancelDDLJobsExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13143" x2="13441" y1="2489.5" y2="2489.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13150" y="2497.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="13162" y="2504.1348">cursor int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13150" y="2510.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="13162" y="2517.0898">jobIDs []int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13150" y="2523.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="13162" y="2530.0449">errs []error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13143" x2="13441" y1="2536.3652" y2="2536.3652"/><ellipse cx="13153" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="13162" y="2551">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[22b8a0098a20d16ca0a188f1a29fbc99]
class executor.ChangeExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.ChangeExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="3221" y="2477"/><ellipse cx="3331.75" cy="2493" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3330.9834,2494.063 Q3329.1323,2493.3574 3328.4766,2492.5813 Q3327.8208,2491.8052 3327.8208,2490.4937 Q3327.8208,2488.8086 3328.8999,2487.8457 Q3329.979,2486.8828 3331.8633,2486.8828 Q3332.7183,2486.8828 3333.5732,2487.0779 Q3334.4282,2487.2729 3335.2666,2487.6548 L3335.2666,2490.0454 Q3334.478,2489.4893 3333.6646,2489.1987 Q3332.8511,2488.9082 3332.0542,2488.9082 Q3331.166,2488.9082 3330.6929,2489.2651 Q3330.2197,2489.6221 3330.2197,2490.2861 Q3330.2197,2490.8008 3330.5642,2491.137 Q3330.9087,2491.4731 3332.0044,2491.8799 L3333.0586,2492.2783 Q3334.5527,2492.8262 3335.2583,2493.731 Q3335.9639,2494.6357 3335.9639,2496.0137 Q3335.9639,2497.8896 3334.8557,2498.8152 Q3333.7476,2499.7407 3331.5063,2499.7407 Q3330.585,2499.7407 3329.6594,2499.5208 Q3328.7339,2499.3008 3327.8706,2498.8691 L3327.8706,2496.3374 Q3328.8501,2497.0347 3329.7673,2497.375 Q3330.6846,2497.7153 3331.5811,2497.7153 Q3332.4858,2497.7153 3332.9839,2497.3044 Q3333.4819,2496.8936 3333.4819,2496.1548 Q3333.4819,2495.5986 3333.1499,2495.1794 Q3332.8179,2494.7603 3332.187,2494.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="3352.25" y="2497.5352">ChangeExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3222" x2="3520" y1="2509" y2="2509"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3222" x2="3520" y1="2517" y2="2517"/><ellipse cx="3232" cy="2528" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="3241" y="2531.6348">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[1730a8c1fd92f9b8a8436ad3dc2465d4]
class executor.CheckIndexRangeExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="229.3711" id="executor.CheckIndexRangeExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="25572" y="2393"/><ellipse cx="25652.75" cy="2409" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25651.9834,2410.063 Q25650.1323,2409.3574 25649.4766,2408.5813 Q25648.8208,2407.8052 25648.8208,2406.4937 Q25648.8208,2404.8086 25649.8999,2403.8457 Q25650.979,2402.8828 25652.8633,2402.8828 Q25653.7183,2402.8828 25654.5732,2403.0779 Q25655.4282,2403.2729 25656.2666,2403.6548 L25656.2666,2406.0454 Q25655.478,2405.4893 25654.6646,2405.1987 Q25653.8511,2404.9082 25653.0542,2404.9082 Q25652.166,2404.9082 25651.6929,2405.2651 Q25651.2197,2405.6221 25651.2197,2406.2861 Q25651.2197,2406.8008 25651.5642,2407.137 Q25651.9087,2407.4731 25653.0044,2407.8799 L25654.0586,2408.2783 Q25655.5527,2408.8262 25656.2583,2409.731 Q25656.9639,2410.6357 25656.9639,2412.0137 Q25656.9639,2413.8896 25655.8557,2414.8152 Q25654.7476,2415.7407 25652.5063,2415.7407 Q25651.585,2415.7407 25650.6594,2415.5208 Q25649.7339,2415.3008 25648.8706,2414.8691 L25648.8706,2412.3374 Q25649.8501,2413.0347 25650.7673,2413.375 Q25651.6846,2413.7153 25652.5811,2413.7153 Q25653.4858,2413.7153 25653.9839,2413.3044 Q25654.4819,2412.8936 25654.4819,2412.1548 Q25654.4819,2411.5986 25654.1499,2411.1794 Q25653.8179,2410.7603 25653.187,2410.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="130" x="25673.25" y="2413.5352">CheckIndexRangeExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25573" x2="25871" y1="2425" y2="2425"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25580" y="2433"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="25592" y="2439.6348">table *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25580" y="2445.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="25592" y="2452.5898">index *model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25580" y="2458.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="25592" y="2465.5449">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25580" y="2471.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="25592" y="2478.5">startKey []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25580" y="2484.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="25592" y="2491.4551">handleRanges []ast.HandleRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25580" y="2497.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="25592" y="2504.4102">srcChunk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25580" y="2510.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="25592" y="2517.3652">result distsql.SelectResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25580" y="2523.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="25592" y="2530.3203">cols []*model.ColumnInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25573" x2="25871" y1="2536.6406" y2="2536.6406"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25580" y="2544.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="25592" y="2551.2754">buildDAGPB() (*tipb.DAGRequest, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25580" y="2557.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="25592" y="2564.2305">constructIndexScanPB() *tipb.Executor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="25595" y="2577.1855"/><ellipse cx="25583" cy="2586.5059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="25592" y="2590.1406">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="25583" cy="2599.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="25592" y="2603.0957">Open(ctx context.Context) error</text><ellipse cx="25583" cy="2612.416" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="25592" y="2616.0508">Close() error</text><!--MD5=[51107c9c740892a10c56ed51814700d9]
class executor.CheckTableExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="268.2363" id="executor.CheckTableExec" style="stroke: #A80036; stroke-width: 1.5;" width="438" x="25907" y="2373.5"/><ellipse cx="26074.25" cy="2389.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26073.4834,2390.563 Q26071.6323,2389.8574 26070.9766,2389.0813 Q26070.3208,2388.3052 26070.3208,2386.9937 Q26070.3208,2385.3086 26071.3999,2384.3457 Q26072.479,2383.3828 26074.3633,2383.3828 Q26075.2183,2383.3828 26076.0732,2383.5779 Q26076.9282,2383.7729 26077.7666,2384.1548 L26077.7666,2386.5454 Q26076.978,2385.9893 26076.1646,2385.6987 Q26075.3511,2385.4082 26074.5542,2385.4082 Q26073.666,2385.4082 26073.1929,2385.7651 Q26072.7197,2386.1221 26072.7197,2386.7861 Q26072.7197,2387.3008 26073.0642,2387.637 Q26073.4087,2387.9731 26074.5044,2388.3799 L26075.5586,2388.7783 Q26077.0527,2389.3262 26077.7583,2390.231 Q26078.4639,2391.1357 26078.4639,2392.5137 Q26078.4639,2394.3896 26077.3557,2395.3152 Q26076.2476,2396.2407 26074.0063,2396.2407 Q26073.085,2396.2407 26072.1594,2396.0208 Q26071.2339,2395.8008 26070.3706,2395.3691 L26070.3706,2392.8374 Q26071.3501,2393.5347 26072.2673,2393.875 Q26073.1846,2394.2153 26074.0811,2394.2153 Q26074.9858,2394.2153 26075.4839,2393.8044 Q26075.9819,2393.3936 26075.9819,2392.6548 Q26075.9819,2392.0986 26075.6499,2391.6794 Q26075.3179,2391.2603 26074.687,2391.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="26094.75" y="2394.0352">CheckTableExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25908" x2="26344" y1="2405.5" y2="2405.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2413.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="25927" y="2420.1348">dbName string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2426.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="25927" y="2433.0898">table table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2439.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="25927" y="2446.0449">indexInfos []*model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2452.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="25927" y="2459">srcs []*IndexLookUpExecutor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2465.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="25927" y="2471.9551">done bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2478.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="25927" y="2484.9102">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2491.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="25927" y="2497.8652">exitCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="25965" y="2497.8652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="25994" y="2497.8652"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="25994" y="2497.8652">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="26026" y="2497.8652">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2504.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="25927" y="2510.8203">retCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="25960" y="2510.8203">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="25989" y="2510.8203">error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2517.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="25927" y="2523.7754">checkIndex bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25908" x2="26344" y1="2530.0957" y2="2530.0957"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2538.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="25927" y="2544.7305">checkTableIndexHandle(ctx context.Context, idxInfo *model.IndexInfo) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2551.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="25927" y="2557.6855">checkIndexHandle(ctx context.Context, src *IndexLookUpExecutor) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2564.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="25927" y="2570.6406">handlePanic(r</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="26003" y="2570.6406">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="26050" y="2570.6406">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25915" y="2576.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="25927" y="2583.5957">checkTableRecord(idxOffset int) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="25930" y="2596.5508"/><ellipse cx="25918" cy="2605.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="25927" y="2609.5059">Open(ctx context.Context) error</text><ellipse cx="25918" cy="2618.8262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="25927" y="2622.4609">Close() error</text><ellipse cx="25918" cy="2631.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="25927" y="2635.416">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[86d218b4e1edc3be0115e4fa264a0aeb]
class executor.ChecksumTableExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="164.5957" id="executor.ChecksumTableExec" style="stroke: #A80036; stroke-width: 1.5;" width="455" x="17273.5" y="2425"/><ellipse cx="17437.25" cy="2441" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M17436.4834,2442.063 Q17434.6323,2441.3574 17433.9766,2440.5813 Q17433.3208,2439.8052 17433.3208,2438.4937 Q17433.3208,2436.8086 17434.3999,2435.8457 Q17435.479,2434.8828 17437.3633,2434.8828 Q17438.2183,2434.8828 17439.0732,2435.0779 Q17439.9282,2435.2729 17440.7666,2435.6548 L17440.7666,2438.0454 Q17439.978,2437.4893 17439.1646,2437.1987 Q17438.3511,2436.9082 17437.5542,2436.9082 Q17436.666,2436.9082 17436.1929,2437.2651 Q17435.7197,2437.6221 17435.7197,2438.2861 Q17435.7197,2438.8008 17436.0642,2439.137 Q17436.4087,2439.4731 17437.5044,2439.8799 L17438.5586,2440.2783 Q17440.0527,2440.8262 17440.7583,2441.731 Q17441.4639,2442.6357 17441.4639,2444.0137 Q17441.4639,2445.8896 17440.3557,2446.8152 Q17439.2476,2447.7407 17437.0063,2447.7407 Q17436.085,2447.7407 17435.1594,2447.5208 Q17434.2339,2447.3008 17433.3706,2446.8691 L17433.3706,2444.3374 Q17434.3501,2445.0347 17435.2673,2445.375 Q17436.1846,2445.7153 17437.0811,2445.7153 Q17437.9858,2445.7153 17438.4839,2445.3044 Q17438.9819,2444.8936 17438.9819,2444.1548 Q17438.9819,2443.5986 17438.6499,2443.1794 Q17438.3179,2442.7603 17437.687,2442.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="17457.75" y="2445.5352">ChecksumTableExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="17274.5" x2="17727.5" y1="2457" y2="2457"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17281.5" y="2465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="17293.5" y="2471.6348">tables</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="17328.5" y="2471.6348">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="17351.5" y="2471.6348">[int64]*checksumContext</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17281.5" y="2477.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="17293.5" y="2484.5898">done bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="17274.5" x2="17727.5" y1="2490.9102" y2="2490.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17281.5" y="2498.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="17293.5" y="2505.5449">buildTasks() ([]*checksumTask, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17281.5" y="2511.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="17293.5" y="2518.5">handleResult(result *checksumResult)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17281.5" y="2524.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="17293.5" y="2531.4551">checksumWorker(taskCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="17429.5" y="2531.4551">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="17458.5" y="2531.4551">*checksumTask, resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="17597.5" y="2531.4551">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="17626.5" y="2531.4551">*checksumResult)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17281.5" y="2537.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="17293.5" y="2544.4102">handleChecksumRequest(req *kv.Request) (*tipb.ChecksumResponse, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="17296.5" y="2557.3652"/><ellipse cx="17284.5" cy="2566.6855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="17293.5" y="2570.3203">Open(ctx context.Context) error</text><ellipse cx="17284.5" cy="2579.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="17293.5" y="2583.2754">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[d46825ca3aec45677774d50a968cc213]
class executor.CleanupIndexExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="410.7422" id="executor.CleanupIndexExec" style="stroke: #A80036; stroke-width: 1.5;" width="477" x="26380.5" y="2302"/><ellipse cx="26561.75" cy="2318" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26560.9834,2319.063 Q26559.1323,2318.3574 26558.4766,2317.5813 Q26557.8208,2316.8052 26557.8208,2315.4937 Q26557.8208,2313.8086 26558.8999,2312.8457 Q26559.979,2311.8828 26561.8633,2311.8828 Q26562.7183,2311.8828 26563.5732,2312.0779 Q26564.4282,2312.2729 26565.2666,2312.6548 L26565.2666,2315.0454 Q26564.478,2314.4893 26563.6646,2314.1987 Q26562.8511,2313.9082 26562.0542,2313.9082 Q26561.166,2313.9082 26560.6929,2314.2651 Q26560.2197,2314.6221 26560.2197,2315.2861 Q26560.2197,2315.8008 26560.5642,2316.137 Q26560.9087,2316.4731 26562.0044,2316.8799 L26563.0586,2317.2783 Q26564.5527,2317.8262 26565.2583,2318.731 Q26565.9639,2319.6357 26565.9639,2321.0137 Q26565.9639,2322.8896 26564.8557,2323.8152 Q26563.7476,2324.7407 26561.5063,2324.7407 Q26560.585,2324.7407 26559.6594,2324.5208 Q26558.7339,2324.3008 26557.8706,2323.8691 L26557.8706,2321.3374 Q26558.8501,2322.0347 26559.7673,2322.375 Q26560.6846,2322.7153 26561.5811,2322.7153 Q26562.4858,2322.7153 26562.9839,2322.3044 Q26563.4819,2321.8936 26563.4819,2321.1548 Q26563.4819,2320.5986 26563.1499,2320.1794 Q26562.8179,2319.7603 26562.187,2319.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="26582.25" y="2322.5352">CleanupIndexExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26381.5" x2="26856.5" y1="2334" y2="2334"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2342"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="26400.5" y="2348.6348">done bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2354.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="26400.5" y="2361.5898">removeCnt uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2367.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="26400.5" y="2374.5449">index table.Index</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2380.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="26400.5" y="2387.5">table table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2393.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="26400.5" y="2400.4551">physicalID int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2406.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="26400.5" y="2413.4102">idxCols []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2419.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="26400.5" y="2426.3652">idxColFieldTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2432.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="26400.5" y="2439.3203">idxChunk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2445.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="26400.5" y="2452.2754">idxValues</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="26455.5" y="2452.2754">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="26478.5" y="2452.2754">[int64][][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2458.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="26400.5" y="2465.2305">batchSize uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2471.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="26400.5" y="2478.1855">batchKeys []kv.Key</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2484.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="26400.5" y="2491.1406">idxValsBufs [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2497.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="26400.5" y="2504.0957">lastIdxKey []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2510.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="26400.5" y="2517.0508">scanRowCnt uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26381.5" x2="26856.5" y1="2523.3711" y2="2523.3711"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2531.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="26400.5" y="2538.0059">getIdxColTypes() []*types.FieldType</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2544.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="26400.5" y="2550.9609">batchGetRecord(txn kv.Transaction) (</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="26601.5" y="2550.9609">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="26624.5" y="2550.9609">[string][]byte, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2557.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="26400.5" y="2563.916">deleteDanglingIdx(txn kv.Transaction, values</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="26644.5" y="2563.916">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="26667.5" y="2563.916">[string][]byte) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2570.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="26400.5" y="2576.8711">fetchIndex(ctx context.Context, txn kv.Transaction) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2583.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="26400.5" y="2589.8262">cleanTableIndex(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2596.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="26400.5" y="2602.7813">buildIndexScan(ctx context.Context, txn kv.Transaction) (distsql.SelectResult, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2609.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="26400.5" y="2615.7363">init() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2622.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="26400.5" y="2628.6914">buildIdxDAGPB(txn kv.Transaction) (*tipb.DAGRequest, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2635.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="26400.5" y="2641.6465">constructIndexScanPB() *tipb.Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26388.5" y="2647.9668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="26400.5" y="2654.6016">constructLimitPB() *tipb.Executor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="26403.5" y="2667.5566"/><ellipse cx="26391.5" cy="2676.877" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="26400.5" y="2680.5117">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="26391.5" cy="2689.832" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="26400.5" y="2693.4668">Open(ctx context.Context) error</text><ellipse cx="26391.5" cy="2702.7871" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="26400.5" y="2706.4219">Close() error</text><!--MD5=[d875c65386e8cce131cd7567e8b04312]
class executor.Closeable--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.Closeable" style="stroke: #A80036; stroke-width: 1.5;" width="95" x="28397.5" y="758.5"/><ellipse cx="28415.65" cy="774.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28412.0777,770.7651 L28412.0777,768.6069 L28419.4571,768.6069 L28419.4571,770.7651 L28416.9918,770.7651 L28416.9918,778.8418 L28419.4571,778.8418 L28419.4571,781 L28412.0777,781 L28412.0777,778.8418 L28414.5431,778.8418 L28414.5431,770.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="56" x="28430.35" y="779.0352">Closeable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28398.5" x2="28491.5" y1="790.5" y2="790.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="28398.5" x2="28491.5" y1="798.5" y2="798.5"/><ellipse cx="28408.5" cy="809.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="28417.5" y="813.1348">Close() error</text><!--MD5=[e9b8aa669960524d27cd358e681cf195]
class executor.CommitTask--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.CommitTask" style="stroke: #A80036; stroke-width: 1.5;" width="138" x="33627" y="752"/><ellipse cx="33657.3" cy="768" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33656.5334,769.063 Q33654.6823,768.3574 33654.0266,767.5813 Q33653.3708,766.8052 33653.3708,765.4937 Q33653.3708,763.8086 33654.4499,762.8457 Q33655.529,761.8828 33657.4133,761.8828 Q33658.2683,761.8828 33659.1232,762.0779 Q33659.9782,762.2729 33660.8166,762.6548 L33660.8166,765.0454 Q33660.028,764.4893 33659.2146,764.1987 Q33658.4011,763.9082 33657.6042,763.9082 Q33656.716,763.9082 33656.2429,764.2651 Q33655.7697,764.6221 33655.7697,765.2861 Q33655.7697,765.8008 33656.1142,766.137 Q33656.4587,766.4731 33657.5544,766.8799 L33658.6086,767.2783 Q33660.1027,767.8262 33660.8083,768.731 Q33661.5139,769.6357 33661.5139,771.0137 Q33661.5139,772.8896 33660.4057,773.8152 Q33659.2976,774.7407 33657.0563,774.7407 Q33656.135,774.7407 33655.2094,774.5208 Q33654.2839,774.3008 33653.4206,773.8691 L33653.4206,771.3374 Q33654.4001,772.0347 33655.3173,772.375 Q33656.2346,772.7153 33657.1311,772.7153 Q33658.0358,772.7153 33658.5339,772.3044 Q33659.0319,771.8936 33659.0319,771.1548 Q33659.0319,770.5986 33658.6999,770.1794 Q33658.3679,769.7603 33657.737,769.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="33674.7" y="772.5352">CommitTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33628" x2="33764" y1="784" y2="784"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33635" y="792"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="33647" y="798.6348">cnt uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33635" y="804.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="33647" y="811.5898">rows [][]types.Datum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33628" x2="33764" y1="817.9102" y2="817.9102"/><!--MD5=[2d47cf0c2f796e3ac47d115973ce8022]
class executor.Compiler--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.Compiler" style="stroke: #A80036; stroke-width: 1.5;" width="416" x="33800" y="752"/><ellipse cx="33977.75" cy="768" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33976.9834,769.063 Q33975.1323,768.3574 33974.4766,767.5813 Q33973.8208,766.8052 33973.8208,765.4937 Q33973.8208,763.8086 33974.8999,762.8457 Q33975.979,761.8828 33977.8633,761.8828 Q33978.7183,761.8828 33979.5732,762.0779 Q33980.4282,762.2729 33981.2666,762.6548 L33981.2666,765.0454 Q33980.478,764.4893 33979.6646,764.1987 Q33978.8511,763.9082 33978.0542,763.9082 Q33977.166,763.9082 33976.6929,764.2651 Q33976.2197,764.6221 33976.2197,765.2861 Q33976.2197,765.8008 33976.5642,766.137 Q33976.9087,766.4731 33978.0044,766.8799 L33979.0586,767.2783 Q33980.5527,767.8262 33981.2583,768.731 Q33981.9639,769.6357 33981.9639,771.0137 Q33981.9639,772.8896 33980.8557,773.8152 Q33979.7476,774.7407 33977.5063,774.7407 Q33976.585,774.7407 33975.6594,774.5208 Q33974.7339,774.3008 33973.8706,773.8691 L33973.8706,771.3374 Q33974.8501,772.0347 33975.7673,772.375 Q33976.6846,772.7153 33977.5811,772.7153 Q33978.4858,772.7153 33978.9839,772.3044 Q33979.4819,771.8936 33979.4819,771.1548 Q33979.4819,770.5986 33979.1499,770.1794 Q33978.8179,769.7603 33978.187,769.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="33998.25" y="772.5352">Compiler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33801" x2="34215" y1="784" y2="784"/><ellipse cx="33811" cy="795" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="33820" y="798.6348">Ctx sessionctx.Context</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33801" x2="34215" y1="804.9551" y2="804.9551"/><ellipse cx="33811" cy="815.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="33820" y="819.5898">Compile(ctx context.Context, stmtNode ast.StmtNode) (*ExecStmt, error)</text><!--MD5=[61d8d9cff4f9b81792c18ff3f06378c2]
class executor.CoprocessorDAGHandler--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="229.3711" id="executor.CoprocessorDAGHandler" style="stroke: #A80036; stroke-width: 1.5;" width="714" x="34251" y="674.5"/><ellipse cx="34531.75" cy="690.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34530.9834,691.563 Q34529.1323,690.8574 34528.4766,690.0813 Q34527.8208,689.3052 34527.8208,687.9937 Q34527.8208,686.3086 34528.8999,685.3457 Q34529.979,684.3828 34531.8633,684.3828 Q34532.7183,684.3828 34533.5732,684.5779 Q34534.4282,684.7729 34535.2666,685.1548 L34535.2666,687.5454 Q34534.478,686.9893 34533.6646,686.6987 Q34532.8511,686.4082 34532.0542,686.4082 Q34531.166,686.4082 34530.6929,686.7651 Q34530.2197,687.1221 34530.2197,687.7861 Q34530.2197,688.3008 34530.5642,688.637 Q34530.9087,688.9731 34532.0044,689.3799 L34533.0586,689.7783 Q34534.5527,690.3262 34535.2583,691.231 Q34535.9639,692.1357 34535.9639,693.5137 Q34535.9639,695.3896 34534.8557,696.3152 Q34533.7476,697.2407 34531.5063,697.2407 Q34530.585,697.2407 34529.6594,697.0208 Q34528.7339,696.8008 34527.8706,696.3691 L34527.8706,693.8374 Q34528.8501,694.5347 34529.7673,694.875 Q34530.6846,695.2153 34531.5811,695.2153 Q34532.4858,695.2153 34532.9839,694.8044 Q34533.4819,694.3936 34533.4819,693.6548 Q34533.4819,693.0986 34533.1499,692.6794 Q34532.8179,692.2603 34532.187,692.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="144" x="34552.25" y="695.0352">CoprocessorDAGHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34252" x2="34964" y1="706.5" y2="706.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="714.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="34271" y="721.1348">sctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="727.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="34271" y="734.0898">dagReq *tipb.DAGRequest</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34252" x2="34964" y1="740.4102" y2="740.4102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="748.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="688" x="34271" y="755.0449">buildResponseAndSendToStream(chk *chunk.Chunk, tps []*types.FieldType, stream tikvpb.Tikv_CoprocessorStreamServer) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="761.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="34271" y="768">buildDAGExecutor(req *coprocessor.Request) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="774.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="402" x="34271" y="780.9551">buildChunk(chk *chunk.Chunk, tps []*types.FieldType) ([]tipb.Chunk, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="787.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="34271" y="793.9102">buildUnaryResponse(chunks []tipb.Chunk) *coprocessor.Response</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="800.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="34271" y="806.8652">buildStreamResponse(chunk *tipb.Chunk) *coprocessor.Response</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="813.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="34271" y="819.8203">buildErrorResponse(err error) *coprocessor.Response</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="826.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="445" x="34271" y="832.7754">encodeChunk(chk *chunk.Chunk, colTypes []*types.FieldType) ([]tipb.Chunk, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="839.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="34271" y="845.7305">encodeDefault(chk *chunk.Chunk, tps []*types.FieldType) ([]tipb.Chunk, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34259" y="852.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="374" x="34271" y="858.6855">appendRow(chunks []tipb.Chunk, data []byte, rowCnt int) []tipb.Chunk</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="34274" y="871.6406"/><ellipse cx="34262" cy="880.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="34271" y="884.5957">HandleRequest(ctx context.Context, req *coprocessor.Request) *coprocessor.Response</text><ellipse cx="34262" cy="893.916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="660" x="34271" y="897.5508">HandleStreamRequest(ctx context.Context, req *coprocessor.Request, stream tikvpb.Tikv_CoprocessorStreamServer) error</text><!--MD5=[e9b01e0d9bbe68a06e8454d6aaef8aef]
class executor.DDLExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="436.6523" id="executor.DDLExec" style="stroke: #A80036; stroke-width: 1.5;" width="686" x="19380" y="2289"/><ellipse cx="19693.25" cy="2305" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M19692.4834,2306.063 Q19690.6323,2305.3574 19689.9766,2304.5813 Q19689.3208,2303.8052 19689.3208,2302.4937 Q19689.3208,2300.8086 19690.3999,2299.8457 Q19691.479,2298.8828 19693.3633,2298.8828 Q19694.2183,2298.8828 19695.0732,2299.0779 Q19695.9282,2299.2729 19696.7666,2299.6548 L19696.7666,2302.0454 Q19695.978,2301.4893 19695.1646,2301.1987 Q19694.3511,2300.9082 19693.5542,2300.9082 Q19692.666,2300.9082 19692.1929,2301.2651 Q19691.7197,2301.6221 19691.7197,2302.2861 Q19691.7197,2302.8008 19692.0642,2303.137 Q19692.4087,2303.4731 19693.5044,2303.8799 L19694.5586,2304.2783 Q19696.0527,2304.8262 19696.7583,2305.731 Q19697.4639,2306.6357 19697.4639,2308.0137 Q19697.4639,2309.8896 19696.3557,2310.8152 Q19695.2476,2311.7407 19693.0063,2311.7407 Q19692.085,2311.7407 19691.1594,2311.5208 Q19690.2339,2311.3008 19689.3706,2310.8691 L19689.3706,2308.3374 Q19690.3501,2309.0347 19691.2673,2309.375 Q19692.1846,2309.7153 19693.0811,2309.7153 Q19693.9858,2309.7153 19694.4839,2309.3044 Q19694.9819,2308.8936 19694.9819,2308.1548 Q19694.9819,2307.5986 19694.6499,2307.1794 Q19694.3179,2306.7603 19693.687,2306.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="19713.75" y="2309.5352">DDLExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19381" x2="20065" y1="2321" y2="2321"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2329"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="19400" y="2335.6348">stmt ast.StmtNode</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2341.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="19400" y="2348.5898">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2354.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="19400" y="2361.5449">done bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19381" x2="20065" y1="2367.8652" y2="2367.8652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2375.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="19400" y="2382.5">toErr(err error) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2388.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="19400" y="2395.4551">executeTruncateTable(s *ast.TruncateTableStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2401.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="19400" y="2408.4102">executeRenameTable(s *ast.RenameTableStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2414.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="19400" y="2421.3652">executeCreateDatabase(s *ast.CreateDatabaseStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2427.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="19400" y="2434.3203">executeAlterDatabase(s *ast.AlterDatabaseStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2440.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="19400" y="2447.2754">executeCreateTable(s *ast.CreateTableStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2453.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="19400" y="2460.2305">executeCreateView(s *ast.CreateViewStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2466.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="19400" y="2473.1855">executeCreateIndex(s *ast.CreateIndexStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2479.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="19400" y="2486.1406">executeDropDatabase(s *ast.DropDatabaseStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2492.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="19400" y="2499.0957">executeDropTable(s *ast.DropTableStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2505.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="19400" y="2512.0508">executeDropView(s *ast.DropTableStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2518.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="19400" y="2525.0059">executeDropSequence(s *ast.DropSequenceStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2531.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="19400" y="2537.9609">dropTableObject(objects []*ast.TableName, obt objectType, ifExists bool) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2544.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="19400" y="2550.916">executeDropIndex(s *ast.DropIndexStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2557.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="19400" y="2563.8711">executeAlterTable(s *ast.AlterTableStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2570.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="19400" y="2576.8262">executeRecoverTable(s *ast.RecoverTableStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2583.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="19400" y="2589.7813">getTableAutoIDsFromSnapshot(job *model.Job) (int64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2596.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="660" x="19400" y="2602.7363">getRecoverTableByJobID(s *ast.RecoverTableStmt, t *meta.Meta, dom *domain.Domain) (*model.Job, *model.TableInfo, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2609.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="510" x="19400" y="2615.6914">getRecoverTableByTableName(tableName *ast.TableName) (*model.Job, *model.TableInfo, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2622.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="19400" y="2628.6465">executeFlashbackTable(s *ast.FlashBackTableStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2634.9668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="19400" y="2641.6016">executeLockTables(s *ast.LockTablesStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2647.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="19400" y="2654.5566">executeUnlockTables(s *ast.UnlockTablesStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2660.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="19400" y="2667.5117">executeCleanupTableLock(s *ast.CleanupTableLockStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2673.832"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="19400" y="2680.4668">executeRepairTable(s *ast.RepairTableStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19388" y="2686.7871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="19400" y="2693.4219">executeCreateSequence(s *ast.CreateSequenceStmt) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="19403" y="2706.377"/><ellipse cx="19391" cy="2715.6973" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="19400" y="2719.332">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[20a6a8add7df6fe8369ad403262ec271]
class executor.DDLJobRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.DDLJobRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="467" x="25424.5" y="1650"/><ellipse cx="25606.25" cy="1666" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25605.4834,1667.063 Q25603.6323,1666.3574 25602.9766,1665.5813 Q25602.3208,1664.8052 25602.3208,1663.4937 Q25602.3208,1661.8086 25603.3999,1660.8457 Q25604.479,1659.8828 25606.3633,1659.8828 Q25607.2183,1659.8828 25608.0732,1660.0779 Q25608.9282,1660.2729 25609.7666,1660.6548 L25609.7666,1663.0454 Q25608.978,1662.4893 25608.1646,1662.1987 Q25607.3511,1661.9082 25606.5542,1661.9082 Q25605.666,1661.9082 25605.1929,1662.2651 Q25604.7197,1662.6221 25604.7197,1663.2861 Q25604.7197,1663.8008 25605.0642,1664.137 Q25605.4087,1664.4731 25606.5044,1664.8799 L25607.5586,1665.2783 Q25609.0527,1665.8262 25609.7583,1666.731 Q25610.4639,1667.6357 25610.4639,1669.0137 Q25610.4639,1670.8896 25609.3557,1671.8152 Q25608.2476,1672.7407 25606.0063,1672.7407 Q25605.085,1672.7407 25604.1594,1672.5208 Q25603.2339,1672.3008 25602.3706,1671.8691 L25602.3706,1669.3374 Q25603.3501,1670.0347 25604.2673,1670.375 Q25605.1846,1670.7153 25606.0811,1670.7153 Q25606.9858,1670.7153 25607.4839,1670.3044 Q25607.9819,1669.8936 25607.9819,1669.1548 Q25607.9819,1668.5986 25607.6499,1668.1794 Q25607.3179,1667.7603 25606.687,1667.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="25626.75" y="1670.5352">DDLJobRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25425.5" x2="25890.5" y1="1682" y2="1682"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25432.5" y="1690"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="25444.5" y="1696.6348">runningJobs []*model.Job</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25432.5" y="1702.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="25444.5" y="1709.5898">historyJobIter *meta.LastJobIterator</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25432.5" y="1715.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="25444.5" y="1722.5449">cursor int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25432.5" y="1728.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="25444.5" y="1735.5">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25432.5" y="1741.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="25444.5" y="1748.4551">activeRoles []*auth.RoleIdentity</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25432.5" y="1754.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="25444.5" y="1761.4102">cacheJobs []*model.Job</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25425.5" x2="25890.5" y1="1767.7305" y2="1767.7305"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25432.5" y="1775.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="25444.5" y="1782.3652">initial(txn kv.Transaction) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25432.5" y="1788.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="25444.5" y="1795.3203">appendJobToChunk(req *chunk.Chunk, job *model.Job, checker privilege.Manager)</text><!--MD5=[721343650af0acdae950bccec976bc05]
class executor.DDLJobsReaderExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.DDLJobsReaderExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="20853" y="2457.5"/><ellipse cx="20939.75" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M20938.9834,2474.563 Q20937.1323,2473.8574 20936.4766,2473.0813 Q20935.8208,2472.3052 20935.8208,2470.9937 Q20935.8208,2469.3086 20936.8999,2468.3457 Q20937.979,2467.3828 20939.8633,2467.3828 Q20940.7183,2467.3828 20941.5732,2467.5779 Q20942.4282,2467.7729 20943.2666,2468.1548 L20943.2666,2470.5454 Q20942.478,2469.9893 20941.6646,2469.6987 Q20940.8511,2469.4082 20940.0542,2469.4082 Q20939.166,2469.4082 20938.6929,2469.7651 Q20938.2197,2470.1221 20938.2197,2470.7861 Q20938.2197,2471.3008 20938.5642,2471.637 Q20938.9087,2471.9731 20940.0044,2472.3799 L20941.0586,2472.7783 Q20942.5527,2473.3262 20943.2583,2474.231 Q20943.9639,2475.1357 20943.9639,2476.5137 Q20943.9639,2478.3896 20942.8557,2479.3152 Q20941.7476,2480.2407 20939.5063,2480.2407 Q20938.585,2480.2407 20937.6594,2480.0208 Q20936.7339,2479.8008 20935.8706,2479.3691 L20935.8706,2476.8374 Q20936.8501,2477.5347 20937.7673,2477.875 Q20938.6846,2478.2153 20939.5811,2478.2153 Q20940.4858,2478.2153 20940.9839,2477.8044 Q20941.4819,2477.3936 20941.4819,2476.6548 Q20941.4819,2476.0986 20941.1499,2475.6794 Q20940.8179,2475.2603 20940.187,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="20960.25" y="2478.0352">DDLJobsReaderExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20854" x2="21152" y1="2489.5" y2="2489.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20861" y="2497.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="20873" y="2504.1348">cacheJobs []*model.Job</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20861" y="2510.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="20873" y="2517.0898">is infoschema.InfoSchema</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20854" x2="21152" y1="2523.4102" y2="2523.4102"/><ellipse cx="20864" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="20873" y="2538.0449">Open(ctx context.Context) error</text><ellipse cx="20864" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="20873" y="2551">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[f53feb7458af4c5f85b449e97abd3a3c]
class executor.DeallocateExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.DeallocateExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="7903" y="2470.5"/><ellipse cx="8005.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8004.4834,2487.563 Q8002.6323,2486.8574 8001.9766,2486.0813 Q8001.3208,2485.3052 8001.3208,2483.9937 Q8001.3208,2482.3086 8002.3999,2481.3457 Q8003.479,2480.3828 8005.3633,2480.3828 Q8006.2183,2480.3828 8007.0732,2480.5779 Q8007.9282,2480.7729 8008.7666,2481.1548 L8008.7666,2483.5454 Q8007.978,2482.9893 8007.1646,2482.6987 Q8006.3511,2482.4082 8005.5542,2482.4082 Q8004.666,2482.4082 8004.1929,2482.7651 Q8003.7197,2483.1221 8003.7197,2483.7861 Q8003.7197,2484.3008 8004.0642,2484.637 Q8004.4087,2484.9731 8005.5044,2485.3799 L8006.5586,2485.7783 Q8008.0527,2486.3262 8008.7583,2487.231 Q8009.4639,2488.1357 8009.4639,2489.5137 Q8009.4639,2491.3896 8008.3557,2492.3152 Q8007.2476,2493.2407 8005.0063,2493.2407 Q8004.085,2493.2407 8003.1594,2493.0208 Q8002.2339,2492.8008 8001.3706,2492.3691 L8001.3706,2489.8374 Q8002.3501,2490.5347 8003.2673,2490.875 Q8004.1846,2491.2153 8005.0811,2491.2153 Q8005.9858,2491.2153 8006.4839,2490.8044 Q8006.9819,2490.3936 8006.9819,2489.6548 Q8006.9819,2489.0986 8006.6499,2488.6794 Q8006.3179,2488.2603 8005.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="8025.75" y="2491.0352">DeallocateExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7904" x2="8202" y1="2502.5" y2="2502.5"/><ellipse cx="7914" cy="2513.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="7923" y="2517.1348">Name string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7904" x2="8202" y1="2523.4551" y2="2523.4551"/><ellipse cx="7914" cy="2534.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="7923" y="2538.0898">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[c28c94008c7a7f7a31bd7299394d125e]
class executor.DeleteExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="242.3262" id="executor.DeleteExec" style="stroke: #A80036; stroke-width: 1.5;" width="621" x="26892.5" y="2386.5"/><ellipse cx="27166.75" cy="2402.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27165.9834,2403.563 Q27164.1323,2402.8574 27163.4766,2402.0813 Q27162.8208,2401.3052 27162.8208,2399.9937 Q27162.8208,2398.3086 27163.8999,2397.3457 Q27164.979,2396.3828 27166.8633,2396.3828 Q27167.7183,2396.3828 27168.5732,2396.5779 Q27169.4282,2396.7729 27170.2666,2397.1548 L27170.2666,2399.5454 Q27169.478,2398.9893 27168.6646,2398.6987 Q27167.8511,2398.4082 27167.0542,2398.4082 Q27166.166,2398.4082 27165.6929,2398.7651 Q27165.2197,2399.1221 27165.2197,2399.7861 Q27165.2197,2400.3008 27165.5642,2400.637 Q27165.9087,2400.9731 27167.0044,2401.3799 L27168.0586,2401.7783 Q27169.5527,2402.3262 27170.2583,2403.231 Q27170.9639,2404.1357 27170.9639,2405.5137 Q27170.9639,2407.3896 27169.8557,2408.3152 Q27168.7476,2409.2407 27166.5063,2409.2407 Q27165.585,2409.2407 27164.6594,2409.0208 Q27163.7339,2408.8008 27162.8706,2408.3691 L27162.8706,2405.8374 Q27163.8501,2406.5347 27164.7673,2406.875 Q27165.6846,2407.2153 27166.5811,2407.2153 Q27167.4858,2407.2153 27167.9839,2406.8044 Q27168.4819,2406.3936 27168.4819,2405.6548 Q27168.4819,2405.0986 27168.1499,2404.6794 Q27167.8179,2404.2603 27167.187,2404.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="27187.25" y="2407.0352">DeleteExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26893.5" x2="27512.5" y1="2418.5" y2="2418.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26900.5" y="2426.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="26912.5" y="2433.1348">tblID2Table</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="26976.5" y="2433.1348">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="26999.5" y="2433.1348">[int64]table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26900.5" y="2439.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="26912.5" y="2446.0898">tblColPosInfos core.TblColPosInfoSlice</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26900.5" y="2452.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26912.5" y="2459.0449">memTracker *memory.Tracker</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="26915.5" y="2472"/><ellipse cx="26903.5" cy="2481.3203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="26912.5" y="2484.9551">IsMultiTable bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26893.5" x2="27512.5" y1="2491.2754" y2="2491.2754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26900.5" y="2499.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="490" x="26912.5" y="2505.9102">deleteOneRow(tbl table.Table, handleIndex int, isExtraHandle bool, row []types.Datum) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26900.5" y="2512.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="26912.5" y="2518.8652">deleteSingleTableByChunk(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26900.5" y="2525.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="595" x="26912.5" y="2531.8203">composeTblRowMap(tblRowMap tableRowMapType, colPosInfos []core.TblColPosInfo, joinedRow []types.Datum)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26900.5" y="2538.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="26912.5" y="2544.7754">deleteMultiTablesByChunk(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26900.5" y="2551.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="26912.5" y="2557.7305">removeRowsInTblRowMap(tblRowMap tableRowMapType) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26900.5" y="2564.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="26912.5" y="2570.6855">removeRow(ctx sessionctx.Context, t table.Table, h int64, data []types.Datum) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="26915.5" y="2583.6406"/><ellipse cx="26903.5" cy="2592.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="26912.5" y="2596.5957">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="26903.5" cy="2605.916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="26912.5" y="2609.5508">Close() error</text><ellipse cx="26903.5" cy="2618.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="26912.5" y="2622.5059">Open(ctx context.Context) error</text><!--MD5=[e1324581b83281d4b2576d1a5c7929f3]
class executor.DirtyDB--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.DirtyDB" style="stroke: #A80036; stroke-width: 1.5;" width="215" x="21041.5" y="752"/><ellipse cx="21123.25" cy="768" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M21122.4834,769.063 Q21120.6323,768.3574 21119.9766,767.5813 Q21119.3208,766.8052 21119.3208,765.4937 Q21119.3208,763.8086 21120.3999,762.8457 Q21121.479,761.8828 21123.3633,761.8828 Q21124.2183,761.8828 21125.0732,762.0779 Q21125.9282,762.2729 21126.7666,762.6548 L21126.7666,765.0454 Q21125.978,764.4893 21125.1646,764.1987 Q21124.3511,763.9082 21123.5542,763.9082 Q21122.666,763.9082 21122.1929,764.2651 Q21121.7197,764.6221 21121.7197,765.2861 Q21121.7197,765.8008 21122.0642,766.137 Q21122.4087,766.4731 21123.5044,766.8799 L21124.5586,767.2783 Q21126.0527,767.8262 21126.7583,768.731 Q21127.4639,769.6357 21127.4639,771.0137 Q21127.4639,772.8896 21126.3557,773.8152 Q21125.2476,774.7407 21123.0063,774.7407 Q21122.085,774.7407 21121.1594,774.5208 Q21120.2339,774.3008 21119.3706,773.8691 L21119.3706,771.3374 Q21120.3501,772.0347 21121.2673,772.375 Q21122.1846,772.7153 21123.0811,772.7153 Q21123.9858,772.7153 21124.4839,772.3044 Q21124.9819,771.8936 21124.9819,771.1548 Q21124.9819,770.5986 21124.6499,770.1794 Q21124.3179,769.7603 21123.687,769.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="21143.75" y="772.5352">DirtyDB</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21042.5" x2="21255.5" y1="784" y2="784"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21049.5" y="792"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="21061.5" y="798.6348">tables</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="21096.5" y="798.6348">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="21119.5" y="798.6348">[int64]*DirtyTable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21042.5" x2="21255.5" y1="804.9551" y2="804.9551"/><ellipse cx="21052.5" cy="815.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="21061.5" y="819.5898">GetDirtyTable(tid int64) *DirtyTable</text><!--MD5=[7ac5a064258ec3dca161e293c7903395]
class executor.DirtyTable--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.DirtyTable" style="stroke: #A80036; stroke-width: 1.5;" width="195" x="35000.5" y="726"/><ellipse cx="35063.75" cy="742" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35062.9834,743.063 Q35061.1323,742.3574 35060.4766,741.5813 Q35059.8208,740.8052 35059.8208,739.4937 Q35059.8208,737.8086 35060.8999,736.8457 Q35061.979,735.8828 35063.8633,735.8828 Q35064.7183,735.8828 35065.5732,736.0779 Q35066.4282,736.2729 35067.2666,736.6548 L35067.2666,739.0454 Q35066.478,738.4893 35065.6646,738.1987 Q35064.8511,737.9082 35064.0542,737.9082 Q35063.166,737.9082 35062.6929,738.2651 Q35062.2197,738.6221 35062.2197,739.2861 Q35062.2197,739.8008 35062.5642,740.137 Q35062.9087,740.4731 35064.0044,740.8799 L35065.0586,741.2783 Q35066.5527,741.8262 35067.2583,742.731 Q35067.9639,743.6357 35067.9639,745.0137 Q35067.9639,746.8896 35066.8557,747.8152 Q35065.7476,748.7407 35063.5063,748.7407 Q35062.585,748.7407 35061.6594,748.5208 Q35060.7339,748.3008 35059.8706,747.8691 L35059.8706,745.3374 Q35060.8501,746.0347 35061.7673,746.375 Q35062.6846,746.7153 35063.5811,746.7153 Q35064.4858,746.7153 35064.9839,746.3044 Q35065.4819,745.8936 35065.4819,745.1548 Q35065.4819,744.5986 35065.1499,744.1794 Q35064.8179,743.7603 35064.187,743.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="60" x="35084.25" y="746.5352">DirtyTable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35001.5" x2="35194.5" y1="758" y2="758"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35008.5" y="766"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="35020.5" y="772.6348">tid int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35008.5" y="778.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="35020.5" y="785.5898">addedRows</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="35084.5" y="785.5898">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="35107.5" y="785.5898">[int64]</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="35143.5" y="785.5898">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="35175.5" y="785.5898">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35008.5" y="791.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="35020.5" y="798.5449">deletedRows</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="35090.5" y="798.5449">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="35113.5" y="798.5449">[int64]</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="35149.5" y="798.5449">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="35181.5" y="798.5449">{}</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35001.5" x2="35194.5" y1="804.8652" y2="804.8652"/><ellipse cx="35011.5" cy="815.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="35020.5" y="819.5">AddRow(handle int64)</text><ellipse cx="35011.5" cy="828.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="35020.5" y="832.4551">DeleteRow(handle int64)</text><ellipse cx="35011.5" cy="841.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="35020.5" y="845.4102">IsEmpty() bool</text><!--MD5=[90ca95c67068668dcf0872775b738b9c]
class executor.ExecStmt--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="449.6074" id="executor.ExecStmt" style="stroke: #A80036; stroke-width: 1.5;" width="558" x="35231" y="564"/><ellipse cx="35479.75" cy="580" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35478.9834,581.063 Q35477.1323,580.3574 35476.4766,579.5813 Q35475.8208,578.8052 35475.8208,577.4937 Q35475.8208,575.8086 35476.8999,574.8457 Q35477.979,573.8828 35479.8633,573.8828 Q35480.7183,573.8828 35481.5732,574.0779 Q35482.4282,574.2729 35483.2666,574.6548 L35483.2666,577.0454 Q35482.478,576.4893 35481.6646,576.1987 Q35480.8511,575.9082 35480.0542,575.9082 Q35479.166,575.9082 35478.6929,576.2651 Q35478.2197,576.6221 35478.2197,577.2861 Q35478.2197,577.8008 35478.5642,578.137 Q35478.9087,578.4731 35480.0044,578.8799 L35481.0586,579.2783 Q35482.5527,579.8262 35483.2583,580.731 Q35483.9639,581.6357 35483.9639,583.0137 Q35483.9639,584.8896 35482.8557,585.8152 Q35481.7476,586.7407 35479.5063,586.7407 Q35478.585,586.7407 35477.6594,586.5208 Q35476.7339,586.3008 35475.8706,585.8691 L35475.8706,583.3374 Q35476.8501,584.0347 35477.7673,584.375 Q35478.6846,584.7153 35479.5811,584.7153 Q35480.4858,584.7153 35480.9839,584.3044 Q35481.4819,583.8936 35481.4819,583.1548 Q35481.4819,582.5986 35481.1499,582.1794 Q35480.8179,581.7603 35480.187,581.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="35500.25" y="584.5352">ExecStmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35232" x2="35788" y1="596" y2="596"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="604"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="35251" y="610.6348">isPreparedStmt bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="616.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="35251" y="623.5898">isSelectForUpdate bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="629.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="35251" y="636.5449">retryCount uint</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="35254" y="649.5"/><ellipse cx="35242" cy="658.8203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="35251" y="662.4551">InfoSchema infoschema.InfoSchema</text><ellipse cx="35242" cy="671.7754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="35251" y="675.4102">Plan core.Plan</text><ellipse cx="35242" cy="684.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="35251" y="688.3652">Text string</text><ellipse cx="35242" cy="697.6855" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="35251" y="701.3203">StmtNode ast.StmtNode</text><ellipse cx="35242" cy="710.6406" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="35251" y="714.2754">Ctx sessionctx.Context</text><ellipse cx="35242" cy="723.5957" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="35251" y="727.2305">LowerPriority bool</text><ellipse cx="35242" cy="736.5508" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="35251" y="740.1855">OutputNames []*types.FieldName</text><ellipse cx="35242" cy="749.5059" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="35251" y="753.1406">PsStmt *core.CachedPrepareStmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35232" x2="35788" y1="759.4609" y2="759.4609"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="767.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="35251" y="774.0957">handleNoDelay(ctx context.Context, e Executor, isPessimistic bool) (bool, sqlexec.RecordSet, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="780.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="35251" y="787.0508">handlePessimisticSelectForUpdate(ctx context.Context, e Executor) (sqlexec.RecordSet, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="793.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="35251" y="800.0059">runPessimisticSelectForUpdate(ctx context.Context, e Executor) (sqlexec.RecordSet, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="806.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="449" x="35251" y="812.9609">handleNoDelayExecutor(ctx context.Context, e Executor) (sqlexec.RecordSet, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="819.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="35251" y="825.916">handlePessimisticDML(ctx context.Context, e Executor) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="832.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="35251" y="838.8711">handlePessimisticLockError(ctx context.Context, err error) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="845.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="35251" y="851.8262">buildExecutor() (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35239" y="858.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="35251" y="864.7813">logAudit()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="35254" y="877.7363"/><ellipse cx="35242" cy="887.0566" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="35251" y="890.6914">PointGet(ctx context.Context, is infoschema.InfoSchema) (*recordSet, error)</text><ellipse cx="35242" cy="900.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="35251" y="903.6465">OriginText() string</text><ellipse cx="35242" cy="912.9668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="35251" y="916.6016">IsPrepared() bool</text><ellipse cx="35242" cy="925.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="35251" y="929.5566">IsReadOnly(vars *variable.SessionVars) bool</text><ellipse cx="35242" cy="938.877" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="35251" y="942.5117">RebuildPlan(ctx context.Context) (int64, error)</text><ellipse cx="35242" cy="951.832" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="35251" y="955.4668">Exec(ctx context.Context) (sqlexec.RecordSet, error)</text><ellipse cx="35242" cy="964.7871" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="35251" y="968.4219">CloseRecordSet(txnStartTS uint64, lastErr error)</text><ellipse cx="35242" cy="977.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="35251" y="981.377">FinishExecuteStmt(txnTS uint64, succ bool, hasMoreResults bool)</text><ellipse cx="35242" cy="990.6973" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="35251" y="994.332">LogSlowQuery(txnTS uint64, succ bool, hasMoreResults bool)</text><ellipse cx="35242" cy="1003.6523" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="35251" y="1007.2871">SummaryStmt(succ bool)</text><!--MD5=[53f8bcd78ccac4281ce39ec18fb625a0]
class executor.ExecuteExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="190.5059" id="executor.ExecuteExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="8819" y="2412"/><ellipse cx="8928.75" cy="2428" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8927.9834,2429.063 Q8926.1323,2428.3574 8925.4766,2427.5813 Q8924.8208,2426.8052 8924.8208,2425.4937 Q8924.8208,2423.8086 8925.8999,2422.8457 Q8926.979,2421.8828 8928.8633,2421.8828 Q8929.7183,2421.8828 8930.5732,2422.0779 Q8931.4282,2422.2729 8932.2666,2422.6548 L8932.2666,2425.0454 Q8931.478,2424.4893 8930.6646,2424.1987 Q8929.8511,2423.9082 8929.0542,2423.9082 Q8928.166,2423.9082 8927.6929,2424.2651 Q8927.2197,2424.6221 8927.2197,2425.2861 Q8927.2197,2425.8008 8927.5642,2426.137 Q8927.9087,2426.4731 8929.0044,2426.8799 L8930.0586,2427.2783 Q8931.5527,2427.8262 8932.2583,2428.731 Q8932.9639,2429.6357 8932.9639,2431.0137 Q8932.9639,2432.8896 8931.8557,2433.8152 Q8930.7476,2434.7407 8928.5063,2434.7407 Q8927.585,2434.7407 8926.6594,2434.5208 Q8925.7339,2434.3008 8924.8706,2433.8691 L8924.8706,2431.3374 Q8925.8501,2432.0347 8926.7673,2432.375 Q8927.6846,2432.7153 8928.5811,2432.7153 Q8929.4858,2432.7153 8929.9839,2432.3044 Q8930.4819,2431.8936 8930.4819,2431.1548 Q8930.4819,2430.5986 8930.1499,2430.1794 Q8929.8179,2429.7603 8929.187,2429.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="8949.25" y="2432.5352">ExecuteExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8820" x2="9118" y1="2444" y2="2444"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8827" y="2452"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="8839" y="2458.6348">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8827" y="2464.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="8839" y="2471.5898">name string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8827" y="2477.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="8839" y="2484.5449">usingVars []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8827" y="2490.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="8839" y="2497.5">stmtExec Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8827" y="2503.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="8839" y="2510.4551">stmt ast.StmtNode</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8827" y="2516.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="8839" y="2523.4102">plan core.Plan</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8827" y="2529.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="8839" y="2536.3652">id uint32</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8827" y="2542.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="8839" y="2549.3203">lowerPriority bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8827" y="2555.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="8839" y="2562.2754">outputNames []*types.FieldName</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8820" x2="9118" y1="2568.5957" y2="2568.5957"/><ellipse cx="8830" cy="2579.5957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="8839" y="2583.2305">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="8830" cy="2592.5508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="8839" y="2596.1855">Build(b *executorBuilder) error</text><!--MD5=[16bf2c73140cd6fdab03a36f916907b6]
class executor.Executor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.Executor" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="25827" y="726"/><ellipse cx="25947.75" cy="742" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25944.1777,738.2651 L25944.1777,736.1069 L25951.5571,736.1069 L25951.5571,738.2651 L25949.0918,738.2651 L25949.0918,746.3418 L25951.5571,746.3418 L25951.5571,748.5 L25944.1777,748.5 L25944.1777,746.3418 L25946.6431,746.3418 L25946.6431,738.2651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="50" x="25968.25" y="746.5352">Executor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25828" x2="26126" y1="758" y2="758"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25828" x2="26126" y1="766" y2="766"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25835" y="774"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="25847" y="780.6348">base() *baseExecutor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="25850" y="793.5898"/><ellipse cx="25838" cy="802.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="25847" y="806.5449">Open( context.Context) error</text><ellipse cx="25838" cy="815.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="25847" y="819.5">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="25838" cy="828.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="25847" y="832.4551">Close() error</text><ellipse cx="25838" cy="841.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="25847" y="845.4102">Schema() *expression.Schema</text><!--MD5=[14efc8d6fe5112335f0bba2677d978d2]
class executor.ExplainExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="164.5957" id="executor.ExplainExec" style="stroke: #A80036; stroke-width: 1.5;" width="341" x="27548.5" y="2425"/><ellipse cx="27680.25" cy="2441" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27679.4834,2442.063 Q27677.6323,2441.3574 27676.9766,2440.5813 Q27676.3208,2439.8052 27676.3208,2438.4937 Q27676.3208,2436.8086 27677.3999,2435.8457 Q27678.479,2434.8828 27680.3633,2434.8828 Q27681.2183,2434.8828 27682.0732,2435.0779 Q27682.9282,2435.2729 27683.7666,2435.6548 L27683.7666,2438.0454 Q27682.978,2437.4893 27682.1646,2437.1987 Q27681.3511,2436.9082 27680.5542,2436.9082 Q27679.666,2436.9082 27679.1929,2437.2651 Q27678.7197,2437.6221 27678.7197,2438.2861 Q27678.7197,2438.8008 27679.0642,2439.137 Q27679.4087,2439.4731 27680.5044,2439.8799 L27681.5586,2440.2783 Q27683.0527,2440.8262 27683.7583,2441.731 Q27684.4639,2442.6357 27684.4639,2444.0137 Q27684.4639,2445.8896 27683.3557,2446.8152 Q27682.2476,2447.7407 27680.0063,2447.7407 Q27679.085,2447.7407 27678.1594,2447.5208 Q27677.2339,2447.3008 27676.3706,2446.8691 L27676.3706,2444.3374 Q27677.3501,2445.0347 27678.2673,2445.375 Q27679.1846,2445.7153 27680.0811,2445.7153 Q27680.9858,2445.7153 27681.4839,2445.3044 Q27681.9819,2444.8936 27681.9819,2444.1548 Q27681.9819,2443.5986 27681.6499,2443.1794 Q27681.3179,2442.7603 27680.687,2442.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="27700.75" y="2445.5352">ExplainExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27549.5" x2="27888.5" y1="2457" y2="2457"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27556.5" y="2465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="27568.5" y="2471.6348">explain *core.Explain</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27556.5" y="2477.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="27568.5" y="2484.5898">analyzeExec Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27556.5" y="2490.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="27568.5" y="2497.5449">rows [][]string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27556.5" y="2503.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="27568.5" y="2510.5">cursor int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27549.5" x2="27888.5" y1="2516.8203" y2="2516.8203"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27556.5" y="2524.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="27568.5" y="2531.4551">generateExplainInfo(ctx context.Context) ([][]string, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="27571.5" y="2544.4102"/><ellipse cx="27559.5" cy="2553.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="27568.5" y="2557.3652">Open(ctx context.Context) error</text><ellipse cx="27559.5" cy="2566.6855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="27568.5" y="2570.3203">Close() error</text><ellipse cx="27559.5" cy="2579.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="27568.5" y="2583.2754">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[2519945d81fb2e84af0e703af4658494]
class executor.GrantExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="281.1914" id="executor.GrantExec" style="stroke: #A80036; stroke-width: 1.5;" width="651" x="9824.5" y="2367"/><ellipse cx="10116.25" cy="2383" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M10115.4834,2384.063 Q10113.6323,2383.3574 10112.9766,2382.5813 Q10112.3208,2381.8052 10112.3208,2380.4937 Q10112.3208,2378.8086 10113.3999,2377.8457 Q10114.479,2376.8828 10116.3633,2376.8828 Q10117.2183,2376.8828 10118.0732,2377.0779 Q10118.9282,2377.2729 10119.7666,2377.6548 L10119.7666,2380.0454 Q10118.978,2379.4893 10118.1646,2379.1987 Q10117.3511,2378.9082 10116.5542,2378.9082 Q10115.666,2378.9082 10115.1929,2379.2651 Q10114.7197,2379.6221 10114.7197,2380.2861 Q10114.7197,2380.8008 10115.0642,2381.137 Q10115.4087,2381.4731 10116.5044,2381.8799 L10117.5586,2382.2783 Q10119.0527,2382.8262 10119.7583,2383.731 Q10120.4639,2384.6357 10120.4639,2386.0137 Q10120.4639,2387.8896 10119.3557,2388.8152 Q10118.2476,2389.7407 10116.0063,2389.7407 Q10115.085,2389.7407 10114.1594,2389.5208 Q10113.2339,2389.3008 10112.3706,2388.8691 L10112.3706,2386.3374 Q10113.3501,2387.0347 10114.2673,2387.375 Q10115.1846,2387.7153 10116.0811,2387.7153 Q10116.9858,2387.7153 10117.4839,2387.3044 Q10117.9819,2386.8936 10117.9819,2386.1548 Q10117.9819,2385.5986 10117.6499,2385.1794 Q10117.3179,2384.7603 10116.687,2384.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="10136.75" y="2387.5352">GrantExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9825.5" x2="10474.5" y1="2399" y2="2399"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9832.5" y="2407"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="9844.5" y="2413.6348">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9832.5" y="2419.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="9844.5" y="2426.5898">done bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="9847.5" y="2439.5449"/><ellipse cx="9835.5" cy="2448.8652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="9844.5" y="2452.5">Privs []*ast.PrivElem</text><ellipse cx="9835.5" cy="2461.8203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="9844.5" y="2465.4551">ObjectType ast.ObjectTypeType</text><ellipse cx="9835.5" cy="2474.7754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="9844.5" y="2478.4102">Level *ast.GrantLevel</text><ellipse cx="9835.5" cy="2487.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="9844.5" y="2491.3652">Users []*ast.UserSpec</text><ellipse cx="9835.5" cy="2500.6855" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="9844.5" y="2504.3203">TLSOptions []*ast.TLSOption</text><ellipse cx="9835.5" cy="2513.6406" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="9844.5" y="2517.2754">WithGrant bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9825.5" x2="10474.5" y1="2523.5957" y2="2523.5957"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9832.5" y="2531.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="625" x="9844.5" y="2538.2305">checkAndInitColumnPriv(user string, host string, cols []*ast.ColumnName, internalSession sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9832.5" y="2544.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="9844.5" y="2551.1855">grantGlobalPriv(ctx sessionctx.Context, user *ast.UserSpec) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9832.5" y="2557.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="510" x="9844.5" y="2564.1406">grantLevelPriv(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9832.5" y="2570.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="9844.5" y="2577.0957">grantGlobalLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9832.5" y="2583.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="9844.5" y="2590.0508">grantDBLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9832.5" y="2596.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="519" x="9844.5" y="2603.0059">grantTableLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9832.5" y="2609.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="9844.5" y="2615.9609">grantColumnLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="9847.5" y="2628.916"/><ellipse cx="9835.5" cy="2638.2363" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="9844.5" y="2641.8711">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[6f95a69f9a633ce0be4009a729d0a3b9]
class executor.HashAggExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="540.293" id="executor.HashAggExec" style="stroke: #A80036; stroke-width: 1.5;" width="384" x="27925" y="2237.5"/><ellipse cx="28073.75" cy="2253.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28072.9834,2254.563 Q28071.1323,2253.8574 28070.4766,2253.0813 Q28069.8208,2252.3052 28069.8208,2250.9937 Q28069.8208,2249.3086 28070.8999,2248.3457 Q28071.979,2247.3828 28073.8633,2247.3828 Q28074.7183,2247.3828 28075.5732,2247.5779 Q28076.4282,2247.7729 28077.2666,2248.1548 L28077.2666,2250.5454 Q28076.478,2249.9893 28075.6646,2249.6987 Q28074.8511,2249.4082 28074.0542,2249.4082 Q28073.166,2249.4082 28072.6929,2249.7651 Q28072.2197,2250.1221 28072.2197,2250.7861 Q28072.2197,2251.3008 28072.5642,2251.637 Q28072.9087,2251.9731 28074.0044,2252.3799 L28075.0586,2252.7783 Q28076.5527,2253.3262 28077.2583,2254.231 Q28077.9639,2255.1357 28077.9639,2256.5137 Q28077.9639,2258.3896 28076.8557,2259.3152 Q28075.7476,2260.2407 28073.5063,2260.2407 Q28072.585,2260.2407 28071.6594,2260.0208 Q28070.7339,2259.8008 28069.8706,2259.3691 L28069.8706,2256.8374 Q28070.8501,2257.5347 28071.7673,2257.875 Q28072.6846,2258.2153 28073.5811,2258.2153 Q28074.4858,2258.2153 28074.9839,2257.8044 Q28075.4819,2257.3936 28075.4819,2256.6548 Q28075.4819,2256.0986 28075.1499,2255.6794 Q28074.8179,2255.2603 28074.187,2255.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="28094.25" y="2258.0352">HashAggExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27926" x2="28308" y1="2269.5" y2="2269.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2277.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="27945" y="2284.1348">sc *stmtctx.StatementContext</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2290.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="27945" y="2297.0898">partialResultMap aggPartialResultMapper</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2303.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="27945" y="2310.0449">groupSet set.StringSet</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2316.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="27945" y="2323">groupKeys []string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2329.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="27945" y="2335.9551">cursor4GroupKey int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2342.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="27945" y="2348.9102">groupKeyBuffer [][]byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2355.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="27945" y="2361.8652">finishCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="27993" y="2361.8652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="28022" y="2361.8652"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="28022" y="2361.8652">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="28054" y="2361.8652">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2368.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="27945" y="2374.8203">finalOutputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28024" y="2374.8203">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="28053" y="2374.8203">*AfFinalResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2381.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="27945" y="2387.7754">partialOutputChs []</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28049" y="2387.7754">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="28078" y="2387.7754">*HashAggIntermData</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2394.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="27945" y="2400.7305">inputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="27991" y="2400.7305">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="28020" y="2400.7305">*HashAggInput</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2407.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="27945" y="2413.6855">partialInputChs []</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28039" y="2413.6855">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="28068" y="2413.6855">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2420.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="27945" y="2426.6406">partialWorkers []HashAggPartialWorker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2432.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="27945" y="2439.5957">finalWorkers []HashAggFinalWorker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2445.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="27945" y="2452.5508">defaultVal *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2458.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="27945" y="2465.5059">childResult *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2471.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="27945" y="2478.4609">isChildReturnEmpty bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2484.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="27945" y="2491.416">isUnparallelExec bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2497.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="27945" y="2504.3711">prepared bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2510.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="27945" y="2517.3262">executed bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2523.6465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="27945" y="2530.2813">memTracker *memory.Tracker</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="27948" y="2543.2363"/><ellipse cx="27936" cy="2552.5566" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="27945" y="2556.1914">PartialAggFuncs []aggfuncs.AggFunc</text><ellipse cx="27936" cy="2565.5117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="27945" y="2569.1465">FinalAggFuncs []aggfuncs.AggFunc</text><ellipse cx="27936" cy="2578.4668" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="27945" y="2582.1016">GroupByItems []expression.Expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27926" x2="28308" y1="2588.4219" y2="2588.4219"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2596.4219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="27945" y="2603.0566">initForUnparallelExec()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2609.377"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="27945" y="2616.0117">initForParallelExec(ctx sessionctx.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2622.332"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="27945" y="2628.9668">fetchChildData(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2635.2871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="27945" y="2641.9219">waitPartialWorkerAndCloseOutputChs(waitGroup *sync.WaitGroup)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2648.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="27945" y="2654.877">waitFinalWorkerAndCloseFinalOutput(waitGroup *sync.WaitGroup)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2661.1973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="27945" y="2667.832">prepare4ParallelExec(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2674.1523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="27945" y="2680.7871">parallelExec(ctx context.Context, chk *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2687.1074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="27945" y="2693.7422">unparallelExec(ctx context.Context, chk *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2700.0625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="27945" y="2706.6973">execute(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27933" y="2713.0176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="27945" y="2719.6523">getPartialResults(groupKey string) []aggfuncs.PartialResult</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="27948" y="2732.6074"/><ellipse cx="27936" cy="2741.9277" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="27945" y="2745.5625">Close() error</text><ellipse cx="27936" cy="2754.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="27945" y="2758.5176">Open(ctx context.Context) error</text><ellipse cx="27936" cy="2767.8379" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="27945" y="2771.4727">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[2ecf50397d05ba9e99c7603f69756aaa]
class executor.HashAggFinalWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="216.416" id="executor.HashAggFinalWorker" style="stroke: #A80036; stroke-width: 1.5;" width="330" x="23119" y="1618"/><ellipse cx="23220.75" cy="1634" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23219.9834,1635.063 Q23218.1323,1634.3574 23217.4766,1633.5813 Q23216.8208,1632.8052 23216.8208,1631.4937 Q23216.8208,1629.8086 23217.8999,1628.8457 Q23218.979,1627.8828 23220.8633,1627.8828 Q23221.7183,1627.8828 23222.5732,1628.0779 Q23223.4282,1628.2729 23224.2666,1628.6548 L23224.2666,1631.0454 Q23223.478,1630.4893 23222.6646,1630.1987 Q23221.8511,1629.9082 23221.0542,1629.9082 Q23220.166,1629.9082 23219.6929,1630.2651 Q23219.2197,1630.6221 23219.2197,1631.2861 Q23219.2197,1631.8008 23219.5642,1632.137 Q23219.9087,1632.4731 23221.0044,1632.8799 L23222.0586,1633.2783 Q23223.5527,1633.8262 23224.2583,1634.731 Q23224.9639,1635.6357 23224.9639,1637.0137 Q23224.9639,1638.8896 23223.8557,1639.8152 Q23222.7476,1640.7407 23220.5063,1640.7407 Q23219.585,1640.7407 23218.6594,1640.5208 Q23217.7339,1640.3008 23216.8706,1639.8691 L23216.8706,1637.3374 Q23217.8501,1638.0347 23218.7673,1638.375 Q23219.6846,1638.7153 23220.5811,1638.7153 Q23221.4858,1638.7153 23221.9839,1638.3044 Q23222.4819,1637.8936 23222.4819,1637.1548 Q23222.4819,1636.5986 23222.1499,1636.1794 Q23221.8179,1635.7603 23221.187,1635.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="23241.25" y="1638.5352">HashAggFinalWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23120" x2="23448" y1="1650" y2="1650"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1658"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="23139" y="1664.6348">rowBuffer []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1670.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="23139" y="1677.5898">mutableRow chunk.MutRow</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1683.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="23139" y="1690.5449">partialResultMap aggPartialResultMapper</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1696.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="23139" y="1703.5">groupSet set.StringSet</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1709.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="23139" y="1716.4551">inputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="23185" y="1716.4551">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="23214" y="1716.4551">*HashAggIntermData</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1722.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="23139" y="1729.4102">outputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="23193" y="1729.4102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="23222" y="1729.4102">*AfFinalResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1735.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="23139" y="1742.3652">finalResultHolderCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="23249" y="1742.3652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="23278" y="1742.3652">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1748.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="23139" y="1755.3203">groupKeys [][]byte</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23120" x2="23448" y1="1761.6406" y2="1761.6406"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1769.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="23139" y="1776.2754">getPartialInput() (*HashAggIntermData, bool)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1782.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="23139" y="1789.2305">consumeIntermData(sctx sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1795.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="23139" y="1802.1855">getFinalResult(sctx sessionctx.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1808.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="23139" y="1815.1406">receiveFinalResultHolder() (*chunk.Chunk, bool)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23127" y="1821.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="23139" y="1828.0957">run(ctx sessionctx.Context, waitGroup *sync.WaitGroup)</text><!--MD5=[48301d1872fdae3e75d9b46a0cd3971e]
class executor.HashAggInput--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.HashAggInput" style="stroke: #A80036; stroke-width: 1.5;" width="195" x="35824.5" y="752"/><ellipse cx="35877.75" cy="768" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35876.9834,769.063 Q35875.1323,768.3574 35874.4766,767.5813 Q35873.8208,766.8052 35873.8208,765.4937 Q35873.8208,763.8086 35874.8999,762.8457 Q35875.979,761.8828 35877.8633,761.8828 Q35878.7183,761.8828 35879.5732,762.0779 Q35880.4282,762.2729 35881.2666,762.6548 L35881.2666,765.0454 Q35880.478,764.4893 35879.6646,764.1987 Q35878.8511,763.9082 35878.0542,763.9082 Q35877.166,763.9082 35876.6929,764.2651 Q35876.2197,764.6221 35876.2197,765.2861 Q35876.2197,765.8008 35876.5642,766.137 Q35876.9087,766.4731 35878.0044,766.8799 L35879.0586,767.2783 Q35880.5527,767.8262 35881.2583,768.731 Q35881.9639,769.6357 35881.9639,771.0137 Q35881.9639,772.8896 35880.8557,773.8152 Q35879.7476,774.7407 35877.5063,774.7407 Q35876.585,774.7407 35875.6594,774.5208 Q35874.7339,774.3008 35873.8706,773.8691 L35873.8706,771.3374 Q35874.8501,772.0347 35875.7673,772.375 Q35876.6846,772.7153 35877.5811,772.7153 Q35878.4858,772.7153 35878.9839,772.3044 Q35879.4819,771.8936 35879.4819,771.1548 Q35879.4819,770.5986 35879.1499,770.1794 Q35878.8179,769.7603 35878.187,769.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="35898.25" y="772.5352">HashAggInput</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35825.5" x2="36018.5" y1="784" y2="784"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35832.5" y="792"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="35844.5" y="798.6348">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35832.5" y="804.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="35844.5" y="811.5898">giveBackCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="35908.5" y="811.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="35937.5" y="811.5898">*chunk.Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35825.5" x2="36018.5" y1="817.9102" y2="817.9102"/><!--MD5=[36a52a52938a8bf46c04f0de1f47d340]
class executor.HashAggIntermData--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.HashAggIntermData" style="stroke: #A80036; stroke-width: 1.5;" width="962" x="36055" y="739"/><ellipse cx="36474.25" cy="755" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36473.4834,756.063 Q36471.6323,755.3574 36470.9766,754.5813 Q36470.3208,753.8052 36470.3208,752.4937 Q36470.3208,750.8086 36471.3999,749.8457 Q36472.479,748.8828 36474.3633,748.8828 Q36475.2183,748.8828 36476.0732,749.0779 Q36476.9282,749.2729 36477.7666,749.6548 L36477.7666,752.0454 Q36476.978,751.4893 36476.1646,751.1987 Q36475.3511,750.9082 36474.5542,750.9082 Q36473.666,750.9082 36473.1929,751.2651 Q36472.7197,751.6221 36472.7197,752.2861 Q36472.7197,752.8008 36473.0642,753.137 Q36473.4087,753.4731 36474.5044,753.8799 L36475.5586,754.2783 Q36477.0527,754.8262 36477.7583,755.731 Q36478.4639,756.6357 36478.4639,758.0137 Q36478.4639,759.8896 36477.3557,760.8152 Q36476.2476,761.7407 36474.0063,761.7407 Q36473.085,761.7407 36472.1594,761.5208 Q36471.2339,761.3008 36470.3706,760.8691 L36470.3706,758.3374 Q36471.3501,759.0347 36472.2673,759.375 Q36473.1846,759.7153 36474.0811,759.7153 Q36474.9858,759.7153 36475.4839,759.3044 Q36475.9819,758.8936 36475.9819,758.1548 Q36475.9819,757.5986 36475.6499,757.1794 Q36475.3179,756.7603 36474.687,756.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="36494.75" y="759.5352">HashAggIntermData</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36056" x2="37016" y1="771" y2="771"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36063" y="779"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="36075" y="785.6348">groupKeys []string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36063" y="791.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="36075" y="798.5898">cursor int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36063" y="804.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="36075" y="811.5449">partialResultMap aggPartialResultMapper</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36056" x2="37016" y1="817.8652" y2="817.8652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36063" y="825.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="936" x="36075" y="832.5">getPartialResultBatch(sc *stmtctx.StatementContext, prs [][]aggfuncs.PartialResult, aggFuncs []aggfuncs.AggFunc, maxChunkSize int) ([][]aggfuncs.PartialResult, []string, bool)</text><!--MD5=[cbcf1d74eb64656fa22630d359f4c7fb]
class executor.HashAggPartialWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="216.416" id="executor.HashAggPartialWorker" style="stroke: #A80036; stroke-width: 1.5;" width="678" x="22406" y="1618"/><ellipse cx="22676.75" cy="1634" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22675.9834,1635.063 Q22674.1323,1634.3574 22673.4766,1633.5813 Q22672.8208,1632.8052 22672.8208,1631.4937 Q22672.8208,1629.8086 22673.8999,1628.8457 Q22674.979,1627.8828 22676.8633,1627.8828 Q22677.7183,1627.8828 22678.5732,1628.0779 Q22679.4282,1628.2729 22680.2666,1628.6548 L22680.2666,1631.0454 Q22679.478,1630.4893 22678.6646,1630.1987 Q22677.8511,1629.9082 22677.0542,1629.9082 Q22676.166,1629.9082 22675.6929,1630.2651 Q22675.2197,1630.6221 22675.2197,1631.2861 Q22675.2197,1631.8008 22675.5642,1632.137 Q22675.9087,1632.4731 22677.0044,1632.8799 L22678.0586,1633.2783 Q22679.5527,1633.8262 22680.2583,1634.731 Q22680.9639,1635.6357 22680.9639,1637.0137 Q22680.9639,1638.8896 22679.8557,1639.8152 Q22678.7476,1640.7407 22676.5063,1640.7407 Q22675.585,1640.7407 22674.6594,1640.5208 Q22673.7339,1640.3008 22672.8706,1639.8691 L22672.8706,1637.3374 Q22673.8501,1638.0347 22674.7673,1638.375 Q22675.6846,1638.7153 22676.5811,1638.7153 Q22677.4858,1638.7153 22677.9839,1638.3044 Q22678.4819,1637.8936 22678.4819,1637.1548 Q22678.4819,1636.5986 22678.1499,1636.1794 Q22677.8179,1635.7603 22677.187,1635.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="22697.25" y="1638.5352">HashAggPartialWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22407" x2="23083" y1="1650" y2="1650"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1658"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="22426" y="1664.6348">inputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="22472" y="1664.6348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="22501" y="1664.6348">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1670.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="22426" y="1677.5898">outputChs []</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="22494" y="1677.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="22523" y="1677.5898">*HashAggIntermData</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1683.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="22426" y="1690.5449">globalOutputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="22515" y="1690.5449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="22544" y="1690.5449">*AfFinalResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1696.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="22426" y="1703.5">giveBackCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="22490" y="1703.5">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="22519" y="1703.5">*HashAggInput</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1709.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="22426" y="1716.4551">partialResultsMap aggPartialResultMapper</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1722.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="22426" y="1729.4102">groupByItems []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1735.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="22426" y="1742.3652">groupKey [][]byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1748.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="22426" y="1755.3203">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1761.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="22426" y="1768.2754">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22407" x2="23083" y1="1774.5957" y2="1774.5957"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1782.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="22426" y="1789.2305">getChildInput() bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1795.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="22426" y="1802.1855">run(ctx sessionctx.Context, waitGroup *sync.WaitGroup, finalConcurrency int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1808.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="22426" y="1815.1406">updatePartialResult(ctx sessionctx.Context, sc *stmtctx.StatementContext, chk *chunk.Chunk, finalConcurrency int) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22414" y="1821.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="22426" y="1828.0957">shuffleIntermData(sc *stmtctx.StatementContext, finalConcurrency int)</text><!--MD5=[7367302a2ba0e03ded92b28fa1d05be2]
class executor.HashJoinExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="682.7988" id="executor.HashJoinExec" style="stroke: #A80036; stroke-width: 1.5;" width="1078" x="28344" y="2166"/><ellipse cx="28840.25" cy="2182" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28839.4834,2183.063 Q28837.6323,2182.3574 28836.9766,2181.5813 Q28836.3208,2180.8052 28836.3208,2179.4937 Q28836.3208,2177.8086 28837.3999,2176.8457 Q28838.479,2175.8828 28840.3633,2175.8828 Q28841.2183,2175.8828 28842.0732,2176.0779 Q28842.9282,2176.2729 28843.7666,2176.6548 L28843.7666,2179.0454 Q28842.978,2178.4893 28842.1646,2178.1987 Q28841.3511,2177.9082 28840.5542,2177.9082 Q28839.666,2177.9082 28839.1929,2178.2651 Q28838.7197,2178.6221 28838.7197,2179.2861 Q28838.7197,2179.8008 28839.0642,2180.137 Q28839.4087,2180.4731 28840.5044,2180.8799 L28841.5586,2181.2783 Q28843.0527,2181.8262 28843.7583,2182.731 Q28844.4639,2183.6357 28844.4639,2185.0137 Q28844.4639,2186.8896 28843.3557,2187.8152 Q28842.2476,2188.7407 28840.0063,2188.7407 Q28839.085,2188.7407 28838.1594,2188.5208 Q28837.2339,2188.3008 28836.3706,2187.8691 L28836.3706,2185.3374 Q28837.3501,2186.0347 28838.2673,2186.375 Q28839.1846,2186.7153 28840.0811,2186.7153 Q28840.9858,2186.7153 28841.4839,2186.3044 Q28841.9819,2185.8936 28841.9819,2185.1548 Q28841.9819,2184.5986 28841.6499,2184.1794 Q28841.3179,2183.7603 28840.687,2183.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="28860.75" y="2186.5352">HashJoinExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28345" x2="29421" y1="2198" y2="2198"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2206"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="28364" y="2212.6348">probeSideExec Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2218.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="28364" y="2225.5898">buildSideExec Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2231.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="28364" y="2238.5449">buildSideEstCount float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2244.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="28364" y="2251.5">outerFilter expression.CNFExprs</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2257.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="28364" y="2264.4551">probeKeys []*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2270.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="28364" y="2277.4102">buildKeys []*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2283.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="28364" y="2290.3652">probeTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2296.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="28364" y="2303.3203">buildTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2309.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="28364" y="2316.2754">concurrency uint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2322.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="28364" y="2329.2305">rowContainer *hashRowContainer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2335.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="28364" y="2342.1855">buildFinished</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28439" y="2342.1855">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="28468" y="2342.1855">error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2348.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="28364" y="2355.1406">closeCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28410" y="2355.1406">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="28439" y="2355.1406"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="28439" y="2355.1406">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="28471" y="2355.1406">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2361.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="28364" y="2368.0957">joinType core.JoinType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2374.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="28364" y="2381.0508">requiredRows int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2387.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="28364" y="2394.0059">joiners []joiner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2400.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="28364" y="2406.9609">probeChkResourceCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28485" y="2406.9609">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="28514" y="2406.9609">*probeChkResource</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2413.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="28364" y="2419.916">probeResultChs []</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28461" y="2419.916">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="28490" y="2419.916">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2426.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="28364" y="2432.8711">joinChkResourceCh []</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28481" y="2432.8711">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="28510" y="2432.8711">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2439.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="28364" y="2445.8262">joinResultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28435" y="2445.8262">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="28464" y="2445.8262">*hashjoinWorkerResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2452.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="28364" y="2458.7813">memTracker *memory.Tracker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2465.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="28364" y="2471.7363">diskTracker *disk.Tracker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2478.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="28364" y="2484.6914">outerMatchedStatus []*bitmap.ConcurrentBitmap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2491.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="28364" y="2497.6465">useOuterToBuild bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2503.9668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="28364" y="2510.6016">prepared bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2516.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="28364" y="2523.5566">isOuterJoin bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2529.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="28364" y="2536.5117">joinWorkerWaitGroup sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2542.832"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="28364" y="2549.4668">finished atomic.Value</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28345" x2="29421" y1="2555.7871" y2="2555.7871"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2563.7871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="28364" y="2570.4219">fetchProbeSideChunks(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2576.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="28364" y="2583.377">wait4BuildSide() (bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2589.6973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="28364" y="2596.332">fetchBuildSideRows(ctx context.Context, chkCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28621" y="2596.332">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="28650" y="2596.332">*chunk.Chunk, doneCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28777" y="2596.332">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="28806" y="2596.332"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="28806" y="2596.332">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="28838" y="2596.332">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2602.6523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="28364" y="2609.2871">initializeForProbe()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2615.6074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="28364" y="2622.2422">fetchAndProbeHashTable(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2628.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="28364" y="2635.1973">handleProbeSideFetcherPanic(r</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="28533" y="2635.1973">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="28580" y="2635.1973">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2641.5176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="28364" y="2648.1523">handleJoinWorkerPanic(r</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="28498" y="2648.1523">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="28545" y="2648.1523">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2654.4727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="28364" y="2661.1074">handleUnmatchedRowsFromHashTable(workerID uint)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2667.4277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="28364" y="2674.0625">waitJoinWorkersAndCloseResultChan()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2680.3828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="28364" y="2687.0176">runJoinWorker(workerID uint, probeKeyColIdx []int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2693.3379"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1052" x="28364" y="2699.9727">joinMatchedProbeSideRow2ChunkForOuterHashJoin(workerID uint, probeKey uint64, probeSideRow chunk.Row, hCtx *hashContext, joinResult *hashjoinWorkerResult) (bool, *hashjoinWorkerResult)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2706.293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="956" x="28364" y="2712.9277">joinMatchedProbeSideRow2Chunk(workerID uint, probeKey uint64, probeSideRow chunk.Row, hCtx *hashContext, joinResult *hashjoinWorkerResult) (bool, *hashjoinWorkerResult)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2719.248"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="28364" y="2725.8828">getNewJoinResult(workerID uint) (bool, *hashjoinWorkerResult)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2732.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="843" x="28364" y="2738.8379">join2Chunk(workerID uint, probeSideChk *chunk.Chunk, hCtx *hashContext, joinResult *hashjoinWorkerResult, selected []bool) (bool, *hashjoinWorkerResult)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2745.1582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="854" x="28364" y="2751.793">join2ChunkForOuterHashJoin(workerID uint, probeSideChk *chunk.Chunk, hCtx *hashContext, joinResult *hashjoinWorkerResult) (bool, *hashjoinWorkerResult)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2758.1133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="28364" y="2764.748">handleFetchAndBuildHashTablePanic(r</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="28573" y="2764.748">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="28620" y="2764.748">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2771.0684"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="28364" y="2777.7031">fetchAndBuildHashTable(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28352" y="2784.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="28364" y="2790.6582">buildHashTableForList(buildSideResultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="28588" y="2790.6582">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="28617" y="2790.6582">*chunk.Chunk) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="28367" y="2803.6133"/><ellipse cx="28355" cy="2812.9336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="28364" y="2816.5684">Close() error</text><ellipse cx="28355" cy="2825.8887" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="28364" y="2829.5234">Open(ctx context.Context) error</text><ellipse cx="28355" cy="2838.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="28364" y="2842.4785">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[eb3fb51f40f238aba58c64f45ea25970]
class executor.IndexAdvice--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.IndexAdvice" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="37052" y="765"/><ellipse cx="37067" cy="781" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M37066.2334,782.063 Q37064.3823,781.3574 37063.7266,780.5813 Q37063.0708,779.8052 37063.0708,778.4937 Q37063.0708,776.8086 37064.1499,775.8457 Q37065.229,774.8828 37067.1133,774.8828 Q37067.9683,774.8828 37068.8232,775.0779 Q37069.6782,775.2729 37070.5166,775.6548 L37070.5166,778.0454 Q37069.728,777.4893 37068.9146,777.1987 Q37068.1011,776.9082 37067.3042,776.9082 Q37066.416,776.9082 37065.9429,777.2651 Q37065.4697,777.6221 37065.4697,778.2861 Q37065.4697,778.8008 37065.8142,779.137 Q37066.1587,779.4731 37067.2544,779.8799 L37068.3086,780.2783 Q37069.8027,780.8262 37070.5083,781.731 Q37071.2139,782.6357 37071.2139,784.0137 Q37071.2139,785.8896 37070.1057,786.8152 Q37068.9976,787.7407 37066.7563,787.7407 Q37065.835,787.7407 37064.9094,787.5208 Q37063.9839,787.3008 37063.1206,786.8691 L37063.1206,784.3374 Q37064.1001,785.0347 37065.0173,785.375 Q37065.9346,785.7153 37066.8311,785.7153 Q37067.7358,785.7153 37068.2339,785.3044 Q37068.7319,784.8936 37068.7319,784.1548 Q37068.7319,783.5986 37068.3999,783.1794 Q37068.0679,782.7603 37067.437,782.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="37081" y="785.5352">IndexAdvice</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="37053" x2="37153" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="37053" x2="37153" y1="805" y2="805"/><!--MD5=[70c4631616f7d83ec83640866b49374f]
class executor.IndexAdviseExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.IndexAdviseExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="29457" y="2444.5"/><ellipse cx="29554.25" cy="2460.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M29553.4834,2461.563 Q29551.6323,2460.8574 29550.9766,2460.0813 Q29550.3208,2459.3052 29550.3208,2457.9937 Q29550.3208,2456.3086 29551.3999,2455.3457 Q29552.479,2454.3828 29554.3633,2454.3828 Q29555.2183,2454.3828 29556.0732,2454.5779 Q29556.9282,2454.7729 29557.7666,2455.1548 L29557.7666,2457.5454 Q29556.978,2456.9893 29556.1646,2456.6987 Q29555.3511,2456.4082 29554.5542,2456.4082 Q29553.666,2456.4082 29553.1929,2456.7651 Q29552.7197,2457.1221 29552.7197,2457.7861 Q29552.7197,2458.3008 29553.0642,2458.637 Q29553.4087,2458.9731 29554.5044,2459.3799 L29555.5586,2459.7783 Q29557.0527,2460.3262 29557.7583,2461.231 Q29558.4639,2462.1357 29558.4639,2463.5137 Q29558.4639,2465.3896 29557.3557,2466.3152 Q29556.2476,2467.2407 29554.0063,2467.2407 Q29553.085,2467.2407 29552.1594,2467.0208 Q29551.2339,2466.8008 29550.3706,2466.3691 L29550.3706,2463.8374 Q29551.3501,2464.5347 29552.2673,2464.875 Q29553.1846,2465.2153 29554.0811,2465.2153 Q29554.9858,2465.2153 29555.4839,2464.8044 Q29555.9819,2464.3936 29555.9819,2463.6548 Q29555.9819,2463.0986 29555.6499,2462.6794 Q29555.3179,2462.2603 29554.687,2462.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="29574.75" y="2465.0352">IndexAdviseExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29458" x2="29756" y1="2476.5" y2="2476.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29465" y="2484.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="29477" y="2491.1348">indexAdviseInfo *IndexAdviseInfo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="29480" y="2504.0898"/><ellipse cx="29468" cy="2513.4102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="29477" y="2517.0449">IsLocal bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29458" x2="29756" y1="2523.3652" y2="2523.3652"/><ellipse cx="29468" cy="2534.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="29477" y="2538">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="29468" cy="2547.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="29477" y="2550.9551">Close() error</text><ellipse cx="29468" cy="2560.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="29477" y="2563.9102">Open(ctx context.Context) error</text><!--MD5=[e0ec710c21cc1d3a7fe4cbe7141a02ad]
class executor.IndexAdviseInfo--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="190.5059" id="executor.IndexAdviseInfo" style="stroke: #A80036; stroke-width: 1.5;" width="319" x="34515.5" y="1630.5"/><ellipse cx="34625.25" cy="1646.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34624.4834,1647.563 Q34622.6323,1646.8574 34621.9766,1646.0813 Q34621.3208,1645.3052 34621.3208,1643.9937 Q34621.3208,1642.3086 34622.3999,1641.3457 Q34623.479,1640.3828 34625.3633,1640.3828 Q34626.2183,1640.3828 34627.0732,1640.5779 Q34627.9282,1640.7729 34628.7666,1641.1548 L34628.7666,1643.5454 Q34627.978,1642.9893 34627.1646,1642.6987 Q34626.3511,1642.4082 34625.5542,1642.4082 Q34624.666,1642.4082 34624.1929,1642.7651 Q34623.7197,1643.1221 34623.7197,1643.7861 Q34623.7197,1644.3008 34624.0642,1644.637 Q34624.4087,1644.9731 34625.5044,1645.3799 L34626.5586,1645.7783 Q34628.0527,1646.3262 34628.7583,1647.231 Q34629.4639,1648.1357 34629.4639,1649.5137 Q34629.4639,1651.3896 34628.3557,1652.3152 Q34627.2476,1653.2407 34625.0063,1653.2407 Q34624.085,1653.2407 34623.1594,1653.0208 Q34622.2339,1652.8008 34621.3706,1652.3691 L34621.3706,1649.8374 Q34622.3501,1650.5347 34623.2673,1650.875 Q34624.1846,1651.2153 34625.0811,1651.2153 Q34625.9858,1651.2153 34626.4839,1650.8044 Q34626.9819,1650.3936 34626.9819,1649.6548 Q34626.9819,1649.0986 34626.6499,1648.6794 Q34626.3179,1648.2603 34625.687,1648.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="34645.75" y="1651.0352">IndexAdviseInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34516.5" x2="34833.5" y1="1662.5" y2="1662.5"/><ellipse cx="34526.5" cy="1673.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="34535.5" y="1677.1348">Path string</text><ellipse cx="34526.5" cy="1686.4551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="34535.5" y="1690.0898">MaxMinutes uint64</text><ellipse cx="34526.5" cy="1699.4102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="34535.5" y="1703.0449">MaxIndexNum *ast.MaxIndexNumClause</text><ellipse cx="34526.5" cy="1712.3652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="34535.5" y="1716">LinesInfo *ast.LinesClause</text><ellipse cx="34526.5" cy="1725.3203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="34535.5" y="1728.9551">Ctx sessionctx.Context</text><ellipse cx="34526.5" cy="1738.2754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="34535.5" y="1741.9102">StmtNodes [][]ast.StmtNode</text><ellipse cx="34526.5" cy="1751.2305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="34535.5" y="1754.8652">Result *IndexAdvice</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34516.5" x2="34833.5" y1="1761.1855" y2="1761.1855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34523.5" y="1769.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="34535.5" y="1775.8203">getStmtNodes(data []byte) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34523.5" y="1782.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="34535.5" y="1788.7754">prepareInfo(data []byte) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="34538.5" y="1801.7305"/><ellipse cx="34526.5" cy="1811.0508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="34535.5" y="1814.6855">GetIndexAdvice(ctx context.Context, data []byte) error</text><!--MD5=[6d7509978f1f37c37a46800102f014d8]
class executor.IndexAdviseVarKeyType--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.IndexAdviseVarKeyType" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="22567" y="758.5"/><ellipse cx="22582" cy="774.5" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22583.3418,781.75 L22580.8931,781.75 L22580.8931,771.4985 L22577.7471,771.4985 L22577.7471,769.3569 L22586.4878,769.3569 L22586.4878,771.4985 L22583.3418,771.4985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="22596" y="779.0352">IndexAdviseVarKeyType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22568" x2="22738" y1="790.5" y2="790.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="22568" x2="22738" y1="798.5" y2="798.5"/><ellipse cx="22578" cy="809.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="22587" y="813.1348">String() string</text><!--MD5=[a7f966b81fef423be3c62b5cd9a97e6d]
class executor.IndexLookUpExecutor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="566.2031" id="executor.IndexLookUpExecutor" style="stroke: #A80036; stroke-width: 1.5;" width="665" x="4651.5" y="2224.5"/><ellipse cx="4917.25" cy="2240.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4916.4834,2241.563 Q4914.6323,2240.8574 4913.9766,2240.0813 Q4913.3208,2239.3052 4913.3208,2237.9937 Q4913.3208,2236.3086 4914.3999,2235.3457 Q4915.479,2234.3828 4917.3633,2234.3828 Q4918.2183,2234.3828 4919.0732,2234.5779 Q4919.9282,2234.7729 4920.7666,2235.1548 L4920.7666,2237.5454 Q4919.978,2236.9893 4919.1646,2236.6987 Q4918.3511,2236.4082 4917.5542,2236.4082 Q4916.666,2236.4082 4916.1929,2236.7651 Q4915.7197,2237.1221 4915.7197,2237.7861 Q4915.7197,2238.3008 4916.0642,2238.637 Q4916.4087,2238.9731 4917.5044,2239.3799 L4918.5586,2239.7783 Q4920.0527,2240.3262 4920.7583,2241.231 Q4921.4639,2242.1357 4921.4639,2243.5137 Q4921.4639,2245.3896 4920.3557,2246.3152 Q4919.2476,2247.2407 4917.0063,2247.2407 Q4916.085,2247.2407 4915.1594,2247.0208 Q4914.2339,2246.8008 4913.3706,2246.3691 L4913.3706,2243.8374 Q4914.3501,2244.5347 4915.2673,2244.875 Q4916.1846,2245.2153 4917.0811,2245.2153 Q4917.9858,2245.2153 4918.4839,2244.8044 Q4918.9819,2244.3936 4918.9819,2243.6548 Q4918.9819,2243.0986 4918.6499,2242.6794 Q4918.3179,2242.2603 4917.687,2242.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="125" x="4937.75" y="2245.0352">IndexLookUpExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4652.5" x2="5315.5" y1="2256.5" y2="2256.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2264.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="4671.5" y="2271.1348">table table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2277.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="4671.5" y="2284.0898">index *model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2290.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="4671.5" y="2297.0449">ranges []*ranger.Range</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2303.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4671.5" y="2310">dagPB *tipb.DAGRequest</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2316.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="4671.5" y="2322.9551">startTS uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2329.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="4671.5" y="2335.9102">handleIdx int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2342.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4671.5" y="2348.8652">tableRequest *tipb.DAGRequest</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2355.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="4671.5" y="2361.8203">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2368.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4671.5" y="2374.7754">idxWorkerWg sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2381.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4671.5" y="2387.7305">tblWorkerWg sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2394.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="4671.5" y="2400.6855">finished</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="4717.5" y="2400.6855">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="4746.5" y="2400.6855"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="4746.5" y="2400.6855">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="4778.5" y="2400.6855">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2407.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="4671.5" y="2413.6406">resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="4720.5" y="2413.6406">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="4749.5" y="2413.6406">*lookupTableTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2419.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4671.5" y="2426.5957">resultCurr *lookupTableTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2432.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4671.5" y="2439.5508">feedback *statistics.QueryFeedback</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2445.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4671.5" y="2452.5059">memTracker *memory.Tracker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2458.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="4671.5" y="2465.4609">kvRanges []kv.KeyRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2471.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4671.5" y="2478.416">workerStarted bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2484.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="4671.5" y="2491.3711">keepOrder bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2497.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="4671.5" y="2504.3262">desc bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2510.6465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="4671.5" y="2517.2813">indexStreaming bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2523.6016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4671.5" y="2530.2363">tableStreaming bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2536.5566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="4671.5" y="2543.1914">corColInIdxSide bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2549.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="4671.5" y="2556.1465">corColInTblSide bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2562.4668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="4671.5" y="2569.1016">corColInAccess bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2575.4219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4671.5" y="2582.0566">idxPlans []core.PhysicalPlan</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2588.377"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4671.5" y="2595.0117">tblPlans []core.PhysicalPlan</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2601.332"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="4671.5" y="2607.9668">idxCols []*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2614.2871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="4671.5" y="2620.9219">colLens []int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="4674.5" y="2633.877"/><ellipse cx="4662.5" cy="2643.1973" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="4671.5" y="2646.832">PushedLimit *core.PushedDownLimit</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4652.5" x2="5315.5" y1="2653.1523" y2="2653.1523"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2661.1523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4671.5" y="2667.7871">open(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2674.1074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="4671.5" y="2680.7422">startWorkers(ctx context.Context, initBatchSize int) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2687.0625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="4671.5" y="2693.6973">startIndexWorker(ctx context.Context, kvRanges []kv.KeyRange, workCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5060.5" y="2693.6973">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="5089.5" y="2693.6973">*lookupTableTask, initBatchSize int) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2700.0176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="4671.5" y="2706.6523">startTableWorker(ctx context.Context, workCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="4924.5" y="2706.6523">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="4953.5" y="2706.6523">*lookupTableTask)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2712.9727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="4671.5" y="2719.6074">buildTableReader(ctx context.Context, handles []int64) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4659.5" y="2725.9277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4671.5" y="2732.5625">getResultTask() (*lookupTableTask, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="4674.5" y="2745.5176"/><ellipse cx="4662.5" cy="2754.8379" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4671.5" y="2758.4727">Open(ctx context.Context) error</text><ellipse cx="4662.5" cy="2767.793" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="4671.5" y="2771.4277">Close() error</text><ellipse cx="4662.5" cy="2780.748" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="4671.5" y="2784.3828">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[66b9bf61914ac9cac07b932f93bd7170]
class executor.IndexLookUpJoin--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="371.877" id="executor.IndexLookUpJoin" style="stroke: #A80036; stroke-width: 1.5;" width="534" x="33855" y="2321.5"/><ellipse cx="34069.75" cy="2337.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34068.9834,2338.563 Q34067.1323,2337.8574 34066.4766,2337.0813 Q34065.8208,2336.3052 34065.8208,2334.9937 Q34065.8208,2333.3086 34066.8999,2332.3457 Q34067.979,2331.3828 34069.8633,2331.3828 Q34070.7183,2331.3828 34071.5732,2331.5779 Q34072.4282,2331.7729 34073.2666,2332.1548 L34073.2666,2334.5454 Q34072.478,2333.9893 34071.6646,2333.6987 Q34070.8511,2333.4082 34070.0542,2333.4082 Q34069.166,2333.4082 34068.6929,2333.7651 Q34068.2197,2334.1221 34068.2197,2334.7861 Q34068.2197,2335.3008 34068.5642,2335.637 Q34068.9087,2335.9731 34070.0044,2336.3799 L34071.0586,2336.7783 Q34072.5527,2337.3262 34073.2583,2338.231 Q34073.9639,2339.1357 34073.9639,2340.5137 Q34073.9639,2342.3896 34072.8557,2343.3152 Q34071.7476,2344.2407 34069.5063,2344.2407 Q34068.585,2344.2407 34067.6594,2344.0208 Q34066.7339,2343.8008 34065.8706,2343.3691 L34065.8706,2340.8374 Q34066.8501,2341.5347 34067.7673,2341.875 Q34068.6846,2342.2153 34069.5811,2342.2153 Q34070.4858,2342.2153 34070.9839,2341.8044 Q34071.4819,2341.3936 34071.4819,2340.6548 Q34071.4819,2340.0986 34071.1499,2339.6794 Q34070.8179,2339.2603 34070.187,2339.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="34090.25" y="2342.0352">IndexLookUpJoin</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33856" x2="34388" y1="2353.5" y2="2353.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2361.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="33875" y="2368.1348">resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33924" y="2368.1348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="33953" y="2368.1348">*lookUpJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2374.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="33875" y="2381.0898">cancelFunc context.CancelFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2387.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="33875" y="2394.0449">workerWg *sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2400.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="33875" y="2407">outerCtx outerCtx</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2413.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="33875" y="2419.9551">innerCtx innerCtx</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2426.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="33875" y="2432.9102">task *lookUpJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2439.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="33875" y="2445.8652">joinResult *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2452.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="33875" y="2458.8203">innerIter chunk.Iterator</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2465.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="33875" y="2471.7754">joiner joiner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2478.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="33875" y="2484.7305">isOuterJoin bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2491.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="33875" y="2497.6855">requiredRows int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2504.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="33875" y="2510.6406">indexRanges []*ranger.Range</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2516.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="33875" y="2523.5957">keyOff2IdxOff []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2529.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="33875" y="2536.5508">innerPtrBytes [][]byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2542.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="33875" y="2549.5059">lastColHelper *core.ColWithCmpFuncManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2555.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="33875" y="2562.4609">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33856" x2="34388" y1="2568.7813" y2="2568.7813"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2576.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="33875" y="2583.416">startWorkers(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2589.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="33875" y="2596.3711">newOuterWorker(resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="34018" y="2596.3711">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="34047" y="2596.3711">*lookUpJoinTask, innerCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="34187" y="2596.3711">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="34216" y="2596.3711">*lookUpJoinTask) *outerWorker</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2602.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="33875" y="2609.3262">newInnerWorker(taskCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="34006" y="2609.3262">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="34035" y="2609.3262">*lookUpJoinTask) *innerWorker</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2615.6465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="33875" y="2622.2813">getFinishedTask(ctx context.Context) (*lookUpJoinTask, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33863" y="2628.6016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="33875" y="2635.2363">lookUpMatchedInners(task *lookUpJoinTask, rowPtr chunk.RowPtr)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="33878" y="2648.1914"/><ellipse cx="33866" cy="2657.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="33875" y="2661.1465">Open(ctx context.Context) error</text><ellipse cx="33866" cy="2670.4668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="33875" y="2674.1016">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="33866" cy="2683.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="33875" y="2687.0566">Close() error</text><!--MD5=[a75058b3ff3e6cc9d0754278512ca3f2]
class executor.IndexLookUpMergeJoin--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="333.0117" id="executor.IndexLookUpMergeJoin" style="stroke: #A80036; stroke-width: 1.5;" width="633" x="29792.5" y="2341"/><ellipse cx="30038.75" cy="2357" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M30037.9834,2358.063 Q30036.1323,2357.3574 30035.4766,2356.5813 Q30034.8208,2355.8052 30034.8208,2354.4937 Q30034.8208,2352.8086 30035.8999,2351.8457 Q30036.979,2350.8828 30038.8633,2350.8828 Q30039.7183,2350.8828 30040.5732,2351.0779 Q30041.4282,2351.2729 30042.2666,2351.6548 L30042.2666,2354.0454 Q30041.478,2353.4893 30040.6646,2353.1987 Q30039.8511,2352.9082 30039.0542,2352.9082 Q30038.166,2352.9082 30037.6929,2353.2651 Q30037.2197,2353.6221 30037.2197,2354.2861 Q30037.2197,2354.8008 30037.5642,2355.137 Q30037.9087,2355.4731 30039.0044,2355.8799 L30040.0586,2356.2783 Q30041.5527,2356.8262 30042.2583,2357.731 Q30042.9639,2358.6357 30042.9639,2360.0137 Q30042.9639,2361.8896 30041.8557,2362.8152 Q30040.7476,2363.7407 30038.5063,2363.7407 Q30037.585,2363.7407 30036.6594,2363.5208 Q30035.7339,2363.3008 30034.8706,2362.8691 L30034.8706,2360.3374 Q30035.8501,2361.0347 30036.7673,2361.375 Q30037.6846,2361.7153 30038.5811,2361.7153 Q30039.4858,2361.7153 30039.9839,2361.3044 Q30040.4819,2360.8936 30040.4819,2360.1548 Q30040.4819,2359.5986 30040.1499,2359.1794 Q30039.8179,2358.7603 30039.187,2358.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="132" x="30059.25" y="2361.5352">IndexLookUpMergeJoin</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29793.5" x2="30424.5" y1="2373" y2="2373"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2381"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="29812.5" y="2387.6348">resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="29861.5" y="2387.6348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="29890.5" y="2387.6348">*lookUpMergeJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2393.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="29812.5" y="2400.5898">cancelFunc context.CancelFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2406.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="29812.5" y="2413.5449">workerWg *sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2419.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="29812.5" y="2426.5">outerMergeCtx outerMergeCtx</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2432.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="29812.5" y="2439.4551">innerMergeCtx innerMergeCtx</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2445.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="29812.5" y="2452.4102">joiners []joiner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2458.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="29812.5" y="2465.3652">joinChkResourceCh []</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="29929.5" y="2465.3652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="29958.5" y="2465.3652">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2471.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="29812.5" y="2478.3203">isOuterJoin bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2484.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="29812.5" y="2491.2754">requiredRows int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2497.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="29812.5" y="2504.2305">task *lookUpMergeJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2510.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="29812.5" y="2517.1855">indexRanges []*ranger.Range</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2523.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="29812.5" y="2530.1406">keyOff2IdxOff []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2536.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="29812.5" y="2543.0957">lastColHelper *core.ColWithCmpFuncManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2549.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="29812.5" y="2556.0508">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29793.5" x2="30424.5" y1="2562.3711" y2="2562.3711"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2570.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="29812.5" y="2577.0059">startWorkers(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2583.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="29812.5" y="2589.9609">newOuterWorker(resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="29955.5" y="2589.9609">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="29984.5" y="2589.9609">*lookUpMergeJoinTask, innerCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="30157.5" y="2589.9609">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="30186.5" y="2589.9609">*lookUpMergeJoinTask) *outerMergeWorker</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2596.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="29812.5" y="2602.916">newInnerMergeWorker(taskCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="29976.5" y="2602.916">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="30005.5" y="2602.916">*lookUpMergeJoinTask, workID int) *innerMergeWorker</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29800.5" y="2609.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="29812.5" y="2615.8711">getFinishedTask(ctx context.Context)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="29815.5" y="2628.8262"/><ellipse cx="29803.5" cy="2638.1465" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="29812.5" y="2641.7813">Open(ctx context.Context) error</text><ellipse cx="29803.5" cy="2651.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="29812.5" y="2654.7363">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="29803.5" cy="2664.0566" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="29812.5" y="2667.6914">Close() error</text><!--MD5=[941c1f8970d8415ada9b4f4211acbd57]
class executor.IndexMergeReaderExecutor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="566.2031" id="executor.IndexMergeReaderExecutor" style="stroke: #A80036; stroke-width: 1.5;" width="968" x="5352" y="2224.5"/><ellipse cx="5751.75" cy="2240.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5750.9834,2241.563 Q5749.1323,2240.8574 5748.4766,2240.0813 Q5747.8208,2239.3052 5747.8208,2237.9937 Q5747.8208,2236.3086 5748.8999,2235.3457 Q5749.979,2234.3828 5751.8633,2234.3828 Q5752.7183,2234.3828 5753.5732,2234.5779 Q5754.4282,2234.7729 5755.2666,2235.1548 L5755.2666,2237.5454 Q5754.478,2236.9893 5753.6646,2236.6987 Q5752.8511,2236.4082 5752.0542,2236.4082 Q5751.166,2236.4082 5750.6929,2236.7651 Q5750.2197,2237.1221 5750.2197,2237.7861 Q5750.2197,2238.3008 5750.5642,2238.637 Q5750.9087,2238.9731 5752.0044,2239.3799 L5753.0586,2239.7783 Q5754.5527,2240.3262 5755.2583,2241.231 Q5755.9639,2242.1357 5755.9639,2243.5137 Q5755.9639,2245.3896 5754.8557,2246.3152 Q5753.7476,2247.2407 5751.5063,2247.2407 Q5750.585,2247.2407 5749.6594,2247.0208 Q5748.7339,2246.8008 5747.8706,2246.3691 L5747.8706,2243.8374 Q5748.8501,2244.5347 5749.7673,2244.875 Q5750.6846,2245.2153 5751.5811,2245.2153 Q5752.4858,2245.2153 5752.9839,2244.8044 Q5753.4819,2244.3936 5753.4819,2243.6548 Q5753.4819,2243.0986 5753.1499,2242.6794 Q5752.8179,2242.2603 5752.187,2242.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="160" x="5772.25" y="2245.0352">IndexMergeReaderExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5353" x2="6319" y1="2256.5" y2="2256.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2264.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="5372" y="2271.1348">table table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2277.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5372" y="2284.0898">indexes []*model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2290.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="5372" y="2297.0449">descs []bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2303.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="5372" y="2310">ranges [][]*ranger.Range</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2316.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5372" y="2322.9551">dagPBs []*tipb.DAGRequest</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2329.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="5372" y="2335.9102">startTS uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2342.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5372" y="2348.8652">tableRequest *tipb.DAGRequest</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2355.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="5372" y="2361.8203">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2368.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5372" y="2374.7754">partialStreamings []bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2381.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="5372" y="2387.7305">tableStreaming bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2394.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="5372" y="2400.6855">tblWorkerWg sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2407.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="5372" y="2413.6406">processWokerWg sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2419.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="5372" y="2426.5957">finished</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5418" y="2426.5957">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="5447" y="2426.5957"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="5447" y="2426.5957">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="5479" y="2426.5957">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2432.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="5372" y="2439.5508">workerStarted bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2445.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="5372" y="2452.5059">keyRanges [][]kv.KeyRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2458.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="5372" y="2465.4609">resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5421" y="2465.4609">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="5450" y="2465.4609">*lookupTableTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2471.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="5372" y="2478.416">resultCurr *lookupTableTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2484.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="5372" y="2491.3711">feedbacks []*statistics.QueryFeedback</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2497.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="5372" y="2504.3262">memTracker *memory.Tracker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2510.6465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="5372" y="2517.2813">corColInIdxSide bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2523.6016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="5372" y="2530.2363">partialPlans [][]core.PhysicalPlan</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2536.5566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="5372" y="2543.1914">corColInTblSide bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2549.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5372" y="2556.1465">tblPlans []core.PhysicalPlan</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2562.4668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="5372" y="2569.1016">corColInAccess bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2575.4219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="5372" y="2582.0566">idxCols [][]*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2588.377"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="5372" y="2595.0117">colLens [][]int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5353" x2="6319" y1="2601.332" y2="2601.332"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2609.332"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="5372" y="2615.9668">startWorkers(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2622.2871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="439" x="5372" y="2628.9219">waitPartialWorkersAndCloseFetchChan(partialWorkerWg *sync.WaitGroup, fetchCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5814" y="2628.9219">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="5843" y="2628.9219">*lookupTableTask)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2635.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="5372" y="2641.877">startIndexMergeProcessWorker(ctx context.Context, workCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5701" y="2641.877">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5730" y="2641.877">*lookupTableTask, fetch</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5862" y="2641.877">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="5891" y="2641.877">*lookupTableTask)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2648.1973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="5372" y="2654.832">startPartialIndexWorker(ctx context.Context, exitCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5653" y="2654.832">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="5682" y="2654.832"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="5682" y="2654.832">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="5714" y="2654.832">{}, fetchCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5773" y="2654.832">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="5802" y="2654.832">*lookupTableTask, workID int, partialWorkerWg *sync.WaitGroup, keyRange []kv.KeyRange) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2661.1523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="5372" y="2667.7871">buildPartialTableReader(ctx context.Context, workID int) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2674.1074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="5372" y="2680.7422">startPartialTableWorker(ctx context.Context, exitCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5652" y="2680.7422">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="5681" y="2680.7422"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="5681" y="2680.7422">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="5713" y="2680.7422">{}, fetchCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5772" y="2680.7422">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="5801" y="2680.7422">*lookupTableTask, workID int, partialWorkerWg *sync.WaitGroup) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2687.0625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="5372" y="2693.6973">startIndexMergeTableScanWorker(ctx context.Context, workCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5713" y="2693.6973">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="5742" y="2693.6973">*lookupTableTask)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2700.0176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="5372" y="2706.6523">buildFinalTableReader(ctx context.Context, handles []int64) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2712.9727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="5372" y="2719.6074">getResultTask() (*lookupTableTask, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5360" y="2725.9277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="5372" y="2732.5625">handleHandlesFetcherPanic(ctx context.Context, resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="5685" y="2732.5625">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="5714" y="2732.5625">*lookupTableTask, worker string)</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="5895" y="2732.5625">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="4" x="5919" y="2732.5625">(</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="5923" y="2732.5625">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="5970" y="2732.5625">{})</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="5375" y="2745.5176"/><ellipse cx="5363" cy="2754.8379" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5372" y="2758.4727">Open(ctx context.Context) error</text><ellipse cx="5363" cy="2767.793" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="5372" y="2771.4277">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="5363" cy="2780.748" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="5372" y="2784.3828">Close() error</text><!--MD5=[8cfb21c6509e570452e2afc67e0d69cc]
class executor.IndexNestedLoopHashJoin--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="268.2363" id="executor.IndexNestedLoopHashJoin" style="stroke: #A80036; stroke-width: 1.5;" width="519" x="33644.5" y="3123"/><ellipse cx="33824.25" cy="3139" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33823.4834,3140.063 Q33821.6323,3139.3574 33820.9766,3138.5813 Q33820.3208,3137.8052 33820.3208,3136.4937 Q33820.3208,3134.8086 33821.3999,3133.8457 Q33822.479,3132.8828 33824.3633,3132.8828 Q33825.2183,3132.8828 33826.0732,3133.0779 Q33826.9282,3133.2729 33827.7666,3133.6548 L33827.7666,3136.0454 Q33826.978,3135.4893 33826.1646,3135.1987 Q33825.3511,3134.9082 33824.5542,3134.9082 Q33823.666,3134.9082 33823.1929,3135.2651 Q33822.7197,3135.6221 33822.7197,3136.2861 Q33822.7197,3136.8008 33823.0642,3137.137 Q33823.4087,3137.4731 33824.5044,3137.8799 L33825.5586,3138.2783 Q33827.0527,3138.8262 33827.7583,3139.731 Q33828.4639,3140.6357 33828.4639,3142.0137 Q33828.4639,3143.8896 33827.3557,3144.8152 Q33826.2476,3145.7407 33824.0063,3145.7407 Q33823.085,3145.7407 33822.1594,3145.5208 Q33821.2339,3145.3008 33820.3706,3144.8691 L33820.3706,3142.3374 Q33821.3501,3143.0347 33822.2673,3143.375 Q33823.1846,3143.7153 33824.0811,3143.7153 Q33824.9858,3143.7153 33825.4839,3143.3044 Q33825.9819,3142.8936 33825.9819,3142.1548 Q33825.9819,3141.5986 33825.6499,3141.1794 Q33825.3179,3140.7603 33824.687,3140.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="33844.75" y="3143.5352">IndexNestedLoopHashJoin</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33645.5" x2="34162.5" y1="3155" y2="3155"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3163"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="33664.5" y="3169.6348">resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33713.5" y="3169.6348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="33742.5" y="3169.6348">*indexHashJoinResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3175.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="33664.5" y="3182.5898">joinChkResourceCh []</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33781.5" y="3182.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="33810.5" y="3182.5898">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3188.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="33664.5" y="3195.5449">joiners []joiner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3201.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="33664.5" y="3208.5">keepOuterOrder bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3214.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="33664.5" y="3221.4551">curTask *indexHashJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3227.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="33664.5" y="3234.4102">taskCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33704.5" y="3234.4102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="33733.5" y="3234.4102">*indexHashJoinTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33645.5" x2="34162.5" y1="3240.7305" y2="3240.7305"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3248.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="33664.5" y="3255.3652">startWorkers(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3261.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="33664.5" y="3268.3203">finishJoinWorkers(r</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="33770.5" y="3268.3203">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="33817.5" y="3268.3203">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3274.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="33664.5" y="3281.2754">wait4JoinWorkers()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3287.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="33664.5" y="3294.2305">runInOrder(ctx context.Context, req *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3300.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="33664.5" y="3307.1855">isDryUpTasks(ctx context.Context) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3313.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="33664.5" y="3320.1406">newOuterWorker(innerCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33804.5" y="3320.1406">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="33833.5" y="3320.1406">*indexHashJoinTask) *indexHashJoinOuterWorker</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33652.5" y="3326.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="33664.5" y="3333.0957">newInnerWorker(taskCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33795.5" y="3333.0957">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="33824.5" y="3333.0957">*indexHashJoinTask, workerID int) *indexHashJoinInnerWorker</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="33667.5" y="3346.0508"/><ellipse cx="33655.5" cy="3355.3711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="33664.5" y="3359.0059">Open(ctx context.Context) error</text><ellipse cx="33655.5" cy="3368.3262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="33664.5" y="3371.9609">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="33655.5" cy="3381.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="33664.5" y="3384.916">Close() error</text><!--MD5=[8ebc120f1f26a6e17815d5a1d5be9f7c]
class executor.IndexReaderExecutor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="371.877" id="executor.IndexReaderExecutor" style="stroke: #A80036; stroke-width: 1.5;" width="334" x="6864" y="2321.5"/><ellipse cx="6964.75" cy="2337.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6963.9834,2338.563 Q6962.1323,2337.8574 6961.4766,2337.0813 Q6960.8208,2336.3052 6960.8208,2334.9937 Q6960.8208,2333.3086 6961.8999,2332.3457 Q6962.979,2331.3828 6964.8633,2331.3828 Q6965.7183,2331.3828 6966.5732,2331.5779 Q6967.4282,2331.7729 6968.2666,2332.1548 L6968.2666,2334.5454 Q6967.478,2333.9893 6966.6646,2333.6987 Q6965.8511,2333.4082 6965.0542,2333.4082 Q6964.166,2333.4082 6963.6929,2333.7651 Q6963.2197,2334.1221 6963.2197,2334.7861 Q6963.2197,2335.3008 6963.5642,2335.637 Q6963.9087,2335.9731 6965.0044,2336.3799 L6966.0586,2336.7783 Q6967.5527,2337.3262 6968.2583,2338.231 Q6968.9639,2339.1357 6968.9639,2340.5137 Q6968.9639,2342.3896 6967.8557,2343.3152 Q6966.7476,2344.2407 6964.5063,2344.2407 Q6963.585,2344.2407 6962.6594,2344.0208 Q6961.7339,2343.8008 6960.8706,2343.3691 L6960.8706,2340.8374 Q6961.8501,2341.5347 6962.7673,2341.875 Q6963.6846,2342.2153 6964.5811,2342.2153 Q6965.4858,2342.2153 6965.9839,2341.8044 Q6966.4819,2341.3936 6966.4819,2340.6548 Q6966.4819,2340.0986 6966.1499,2339.6794 Q6965.8179,2339.2603 6965.187,2339.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="124" x="6985.25" y="2342.0352">IndexReaderExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6865" x2="7197" y1="2353.5" y2="2353.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2361.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="6884" y="2368.1348">table table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2374.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="6884" y="2381.0898">index *model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2387.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="6884" y="2394.0449">physicalTableID int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2400.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="6884" y="2407">ranges []*ranger.Range</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2413.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="6884" y="2419.9551">kvRanges []kv.KeyRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2426.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="6884" y="2432.9102">dagPB *tipb.DAGRequest</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2439.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="6884" y="2445.8652">startTS uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2452.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="6884" y="2458.8203">result distsql.SelectResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2465.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="6884" y="2471.7754">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2478.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="6884" y="2484.7305">outputColumns []*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2491.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="6884" y="2497.6855">feedback *statistics.QueryFeedback</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2504.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="6884" y="2510.6406">streaming bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2516.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="6884" y="2523.5957">keepOrder bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2529.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="6884" y="2536.5508">desc bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2542.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="6884" y="2549.5059">corColInFilter bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2555.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="6884" y="2562.4609">corColInAccess bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2568.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="6884" y="2575.416">idxCols []*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2581.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="6884" y="2588.3711">colLens []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2594.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="6884" y="2601.3262">plans []core.PhysicalPlan</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2607.6465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="6884" y="2614.2813">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6865" x2="7197" y1="2620.6016" y2="2620.6016"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6872" y="2628.6016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="6884" y="2635.2363">open(ctx context.Context, kvRanges []kv.KeyRange) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="6887" y="2648.1914"/><ellipse cx="6875" cy="2657.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="6884" y="2661.1465">Close() error</text><ellipse cx="6875" cy="2670.4668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="6884" y="2674.1016">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="6875" cy="2683.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="6884" y="2687.0566">Open(ctx context.Context) error</text><!--MD5=[861873450e10ff497a45e23d8be07053]
class executor.InsertExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="255.2813" id="executor.InsertExec" style="stroke: #A80036; stroke-width: 1.5;" width="915" x="11417.5" y="3129.5"/><ellipse cx="11841.25" cy="3145.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11840.4834,3146.563 Q11838.6323,3145.8574 11837.9766,3145.0813 Q11837.3208,3144.3052 11837.3208,3142.9937 Q11837.3208,3141.3086 11838.3999,3140.3457 Q11839.479,3139.3828 11841.3633,3139.3828 Q11842.2183,3139.3828 11843.0732,3139.5779 Q11843.9282,3139.7729 11844.7666,3140.1548 L11844.7666,3142.5454 Q11843.978,3141.9893 11843.1646,3141.6987 Q11842.3511,3141.4082 11841.5542,3141.4082 Q11840.666,3141.4082 11840.1929,3141.7651 Q11839.7197,3142.1221 11839.7197,3142.7861 Q11839.7197,3143.3008 11840.0642,3143.637 Q11840.4087,3143.9731 11841.5044,3144.3799 L11842.5586,3144.7783 Q11844.0527,3145.3262 11844.7583,3146.231 Q11845.4639,3147.1357 11845.4639,3148.5137 Q11845.4639,3150.3896 11844.3557,3151.3152 Q11843.2476,3152.2407 11841.0063,3152.2407 Q11840.085,3152.2407 11839.1594,3152.0208 Q11838.2339,3151.8008 11837.3706,3151.3691 L11837.3706,3148.8374 Q11838.3501,3149.5347 11839.2673,3149.875 Q11840.1846,3150.2153 11841.0811,3150.2153 Q11841.9858,3150.2153 11842.4839,3149.8044 Q11842.9819,3149.3936 11842.9819,3148.6548 Q11842.9819,3148.0986 11842.6499,3147.6794 Q11842.3179,3147.2603 11841.687,3147.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="11861.75" y="3150.0352">InsertExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11418.5" x2="12331.5" y1="3161.5" y2="3161.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11425.5" y="3169.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="11437.5" y="3176.1348">evalBuffer4Dup chunk.MutRow</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11425.5" y="3182.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="11437.5" y="3189.0898">curInsertVals chunk.MutRow</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11425.5" y="3195.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="11437.5" y="3202.0449">row4Update []types.Datum</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="11440.5" y="3215"/><ellipse cx="11428.5" cy="3224.3203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="11437.5" y="3227.9551">OnDuplicate []*expression.Assignment</text><ellipse cx="11428.5" cy="3237.2754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="11437.5" y="3240.9102">Priority mysql.PriorityEnum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11418.5" x2="12331.5" y1="3247.2305" y2="3247.2305"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11425.5" y="3255.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="11437.5" y="3261.8652">exec(ctx context.Context, rows [][]types.Datum) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11425.5" y="3268.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="739" x="11437.5" y="3274.8203">updateDupRow(ctx context.Context, txn kv.Transaction, row toBeCheckedRow, handle int64, onDuplicate []*expression.Assignment) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11425.5" y="3281.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="11437.5" y="3287.7754">batchUpdateDupRows(ctx context.Context, newRows [][]types.Datum) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11425.5" y="3294.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="11437.5" y="3300.7305">initEvalBuffer4Dup()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11425.5" y="3307.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="889" x="11437.5" y="3313.6855">doDupRowUpdate(ctx context.Context, handle int64, oldRow []types.Datum, newRow []types.Datum, cols []*expression.Assignment) ([]types.Datum, bool, int64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11425.5" y="3320.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="11437.5" y="3326.6406">setMessage()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="11440.5" y="3339.5957"/><ellipse cx="11428.5" cy="3348.916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="11437.5" y="3352.5508">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="11428.5" cy="3361.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="11437.5" y="3365.5059">Close() error</text><ellipse cx="11428.5" cy="3374.8262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="11437.5" y="3378.4609">Open(ctx context.Context) error</text><!--MD5=[e772a0d70da1a6866373dcf71cdfb028]
class executor.InsertValues--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="656.8887" id="executor.InsertValues" style="stroke: #A80036; stroke-width: 1.5;" width="746" x="22281" y="2179"/><ellipse cx="22614.75" cy="2195" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22613.9834,2196.063 Q22612.1323,2195.3574 22611.4766,2194.5813 Q22610.8208,2193.8052 22610.8208,2192.4937 Q22610.8208,2190.8086 22611.8999,2189.8457 Q22612.979,2188.8828 22614.8633,2188.8828 Q22615.7183,2188.8828 22616.5732,2189.0779 Q22617.4282,2189.2729 22618.2666,2189.6548 L22618.2666,2192.0454 Q22617.478,2191.4893 22616.6646,2191.1987 Q22615.8511,2190.9082 22615.0542,2190.9082 Q22614.166,2190.9082 22613.6929,2191.2651 Q22613.2197,2191.6221 22613.2197,2192.2861 Q22613.2197,2192.8008 22613.5642,2193.137 Q22613.9087,2193.4731 22615.0044,2193.8799 L22616.0586,2194.2783 Q22617.5527,2194.8262 22618.2583,2195.731 Q22618.9639,2196.6357 22618.9639,2198.0137 Q22618.9639,2199.8896 22617.8557,2200.8152 Q22616.7476,2201.7407 22614.5063,2201.7407 Q22613.585,2201.7407 22612.6594,2201.5208 Q22611.7339,2201.3008 22610.8706,2200.8691 L22610.8706,2198.3374 Q22611.8501,2199.0347 22612.7673,2199.375 Q22613.6846,2199.7153 22614.5811,2199.7153 Q22615.4858,2199.7153 22615.9839,2199.3044 Q22616.4819,2198.8936 22616.4819,2198.1548 Q22616.4819,2197.5986 22616.1499,2197.1794 Q22615.8179,2196.7603 22615.187,2196.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="22635.25" y="2199.5352">InsertValues</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22282" x2="23026" y1="2211" y2="2211"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="22301" y="2225.6348">rowCount uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2231.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="22301" y="2238.5898">curBatchCnt uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2244.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="22301" y="2251.5449">maxRowsInBatch uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2257.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="22301" y="2264.5">lastInsertID uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2270.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="22301" y="2277.4551">insertColumns []*table.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2283.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="22301" y="2290.4102">colDefaultVals []defaultVal</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2296.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="22301" y="2303.3652">evalBuffer chunk.MutRow</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2309.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="22301" y="2316.3203">evalBufferTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2322.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="22301" y="2329.2754">allAssignmentsAreConstant bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2335.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="22301" y="2342.2305">hasRefCols bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2348.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="22301" y="2355.1855">hasExtraHandle bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2361.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="22301" y="2368.1406">lazyFillAutoID bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2374.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="22301" y="2381.0957">memTracker *memory.Tracker</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="22304" y="2394.0508"/><ellipse cx="22292" cy="2403.3711" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="22301" y="2407.0059">SelectExec Executor</text><ellipse cx="22292" cy="2416.3262" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="22301" y="2419.9609">Table table.Table</text><ellipse cx="22292" cy="2429.2813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="22301" y="2432.916">Columns []*ast.ColumnName</text><ellipse cx="22292" cy="2442.2363" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="22301" y="2445.8711">Lists [][]expression.Expression</text><ellipse cx="22292" cy="2455.1914" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="22301" y="2458.8262">SetList []*expression.Assignment</text><ellipse cx="22292" cy="2468.1465" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="22301" y="2471.7813">GenExprs []expression.Expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22282" x2="23026" y1="2478.1016" y2="2478.1016"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2486.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="22301" y="2492.7363">insertCommon() *InsertValues</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2499.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="22301" y="2505.6914">exec(_ context.Context, _ [][]types.Datum) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2512.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="22301" y="2518.6465">initInsertColumns() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2524.9668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="22301" y="2531.6016">initEvalBuffer()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2537.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="22301" y="2544.5566">lazilyInitColDefaultValBuf() bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2550.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="22301" y="2557.5117">processSetList() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2563.832"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="22301" y="2570.4668">handleErr(col *table.Column, val *types.Datum, rowIdx int, err error) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2576.7871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="494" x="22301" y="2583.4219">evalRow(ctx context.Context, list []expression.Expression, rowIdx int) ([]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2589.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="514" x="22301" y="2596.377">fastEvalRow(ctx context.Context, list []expression.Expression, rowIdx int) ([]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2602.6973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="22301" y="2609.332">setValueForRefColumn(row []types.Datum, hasValue []bool) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2615.6523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="22301" y="2622.2871">doBatchInsert(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2628.6074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="22301" y="2635.2422">getRow(ctx context.Context, vals []types.Datum) ([]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2641.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="22301" y="2648.1973">getColDefaultValue(idx int, col *table.Column) (types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2654.5176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="643" x="22301" y="2661.1523">fillColValue(ctx context.Context, datum types.Datum, idx int, column *table.Column, hasValue bool) (types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2667.4727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="463" x="22301" y="2674.1074">fillRow(ctx context.Context, row []types.Datum, hasValue []bool) ([]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2680.4277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="22301" y="2687.0625">isAutoNull(ctx context.Context, d types.Datum, col *table.Column) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2693.3828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="22301" y="2700.0176">hasAutoIncrementColumn() (int, bool)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2706.3379"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="626" x="22301" y="2712.9727">lazyAdjustAutoIncrementDatumInRetry(ctx context.Context, rows [][]types.Datum, colIdx int) ([][]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2719.293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="22301" y="2725.9277">lazyAdjustAutoIncrementDatum(ctx context.Context, rows [][]types.Datum) ([][]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2732.248"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="630" x="22301" y="2738.8828">adjustAutoIncrementDatum(ctx context.Context, d types.Datum, hasValue bool, c *table.Column) (types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2745.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="620" x="22301" y="2751.8379">adjustAutoRandomDatum(ctx context.Context, d types.Datum, hasValue bool, c *table.Column) (types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2758.1582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="22301" y="2764.793">allocAutoRandomID(fieldType *types.FieldType) (int64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2771.1133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="22301" y="2777.748">rebaseAutoRandomID(recordID int64, fieldType *types.FieldType) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2784.0684"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="22301" y="2790.7031">handleWarning(err error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2797.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="22301" y="2803.6582">batchCheckAndInsert(ctx context.Context, rows [][]types.Datum, addRecord</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="22713" y="2803.6582">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="22737" y="2803.6582">(context.Context, []types.Datum) (int64, error)) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2809.9785"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="22301" y="2816.6133">addRecord(ctx context.Context, row []types.Datum) (int64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22289" y="2822.9336"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="22301" y="2829.5684">addRecordWithAutoIDHint(ctx context.Context, row []types.Datum, reserveAutoIDCount int) (int64, error)</text><!--MD5=[9fcdec5b131f109e0bc8374c3e813c6e]
class executor.LimitExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="177.5508" id="executor.LimitExec" style="stroke: #A80036; stroke-width: 1.5;" width="320" x="30461" y="2418.5"/><ellipse cx="30589.75" cy="2434.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M30588.9834,2435.563 Q30587.1323,2434.8574 30586.4766,2434.0813 Q30585.8208,2433.3052 30585.8208,2431.9937 Q30585.8208,2430.3086 30586.8999,2429.3457 Q30587.979,2428.3828 30589.8633,2428.3828 Q30590.7183,2428.3828 30591.5732,2428.5779 Q30592.4282,2428.7729 30593.2666,2429.1548 L30593.2666,2431.5454 Q30592.478,2430.9893 30591.6646,2430.6987 Q30590.8511,2430.4082 30590.0542,2430.4082 Q30589.166,2430.4082 30588.6929,2430.7651 Q30588.2197,2431.1221 30588.2197,2431.7861 Q30588.2197,2432.3008 30588.5642,2432.637 Q30588.9087,2432.9731 30590.0044,2433.3799 L30591.0586,2433.7783 Q30592.5527,2434.3262 30593.2583,2435.231 Q30593.9639,2436.1357 30593.9639,2437.5137 Q30593.9639,2439.3896 30592.8557,2440.3152 Q30591.7476,2441.2407 30589.5063,2441.2407 Q30588.585,2441.2407 30587.6594,2441.0208 Q30586.7339,2440.8008 30585.8706,2440.3691 L30585.8706,2437.8374 Q30586.8501,2438.5347 30587.7673,2438.875 Q30588.6846,2439.2153 30589.5811,2439.2153 Q30590.4858,2439.2153 30590.9839,2438.8044 Q30591.4819,2438.3936 30591.4819,2437.6548 Q30591.4819,2437.0986 30591.1499,2436.6794 Q30590.8179,2436.2603 30590.187,2436.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="30610.25" y="2439.0352">LimitExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30462" x2="30780" y1="2450.5" y2="2450.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30469" y="2458.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="30481" y="2465.1348">begin uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30469" y="2471.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="30481" y="2478.0898">end uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30469" y="2484.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="30481" y="2491.0449">cursor uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30469" y="2497.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="30481" y="2504">meetFirstBatch bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30469" y="2510.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="30481" y="2516.9551">childResult *chunk.Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30462" x2="30780" y1="2523.2754" y2="2523.2754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30469" y="2531.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="30481" y="2537.9102">adjustRequiredRows(chk *chunk.Chunk) *chunk.Chunk</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="30484" y="2550.8652"/><ellipse cx="30472" cy="2560.1855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="30481" y="2563.8203">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="30472" cy="2573.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="30481" y="2576.7754">Open(ctx context.Context) error</text><ellipse cx="30472" cy="2586.0957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="30481" y="2589.7305">Close() error</text><!--MD5=[09de1b49da1512028ef1bffe4b91c2fd]
class executor.LoadDataExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="138.6855" id="executor.LoadDataExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="30816" y="2438"/><ellipse cx="30920.75" cy="2454" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M30919.9834,2455.063 Q30918.1323,2454.3574 30917.4766,2453.5813 Q30916.8208,2452.8052 30916.8208,2451.4937 Q30916.8208,2449.8086 30917.8999,2448.8457 Q30918.979,2447.8828 30920.8633,2447.8828 Q30921.7183,2447.8828 30922.5732,2448.0779 Q30923.4282,2448.2729 30924.2666,2448.6548 L30924.2666,2451.0454 Q30923.478,2450.4893 30922.6646,2450.1987 Q30921.8511,2449.9082 30921.0542,2449.9082 Q30920.166,2449.9082 30919.6929,2450.2651 Q30919.2197,2450.6221 30919.2197,2451.2861 Q30919.2197,2451.8008 30919.5642,2452.137 Q30919.9087,2452.4731 30921.0044,2452.8799 L30922.0586,2453.2783 Q30923.5527,2453.8262 30924.2583,2454.731 Q30924.9639,2455.6357 30924.9639,2457.0137 Q30924.9639,2458.8896 30923.8557,2459.8152 Q30922.7476,2460.7407 30920.5063,2460.7407 Q30919.585,2460.7407 30918.6594,2460.5208 Q30917.7339,2460.3008 30916.8706,2459.8691 L30916.8706,2457.3374 Q30917.8501,2458.0347 30918.7673,2458.375 Q30919.6846,2458.7153 30920.5811,2458.7153 Q30921.4858,2458.7153 30921.9839,2458.3044 Q30922.4819,2457.8936 30922.4819,2457.1548 Q30922.4819,2456.5986 30922.1499,2456.1794 Q30921.8179,2455.7603 30921.187,2455.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="30941.25" y="2458.5352">LoadDataExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30817" x2="31115" y1="2470" y2="2470"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30824" y="2478"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="30836" y="2484.6348">loadDataInfo *LoadDataInfo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="30839" y="2497.5898"/><ellipse cx="30827" cy="2506.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="30836" y="2510.5449">IsLocal bool</text><ellipse cx="30827" cy="2519.8652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="30836" y="2523.5">OnDuplicate ast.OnDuplicateKeyHandlingType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30817" x2="31115" y1="2529.8203" y2="2529.8203"/><ellipse cx="30827" cy="2540.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="30836" y="2544.4551">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="30827" cy="2553.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="30836" y="2557.4102">Close() error</text><ellipse cx="30827" cy="2566.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="30836" y="2570.3652">Open(ctx context.Context) error</text><!--MD5=[6f712c72d8a9ea487e7ca764795b2d0d]
class executor.LoadDataInfo--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="475.5176" id="executor.LoadDataInfo" style="stroke: #A80036; stroke-width: 1.5;" width="488" x="22410" y="3019"/><ellipse cx="22611.75" cy="3035" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22610.9834,3036.063 Q22609.1323,3035.3574 22608.4766,3034.5813 Q22607.8208,3033.8052 22607.8208,3032.4937 Q22607.8208,3030.8086 22608.8999,3029.8457 Q22609.979,3028.8828 22611.8633,3028.8828 Q22612.7183,3028.8828 22613.5732,3029.0779 Q22614.4282,3029.2729 22615.2666,3029.6548 L22615.2666,3032.0454 Q22614.478,3031.4893 22613.6646,3031.1987 Q22612.8511,3030.9082 22612.0542,3030.9082 Q22611.166,3030.9082 22610.6929,3031.2651 Q22610.2197,3031.6221 22610.2197,3032.2861 Q22610.2197,3032.8008 22610.5642,3033.137 Q22610.9087,3033.4731 22612.0044,3033.8799 L22613.0586,3034.2783 Q22614.5527,3034.8262 22615.2583,3035.731 Q22615.9639,3036.6357 22615.9639,3038.0137 Q22615.9639,3039.8896 22614.8557,3040.8152 Q22613.7476,3041.7407 22611.5063,3041.7407 Q22610.585,3041.7407 22609.6594,3041.5208 Q22608.7339,3041.3008 22607.8706,3040.8691 L22607.8706,3038.3374 Q22608.8501,3039.0347 22609.7673,3039.375 Q22610.6846,3039.7153 22611.5811,3039.7153 Q22612.4858,3039.7153 22612.9839,3039.3044 Q22613.4819,3038.8936 22613.4819,3038.1548 Q22613.4819,3037.5986 22613.1499,3037.1794 Q22612.8179,3036.7603 22612.187,3036.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="22632.25" y="3039.5352">LoadDataInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22411" x2="22897" y1="3051" y2="3051"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22418" y="3059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="22430" y="3065.6348">row []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22418" y="3071.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="22430" y="3078.5898">rows [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22418" y="3084.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="22430" y="3091.5449">commitTaskQueue</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="22533" y="3091.5449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="22562" y="3091.5449">CommitTask</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="22433" y="3104.5"/><ellipse cx="22421" cy="3113.8203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="22430" y="3117.4551">Path string</text><ellipse cx="22421" cy="3126.7754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="22430" y="3130.4102">Table table.Table</text><ellipse cx="22421" cy="3139.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="22430" y="3143.3652">FieldsInfo *ast.FieldsClause</text><ellipse cx="22421" cy="3152.6855" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="22430" y="3156.3203">LinesInfo *ast.LinesClause</text><ellipse cx="22421" cy="3165.6406" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="22430" y="3169.2754">IgnoreLines uint64</text><ellipse cx="22421" cy="3178.5957" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="22430" y="3182.2305">Ctx sessionctx.Context</text><ellipse cx="22421" cy="3191.5508" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="22430" y="3195.1855">Drained bool</text><ellipse cx="22421" cy="3204.5059" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="22430" y="3208.1406">StopCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="22472" y="3208.1406">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="22501" y="3208.1406"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="22501" y="3208.1406">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="22533" y="3208.1406">{}</text><ellipse cx="22421" cy="3217.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="22430" y="3221.0957">QuitCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="22471" y="3221.0957">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="22500" y="3221.0957"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="22500" y="3221.0957">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="22532" y="3221.0957">{}</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22411" x2="22897" y1="3227.416" y2="3227.416"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22418" y="3235.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="22430" y="3242.0508">getValidData(prevData []byte, curData []byte) ([]byte, []byte)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22418" y="3248.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="22430" y="3255.0059">getLine(prevData []byte, curData []byte) ([]byte, []byte, bool)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22418" y="3261.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="22430" y="3267.9609">colsToRow(ctx context.Context, cols []field) []types.Datum</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22418" y="3274.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="22430" y="3280.916">addRecordLD(ctx context.Context, row []types.Datum) (int64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22418" y="3287.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="22430" y="3293.8711">getFieldsFromLine(line []byte) ([]field, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="22433" y="3306.8262"/><ellipse cx="22421" cy="3316.1465" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="22430" y="3319.7813">GetRows() [][]types.Datum</text><ellipse cx="22421" cy="3329.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="22430" y="3332.7363">GetCurBatchCnt() uint64</text><ellipse cx="22421" cy="3342.0566" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="22430" y="3345.6914">CloseTaskQueue()</text><ellipse cx="22421" cy="3355.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="22430" y="3358.6465">InitQueues()</text><ellipse cx="22421" cy="3367.9668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="22430" y="3371.6016">StartStopWatcher()</text><ellipse cx="22421" cy="3380.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="22430" y="3384.5566">ForceQuit()</text><ellipse cx="22421" cy="3393.877" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="22430" y="3397.5117">MakeCommitTask() CommitTask</text><ellipse cx="22421" cy="3406.832" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="22430" y="3410.4668">EnqOneTask(ctx context.Context) error</text><ellipse cx="22421" cy="3419.7871" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="22430" y="3423.4219">CommitOneTask(ctx context.Context, task CommitTask) error</text><ellipse cx="22421" cy="3432.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="22430" y="3436.377">CommitWork(ctx context.Context) error</text><ellipse cx="22421" cy="3445.6973" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="22430" y="3449.332">SetMaxRowsInBatch(limit uint64)</text><ellipse cx="22421" cy="3458.6523" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="446" x="22430" y="3462.2871">InsertData(ctx context.Context, prevData []byte, curData []byte) ([]byte, bool, error)</text><ellipse cx="22421" cy="3471.6074" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="462" x="22430" y="3475.2422">CheckAndInsertOneBatch(ctx context.Context, rows [][]types.Datum, cnt uint64) error</text><ellipse cx="22421" cy="3484.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="22430" y="3488.1973">SetMessage()</text><!--MD5=[d0ff26db834fa174b4a2b714e0408357]
class executor.LoadStatsExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.LoadStatsExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="31151" y="2457.5"/><ellipse cx="31255.75" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31254.9834,2474.563 Q31253.1323,2473.8574 31252.4766,2473.0813 Q31251.8208,2472.3052 31251.8208,2470.9937 Q31251.8208,2469.3086 31252.8999,2468.3457 Q31253.979,2467.3828 31255.8633,2467.3828 Q31256.7183,2467.3828 31257.5732,2467.5779 Q31258.4282,2467.7729 31259.2666,2468.1548 L31259.2666,2470.5454 Q31258.478,2469.9893 31257.6646,2469.6987 Q31256.8511,2469.4082 31256.0542,2469.4082 Q31255.166,2469.4082 31254.6929,2469.7651 Q31254.2197,2470.1221 31254.2197,2470.7861 Q31254.2197,2471.3008 31254.5642,2471.637 Q31254.9087,2471.9731 31256.0044,2472.3799 L31257.0586,2472.7783 Q31258.5527,2473.3262 31259.2583,2474.231 Q31259.9639,2475.1357 31259.9639,2476.5137 Q31259.9639,2478.3896 31258.8557,2479.3152 Q31257.7476,2480.2407 31255.5063,2480.2407 Q31254.585,2480.2407 31253.6594,2480.0208 Q31252.7339,2479.8008 31251.8706,2479.3691 L31251.8706,2476.8374 Q31252.8501,2477.5347 31253.7673,2477.875 Q31254.6846,2478.2153 31255.5811,2478.2153 Q31256.4858,2478.2153 31256.9839,2477.8044 Q31257.4819,2477.3936 31257.4819,2476.6548 Q31257.4819,2476.0986 31257.1499,2475.6794 Q31256.8179,2475.2603 31256.187,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="31276.25" y="2478.0352">LoadStatsExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31152" x2="31450" y1="2489.5" y2="2489.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31159" y="2497.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="31171" y="2504.1348">info *LoadStatsInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31152" x2="31450" y1="2510.4551" y2="2510.4551"/><ellipse cx="31162" cy="2521.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="31171" y="2525.0898">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="31162" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="31171" y="2538.0449">Close() error</text><ellipse cx="31162" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="31171" y="2551">Open(ctx context.Context) error</text><!--MD5=[7a274ee9439e4221263ccdee5be93821]
class executor.LoadStatsInfo--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.LoadStatsInfo" style="stroke: #A80036; stroke-width: 1.5;" width="160" x="34870" y="1682.5"/><ellipse cx="34908.4" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34907.6334,1699.563 Q34905.7823,1698.8574 34905.1266,1698.0813 Q34904.4708,1697.3052 34904.4708,1695.9937 Q34904.4708,1694.3086 34905.5499,1693.3457 Q34906.629,1692.3828 34908.5133,1692.3828 Q34909.3683,1692.3828 34910.2232,1692.5779 Q34911.0782,1692.7729 34911.9166,1693.1548 L34911.9166,1695.5454 Q34911.128,1694.9893 34910.3146,1694.6987 Q34909.5011,1694.4082 34908.7042,1694.4082 Q34907.816,1694.4082 34907.3429,1694.7651 Q34906.8697,1695.1221 34906.8697,1695.7861 Q34906.8697,1696.3008 34907.2142,1696.637 Q34907.5587,1696.9731 34908.6544,1697.3799 L34909.7086,1697.7783 Q34911.2027,1698.3262 34911.9083,1699.231 Q34912.6139,1700.1357 34912.6139,1701.5137 Q34912.6139,1703.3896 34911.5057,1704.3152 Q34910.3976,1705.2407 34908.1563,1705.2407 Q34907.235,1705.2407 34906.3094,1705.0208 Q34905.3839,1704.8008 34904.5206,1704.3691 L34904.5206,1701.8374 Q34905.5001,1702.5347 34906.4173,1702.875 Q34907.3346,1703.2153 34908.2311,1703.2153 Q34909.1358,1703.2153 34909.6339,1702.8044 Q34910.1319,1702.3936 34910.1319,1701.6548 Q34910.1319,1701.0986 34909.7999,1700.6794 Q34909.4679,1700.2603 34908.837,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="34927.6" y="1703.0352">LoadStatsInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34871" x2="35029" y1="1714.5" y2="1714.5"/><ellipse cx="34881" cy="1725.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="34890" y="1729.1348">Path string</text><ellipse cx="34881" cy="1738.4551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="34890" y="1742.0898">Ctx sessionctx.Context</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34871" x2="35029" y1="1748.4102" y2="1748.4102"/><ellipse cx="34881" cy="1759.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="34890" y="1763.0449">Update(data []byte) error</text><!--MD5=[d019b4235add8449875f4bda16a352b5]
class executor.MaxOneRowExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.MaxOneRowExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="7568" y="2464"/><ellipse cx="7664.75" cy="2480" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7663.9834,2481.063 Q7662.1323,2480.3574 7661.4766,2479.5813 Q7660.8208,2478.8052 7660.8208,2477.4937 Q7660.8208,2475.8086 7661.8999,2474.8457 Q7662.979,2473.8828 7664.8633,2473.8828 Q7665.7183,2473.8828 7666.5732,2474.0779 Q7667.4282,2474.2729 7668.2666,2474.6548 L7668.2666,2477.0454 Q7667.478,2476.4893 7666.6646,2476.1987 Q7665.8511,2475.9082 7665.0542,2475.9082 Q7664.166,2475.9082 7663.6929,2476.2651 Q7663.2197,2476.6221 7663.2197,2477.2861 Q7663.2197,2477.8008 7663.5642,2478.137 Q7663.9087,2478.4731 7665.0044,2478.8799 L7666.0586,2479.2783 Q7667.5527,2479.8262 7668.2583,2480.731 Q7668.9639,2481.6357 7668.9639,2483.0137 Q7668.9639,2484.8896 7667.8557,2485.8152 Q7666.7476,2486.7407 7664.5063,2486.7407 Q7663.585,2486.7407 7662.6594,2486.5208 Q7661.7339,2486.3008 7660.8706,2485.8691 L7660.8706,2483.3374 Q7661.8501,2484.0347 7662.7673,2484.375 Q7663.6846,2484.7153 7664.5811,2484.7153 Q7665.4858,2484.7153 7665.9839,2484.3044 Q7666.4819,2483.8936 7666.4819,2483.1548 Q7666.4819,2482.5986 7666.1499,2482.1794 Q7665.8179,2481.7603 7665.187,2481.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="7685.25" y="2484.5352">MaxOneRowExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7569" x2="7867" y1="2496" y2="2496"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7576" y="2504"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="7588" y="2510.6348">evaluated bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7569" x2="7867" y1="2516.9551" y2="2516.9551"/><ellipse cx="7579" cy="2527.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="7588" y="2531.5898">Open(ctx context.Context) error</text><ellipse cx="7579" cy="2540.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="7588" y="2544.5449">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[1e74f5206b16a4f9d734fb116b4ad1e1]
class executor.MemTableReaderExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="138.6855" id="executor.MemTableReaderExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="31486" y="2438"/><ellipse cx="31566.75" cy="2454" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31565.9834,2455.063 Q31564.1323,2454.3574 31563.4766,2453.5813 Q31562.8208,2452.8052 31562.8208,2451.4937 Q31562.8208,2449.8086 31563.8999,2448.8457 Q31564.979,2447.8828 31566.8633,2447.8828 Q31567.7183,2447.8828 31568.5732,2448.0779 Q31569.4282,2448.2729 31570.2666,2448.6548 L31570.2666,2451.0454 Q31569.478,2450.4893 31568.6646,2450.1987 Q31567.8511,2449.9082 31567.0542,2449.9082 Q31566.166,2449.9082 31565.6929,2450.2651 Q31565.2197,2450.6221 31565.2197,2451.2861 Q31565.2197,2451.8008 31565.5642,2452.137 Q31565.9087,2452.4731 31567.0044,2452.8799 L31568.0586,2453.2783 Q31569.5527,2453.8262 31570.2583,2454.731 Q31570.9639,2455.6357 31570.9639,2457.0137 Q31570.9639,2458.8896 31569.8557,2459.8152 Q31568.7476,2460.7407 31566.5063,2460.7407 Q31565.585,2460.7407 31564.6594,2460.5208 Q31563.7339,2460.3008 31562.8706,2459.8691 L31562.8706,2457.3374 Q31563.8501,2458.0347 31564.7673,2458.375 Q31565.6846,2458.7153 31566.5811,2458.7153 Q31567.4858,2458.7153 31567.9839,2458.3044 Q31568.4819,2457.8936 31568.4819,2457.1548 Q31568.4819,2456.5986 31568.1499,2456.1794 Q31567.8179,2455.7603 31567.187,2455.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="130" x="31587.25" y="2458.5352">MemTableReaderExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31487" x2="31785" y1="2470" y2="2470"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31494" y="2478"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="31506" y="2484.6348">table *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31494" y="2490.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="31506" y="2497.5898">retriever memTableRetriever</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31494" y="2503.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="31506" y="2510.5449">cacheRetrieved bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31487" x2="31785" y1="2516.8652" y2="2516.8652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31494" y="2524.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="31506" y="2531.5">isInspectionCacheableTable(tblName string) bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="31509" y="2544.4551"/><ellipse cx="31497" cy="2553.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="31506" y="2557.4102">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="31497" cy="2566.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="31506" y="2570.3652">Close() error</text><!--MD5=[c163e8e8c27c5672807a80d8a45b015e]
class executor.MergeJoinExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="255.2813" id="executor.MergeJoinExec" style="stroke: #A80036; stroke-width: 1.5;" width="369" x="31821.5" y="2380"/><ellipse cx="31959.75" cy="2396" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31958.9834,2397.063 Q31957.1323,2396.3574 31956.4766,2395.5813 Q31955.8208,2394.8052 31955.8208,2393.4937 Q31955.8208,2391.8086 31956.8999,2390.8457 Q31957.979,2389.8828 31959.8633,2389.8828 Q31960.7183,2389.8828 31961.5732,2390.0779 Q31962.4282,2390.2729 31963.2666,2390.6548 L31963.2666,2393.0454 Q31962.478,2392.4893 31961.6646,2392.1987 Q31960.8511,2391.9082 31960.0542,2391.9082 Q31959.166,2391.9082 31958.6929,2392.2651 Q31958.2197,2392.6221 31958.2197,2393.2861 Q31958.2197,2393.8008 31958.5642,2394.137 Q31958.9087,2394.4731 31960.0044,2394.8799 L31961.0586,2395.2783 Q31962.5527,2395.8262 31963.2583,2396.731 Q31963.9639,2397.6357 31963.9639,2399.0137 Q31963.9639,2400.8896 31962.8557,2401.8152 Q31961.7476,2402.7407 31959.5063,2402.7407 Q31958.585,2402.7407 31957.6594,2402.5208 Q31956.7339,2402.3008 31955.8706,2401.8691 L31955.8706,2399.3374 Q31956.8501,2400.0347 31957.7673,2400.375 Q31958.6846,2400.7153 31959.5811,2400.7153 Q31960.4858,2400.7153 31960.9839,2400.3044 Q31961.4819,2399.8936 31961.4819,2399.1548 Q31961.4819,2398.5986 31961.1499,2398.1794 Q31960.8179,2397.7603 31960.187,2397.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="31980.25" y="2400.5352">MergeJoinExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31822.5" x2="32189.5" y1="2412" y2="2412"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2420"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="31841.5" y="2426.6348">stmtCtx *stmtctx.StatementContext</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2432.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="31841.5" y="2439.5898">compareFuncs []expression.CompareFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2445.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="31841.5" y="2452.5449">joiner joiner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2458.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="31841.5" y="2465.5">isOuterJoin bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2471.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="31841.5" y="2478.4551">desc bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2484.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="31841.5" y="2491.4102">innerTable *mergeJoinTable</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2497.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="31841.5" y="2504.3652">outerTable *mergeJoinTable</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2510.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="31841.5" y="2517.3203">hasMatch bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2523.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="31841.5" y="2530.2754">hasNull bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2536.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="31841.5" y="2543.2305">memTracker *memory.Tracker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2549.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="31841.5" y="2556.1855">diskTracker *disk.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31822.5" x2="32189.5" y1="2562.5059" y2="2562.5059"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31829.5" y="2570.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="31841.5" y="2577.1406">compare(outerRow chunk.Row, innerRow chunk.Row) (int, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="31844.5" y="2590.0957"/><ellipse cx="31832.5" cy="2599.416" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="31841.5" y="2603.0508">Close() error</text><ellipse cx="31832.5" cy="2612.3711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="31841.5" y="2616.0059">Open(ctx context.Context) error</text><ellipse cx="31832.5" cy="2625.3262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="31841.5" y="2628.9609">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[0a21b150c52d5ef543e4c6c36e8da230]
class executor.MetricRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="177.5508" id="executor.MetricRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="663" x="20285.5" y="1637"/><ellipse cx="20569.25" cy="1653" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M20568.4834,1654.063 Q20566.6323,1653.3574 20565.9766,1652.5813 Q20565.3208,1651.8052 20565.3208,1650.4937 Q20565.3208,1648.8086 20566.3999,1647.8457 Q20567.479,1646.8828 20569.3633,1646.8828 Q20570.2183,1646.8828 20571.0732,1647.0779 Q20571.9282,1647.2729 20572.7666,1647.6548 L20572.7666,1650.0454 Q20571.978,1649.4893 20571.1646,1649.1987 Q20570.3511,1648.9082 20569.5542,1648.9082 Q20568.666,1648.9082 20568.1929,1649.2651 Q20567.7197,1649.6221 20567.7197,1650.2861 Q20567.7197,1650.8008 20568.0642,1651.137 Q20568.4087,1651.4731 20569.5044,1651.8799 L20570.5586,1652.2783 Q20572.0527,1652.8262 20572.7583,1653.731 Q20573.4639,1654.6357 20573.4639,1656.0137 Q20573.4639,1657.8896 20572.3557,1658.8152 Q20571.2476,1659.7407 20569.0063,1659.7407 Q20568.085,1659.7407 20567.1594,1659.5208 Q20566.2339,1659.3008 20565.3706,1658.8691 L20565.3706,1656.3374 Q20566.3501,1657.0347 20567.2673,1657.375 Q20568.1846,1657.7153 20569.0811,1657.7153 Q20569.9858,1657.7153 20570.4839,1657.3044 Q20570.9819,1656.8936 20570.9819,1656.1548 Q20570.9819,1655.5986 20570.6499,1655.1794 Q20570.3179,1654.7603 20569.687,1654.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="20589.75" y="1657.5352">MetricRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20286.5" x2="20947.5" y1="1669" y2="1669"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20293.5" y="1677"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="20305.5" y="1683.6348">table *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20293.5" y="1689.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="20305.5" y="1696.5898">tblDef *infoschema.MetricTableDef</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20293.5" y="1702.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="20305.5" y="1709.5449">extractor *core.MetricTableExtractor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20293.5" y="1715.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="20305.5" y="1722.5">timeRange core.QueryTimeRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20293.5" y="1728.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="20305.5" y="1735.4551">retrieved bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20286.5" x2="20947.5" y1="1741.7754" y2="1741.7754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20293.5" y="1749.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="20305.5" y="1756.4102">retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20293.5" y="1762.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="637" x="20305.5" y="1769.3652">queryMetric(ctx context.Context, sctx sessionctx.Context, queryRange v1.Range, quantile float64) (model.Value, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20293.5" y="1775.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="20305.5" y="1782.3203">getQueryRange(sctx sessionctx.Context) promQLQueryRange</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20293.5" y="1788.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="20305.5" y="1795.2754">genRows(value model.Value, quantile float64) [][]types.Datum</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20293.5" y="1801.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="464" x="20305.5" y="1808.2305">genRecord(metric model.Metric, pair model.SamplePair, quantile float64) []types.Datum</text><!--MD5=[c5d47a756269d56702447f88fdfc776f]
class executor.MetricsSummaryByLabelRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.MetricsSummaryByLabelRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="20984" y="1669.5"/><ellipse cx="21107.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M21106.9834,1686.563 Q21105.1323,1685.8574 21104.4766,1685.0813 Q21103.8208,1684.3052 21103.8208,1682.9937 Q21103.8208,1681.3086 21104.8999,1680.3457 Q21105.979,1679.3828 21107.8633,1679.3828 Q21108.7183,1679.3828 21109.5732,1679.5779 Q21110.4282,1679.7729 21111.2666,1680.1548 L21111.2666,1682.5454 Q21110.478,1681.9893 21109.6646,1681.6987 Q21108.8511,1681.4082 21108.0542,1681.4082 Q21107.166,1681.4082 21106.6929,1681.7651 Q21106.2197,1682.1221 21106.2197,1682.7861 Q21106.2197,1683.3008 21106.5642,1683.637 Q21106.9087,1683.9731 21108.0044,1684.3799 L21109.0586,1684.7783 Q21110.5527,1685.3262 21111.2583,1686.231 Q21111.9639,1687.1357 21111.9639,1688.5137 Q21111.9639,1690.3896 21110.8557,1691.3152 Q21109.7476,1692.2407 21107.5063,1692.2407 Q21106.585,1692.2407 21105.6594,1692.0208 Q21104.7339,1691.8008 21103.8706,1691.3691 L21103.8706,1688.8374 Q21104.8501,1689.5347 21105.7673,1689.875 Q21106.6846,1690.2153 21107.5811,1690.2153 Q21108.4858,1690.2153 21108.9839,1689.8044 Q21109.4819,1689.3936 21109.4819,1688.6548 Q21109.4819,1688.0986 21109.1499,1687.6794 Q21108.8179,1687.2603 21108.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="190" x="21128.25" y="1690.0352">MetricsSummaryByLabelRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20985" x2="21429" y1="1701.5" y2="1701.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20992" y="1709.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="21004" y="1716.1348">table *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20992" y="1722.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="21004" y="1729.0898">extractor *core.MetricSummaryTableExtractor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20992" y="1735.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="21004" y="1742.0449">timeRange core.QueryTimeRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20992" y="1748.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="21004" y="1755">retrieved bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20985" x2="21429" y1="1761.3203" y2="1761.3203"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20992" y="1769.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="21004" y="1775.9551">retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><!--MD5=[82eae7b20b3e4851b4f6acbed301bd2f]
class executor.MetricsSummaryRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.MetricsSummaryRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="435" x="21465.5" y="1669.5"/><ellipse cx="21605.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M21604.9834,1686.563 Q21603.1323,1685.8574 21602.4766,1685.0813 Q21601.8208,1684.3052 21601.8208,1682.9937 Q21601.8208,1681.3086 21602.8999,1680.3457 Q21603.979,1679.3828 21605.8633,1679.3828 Q21606.7183,1679.3828 21607.5732,1679.5779 Q21608.4282,1679.7729 21609.2666,1680.1548 L21609.2666,1682.5454 Q21608.478,1681.9893 21607.6646,1681.6987 Q21606.8511,1681.4082 21606.0542,1681.4082 Q21605.166,1681.4082 21604.6929,1681.7651 Q21604.2197,1682.1221 21604.2197,1682.7861 Q21604.2197,1683.3008 21604.5642,1683.637 Q21604.9087,1683.9731 21606.0044,1684.3799 L21607.0586,1684.7783 Q21608.5527,1685.3262 21609.2583,1686.231 Q21609.9639,1687.1357 21609.9639,1688.5137 Q21609.9639,1690.3896 21608.8557,1691.3152 Q21607.7476,1692.2407 21605.5063,1692.2407 Q21604.585,1692.2407 21603.6594,1692.0208 Q21602.7339,1691.8008 21601.8706,1691.3691 L21601.8706,1688.8374 Q21602.8501,1689.5347 21603.7673,1689.875 Q21604.6846,1690.2153 21605.5811,1690.2153 Q21606.4858,1690.2153 21606.9839,1689.8044 Q21607.4819,1689.3936 21607.4819,1688.6548 Q21607.4819,1688.0986 21607.1499,1687.6794 Q21606.8179,1687.2603 21606.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="146" x="21626.25" y="1690.0352">MetricsSummaryRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21466.5" x2="21899.5" y1="1701.5" y2="1701.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21473.5" y="1709.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="21485.5" y="1716.1348">table *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21473.5" y="1722.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="21485.5" y="1729.0898">extractor *core.MetricSummaryTableExtractor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21473.5" y="1735.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="21485.5" y="1742.0449">timeRange core.QueryTimeRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21473.5" y="1748.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="21485.5" y="1755">retrieved bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21466.5" x2="21899.5" y1="1761.3203" y2="1761.3203"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21473.5" y="1769.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="21485.5" y="1775.9551">retrieve(_ context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><!--MD5=[8e5739d8fb9e7744980704a13a16ad12]
class executor.MockPhysicalPlan--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.MockPhysicalPlan" style="stroke: #A80036; stroke-width: 1.5;" width="151" x="35065.5" y="1695.5"/><ellipse cx="35089.5" cy="1711.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35085.9277,1707.7651 L35085.9277,1705.6069 L35093.3071,1705.6069 L35093.3071,1707.7651 L35090.8418,1707.7651 L35090.8418,1715.8418 L35093.3071,1715.8418 L35093.3071,1718 L35085.9277,1718 L35085.9277,1715.8418 L35088.3931,1715.8418 L35088.3931,1707.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="35105.5" y="1716.0352">MockPhysicalPlan</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35066.5" x2="35215.5" y1="1727.5" y2="1727.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="35066.5" x2="35215.5" y1="1735.5" y2="1735.5"/><ellipse cx="35076.5" cy="1746.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="35085.5" y="1750.1348">GetExecutor() Executor</text><!--MD5=[1521ecc5f6203b203ef5f2671415ea10]
class executor.NestedLoopApplyExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="384.832" id="executor.NestedLoopApplyExec" style="stroke: #A80036; stroke-width: 1.5;" width="477" x="32225.5" y="2315"/><ellipse cx="32395.25" cy="2331" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32394.4834,2332.063 Q32392.6323,2331.3574 32391.9766,2330.5813 Q32391.3208,2329.8052 32391.3208,2328.4937 Q32391.3208,2326.8086 32392.3999,2325.8457 Q32393.479,2324.8828 32395.3633,2324.8828 Q32396.2183,2324.8828 32397.0732,2325.0779 Q32397.9282,2325.2729 32398.7666,2325.6548 L32398.7666,2328.0454 Q32397.978,2327.4893 32397.1646,2327.1987 Q32396.3511,2326.9082 32395.5542,2326.9082 Q32394.666,2326.9082 32394.1929,2327.2651 Q32393.7197,2327.6221 32393.7197,2328.2861 Q32393.7197,2328.8008 32394.0642,2329.137 Q32394.4087,2329.4731 32395.5044,2329.8799 L32396.5586,2330.2783 Q32398.0527,2330.8262 32398.7583,2331.731 Q32399.4639,2332.6357 32399.4639,2334.0137 Q32399.4639,2335.8896 32398.3557,2336.8152 Q32397.2476,2337.7407 32395.0063,2337.7407 Q32394.085,2337.7407 32393.1594,2337.5208 Q32392.2339,2337.3008 32391.3706,2336.8691 L32391.3706,2334.3374 Q32392.3501,2335.0347 32393.2673,2335.375 Q32394.1846,2335.7153 32395.0811,2335.7153 Q32395.9858,2335.7153 32396.4839,2335.3044 Q32396.9819,2334.8936 32396.9819,2334.1548 Q32396.9819,2333.5986 32396.6499,2333.1794 Q32396.3179,2332.7603 32395.687,2332.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="129" x="32415.75" y="2335.5352">NestedLoopApplyExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32226.5" x2="32701.5" y1="2347" y2="2347"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2355"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="32245.5" y="2361.6348">innerRows []chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2367.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="32245.5" y="2374.5898">cursor int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2380.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="32245.5" y="2387.5449">innerExec Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2393.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="32245.5" y="2400.5">outerExec Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2406.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="32245.5" y="2413.4551">innerFilter expression.CNFExprs</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2419.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="32245.5" y="2426.4102">outerFilter expression.CNFExprs</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2432.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="32245.5" y="2439.3652">joiner joiner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2445.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="32245.5" y="2452.3203">outerSchema []*expression.CorrelatedColumn</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2458.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="32245.5" y="2465.2754">outerChunk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2471.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="32245.5" y="2478.2305">outerChunkCursor int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2484.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="32245.5" y="2491.1855">outerSelected []bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2497.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="32245.5" y="2504.1406">innerList *chunk.List</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2510.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="32245.5" y="2517.0957">innerChunk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2523.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="32245.5" y="2530.0508">innerSelected []bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2536.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="32245.5" y="2543.0059">innerIter chunk.Iterator</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2549.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="32245.5" y="2555.9609">outerRow *chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2562.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="32245.5" y="2568.916">hasMatch bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2575.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="32245.5" y="2581.8711">hasNull bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2588.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="32245.5" y="2594.8262">outer bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2601.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="32245.5" y="2607.7813">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32226.5" x2="32701.5" y1="2614.1016" y2="2614.1016"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2622.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="32245.5" y="2628.7363">fetchSelectedOuterRow(ctx context.Context, chk *chunk.Chunk) (*chunk.Row, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32233.5" y="2635.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="32245.5" y="2641.6914">fetchAllInners(ctx context.Context) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="32248.5" y="2654.6465"/><ellipse cx="32236.5" cy="2663.9668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="32245.5" y="2667.6016">Close() error</text><ellipse cx="32236.5" cy="2676.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="32245.5" y="2680.5566">Open(ctx context.Context) error</text><ellipse cx="32236.5" cy="2689.877" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="32245.5" y="2693.5117">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[8842e4cdd06764842531ec33e8f526d6]
class executor.PessimisticLockCacheGetter--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.PessimisticLockCacheGetter" style="stroke: #A80036; stroke-width: 1.5;" width="285" x="35251.5" y="1689"/><ellipse cx="35310.25" cy="1705" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35309.4834,1706.063 Q35307.6323,1705.3574 35306.9766,1704.5813 Q35306.3208,1703.8052 35306.3208,1702.4937 Q35306.3208,1700.8086 35307.3999,1699.8457 Q35308.479,1698.8828 35310.3633,1698.8828 Q35311.2183,1698.8828 35312.0732,1699.0779 Q35312.9282,1699.2729 35313.7666,1699.6548 L35313.7666,1702.0454 Q35312.978,1701.4893 35312.1646,1701.1987 Q35311.3511,1700.9082 35310.5542,1700.9082 Q35309.666,1700.9082 35309.1929,1701.2651 Q35308.7197,1701.6221 35308.7197,1702.2861 Q35308.7197,1702.8008 35309.0642,1703.137 Q35309.4087,1703.4731 35310.5044,1703.8799 L35311.5586,1704.2783 Q35313.0527,1704.8262 35313.7583,1705.731 Q35314.4639,1706.6357 35314.4639,1708.0137 Q35314.4639,1709.8896 35313.3557,1710.8152 Q35312.2476,1711.7407 35310.0063,1711.7407 Q35309.085,1711.7407 35308.1594,1711.5208 Q35307.2339,1711.3008 35306.3706,1710.8691 L35306.3706,1708.3374 Q35307.3501,1709.0347 35308.2673,1709.375 Q35309.1846,1709.7153 35310.0811,1709.7153 Q35310.9858,1709.7153 35311.4839,1709.3044 Q35311.9819,1708.8936 35311.9819,1708.1548 Q35311.9819,1707.5986 35311.6499,1707.1794 Q35311.3179,1706.7603 35310.687,1706.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="159" x="35330.75" y="1709.5352">PessimisticLockCacheGetter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35252.5" x2="35535.5" y1="1721" y2="1721"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35259.5" y="1729"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="35271.5" y="1735.6348">txnCtx *variable.TransactionContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35252.5" x2="35535.5" y1="1741.9551" y2="1741.9551"/><ellipse cx="35262.5" cy="1752.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="35271.5" y="1756.5898">Get(_ context.Context, key kv.Key) ([]byte, error)</text><!--MD5=[f3b75ae4bb46ddc74694a60e117baae7]
class executor.PointGetExecutor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="384.832" id="executor.PointGetExecutor" style="stroke: #A80036; stroke-width: 1.5;" width="342" x="32738" y="2315"/><ellipse cx="32855.75" cy="2331" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32854.9834,2332.063 Q32853.1323,2331.3574 32852.4766,2330.5813 Q32851.8208,2329.8052 32851.8208,2328.4937 Q32851.8208,2326.8086 32852.8999,2325.8457 Q32853.979,2324.8828 32855.8633,2324.8828 Q32856.7183,2324.8828 32857.5732,2325.0779 Q32858.4282,2325.2729 32859.2666,2325.6548 L32859.2666,2328.0454 Q32858.478,2327.4893 32857.6646,2327.1987 Q32856.8511,2326.9082 32856.0542,2326.9082 Q32855.166,2326.9082 32854.6929,2327.2651 Q32854.2197,2327.6221 32854.2197,2328.2861 Q32854.2197,2328.8008 32854.5642,2329.137 Q32854.9087,2329.4731 32856.0044,2329.8799 L32857.0586,2330.2783 Q32858.5527,2330.8262 32859.2583,2331.731 Q32859.9639,2332.6357 32859.9639,2334.0137 Q32859.9639,2335.8896 32858.8557,2336.8152 Q32857.7476,2337.7407 32855.5063,2337.7407 Q32854.585,2337.7407 32853.6594,2337.5208 Q32852.7339,2337.3008 32851.8706,2336.8691 L32851.8706,2334.3374 Q32852.8501,2335.0347 32853.7673,2335.375 Q32854.6846,2335.7153 32855.5811,2335.7153 Q32856.4858,2335.7153 32856.9839,2335.3044 Q32857.4819,2334.8936 32857.4819,2334.1548 Q32857.4819,2333.5986 32857.1499,2333.1794 Q32856.8179,2332.7603 32856.187,2332.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="32876.25" y="2335.5352">PointGetExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32739" x2="33079" y1="2347" y2="2347"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2355"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="32758" y="2361.6348">tblInfo *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2367.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="32758" y="2374.5898">handle int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2380.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="32758" y="2387.5449">idxInfo *model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2393.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="32758" y="2400.5">partInfo *model.PartitionDefinition</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2406.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="32758" y="2413.4551">idxKey kv.Key</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2419.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="32758" y="2426.4102">handleVal []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2432.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="32758" y="2439.3652">idxVals []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2445.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="32758" y="2452.3203">startTS uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2458.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="32758" y="2465.2754">txn kv.Transaction</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2471.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="32758" y="2478.2305">snapshot kv.Snapshot</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2484.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="32758" y="2491.1855">done bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2497.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="32758" y="2504.1406">lock bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2510.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="32758" y="2517.0957">lockWaitTime int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2523.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="32758" y="2530.0508">rowDecoder *rowcodec.ChunkDecoder</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2536.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="32758" y="2543.0059">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2549.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="32758" y="2555.9609">virtualColumnIndex []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2562.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="32758" y="2568.916">virtualColumnRetFieldTypes []*types.FieldType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32739" x2="33079" y1="2575.2363" y2="2575.2363"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2583.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="32758" y="2589.8711">buildVirtualColumnInfo()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2596.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="32758" y="2602.8262">getAndLock(ctx context.Context, key kv.Key) ([]byte, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2609.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="32758" y="2615.7813">lockKeyIfNeeded(ctx context.Context, key []byte) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32746" y="2622.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="32758" y="2628.7363">get(ctx context.Context, key kv.Key) ([]byte, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="32761" y="2641.6914"/><ellipse cx="32749" cy="2651.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="32758" y="2654.6465">Init(p *core.PointGetPlan, startTs uint64)</text><ellipse cx="32749" cy="2663.9668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="32758" y="2667.6016">Open( context.Context) error</text><ellipse cx="32749" cy="2676.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="32758" y="2680.5566">Close() error</text><ellipse cx="32749" cy="2689.877" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="32758" y="2693.5117">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[b2479134f42eaa71c529e3db46219cf8]
class executor.PrepareExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.PrepareExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="9489" y="2431.5"/><ellipse cx="9598.25" cy="2447.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9597.4834,2448.563 Q9595.6323,2447.8574 9594.9766,2447.0813 Q9594.3208,2446.3052 9594.3208,2444.9937 Q9594.3208,2443.3086 9595.3999,2442.3457 Q9596.479,2441.3828 9598.3633,2441.3828 Q9599.2183,2441.3828 9600.0732,2441.5779 Q9600.9282,2441.7729 9601.7666,2442.1548 L9601.7666,2444.5454 Q9600.978,2443.9893 9600.1646,2443.6987 Q9599.3511,2443.4082 9598.5542,2443.4082 Q9597.666,2443.4082 9597.1929,2443.7651 Q9596.7197,2444.1221 9596.7197,2444.7861 Q9596.7197,2445.3008 9597.0642,2445.637 Q9597.4087,2445.9731 9598.5044,2446.3799 L9599.5586,2446.7783 Q9601.0527,2447.3262 9601.7583,2448.231 Q9602.4639,2449.1357 9602.4639,2450.5137 Q9602.4639,2452.3896 9601.3557,2453.3152 Q9600.2476,2454.2407 9598.0063,2454.2407 Q9597.085,2454.2407 9596.1594,2454.0208 Q9595.2339,2453.8008 9594.3706,2453.3691 L9594.3706,2450.8374 Q9595.3501,2451.5347 9596.2673,2451.875 Q9597.1846,2452.2153 9598.0811,2452.2153 Q9598.9858,2452.2153 9599.4839,2451.8044 Q9599.9819,2451.3936 9599.9819,2450.6548 Q9599.9819,2450.0986 9599.6499,2449.6794 Q9599.3179,2449.2603 9598.687,2449.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="9618.75" y="2452.0352">PrepareExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9490" x2="9788" y1="2463.5" y2="2463.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9497" y="2471.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="9509" y="2478.1348">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9497" y="2484.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="9509" y="2491.0898">name string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9497" y="2497.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="9509" y="2504.0449">sqlText string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="9512" y="2517"/><ellipse cx="9500" cy="2526.3203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="9509" y="2529.9551">ID uint32</text><ellipse cx="9500" cy="2539.2754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="9509" y="2542.9102">ParamCount int</text><ellipse cx="9500" cy="2552.2305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="9509" y="2555.8652">Fields []*ast.ResultField</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9490" x2="9788" y1="2562.1855" y2="2562.1855"/><ellipse cx="9500" cy="2573.1855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="9509" y="2576.8203">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[b0adb0585a84bd01c8f261c22b9c7292]
class executor.ProjectionExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="345.9668" id="executor.ProjectionExec" style="stroke: #A80036; stroke-width: 1.5;" width="370" x="33115" y="2334.5"/><ellipse cx="33253.75" cy="2350.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33252.9834,2351.563 Q33251.1323,2350.8574 33250.4766,2350.0813 Q33249.8208,2349.3052 33249.8208,2347.9937 Q33249.8208,2346.3086 33250.8999,2345.3457 Q33251.979,2344.3828 33253.8633,2344.3828 Q33254.7183,2344.3828 33255.5732,2344.5779 Q33256.4282,2344.7729 33257.2666,2345.1548 L33257.2666,2347.5454 Q33256.478,2346.9893 33255.6646,2346.6987 Q33254.8511,2346.4082 33254.0542,2346.4082 Q33253.166,2346.4082 33252.6929,2346.7651 Q33252.2197,2347.1221 33252.2197,2347.7861 Q33252.2197,2348.3008 33252.5642,2348.637 Q33252.9087,2348.9731 33254.0044,2349.3799 L33255.0586,2349.7783 Q33256.5527,2350.3262 33257.2583,2351.231 Q33257.9639,2352.1357 33257.9639,2353.5137 Q33257.9639,2355.3896 33256.8557,2356.3152 Q33255.7476,2357.2407 33253.5063,2357.2407 Q33252.585,2357.2407 33251.6594,2357.0208 Q33250.7339,2356.8008 33249.8706,2356.3691 L33249.8706,2353.8374 Q33250.8501,2354.5347 33251.7673,2354.875 Q33252.6846,2355.2153 33253.5811,2355.2153 Q33254.4858,2355.2153 33254.9839,2354.8044 Q33255.4819,2354.3936 33255.4819,2353.6548 Q33255.4819,2353.0986 33255.1499,2352.6794 Q33254.8179,2352.2603 33254.187,2352.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="33274.25" y="2355.0352">ProjectionExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33116" x2="33484" y1="2366.5" y2="2366.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2374.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="33135" y="2381.1348">evaluatorSuit *expression.EvaluatorSuite</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2387.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="33135" y="2394.0898">finishCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33183" y="2394.0898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="33212" y="2394.0898"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="33212" y="2394.0898">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="33244" y="2394.0898">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2400.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="33135" y="2407.0449">outputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33189" y="2407.0449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="33218" y="2407.0449">*projectionOutput</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2413.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="33135" y="2420">fetcher projectionInputFetcher</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2426.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="33135" y="2432.9551">numWorkers int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2439.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="33135" y="2445.9102">workers []*projectionWorker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2452.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="33135" y="2458.8652">childResult *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2465.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="33135" y="2471.8203">parentReqRows int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2478.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="33135" y="2484.7754">memTracker *memory.Tracker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2491.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="33135" y="2497.7305">wg sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2504.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="33135" y="2510.6855">calculateNoDelay bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2517.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="33135" y="2523.6406">prepared bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33116" x2="33484" y1="2529.9609" y2="2529.9609"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2537.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="33135" y="2544.5957">open(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2550.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="33135" y="2557.5508">isUnparallelExec() bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2563.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="33135" y="2570.5059">unParallelExecute(ctx context.Context, chk *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2576.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="33135" y="2583.4609">parallelExecute(ctx context.Context, chk *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2589.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="33135" y="2596.416">prepare(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2602.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="33135" y="2609.3711">drainInputCh(ch</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33226" y="2609.3711">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="33255" y="2609.3711">*projectionInput)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33123" y="2615.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="33135" y="2622.3262">drainOutputCh(ch</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33236" y="2622.3262">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="33265" y="2622.3262">*projectionOutput)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="33138" y="2635.2813"/><ellipse cx="33126" cy="2644.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="33135" y="2648.2363">Open(ctx context.Context) error</text><ellipse cx="33126" cy="2657.5566" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="33135" y="2661.1914">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="33126" cy="2670.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="33135" y="2674.1465">Close() error</text><!--MD5=[f2b7242f16141fdb51af1f1d5cccf59e]
class executor.RecoverIndexExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="358.9219" id="executor.RecoverIndexExec" style="stroke: #A80036; stroke-width: 1.5;" width="661" x="10510.5" y="2328"/><ellipse cx="10784.25" cy="2344" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M10783.4834,2345.063 Q10781.6323,2344.3574 10780.9766,2343.5813 Q10780.3208,2342.8052 10780.3208,2341.4937 Q10780.3208,2339.8086 10781.3999,2338.8457 Q10782.479,2337.8828 10784.3633,2337.8828 Q10785.2183,2337.8828 10786.0732,2338.0779 Q10786.9282,2338.2729 10787.7666,2338.6548 L10787.7666,2341.0454 Q10786.978,2340.4893 10786.1646,2340.1987 Q10785.3511,2339.9082 10784.5542,2339.9082 Q10783.666,2339.9082 10783.1929,2340.2651 Q10782.7197,2340.6221 10782.7197,2341.2861 Q10782.7197,2341.8008 10783.0642,2342.137 Q10783.4087,2342.4731 10784.5044,2342.8799 L10785.5586,2343.2783 Q10787.0527,2343.8262 10787.7583,2344.731 Q10788.4639,2345.6357 10788.4639,2347.0137 Q10788.4639,2348.8896 10787.3557,2349.8152 Q10786.2476,2350.7407 10784.0063,2350.7407 Q10783.085,2350.7407 10782.1594,2350.5208 Q10781.2339,2350.3008 10780.3706,2349.8691 L10780.3706,2347.3374 Q10781.3501,2348.0347 10782.2673,2348.375 Q10783.1846,2348.7153 10784.0811,2348.7153 Q10784.9858,2348.7153 10785.4839,2348.3044 Q10785.9819,2347.8936 10785.9819,2347.1548 Q10785.9819,2346.5986 10785.6499,2346.1794 Q10785.3179,2345.7603 10784.687,2345.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="10804.75" y="2348.5352">RecoverIndexExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10511.5" x2="11170.5" y1="2360" y2="2360"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2368"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="10530.5" y="2374.6348">done bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2380.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="10530.5" y="2387.5898">index table.Index</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2393.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="10530.5" y="2400.5449">table table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2406.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="10530.5" y="2413.5">physicalID int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2419.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="10530.5" y="2426.4551">batchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2432.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="10530.5" y="2439.4102">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2445.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="10530.5" y="2452.3652">colFieldTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2458.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="10530.5" y="2465.3203">srcChunk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2471.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="10530.5" y="2478.2754">recoverRows []recoverRows</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2484.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="10530.5" y="2491.2305">idxValsBufs [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2497.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="10530.5" y="2504.1855">idxKeyBufs [][]byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2510.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="10530.5" y="2517.1406">batchKeys []kv.Key</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10511.5" x2="11170.5" y1="2523.4609" y2="2523.4609"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2531.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="10530.5" y="2538.0957">columnsTypes() []*types.FieldType</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2544.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="10530.5" y="2551.0508">constructTableScanPB(pbColumnInfos []*tipb.ColumnInfo) *tipb.Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2557.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="10530.5" y="2564.0059">constructLimitPB(count uint64) *tipb.Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2570.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="10530.5" y="2576.9609">buildDAGPB(txn kv.Transaction, limitCnt uint64) (*tipb.DAGRequest, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2583.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="635" x="10530.5" y="2589.916">buildTableScan(ctx context.Context, txn kv.Transaction, startHandle int64, limitCnt uint64) (distsql.SelectResult, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2596.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="10530.5" y="2602.8711">backfillIndex(ctx context.Context) (int64, int64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2609.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="613" x="10530.5" y="2615.8262">fetchRecoverRows(ctx context.Context, srcResult distsql.SelectResult, result *backfillResult) ([]recoverRows, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2622.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="10530.5" y="2628.7813">batchMarkDup(txn kv.Transaction, rows []recoverRows) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10518.5" y="2635.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="10530.5" y="2641.7363">backfillIndexInTxn(ctx context.Context, txn kv.Transaction, startHandle int64) (backfillResult, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="10533.5" y="2654.6914"/><ellipse cx="10521.5" cy="2664.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="10530.5" y="2667.6465">Open(ctx context.Context) error</text><ellipse cx="10521.5" cy="2676.9668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="10530.5" y="2680.6016">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[cffc58772af30240444d62eafe9c982b]
class executor.ReloadExprPushdownBlacklistExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.ReloadExprPushdownBlacklistExec" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="11207" y="2477"/><ellipse cx="11248.1" cy="2493" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11247.3334,2494.063 Q11245.4823,2493.3574 11244.8266,2492.5813 Q11244.1708,2491.8052 11244.1708,2490.4937 Q11244.1708,2488.8086 11245.2499,2487.8457 Q11246.329,2486.8828 11248.2133,2486.8828 Q11249.0683,2486.8828 11249.9232,2487.0779 Q11250.7782,2487.2729 11251.6166,2487.6548 L11251.6166,2490.0454 Q11250.828,2489.4893 11250.0146,2489.1987 Q11249.2011,2488.9082 11248.4042,2488.9082 Q11247.516,2488.9082 11247.0429,2489.2651 Q11246.5697,2489.6221 11246.5697,2490.2861 Q11246.5697,2490.8008 11246.9142,2491.137 Q11247.2587,2491.4731 11248.3544,2491.8799 L11249.4086,2492.2783 Q11250.9027,2492.8262 11251.6083,2493.731 Q11252.3139,2494.6357 11252.3139,2496.0137 Q11252.3139,2497.8896 11251.2057,2498.8152 Q11250.0976,2499.7407 11247.8563,2499.7407 Q11246.935,2499.7407 11246.0094,2499.5208 Q11245.0839,2499.3008 11244.2206,2498.8691 L11244.2206,2496.3374 Q11245.2001,2497.0347 11246.1173,2497.375 Q11247.0346,2497.7153 11247.9311,2497.7153 Q11248.8358,2497.7153 11249.3339,2497.3044 Q11249.8319,2496.8936 11249.8319,2496.1548 Q11249.8319,2495.5986 11249.4999,2495.1794 Q11249.1679,2494.7603 11248.537,2494.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="11267.9" y="2497.5352">ReloadExprPushdownBlacklistExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11208" x2="11494" y1="2509" y2="2509"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11208" x2="11494" y1="2517" y2="2517"/><ellipse cx="11218" cy="2528" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="11227" y="2531.6348">Next(ctx context.Context, _ *chunk.Chunk) error</text><!--MD5=[c0de798a2332ef231a2f3529d40da197]
class executor.ReloadOptRuleBlacklistExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.ReloadOptRuleBlacklistExec" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="11530" y="2477"/><ellipse cx="11590.25" cy="2493" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11589.4834,2494.063 Q11587.6323,2493.3574 11586.9766,2492.5813 Q11586.3208,2491.8052 11586.3208,2490.4937 Q11586.3208,2488.8086 11587.3999,2487.8457 Q11588.479,2486.8828 11590.3633,2486.8828 Q11591.2183,2486.8828 11592.0732,2487.0779 Q11592.9282,2487.2729 11593.7666,2487.6548 L11593.7666,2490.0454 Q11592.978,2489.4893 11592.1646,2489.1987 Q11591.3511,2488.9082 11590.5542,2488.9082 Q11589.666,2488.9082 11589.1929,2489.2651 Q11588.7197,2489.6221 11588.7197,2490.2861 Q11588.7197,2490.8008 11589.0642,2491.137 Q11589.4087,2491.4731 11590.5044,2491.8799 L11591.5586,2492.2783 Q11593.0527,2492.8262 11593.7583,2493.731 Q11594.4639,2494.6357 11594.4639,2496.0137 Q11594.4639,2497.8896 11593.3557,2498.8152 Q11592.2476,2499.7407 11590.0063,2499.7407 Q11589.085,2499.7407 11588.1594,2499.5208 Q11587.2339,2499.3008 11586.3706,2498.8691 L11586.3706,2496.3374 Q11587.3501,2497.0347 11588.2673,2497.375 Q11589.1846,2497.7153 11590.0811,2497.7153 Q11590.9858,2497.7153 11591.4839,2497.3044 Q11591.9819,2496.8936 11591.9819,2496.1548 Q11591.9819,2495.5986 11591.6499,2495.1794 Q11591.3179,2494.7603 11590.687,2494.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="159" x="11610.75" y="2497.5352">ReloadOptRuleBlacklistExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11531" x2="11817" y1="2509" y2="2509"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11531" x2="11817" y1="2517" y2="2517"/><ellipse cx="11541" cy="2528" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="11550" y="2531.6348">Next(ctx context.Context, _ *chunk.Chunk) error</text><!--MD5=[70dace1725a504df84d44df63e2ddf88]
class executor.ReplaceExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="177.5508" id="executor.ReplaceExec" style="stroke: #A80036; stroke-width: 1.5;" width="556" x="27819" y="3168"/><ellipse cx="28056.25" cy="3184" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28055.4834,3185.063 Q28053.6323,3184.3574 28052.9766,3183.5813 Q28052.3208,3182.8052 28052.3208,3181.4937 Q28052.3208,3179.8086 28053.3999,3178.8457 Q28054.479,3177.8828 28056.3633,3177.8828 Q28057.2183,3177.8828 28058.0732,3178.0779 Q28058.9282,3178.2729 28059.7666,3178.6548 L28059.7666,3181.0454 Q28058.978,3180.4893 28058.1646,3180.1987 Q28057.3511,3179.9082 28056.5542,3179.9082 Q28055.666,3179.9082 28055.1929,3180.2651 Q28054.7197,3180.6221 28054.7197,3181.2861 Q28054.7197,3181.8008 28055.0642,3182.137 Q28055.4087,3182.4731 28056.5044,3182.8799 L28057.5586,3183.2783 Q28059.0527,3183.8262 28059.7583,3184.731 Q28060.4639,3185.6357 28060.4639,3187.0137 Q28060.4639,3188.8896 28059.3557,3189.8152 Q28058.2476,3190.7407 28056.0063,3190.7407 Q28055.085,3190.7407 28054.1594,3190.5208 Q28053.2339,3190.3008 28052.3706,3189.8691 L28052.3706,3187.3374 Q28053.3501,3188.0347 28054.2673,3188.375 Q28055.1846,3188.7153 28056.0811,3188.7153 Q28056.9858,3188.7153 28057.4839,3188.3044 Q28057.9819,3187.8936 28057.9819,3187.1548 Q28057.9819,3186.5986 28057.6499,3186.1794 Q28057.3179,3185.7603 28056.687,3185.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="28076.75" y="3188.5352">ReplaceExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27820" x2="28374" y1="3200" y2="3200"/><ellipse cx="27830" cy="3211" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="27839" y="3214.6348">Priority int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27820" x2="28374" y1="3220.9551" y2="3220.9551"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27827" y="3228.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="530" x="27839" y="3235.5898">removeRow(ctx context.Context, txn kv.Transaction, handle int64, r toBeCheckedRow) (bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27827" y="3241.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="27839" y="3248.5449">replaceRow(ctx context.Context, r toBeCheckedRow) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27827" y="3254.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="27839" y="3261.5">removeIndexRow(ctx context.Context, txn kv.Transaction, r toBeCheckedRow) (bool, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27827" y="3267.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="27839" y="3274.4551">exec(ctx context.Context, newRows [][]types.Datum) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27827" y="3280.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="27839" y="3287.4102">setMessage()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="27842" y="3300.3652"/><ellipse cx="27830" cy="3309.6855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="27839" y="3313.3203">Close() error</text><ellipse cx="27830" cy="3322.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="27839" y="3326.2754">Open(ctx context.Context) error</text><ellipse cx="27830" cy="3335.5957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="27839" y="3339.2305">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[6223ef7661ba59e34614f6540c2053a2]
class executor.RevokeExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="255.2813" id="executor.RevokeExec" style="stroke: #A80036; stroke-width: 1.5;" width="583" x="11853.5" y="2380"/><ellipse cx="12106.25" cy="2396" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12105.4834,2397.063 Q12103.6323,2396.3574 12102.9766,2395.5813 Q12102.3208,2394.8052 12102.3208,2393.4937 Q12102.3208,2391.8086 12103.3999,2390.8457 Q12104.479,2389.8828 12106.3633,2389.8828 Q12107.2183,2389.8828 12108.0732,2390.0779 Q12108.9282,2390.2729 12109.7666,2390.6548 L12109.7666,2393.0454 Q12108.978,2392.4893 12108.1646,2392.1987 Q12107.3511,2391.9082 12106.5542,2391.9082 Q12105.666,2391.9082 12105.1929,2392.2651 Q12104.7197,2392.6221 12104.7197,2393.2861 Q12104.7197,2393.8008 12105.0642,2394.137 Q12105.4087,2394.4731 12106.5044,2394.8799 L12107.5586,2395.2783 Q12109.0527,2395.8262 12109.7583,2396.731 Q12110.4639,2397.6357 12110.4639,2399.0137 Q12110.4639,2400.8896 12109.3557,2401.8152 Q12108.2476,2402.7407 12106.0063,2402.7407 Q12105.085,2402.7407 12104.1594,2402.5208 Q12103.2339,2402.3008 12102.3706,2401.8691 L12102.3706,2399.3374 Q12103.3501,2400.0347 12104.2673,2400.375 Q12105.1846,2400.7153 12106.0811,2400.7153 Q12106.9858,2400.7153 12107.4839,2400.3044 Q12107.9819,2399.8936 12107.9819,2399.1548 Q12107.9819,2398.5986 12107.6499,2398.1794 Q12107.3179,2397.7603 12106.687,2397.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="12126.75" y="2400.5352">RevokeExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11854.5" x2="12435.5" y1="2412" y2="2412"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11861.5" y="2420"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="11873.5" y="2426.6348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11861.5" y="2432.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="11873.5" y="2439.5898">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11861.5" y="2445.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="11873.5" y="2452.5449">done bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="11876.5" y="2465.5"/><ellipse cx="11864.5" cy="2474.8203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="11873.5" y="2478.4551">Privs []*ast.PrivElem</text><ellipse cx="11864.5" cy="2487.7754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="11873.5" y="2491.4102">ObjectType ast.ObjectTypeType</text><ellipse cx="11864.5" cy="2500.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="11873.5" y="2504.3652">Level *ast.GrantLevel</text><ellipse cx="11864.5" cy="2513.6855" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="11873.5" y="2517.3203">Users []*ast.UserSpec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11854.5" x2="12435.5" y1="2523.6406" y2="2523.6406"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11861.5" y="2531.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="11873.5" y="2538.2754">revokeOneUser(internalSession sessionctx.Context, user string, host string) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11861.5" y="2544.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="513" x="11873.5" y="2551.2305">revokePriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11861.5" y="2557.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="547" x="11873.5" y="2564.1855">revokeGlobalPriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11861.5" y="2570.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="11873.5" y="2577.1406">revokeDBPriv(internalSession sessionctx.Context, priv *ast.PrivElem, userName string, host string) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11861.5" y="2583.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="11873.5" y="2590.0957">revokeTablePriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11861.5" y="2596.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="555" x="11873.5" y="2603.0508">revokeColumnPriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="11876.5" y="2616.0059"/><ellipse cx="11864.5" cy="2625.3262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="11873.5" y="2628.9609">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[0821f9b505564b4294123b305f5fac10]
class executor.SQLBindExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="255.2813" id="executor.SQLBindExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="12472" y="2380"/><ellipse cx="12581.25" cy="2396" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12580.4834,2397.063 Q12578.6323,2396.3574 12577.9766,2395.5813 Q12577.3208,2394.8052 12577.3208,2393.4937 Q12577.3208,2391.8086 12578.3999,2390.8457 Q12579.479,2389.8828 12581.3633,2389.8828 Q12582.2183,2389.8828 12583.0732,2390.0779 Q12583.9282,2390.2729 12584.7666,2390.6548 L12584.7666,2393.0454 Q12583.978,2392.4893 12583.1646,2392.1987 Q12582.3511,2391.9082 12581.5542,2391.9082 Q12580.666,2391.9082 12580.1929,2392.2651 Q12579.7197,2392.6221 12579.7197,2393.2861 Q12579.7197,2393.8008 12580.0642,2394.137 Q12580.4087,2394.4731 12581.5044,2394.8799 L12582.5586,2395.2783 Q12584.0527,2395.8262 12584.7583,2396.731 Q12585.4639,2397.6357 12585.4639,2399.0137 Q12585.4639,2400.8896 12584.3557,2401.8152 Q12583.2476,2402.7407 12581.0063,2402.7407 Q12580.085,2402.7407 12579.1594,2402.5208 Q12578.2339,2402.3008 12577.3706,2401.8691 L12577.3706,2399.3374 Q12578.3501,2400.0347 12579.2673,2400.375 Q12580.1846,2400.7153 12581.0811,2400.7153 Q12581.9858,2400.7153 12582.4839,2400.3044 Q12582.9819,2399.8936 12582.9819,2399.1548 Q12582.9819,2398.5986 12582.6499,2398.1794 Q12582.3179,2397.7603 12581.687,2397.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="12601.75" y="2400.5352">SQLBindExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="12473" x2="12771" y1="2412" y2="2412"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2420"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="12492" y="2426.6348">sqlBindOp core.SQLBindOpType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2432.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="12492" y="2439.5898">normdOrigSQL string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2445.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="12492" y="2452.5449">bindSQL string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2458.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="12492" y="2465.5">charset string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2471.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="12492" y="2478.4551">collation string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2484.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="12492" y="2491.4102">db string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2497.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="12492" y="2504.3652">isGlobal bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2510.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="12492" y="2517.3203">bindAst ast.StmtNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="12473" x2="12771" y1="2523.6406" y2="2523.6406"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2531.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="12492" y="2538.2754">dropSQLBind() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2544.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="12492" y="2551.2305">createSQLBind() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2557.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="12492" y="2564.1855">flushBindings() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2570.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="12492" y="2577.1406">captureBindings()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2583.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="12492" y="2590.0957">evolveBindings() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12480" y="2596.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="12492" y="2603.0508">reloadBindings() error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="12495" y="2616.0059"/><ellipse cx="12483" cy="2625.3262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="12492" y="2628.9609">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[a2783cd9d94934136e0b2d483b0d05ad]
class executor.SelectIntoExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="216.416" id="executor.SelectIntoExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="21188" y="2399.5"/><ellipse cx="21293.25" cy="2415.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M21292.4834,2416.563 Q21290.6323,2415.8574 21289.9766,2415.0813 Q21289.3208,2414.3052 21289.3208,2412.9937 Q21289.3208,2411.3086 21290.3999,2410.3457 Q21291.479,2409.3828 21293.3633,2409.3828 Q21294.2183,2409.3828 21295.0732,2409.5779 Q21295.9282,2409.7729 21296.7666,2410.1548 L21296.7666,2412.5454 Q21295.978,2411.9893 21295.1646,2411.6987 Q21294.3511,2411.4082 21293.5542,2411.4082 Q21292.666,2411.4082 21292.1929,2411.7651 Q21291.7197,2412.1221 21291.7197,2412.7861 Q21291.7197,2413.3008 21292.0642,2413.637 Q21292.4087,2413.9731 21293.5044,2414.3799 L21294.5586,2414.7783 Q21296.0527,2415.3262 21296.7583,2416.231 Q21297.4639,2417.1357 21297.4639,2418.5137 Q21297.4639,2420.3896 21296.3557,2421.3152 Q21295.2476,2422.2407 21293.0063,2422.2407 Q21292.085,2422.2407 21291.1594,2422.0208 Q21290.2339,2421.8008 21289.3706,2421.3691 L21289.3706,2418.8374 Q21290.3501,2419.5347 21291.2673,2419.875 Q21292.1846,2420.2153 21293.0811,2420.2153 Q21293.9858,2420.2153 21294.4839,2419.8044 Q21294.9819,2419.3936 21294.9819,2418.6548 Q21294.9819,2418.0986 21294.6499,2417.6794 Q21294.3179,2417.2603 21293.687,2417.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="21313.75" y="2420.0352">SelectIntoExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21189" x2="21487" y1="2431.5" y2="2431.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21196" y="2439.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="21208" y="2446.1348">intoOpt *ast.SelectIntoOption</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21196" y="2452.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="21208" y="2459.0898">lineBuf []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21196" y="2465.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="21208" y="2472.0449">realBuf []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21196" y="2478.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="21208" y="2485">writer *bufio.Writer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21196" y="2491.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="21208" y="2497.9551">dstFile *os.File</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21196" y="2504.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="21208" y="2510.9102">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21196" y="2517.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="21208" y="2523.8652">started bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21189" x2="21487" y1="2530.1855" y2="2530.1855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21196" y="2538.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="21208" y="2544.8203">considerEncloseOpt(et types.EvalType) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21196" y="2551.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="21208" y="2557.7754">dumpToOutfile() error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="21211" y="2570.7305"/><ellipse cx="21199" cy="2580.0508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="21208" y="2583.6855">Open(ctx context.Context) error</text><ellipse cx="21199" cy="2593.0059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="21208" y="2596.6406">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="21199" cy="2605.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="21208" y="2609.5957">Close() error</text><!--MD5=[8c13cced8c72a27fd52f4f030e74fac3]
class executor.SelectLockExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.SelectLockExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="12807" y="2431.5"/><ellipse cx="12909.75" cy="2447.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12908.9834,2448.563 Q12907.1323,2447.8574 12906.4766,2447.0813 Q12905.8208,2446.3052 12905.8208,2444.9937 Q12905.8208,2443.3086 12906.8999,2442.3457 Q12907.979,2441.3828 12909.8633,2441.3828 Q12910.7183,2441.3828 12911.5732,2441.5779 Q12912.4282,2441.7729 12913.2666,2442.1548 L12913.2666,2444.5454 Q12912.478,2443.9893 12911.6646,2443.6987 Q12910.8511,2443.4082 12910.0542,2443.4082 Q12909.166,2443.4082 12908.6929,2443.7651 Q12908.2197,2444.1221 12908.2197,2444.7861 Q12908.2197,2445.3008 12908.5642,2445.637 Q12908.9087,2445.9731 12910.0044,2446.3799 L12911.0586,2446.7783 Q12912.5527,2447.3262 12913.2583,2448.231 Q12913.9639,2449.1357 12913.9639,2450.5137 Q12913.9639,2452.3896 12912.8557,2453.3152 Q12911.7476,2454.2407 12909.5063,2454.2407 Q12908.585,2454.2407 12907.6594,2454.0208 Q12906.7339,2453.8008 12905.8706,2453.3691 L12905.8706,2450.8374 Q12906.8501,2451.5347 12907.7673,2451.875 Q12908.6846,2452.2153 12909.5811,2452.2153 Q12910.4858,2452.2153 12910.9839,2451.8044 Q12911.4819,2451.3936 12911.4819,2450.6548 Q12911.4819,2450.0986 12911.1499,2449.6794 Q12910.8179,2449.2603 12910.187,2449.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="12930.25" y="2452.0352">SelectLockExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="12808" x2="13106" y1="2463.5" y2="2463.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12815" y="2471.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="12827" y="2478.1348">keys []kv.Key</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12815" y="2484.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="12827" y="2491.0898">tblID2Handle</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="12899" y="2491.0898">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="12922" y="2491.0898">[int64][]*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12815" y="2497.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="12827" y="2504.0449">partitionedTable []table.PartitionedTable</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12815" y="2510.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="12827" y="2517">tblID2Table</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="12891" y="2517">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="12914" y="2517">[int64]table.PartitionedTable</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="12830" y="2529.9551"/><ellipse cx="12818" cy="2539.2754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="12827" y="2542.9102">Lock ast.SelectLockType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="12808" x2="13106" y1="2549.2305" y2="2549.2305"/><ellipse cx="12818" cy="2560.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="12827" y="2563.8652">Open(ctx context.Context) error</text><ellipse cx="12818" cy="2573.1855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="12827" y="2576.8203">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[93a0054251d48da9935508748c950d23]
class executor.SelectionExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="216.416" id="executor.SelectionExec" style="stroke: #A80036; stroke-width: 1.5;" width="357" x="21523.5" y="2399.5"/><ellipse cx="21659.25" cy="2415.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M21658.4834,2416.563 Q21656.6323,2415.8574 21655.9766,2415.0813 Q21655.3208,2414.3052 21655.3208,2412.9937 Q21655.3208,2411.3086 21656.3999,2410.3457 Q21657.479,2409.3828 21659.3633,2409.3828 Q21660.2183,2409.3828 21661.0732,2409.5779 Q21661.9282,2409.7729 21662.7666,2410.1548 L21662.7666,2412.5454 Q21661.978,2411.9893 21661.1646,2411.6987 Q21660.3511,2411.4082 21659.5542,2411.4082 Q21658.666,2411.4082 21658.1929,2411.7651 Q21657.7197,2412.1221 21657.7197,2412.7861 Q21657.7197,2413.3008 21658.0642,2413.637 Q21658.4087,2413.9731 21659.5044,2414.3799 L21660.5586,2414.7783 Q21662.0527,2415.3262 21662.7583,2416.231 Q21663.4639,2417.1357 21663.4639,2418.5137 Q21663.4639,2420.3896 21662.3557,2421.3152 Q21661.2476,2422.2407 21659.0063,2422.2407 Q21658.085,2422.2407 21657.1594,2422.0208 Q21656.2339,2421.8008 21655.3706,2421.3691 L21655.3706,2418.8374 Q21656.3501,2419.5347 21657.2673,2419.875 Q21658.1846,2420.2153 21659.0811,2420.2153 Q21659.9858,2420.2153 21660.4839,2419.8044 Q21660.9819,2419.3936 21660.9819,2418.6548 Q21660.9819,2418.0986 21660.6499,2417.6794 Q21660.3179,2417.2603 21659.687,2417.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="21679.75" y="2420.0352">SelectionExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21524.5" x2="21879.5" y1="2431.5" y2="2431.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21531.5" y="2439.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="21543.5" y="2446.1348">batched bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21531.5" y="2452.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="21543.5" y="2459.0898">filters []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21531.5" y="2465.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="21543.5" y="2472.0449">selected []bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21531.5" y="2478.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="21543.5" y="2485">inputIter *chunk.Iterator4Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21531.5" y="2491.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="21543.5" y="2497.9551">inputRow chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21531.5" y="2504.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="21543.5" y="2510.9102">childResult *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21531.5" y="2517.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="21543.5" y="2523.8652">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21524.5" x2="21879.5" y1="2530.1855" y2="2530.1855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21531.5" y="2538.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="21543.5" y="2544.8203">open(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21531.5" y="2551.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="21543.5" y="2557.7754">unBatchedNext(ctx context.Context, chk *chunk.Chunk) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="21546.5" y="2570.7305"/><ellipse cx="21534.5" cy="2580.0508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="21543.5" y="2583.6855">Open(ctx context.Context) error</text><ellipse cx="21534.5" cy="2593.0059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="21543.5" y="2596.6406">Close() error</text><ellipse cx="21534.5" cy="2605.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="21543.5" y="2609.5957">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[18a2da62878a37945d82c5279f8ccd8c]
class executor.SetConfigExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.SetConfigExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="13477" y="2444.5"/><ellipse cx="13582.75" cy="2460.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M13581.9834,2461.563 Q13580.1323,2460.8574 13579.4766,2460.0813 Q13578.8208,2459.3052 13578.8208,2457.9937 Q13578.8208,2456.3086 13579.8999,2455.3457 Q13580.979,2454.3828 13582.8633,2454.3828 Q13583.7183,2454.3828 13584.5732,2454.5779 Q13585.4282,2454.7729 13586.2666,2455.1548 L13586.2666,2457.5454 Q13585.478,2456.9893 13584.6646,2456.6987 Q13583.8511,2456.4082 13583.0542,2456.4082 Q13582.166,2456.4082 13581.6929,2456.7651 Q13581.2197,2457.1221 13581.2197,2457.7861 Q13581.2197,2458.3008 13581.5642,2458.637 Q13581.9087,2458.9731 13583.0044,2459.3799 L13584.0586,2459.7783 Q13585.5527,2460.3262 13586.2583,2461.231 Q13586.9639,2462.1357 13586.9639,2463.5137 Q13586.9639,2465.3896 13585.8557,2466.3152 Q13584.7476,2467.2407 13582.5063,2467.2407 Q13581.585,2467.2407 13580.6594,2467.0208 Q13579.7339,2466.8008 13578.8706,2466.3691 L13578.8706,2463.8374 Q13579.8501,2464.5347 13580.7673,2464.875 Q13581.6846,2465.2153 13582.5811,2465.2153 Q13583.4858,2465.2153 13583.9839,2464.8044 Q13584.4819,2464.3936 13584.4819,2463.6548 Q13584.4819,2463.0986 13584.1499,2462.6794 Q13583.8179,2462.2603 13583.187,2462.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="13603.25" y="2465.0352">SetConfigExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13478" x2="13776" y1="2476.5" y2="2476.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13485" y="2484.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="13497" y="2491.1348">p *core.SetConfig</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13485" y="2497.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="13497" y="2504.0898">jsonBody string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13478" x2="13776" y1="2510.4102" y2="2510.4102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13485" y="2518.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="13497" y="2525.0449">doRequest(url string) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="13500" y="2538"/><ellipse cx="13488" cy="2547.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="13497" y="2550.9551">Open(ctx context.Context) error</text><ellipse cx="13488" cy="2560.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="13497" y="2563.9102">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[f8d09aea85746e9e4369d6194c855efb]
class executor.SetExecutor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="164.5957" id="executor.SetExecutor" style="stroke: #A80036; stroke-width: 1.5;" width="500" x="13812" y="2425"/><ellipse cx="14024.25" cy="2441" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M14023.4834,2442.063 Q14021.6323,2441.3574 14020.9766,2440.5813 Q14020.3208,2439.8052 14020.3208,2438.4937 Q14020.3208,2436.8086 14021.3999,2435.8457 Q14022.479,2434.8828 14024.3633,2434.8828 Q14025.2183,2434.8828 14026.0732,2435.0779 Q14026.9282,2435.2729 14027.7666,2435.6548 L14027.7666,2438.0454 Q14026.978,2437.4893 14026.1646,2437.1987 Q14025.3511,2436.9082 14024.5542,2436.9082 Q14023.666,2436.9082 14023.1929,2437.2651 Q14022.7197,2437.6221 14022.7197,2438.2861 Q14022.7197,2438.8008 14023.0642,2439.137 Q14023.4087,2439.4731 14024.5044,2439.8799 L14025.5586,2440.2783 Q14027.0527,2440.8262 14027.7583,2441.731 Q14028.4639,2442.6357 14028.4639,2444.0137 Q14028.4639,2445.8896 14027.3557,2446.8152 Q14026.2476,2447.7407 14024.0063,2447.7407 Q14023.085,2447.7407 14022.1594,2447.5208 Q14021.2339,2447.3008 14020.3706,2446.8691 L14020.3706,2444.3374 Q14021.3501,2445.0347 14022.2673,2445.375 Q14023.1846,2445.7153 14024.0811,2445.7153 Q14024.9858,2445.7153 14025.4839,2445.3044 Q14025.9819,2444.8936 14025.9819,2444.1548 Q14025.9819,2443.5986 14025.6499,2443.1794 Q14025.3179,2442.7603 14024.687,2442.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="14044.75" y="2445.5352">SetExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13813" x2="14311" y1="2457" y2="2457"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13820" y="2465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="13832" y="2471.6348">vars []*expression.VarAssignment</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13820" y="2477.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="13832" y="2484.5898">done bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13813" x2="14311" y1="2490.9102" y2="2490.9102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13820" y="2498.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="13832" y="2505.5449">getSynonyms(varName string) []string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13820" y="2511.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="13832" y="2518.5">setSysVariable(name string, v *expression.VarAssignment) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13820" y="2524.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="13832" y="2531.4551">setCharset(cs string, co string) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13820" y="2537.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="474" x="13832" y="2544.4102">getVarValue(v *expression.VarAssignment, sysVar *variable.SysVar) (types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13820" y="2550.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="13832" y="2557.3652">loadSnapshotInfoSchemaIfNeeded(name string) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="13835" y="2570.3203"/><ellipse cx="13823" cy="2579.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="13832" y="2583.2754">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[7e4a5bb08c2cc77acef34f781fc1aa8c]
class executor.ShowDDLExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.ShowDDLExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="14347" y="2451"/><ellipse cx="14452.75" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M14451.9834,2468.063 Q14450.1323,2467.3574 14449.4766,2466.5813 Q14448.8208,2465.8052 14448.8208,2464.4937 Q14448.8208,2462.8086 14449.8999,2461.8457 Q14450.979,2460.8828 14452.8633,2460.8828 Q14453.7183,2460.8828 14454.5732,2461.0779 Q14455.4282,2461.2729 14456.2666,2461.6548 L14456.2666,2464.0454 Q14455.478,2463.4893 14454.6646,2463.1987 Q14453.8511,2462.9082 14453.0542,2462.9082 Q14452.166,2462.9082 14451.6929,2463.2651 Q14451.2197,2463.6221 14451.2197,2464.2861 Q14451.2197,2464.8008 14451.5642,2465.137 Q14451.9087,2465.4731 14453.0044,2465.8799 L14454.0586,2466.2783 Q14455.5527,2466.8262 14456.2583,2467.731 Q14456.9639,2468.6357 14456.9639,2470.0137 Q14456.9639,2471.8896 14455.8557,2472.8152 Q14454.7476,2473.7407 14452.5063,2473.7407 Q14451.585,2473.7407 14450.6594,2473.5208 Q14449.7339,2473.3008 14448.8706,2472.8691 L14448.8706,2470.3374 Q14449.8501,2471.0347 14450.7673,2471.375 Q14451.6846,2471.7153 14452.5811,2471.7153 Q14453.4858,2471.7153 14453.9839,2471.3044 Q14454.4819,2470.8936 14454.4819,2470.1548 Q14454.4819,2469.5986 14454.1499,2469.1794 Q14453.8179,2468.7603 14453.187,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="14473.25" y="2471.5352">ShowDDLExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="14348" x2="14646" y1="2483" y2="2483"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14355" y="2491"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="14367" y="2497.6348">ddlOwnerID string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14355" y="2503.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="14367" y="2510.5898">selfID string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14355" y="2516.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="14367" y="2523.5449">ddlInfo *admin.DDLInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14355" y="2529.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="14367" y="2536.5">done bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="14348" x2="14646" y1="2542.8203" y2="2542.8203"/><ellipse cx="14358" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="14367" y="2557.4551">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[6cbb16bf63e8eec6c8e4ecb680137e01]
class executor.ShowDDLJobQueriesExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.ShowDDLJobQueriesExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="14682" y="2451"/><ellipse cx="14756.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M14755.4834,2468.063 Q14753.6323,2467.3574 14752.9766,2466.5813 Q14752.3208,2465.8052 14752.3208,2464.4937 Q14752.3208,2462.8086 14753.3999,2461.8457 Q14754.479,2460.8828 14756.3633,2460.8828 Q14757.2183,2460.8828 14758.0732,2461.0779 Q14758.9282,2461.2729 14759.7666,2461.6548 L14759.7666,2464.0454 Q14758.978,2463.4893 14758.1646,2463.1987 Q14757.3511,2462.9082 14756.5542,2462.9082 Q14755.666,2462.9082 14755.1929,2463.2651 Q14754.7197,2463.6221 14754.7197,2464.2861 Q14754.7197,2464.8008 14755.0642,2465.137 Q14755.4087,2465.4731 14756.5044,2465.8799 L14757.5586,2466.2783 Q14759.0527,2466.8262 14759.7583,2467.731 Q14760.4639,2468.6357 14760.4639,2470.0137 Q14760.4639,2471.8896 14759.3557,2472.8152 Q14758.2476,2473.7407 14756.0063,2473.7407 Q14755.085,2473.7407 14754.1594,2473.5208 Q14753.2339,2473.3008 14752.3706,2472.8691 L14752.3706,2470.3374 Q14753.3501,2471.0347 14754.2673,2471.375 Q14755.1846,2471.7153 14756.0811,2471.7153 Q14756.9858,2471.7153 14757.4839,2471.3044 Q14757.9819,2470.8936 14757.9819,2470.1548 Q14757.9819,2469.5986 14757.6499,2469.1794 Q14757.3179,2468.7603 14756.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="143" x="14776.75" y="2471.5352">ShowDDLJobQueriesExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="14683" x2="14981" y1="2483" y2="2483"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14690" y="2491"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="14702" y="2497.6348">cursor int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14690" y="2503.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="14702" y="2510.5898">jobs []*model.Job</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14690" y="2516.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="14702" y="2523.5449">jobIDs []int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="14683" x2="14981" y1="2529.8652" y2="2529.8652"/><ellipse cx="14693" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="14702" y="2544.5">Open(ctx context.Context) error</text><ellipse cx="14693" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="14702" y="2557.4551">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[9f516548496439f380aa6a15f859e760]
class executor.ShowDDLJobsExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.ShowDDLJobsExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="20518" y="2451"/><ellipse cx="20611.25" cy="2467" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M20610.4834,2468.063 Q20608.6323,2467.3574 20607.9766,2466.5813 Q20607.3208,2465.8052 20607.3208,2464.4937 Q20607.3208,2462.8086 20608.3999,2461.8457 Q20609.479,2460.8828 20611.3633,2460.8828 Q20612.2183,2460.8828 20613.0732,2461.0779 Q20613.9282,2461.2729 20614.7666,2461.6548 L20614.7666,2464.0454 Q20613.978,2463.4893 20613.1646,2463.1987 Q20612.3511,2462.9082 20611.5542,2462.9082 Q20610.666,2462.9082 20610.1929,2463.2651 Q20609.7197,2463.6221 20609.7197,2464.2861 Q20609.7197,2464.8008 20610.0642,2465.137 Q20610.4087,2465.4731 20611.5044,2465.8799 L20612.5586,2466.2783 Q20614.0527,2466.8262 20614.7583,2467.731 Q20615.4639,2468.6357 20615.4639,2470.0137 Q20615.4639,2471.8896 20614.3557,2472.8152 Q20613.2476,2473.7407 20611.0063,2473.7407 Q20610.085,2473.7407 20609.1594,2473.5208 Q20608.2339,2473.3008 20607.3706,2472.8691 L20607.3706,2470.3374 Q20608.3501,2471.0347 20609.2673,2471.375 Q20610.1846,2471.7153 20611.0811,2471.7153 Q20611.9858,2471.7153 20612.4839,2471.3044 Q20612.9819,2470.8936 20612.9819,2470.1548 Q20612.9819,2469.5986 20612.6499,2469.1794 Q20612.3179,2468.7603 20611.687,2468.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="20631.75" y="2471.5352">ShowDDLJobsExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20519" x2="20817" y1="2483" y2="2483"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20526" y="2491"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="20538" y="2497.6348">jobNumber int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20526" y="2503.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="20538" y="2510.5898">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20526" y="2516.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="20538" y="2523.5449">done bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20519" x2="20817" y1="2529.8652" y2="2529.8652"/><ellipse cx="20529" cy="2540.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="20538" y="2544.5">Open(ctx context.Context) error</text><ellipse cx="20529" cy="2553.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="20538" y="2557.4551">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[dc163573d71170892567a3282a78be7e]
class executor.ShowExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="903.0352" id="executor.ShowExec" style="stroke: #A80036; stroke-width: 1.5;" width="796" x="15017" y="2056"/><ellipse cx="15382.75" cy="2072" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M15381.9834,2073.063 Q15380.1323,2072.3574 15379.4766,2071.5813 Q15378.8208,2070.8052 15378.8208,2069.4937 Q15378.8208,2067.8086 15379.8999,2066.8457 Q15380.979,2065.8828 15382.8633,2065.8828 Q15383.7183,2065.8828 15384.5732,2066.0779 Q15385.4282,2066.2729 15386.2666,2066.6548 L15386.2666,2069.0454 Q15385.478,2068.4893 15384.6646,2068.1987 Q15383.8511,2067.9082 15383.0542,2067.9082 Q15382.166,2067.9082 15381.6929,2068.2651 Q15381.2197,2068.6221 15381.2197,2069.2861 Q15381.2197,2069.8008 15381.5642,2070.137 Q15381.9087,2070.4731 15383.0044,2070.8799 L15384.0586,2071.2783 Q15385.5527,2071.8262 15386.2583,2072.731 Q15386.9639,2073.6357 15386.9639,2075.0137 Q15386.9639,2076.8896 15385.8557,2077.8152 Q15384.7476,2078.7407 15382.5063,2078.7407 Q15381.585,2078.7407 15380.6594,2078.5208 Q15379.7339,2078.3008 15378.8706,2077.8691 L15378.8706,2075.3374 Q15379.8501,2076.0347 15380.7673,2076.375 Q15381.6846,2076.7153 15382.5811,2076.7153 Q15383.4858,2076.7153 15383.9839,2076.3044 Q15384.4819,2075.8936 15384.4819,2075.1548 Q15384.4819,2074.5986 15384.1499,2074.1794 Q15383.8179,2073.7603 15383.187,2073.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="15403.25" y="2076.5352">ShowExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15018" x2="15812" y1="2088" y2="2088"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2096"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="15037" y="2102.6348">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2108.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="15037" y="2115.5898">result *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2121.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="15037" y="2128.5449">cursor int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="15040" y="2141.5"/><ellipse cx="15028" cy="2150.8203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="15037" y="2154.4551">Tp ast.ShowStmtType</text><ellipse cx="15028" cy="2163.7754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="15037" y="2167.4102">DBName model.CIStr</text><ellipse cx="15028" cy="2176.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="15037" y="2180.3652">Table *ast.TableName</text><ellipse cx="15028" cy="2189.6855" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="15037" y="2193.3203">Column *ast.ColumnName</text><ellipse cx="15028" cy="2202.6406" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="15037" y="2206.2754">IndexName model.CIStr</text><ellipse cx="15028" cy="2215.5957" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="15037" y="2219.2305">Flag int</text><ellipse cx="15028" cy="2228.5508" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="15037" y="2232.1855">Roles []*auth.RoleIdentity</text><ellipse cx="15028" cy="2241.5059" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="15037" y="2245.1406">User *auth.UserIdentity</text><ellipse cx="15028" cy="2254.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="15037" y="2258.0957">Full bool</text><ellipse cx="15028" cy="2267.416" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="15037" y="2271.0508">IfNotExists bool</text><ellipse cx="15028" cy="2280.3711" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="15037" y="2284.0059">GlobalScope bool</text><ellipse cx="15028" cy="2293.3262" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="15037" y="2296.9609">Extended bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15018" x2="15812" y1="2303.2813" y2="2303.2813"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2311.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="15037" y="2317.916">fetchAll(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2324.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="15037" y="2330.8711">fetchShowBind() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2337.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="15037" y="2343.8262">fetchShowEngines() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2350.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="15037" y="2356.7813">fetchShowDatabases() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2363.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="15037" y="2369.7363">fetchShowProcessList() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2376.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="15037" y="2382.6914">fetchShowOpenTables() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2389.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="15037" y="2395.6465">fetchShowTables() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2401.9668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="15037" y="2408.6016">fetchShowTableStatus() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2414.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="15037" y="2421.5566">fetchShowColumns(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2427.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="15037" y="2434.5117">fetchShowIndex() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2440.832"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="15037" y="2447.4668">fetchShowCharset() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2453.7871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="15037" y="2460.4219">fetchShowMasterStatus() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2466.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="15037" y="2473.377">fetchShowVariables() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2479.6973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="15037" y="2486.332">fetchShowStatus() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2492.6523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="15037" y="2499.2871">fetchShowCreateSequence() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2505.6074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="15037" y="2512.2422">fetchShowClusterConfigs(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2518.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="15037" y="2525.1973">fetchShowCreateTable() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2531.5176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="15037" y="2538.1523">fetchShowCreateView() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2544.4727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="15037" y="2551.1074">fetchShowCreateDatabase() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2557.4277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="15037" y="2564.0625">fetchShowCollation() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2570.3828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="15037" y="2577.0176">fetchShowCreateUser() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2583.3379"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="15037" y="2589.9727">fetchShowGrants() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2596.293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="15037" y="2602.9277">fetchShowPrivileges() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2609.248"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="15037" y="2615.8828">fetchShowTriggers() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2622.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="15037" y="2628.8379">fetchShowProcedureStatus() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2635.1582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="15037" y="2641.793">fetchShowPlugins() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2648.1133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="15037" y="2654.748">fetchShowWarnings(errOnly bool) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2661.0684"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="15037" y="2667.7031">fetchShowPumpOrDrainerStatus(kind string) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2674.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="15037" y="2680.6582">getTable() (table.Table, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2686.9785"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="15037" y="2693.6133">dbAccessDenied() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2699.9336"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="15037" y="2706.5684">tableAccessDenied(access string, table string) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2712.8887"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="15037" y="2719.5234">appendRow(row []</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="15134" y="2719.5234">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="15181" y="2719.5234">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2725.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="15037" y="2732.4785">fetchShowTableRegions() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2738.7988"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="15037" y="2745.4336">fillRegionsToChunk(regions []regionMeta)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2751.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="15037" y="2758.3887">fetchShowBuiltins() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2764.709"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="15037" y="2771.3438">fetchShowStatsMeta() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2777.6641"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="564" x="15037" y="2784.2988">appendTableForStatsMeta(dbName string, tblName string, partitionName string, statsTbl *statistics.Table)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2790.6191"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="15037" y="2797.2539">fetchShowStatsHistogram() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2803.5742"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="601" x="15037" y="2810.209">appendTableForStatsHistograms(dbName string, tblName string, partitionName string, statsTbl *statistics.Table)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2816.5293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="770" x="15037" y="2823.1641">histogramToRow(dbName string, tblName string, partitionName string, colName string, isIndex int, hist statistics.Histogram, avgColSize float64)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2829.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="15037" y="2836.1191">versionToTime(version uint64) types.Time</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2842.4395"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="15037" y="2849.0742">fetchShowStatsBuckets() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2855.3945"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="611" x="15037" y="2862.0293">appendTableForStatsBuckets(dbName string, tblName string, partitionName string, statsTbl *statistics.Table) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2868.3496"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="711" x="15037" y="2874.9844">bucketsToRows(dbName string, tblName string, partitionName string, colName string, numOfCols int, hist statistics.Histogram) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2881.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="15037" y="2887.9395">fetchShowStatsHealthy()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2894.2598"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="15037" y="2900.8945">appendTableForStatsHealthy(dbName string, tblName string, partitionName string, statsTbl *statistics.Table)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2907.2148"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="15037" y="2913.8496">fetchShowAnalyzeStatus()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15025" y="2920.1699"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="15037" y="2926.8047">fetchShowBRIE(kind ast.BRIEKind) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="15040" y="2939.7598"/><ellipse cx="15028" cy="2949.0801" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="15037" y="2952.7148">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[5543d1690876b338d74327095751342b]
class executor.ShowNextRowIDExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.ShowNextRowIDExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="15848" y="2464"/><ellipse cx="15934.25" cy="2480" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M15933.4834,2481.063 Q15931.6323,2480.3574 15930.9766,2479.5813 Q15930.3208,2478.8052 15930.3208,2477.4937 Q15930.3208,2475.8086 15931.3999,2474.8457 Q15932.479,2473.8828 15934.3633,2473.8828 Q15935.2183,2473.8828 15936.0732,2474.0779 Q15936.9282,2474.2729 15937.7666,2474.6548 L15937.7666,2477.0454 Q15936.978,2476.4893 15936.1646,2476.1987 Q15935.3511,2475.9082 15934.5542,2475.9082 Q15933.666,2475.9082 15933.1929,2476.2651 Q15932.7197,2476.6221 15932.7197,2477.2861 Q15932.7197,2477.8008 15933.0642,2478.137 Q15933.4087,2478.4731 15934.5044,2478.8799 L15935.5586,2479.2783 Q15937.0527,2479.8262 15937.7583,2480.731 Q15938.4639,2481.6357 15938.4639,2483.0137 Q15938.4639,2484.8896 15937.3557,2485.8152 Q15936.2476,2486.7407 15934.0063,2486.7407 Q15933.085,2486.7407 15932.1594,2486.5208 Q15931.2339,2486.3008 15930.3706,2485.8691 L15930.3706,2483.3374 Q15931.3501,2484.0347 15932.2673,2484.375 Q15933.1846,2484.7153 15934.0811,2484.7153 Q15934.9858,2484.7153 15935.4839,2484.3044 Q15935.9819,2483.8936 15935.9819,2483.1548 Q15935.9819,2482.5986 15935.6499,2482.1794 Q15935.3179,2481.7603 15934.687,2481.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="15954.75" y="2484.5352">ShowNextRowIDExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15849" x2="16147" y1="2496" y2="2496"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15856" y="2504"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="15868" y="2510.6348">tblName *ast.TableName</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15856" y="2516.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="15868" y="2523.5898">done bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15849" x2="16147" y1="2529.9102" y2="2529.9102"/><ellipse cx="15859" cy="2540.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="15868" y="2544.5449">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[27ef22b9ab955fe21413acd0f42e9808]
class executor.ShowSlowExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.ShowSlowExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="16183" y="2444.5"/><ellipse cx="16288.25" cy="2460.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M16287.4834,2461.563 Q16285.6323,2460.8574 16284.9766,2460.0813 Q16284.3208,2459.3052 16284.3208,2457.9937 Q16284.3208,2456.3086 16285.3999,2455.3457 Q16286.479,2454.3828 16288.3633,2454.3828 Q16289.2183,2454.3828 16290.0732,2454.5779 Q16290.9282,2454.7729 16291.7666,2455.1548 L16291.7666,2457.5454 Q16290.978,2456.9893 16290.1646,2456.6987 Q16289.3511,2456.4082 16288.5542,2456.4082 Q16287.666,2456.4082 16287.1929,2456.7651 Q16286.7197,2457.1221 16286.7197,2457.7861 Q16286.7197,2458.3008 16287.0642,2458.637 Q16287.4087,2458.9731 16288.5044,2459.3799 L16289.5586,2459.7783 Q16291.0527,2460.3262 16291.7583,2461.231 Q16292.4639,2462.1357 16292.4639,2463.5137 Q16292.4639,2465.3896 16291.3557,2466.3152 Q16290.2476,2467.2407 16288.0063,2467.2407 Q16287.085,2467.2407 16286.1594,2467.0208 Q16285.2339,2466.8008 16284.3706,2466.3691 L16284.3706,2463.8374 Q16285.3501,2464.5347 16286.2673,2464.875 Q16287.1846,2465.2153 16288.0811,2465.2153 Q16288.9858,2465.2153 16289.4839,2464.8044 Q16289.9819,2464.3936 16289.9819,2463.6548 Q16289.9819,2463.0986 16289.6499,2462.6794 Q16289.3179,2462.2603 16288.687,2462.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="16308.75" y="2465.0352">ShowSlowExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16184" x2="16482" y1="2476.5" y2="2476.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16191" y="2484.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="16203" y="2491.1348">result []*domain.SlowQueryInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16191" y="2497.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="16203" y="2504.0898">cursor int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="16206" y="2517.0449"/><ellipse cx="16194" cy="2526.3652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="16203" y="2530">ShowSlow *ast.ShowSlow</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16184" x2="16482" y1="2536.3203" y2="2536.3203"/><ellipse cx="16194" cy="2547.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="16203" y="2550.9551">Open(ctx context.Context) error</text><ellipse cx="16194" cy="2560.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="16203" y="2563.9102">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[7a24ddd99029bc9f4fa9cc0422d16677]
class executor.ShuffleExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="242.3262" id="executor.ShuffleExec" style="stroke: #A80036; stroke-width: 1.5;" width="330" x="21916" y="2386.5"/><ellipse cx="22044.25" cy="2402.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22043.4834,2403.563 Q22041.6323,2402.8574 22040.9766,2402.0813 Q22040.3208,2401.3052 22040.3208,2399.9937 Q22040.3208,2398.3086 22041.3999,2397.3457 Q22042.479,2396.3828 22044.3633,2396.3828 Q22045.2183,2396.3828 22046.0732,2396.5779 Q22046.9282,2396.7729 22047.7666,2397.1548 L22047.7666,2399.5454 Q22046.978,2398.9893 22046.1646,2398.6987 Q22045.3511,2398.4082 22044.5542,2398.4082 Q22043.666,2398.4082 22043.1929,2398.7651 Q22042.7197,2399.1221 22042.7197,2399.7861 Q22042.7197,2400.3008 22043.0642,2400.637 Q22043.4087,2400.9731 22044.5044,2401.3799 L22045.5586,2401.7783 Q22047.0527,2402.3262 22047.7583,2403.231 Q22048.4639,2404.1357 22048.4639,2405.5137 Q22048.4639,2407.3896 22047.3557,2408.3152 Q22046.2476,2409.2407 22044.0063,2409.2407 Q22043.085,2409.2407 22042.1594,2409.0208 Q22041.2339,2408.8008 22040.3706,2408.3691 L22040.3706,2405.8374 Q22041.3501,2406.5347 22042.2673,2406.875 Q22043.1846,2407.2153 22044.0811,2407.2153 Q22044.9858,2407.2153 22045.4839,2406.8044 Q22045.9819,2406.3936 22045.9819,2405.6548 Q22045.9819,2405.0986 22045.6499,2404.6794 Q22045.3179,2404.2603 22044.687,2404.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="22064.75" y="2407.0352">ShuffleExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21917" x2="22245" y1="2418.5" y2="2418.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2426.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="21936" y="2433.1348">concurrency int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2439.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="21936" y="2446.0898">workers []*shuffleWorker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2452.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="21936" y="2459.0449">prepared bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2465.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="21936" y="2472">executed bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2478.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="21936" y="2484.9551">splitter partitionSplitter</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2491.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="21936" y="2497.9102">dataSource Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2504.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="21936" y="2510.8652">finishCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="21984" y="2510.8652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="22013" y="2510.8652"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="22013" y="2510.8652">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="22045" y="2510.8652">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2517.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="21936" y="2523.8203">outputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="21990" y="2523.8203">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="22019" y="2523.8203">*shuffleOutput</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21917" x2="22245" y1="2530.1406" y2="2530.1406"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2538.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="21936" y="2544.7754">prepare4ParallelExec(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2551.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="21936" y="2557.7305">waitWorkerAndCloseOutput(waitGroup *sync.WaitGroup)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21924" y="2564.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="21936" y="2570.6855">fetchDataAndSplit(ctx context.Context)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="21939" y="2583.6406"/><ellipse cx="21927" cy="2592.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="21936" y="2596.5957">Open(ctx context.Context) error</text><ellipse cx="21927" cy="2605.916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="21936" y="2609.5508">Close() error</text><ellipse cx="21927" cy="2618.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="21936" y="2622.5059">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[b44e493094e26bfcd3e9420d9b41209e]
class executor.SimpleExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="488.4727" id="executor.SimpleExec" style="stroke: #A80036; stroke-width: 1.5;" width="397" x="16841.5" y="2263.5"/><ellipse cx="17003.25" cy="2279.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M17002.4834,2280.563 Q17000.6323,2279.8574 16999.9766,2279.0813 Q16999.3208,2278.3052 16999.3208,2276.9937 Q16999.3208,2275.3086 17000.3999,2274.3457 Q17001.479,2273.3828 17003.3633,2273.3828 Q17004.2183,2273.3828 17005.0732,2273.5779 Q17005.9282,2273.7729 17006.7666,2274.1548 L17006.7666,2276.5454 Q17005.978,2275.9893 17005.1646,2275.6987 Q17004.3511,2275.4082 17003.5542,2275.4082 Q17002.666,2275.4082 17002.1929,2275.7651 Q17001.7197,2276.1221 17001.7197,2276.7861 Q17001.7197,2277.3008 17002.0642,2277.637 Q17002.4087,2277.9731 17003.5044,2278.3799 L17004.5586,2278.7783 Q17006.0527,2279.3262 17006.7583,2280.231 Q17007.4639,2281.1357 17007.4639,2282.5137 Q17007.4639,2284.3896 17006.3557,2285.3152 Q17005.2476,2286.2407 17003.0063,2286.2407 Q17002.085,2286.2407 17001.1594,2286.0208 Q17000.2339,2285.8008 16999.3706,2285.3691 L16999.3706,2282.8374 Q17000.3501,2283.5347 17001.2673,2283.875 Q17002.1846,2284.2153 17003.0811,2284.2153 Q17003.9858,2284.2153 17004.4839,2283.8044 Q17004.9819,2283.3936 17004.9819,2282.6548 Q17004.9819,2282.0986 17004.6499,2281.6794 Q17004.3179,2281.2603 17003.687,2281.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="17023.75" y="2284.0352">SimpleExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16842.5" x2="17237.5" y1="2295.5" y2="2295.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2303.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="16861.5" y="2310.1348">done bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2316.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="16861.5" y="2323.0898">is infoschema.InfoSchema</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="16864.5" y="2336.0449"/><ellipse cx="16852.5" cy="2345.3652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="16861.5" y="2349">Statement ast.StmtNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16842.5" x2="17237.5" y1="2355.3203" y2="2355.3203"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2363.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="16861.5" y="2369.9551">setDefaultRoleNone(s *ast.SetDefaultRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2376.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="16861.5" y="2382.9102">setDefaultRoleRegular(s *ast.SetDefaultRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2389.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="16861.5" y="2395.8652">setDefaultRoleAll(s *ast.SetDefaultRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2402.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="16861.5" y="2408.8203">setDefaultRoleForCurrentUser(s *ast.SetDefaultRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2415.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="16861.5" y="2421.7754">executeSetDefaultRole(s *ast.SetDefaultRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2428.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="16861.5" y="2434.7305">setRoleRegular(s *ast.SetRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2441.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="16861.5" y="2447.6855">setRoleAll(s *ast.SetRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2454.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="16861.5" y="2460.6406">setRoleAllExcept(s *ast.SetRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2466.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="16861.5" y="2473.5957">setRoleDefault(s *ast.SetRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2479.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="16861.5" y="2486.5508">setRoleNone(s *ast.SetRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2492.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="16861.5" y="2499.5059">executeSetRole(s *ast.SetRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2505.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="16861.5" y="2512.4609">dbAccessDenied(dbname string) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2518.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="16861.5" y="2525.416">executeUse(s *ast.UseStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2531.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="16861.5" y="2538.3711">executeBegin(ctx context.Context, s *ast.BeginStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2544.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="16861.5" y="2551.3262">executeRevokeRole(s *ast.RevokeRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2557.6465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="16861.5" y="2564.2813">executeCommit(s *ast.CommitStmt)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2570.6016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="16861.5" y="2577.2363">executeRollback(s *ast.RollbackStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2583.5566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="16861.5" y="2590.1914">executeCreateUser(ctx context.Context, s *ast.CreateUserStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2596.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="16861.5" y="2603.1465">executeAlterUser(s *ast.AlterUserStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2609.4668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="16861.5" y="2616.1016">executeGrantRole(s *ast.GrantRoleStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2622.4219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="16861.5" y="2629.0566">executeDropUser(s *ast.DropUserStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2635.377"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="16861.5" y="2642.0117">executeSetPwd(s *ast.SetPwdStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2648.332"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="16861.5" y="2654.9668">executeKillStmt(s *ast.KillStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2661.2871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="16861.5" y="2667.9219">executeFlush(s *ast.FlushStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2674.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="16861.5" y="2680.877">executeAlterInstance(s *ast.AlterInstanceStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2687.1973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="16861.5" y="2693.832">executeDropStats(s *ast.DropStatsStmt) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2700.1523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="16861.5" y="2706.7871">autoNewTxn() bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16849.5" y="2713.1074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="16861.5" y="2719.7422">executeShutdown(s *ast.ShutdownStmt) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="16864.5" y="2732.6973"/><ellipse cx="16852.5" cy="2742.0176" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="16861.5" y="2745.6523">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[c3657c0d2cccd6dfe513a43fb0e3ea50]
class executor.SortExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="358.9219" id="executor.SortExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="33520" y="2328"/><ellipse cx="33641.25" cy="2344" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33640.4834,2345.063 Q33638.6323,2344.3574 33637.9766,2343.5813 Q33637.3208,2342.8052 33637.3208,2341.4937 Q33637.3208,2339.8086 33638.3999,2338.8457 Q33639.479,2337.8828 33641.3633,2337.8828 Q33642.2183,2337.8828 33643.0732,2338.0779 Q33643.9282,2338.2729 33644.7666,2338.6548 L33644.7666,2341.0454 Q33643.978,2340.4893 33643.1646,2340.1987 Q33642.3511,2339.9082 33641.5542,2339.9082 Q33640.666,2339.9082 33640.1929,2340.2651 Q33639.7197,2340.6221 33639.7197,2341.2861 Q33639.7197,2341.8008 33640.0642,2342.137 Q33640.4087,2342.4731 33641.5044,2342.8799 L33642.5586,2343.2783 Q33644.0527,2343.8262 33644.7583,2344.731 Q33645.4639,2345.6357 33645.4639,2347.0137 Q33645.4639,2348.8896 33644.3557,2349.8152 Q33643.2476,2350.7407 33641.0063,2350.7407 Q33640.085,2350.7407 33639.1594,2350.5208 Q33638.2339,2350.3008 33637.3706,2349.8691 L33637.3706,2347.3374 Q33638.3501,2348.0347 33639.2673,2348.375 Q33640.1846,2348.7153 33641.0811,2348.7153 Q33641.9858,2348.7153 33642.4839,2348.3044 Q33642.9819,2347.8936 33642.9819,2347.1548 Q33642.9819,2346.5986 33642.6499,2346.1794 Q33642.3179,2345.7603 33641.687,2345.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="33661.75" y="2348.5352">SortExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33521" x2="33819" y1="2360" y2="2360"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2368"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="33540" y="2374.6348">fetched bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2380.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="33540" y="2387.5898">schema *expression.Schema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2393.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="33540" y="2400.5449">keyExprs []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2406.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="33540" y="2413.5">keyTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2419.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="33540" y="2426.4551">keyColumns []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2432.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="33540" y="2439.4102">keyCmpFuncs []chunk.CompareFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2445.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="33540" y="2452.3652">rowChunks *chunk.SortedRowContainer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2458.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="33540" y="2465.3203">memTracker *memory.Tracker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2471.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="33540" y="2478.2754">diskTracker *disk.Tracker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2484.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="33540" y="2491.2305">partitionList []*chunk.SortedRowContainer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2497.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="33540" y="2504.1855">multiWayMerge *multiWayMerge</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2510.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="33540" y="2517.1406">spillAction *chunk.SortAndSpillDiskAction</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="33543" y="2530.0957"/><ellipse cx="33531" cy="2539.416" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="33540" y="2543.0508">ByItems []*util.ByItems</text><ellipse cx="33531" cy="2552.3711" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="33540" y="2556.0059">Idx int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33521" x2="33819" y1="2562.3262" y2="2562.3262"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2570.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="33540" y="2576.9609">externalSorting(req *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2583.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="33540" y="2589.916">fetchRowChunks(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2596.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="33540" y="2602.8711">initCompareFuncs()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2609.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="33540" y="2615.8262">buildKeyColumns()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33528" y="2622.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="33540" y="2628.7813">lessRow(rowI chunk.Row, rowJ chunk.Row) bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="33543" y="2641.7363"/><ellipse cx="33531" cy="2651.0566" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="33540" y="2654.6914">Close() error</text><ellipse cx="33531" cy="2664.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="33540" y="2667.6465">Open(ctx context.Context) error</text><ellipse cx="33531" cy="2676.9668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="33540" y="2680.6016">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[292be579a1361af56f2bb3d1842efcc8]
class executor.SplitIndexRegionExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="294.1465" id="executor.SplitIndexRegionExec" style="stroke: #A80036; stroke-width: 1.5;" width="477" x="4139.5" y="2360.5"/><ellipse cx="4312.75" cy="2376.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4311.9834,2377.563 Q4310.1323,2376.8574 4309.4766,2376.0813 Q4308.8208,2375.3052 4308.8208,2373.9937 Q4308.8208,2372.3086 4309.8999,2371.3457 Q4310.979,2370.3828 4312.8633,2370.3828 Q4313.7183,2370.3828 4314.5732,2370.5779 Q4315.4282,2370.7729 4316.2666,2371.1548 L4316.2666,2373.5454 Q4315.478,2372.9893 4314.6646,2372.6987 Q4313.8511,2372.4082 4313.0542,2372.4082 Q4312.166,2372.4082 4311.6929,2372.7651 Q4311.2197,2373.1221 4311.2197,2373.7861 Q4311.2197,2374.3008 4311.5642,2374.637 Q4311.9087,2374.9731 4313.0044,2375.3799 L4314.0586,2375.7783 Q4315.5527,2376.3262 4316.2583,2377.231 Q4316.9639,2378.1357 4316.9639,2379.5137 Q4316.9639,2381.3896 4315.8557,2382.3152 Q4314.7476,2383.2407 4312.5063,2383.2407 Q4311.585,2383.2407 4310.6594,2383.0208 Q4309.7339,2382.8008 4308.8706,2382.3691 L4308.8706,2379.8374 Q4309.8501,2380.5347 4310.7673,2380.875 Q4311.6846,2381.2153 4312.5811,2381.2153 Q4313.4858,2381.2153 4313.9839,2380.8044 Q4314.4819,2380.3936 4314.4819,2379.6548 Q4314.4819,2379.0986 4314.1499,2378.6794 Q4313.8179,2378.2603 4313.187,2378.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="4333.25" y="2381.0352">SplitIndexRegionExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4140.5" x2="4615.5" y1="2392.5" y2="2392.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2400.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4159.5" y="2407.1348">tableInfo *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2413.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4159.5" y="2420.0898">partitionNames []model.CIStr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2426.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4159.5" y="2433.0449">indexInfo *model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2439.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4159.5" y="2446">lower []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2452.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4159.5" y="2458.9551">upper []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2465.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="4159.5" y="2471.9102">num int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2478.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="4159.5" y="2484.8652">valueLists [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2491.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4159.5" y="2497.8203">splitIdxKeys [][]byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2504.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="4159.5" y="2510.7754">done bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4140.5" x2="4615.5" y1="2517.0957" y2="2517.0957"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2525.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="4159.5" y="2531.7305">splitIndexRegion(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2538.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4159.5" y="2544.6855">getSplitIdxKeys() ([][]byte, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2551.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="4159.5" y="2557.6406">getSplitIdxKeysFromValueList() ([][]byte, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2563.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="4159.5" y="2570.5957">getSplitIdxPhysicalKeysFromValueList(physicalID int64, keys [][]byte) ([][]byte, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2576.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="428" x="4159.5" y="2583.5508">getSplitIdxPhysicalStartAndOtherIdxKeys(physicalID int64, keys [][]byte) [][]byte</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2589.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="4159.5" y="2596.5059">getSplitIdxKeysFromBound() ([][]byte, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4147.5" y="2602.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="4159.5" y="2609.4609">getSplitIdxPhysicalKeysFromBound(physicalID int64, keys [][]byte) ([][]byte, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="4162.5" y="2622.416"/><ellipse cx="4150.5" cy="2631.7363" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4159.5" y="2635.3711">Open(ctx context.Context) error</text><ellipse cx="4150.5" cy="2644.6914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="4159.5" y="2648.3262">Next(ctx context.Context, chk *chunk.Chunk) error</text><!--MD5=[3b568b5571f977b8380a1ed598e41360]
class executor.SplitTableRegionExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="281.1914" id="executor.SplitTableRegionExec" style="stroke: #A80036; stroke-width: 1.5;" width="548" x="3556" y="2367"/><ellipse cx="3764.25" cy="2383" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3763.4834,2384.063 Q3761.6323,2383.3574 3760.9766,2382.5813 Q3760.3208,2381.8052 3760.3208,2380.4937 Q3760.3208,2378.8086 3761.3999,2377.8457 Q3762.479,2376.8828 3764.3633,2376.8828 Q3765.2183,2376.8828 3766.0732,2377.0779 Q3766.9282,2377.2729 3767.7666,2377.6548 L3767.7666,2380.0454 Q3766.978,2379.4893 3766.1646,2379.1987 Q3765.3511,2378.9082 3764.5542,2378.9082 Q3763.666,2378.9082 3763.1929,2379.2651 Q3762.7197,2379.6221 3762.7197,2380.2861 Q3762.7197,2380.8008 3763.0642,2381.137 Q3763.4087,2381.4731 3764.5044,2381.8799 L3765.5586,2382.2783 Q3767.0527,2382.8262 3767.7583,2383.731 Q3768.4639,2384.6357 3768.4639,2386.0137 Q3768.4639,2387.8896 3767.3557,2388.8152 Q3766.2476,2389.7407 3764.0063,2389.7407 Q3763.085,2389.7407 3762.1594,2389.5208 Q3761.2339,2389.3008 3760.3706,2388.8691 L3760.3706,2386.3374 Q3761.3501,2387.0347 3762.2673,2387.375 Q3763.1846,2387.7153 3764.0811,2387.7153 Q3764.9858,2387.7153 3765.4839,2387.3044 Q3765.9819,2386.8936 3765.9819,2386.1548 Q3765.9819,2385.5986 3765.6499,2385.1794 Q3765.3179,2384.7603 3764.687,2384.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="123" x="3784.75" y="2387.5352">SplitTableRegionExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3557" x2="4103" y1="2399" y2="2399"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2407"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3576" y="2413.6348">tableInfo *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2419.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3576" y="2426.5898">partitionNames []model.CIStr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2432.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3576" y="2439.5449">lower types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2445.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="3576" y="2452.5">upper types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2458.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="3576" y="2465.4551">num int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2471.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="3576" y="2478.4102">valueLists [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2484.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3576" y="2491.3652">splitKeys [][]byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2497.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="3576" y="2504.3203">done bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3557" x2="4103" y1="2510.6406" y2="2510.6406"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2518.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="3576" y="2525.2754">splitTableRegion(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2531.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="3576" y="2538.2305">getSplitTableKeys() ([][]byte, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2544.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="3576" y="2551.1855">getSplitTableKeysFromValueList() ([][]byte, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2557.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="3576" y="2564.1406">getSplitTablePhysicalKeysFromValueList(physicalID int64, keys [][]byte) [][]byte</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2570.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="3576" y="2577.0957">getSplitTableKeysFromBound() ([][]byte, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2583.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="3576" y="2590.0508">calculateBoundValue() (int64, int64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3564" y="2596.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="522" x="3576" y="2603.0059">getSplitTablePhysicalKeysFromBound(physicalID int64, low int64, step int64, keys [][]byte) [][]byte</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="3579" y="2615.9609"/><ellipse cx="3567" cy="2625.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3576" y="2628.916">Open(ctx context.Context) error</text><ellipse cx="3567" cy="2638.2363" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="3576" y="2641.8711">Next(ctx context.Context, chk *chunk.Chunk) error</text><!--MD5=[09ab7ea505dce31a44376b5613ea34a6]
class executor.StreamAggExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="294.1465" id="executor.StreamAggExec" style="stroke: #A80036; stroke-width: 1.5;" width="486" x="23062" y="2360.5"/><ellipse cx="23256.25" cy="2376.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23255.4834,2377.563 Q23253.6323,2376.8574 23252.9766,2376.0813 Q23252.3208,2375.3052 23252.3208,2373.9937 Q23252.3208,2372.3086 23253.3999,2371.3457 Q23254.479,2370.3828 23256.3633,2370.3828 Q23257.2183,2370.3828 23258.0732,2370.5779 Q23258.9282,2370.7729 23259.7666,2371.1548 L23259.7666,2373.5454 Q23258.978,2372.9893 23258.1646,2372.6987 Q23257.3511,2372.4082 23256.5542,2372.4082 Q23255.666,2372.4082 23255.1929,2372.7651 Q23254.7197,2373.1221 23254.7197,2373.7861 Q23254.7197,2374.3008 23255.0642,2374.637 Q23255.4087,2374.9731 23256.5044,2375.3799 L23257.5586,2375.7783 Q23259.0527,2376.3262 23259.7583,2377.231 Q23260.4639,2378.1357 23260.4639,2379.5137 Q23260.4639,2381.3896 23259.3557,2382.3152 Q23258.2476,2383.2407 23256.0063,2383.2407 Q23255.085,2383.2407 23254.1594,2383.0208 Q23253.2339,2382.8008 23252.3706,2382.3691 L23252.3706,2379.8374 Q23253.3501,2380.5347 23254.2673,2380.875 Q23255.1846,2381.2153 23256.0811,2381.2153 Q23256.9858,2381.2153 23257.4839,2380.8044 Q23257.9819,2380.3936 23257.9819,2379.6548 Q23257.9819,2379.0986 23257.6499,2378.6794 Q23257.3179,2378.2603 23256.687,2378.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="23276.75" y="2381.0352">StreamAggExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23063" x2="23547" y1="2392.5" y2="2392.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2400.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="23082" y="2407.1348">executed bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2413.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="23082" y="2420.0898">isChildReturnEmpty bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2426.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="23082" y="2433.0449">defaultVal *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2439.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="23082" y="2446">groupChecker *vecGroupChecker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2452.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="23082" y="2458.9551">inputIter *chunk.Iterator4Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2465.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="23082" y="2471.9102">inputRow chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2478.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="23082" y="2484.8652">aggFuncs []aggfuncs.AggFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2491.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="23082" y="2497.8203">partialResults []aggfuncs.PartialResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2504.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="23082" y="2510.7754">groupRows []chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2517.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="23082" y="2523.7305">childResult *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2530.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="23082" y="2536.6855">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23063" x2="23547" y1="2543.0059" y2="2543.0059"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2551.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="23082" y="2557.6406">consumeOneGroup(ctx context.Context, chk *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2563.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="23082" y="2570.5957">consumeGroupRows() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2576.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="460" x="23082" y="2583.5508">consumeCurGroupRowsAndFetchChild(ctx context.Context, chk *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23070" y="2589.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="23082" y="2596.5059">appendResult2Chunk(chk *chunk.Chunk) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="23085" y="2609.4609"/><ellipse cx="23073" cy="2618.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="23082" y="2622.416">Open(ctx context.Context) error</text><ellipse cx="23073" cy="2631.7363" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="23082" y="2635.3711">Close() error</text><ellipse cx="23073" cy="2644.6914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="23082" y="2648.3262">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[c2b2caa3ba92654479ca9fd5eba67b47]
class executor.TableDualExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.TableDualExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="18087" y="2457.5"/><ellipse cx="18189.75" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M18188.9834,2474.563 Q18187.1323,2473.8574 18186.4766,2473.0813 Q18185.8208,2472.3052 18185.8208,2470.9937 Q18185.8208,2469.3086 18186.8999,2468.3457 Q18187.979,2467.3828 18189.8633,2467.3828 Q18190.7183,2467.3828 18191.5732,2467.5779 Q18192.4282,2467.7729 18193.2666,2468.1548 L18193.2666,2470.5454 Q18192.478,2469.9893 18191.6646,2469.6987 Q18190.8511,2469.4082 18190.0542,2469.4082 Q18189.166,2469.4082 18188.6929,2469.7651 Q18188.2197,2470.1221 18188.2197,2470.7861 Q18188.2197,2471.3008 18188.5642,2471.637 Q18188.9087,2471.9731 18190.0044,2472.3799 L18191.0586,2472.7783 Q18192.5527,2473.3262 18193.2583,2474.231 Q18193.9639,2475.1357 18193.9639,2476.5137 Q18193.9639,2478.3896 18192.8557,2479.3152 Q18191.7476,2480.2407 18189.5063,2480.2407 Q18188.585,2480.2407 18187.6594,2480.0208 Q18186.7339,2479.8008 18185.8706,2479.3691 L18185.8706,2476.8374 Q18186.8501,2477.5347 18187.7673,2477.875 Q18188.6846,2478.2153 18189.5811,2478.2153 Q18190.4858,2478.2153 18190.9839,2477.8044 Q18191.4819,2477.3936 18191.4819,2476.6548 Q18191.4819,2476.0986 18191.1499,2475.6794 Q18190.8179,2475.2603 18190.187,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="18210.25" y="2478.0352">TableDualExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18088" x2="18386" y1="2489.5" y2="2489.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18095" y="2497.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="18107" y="2504.1348">numDualRows int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18095" y="2510.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="18107" y="2517.0898">numReturned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18088" x2="18386" y1="2523.4102" y2="2523.4102"/><ellipse cx="18098" cy="2534.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="18107" y="2538.0449">Open(ctx context.Context) error</text><ellipse cx="18098" cy="2547.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="18107" y="2551">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[6e7e1b1f79c41cde1e5056aea6f43277]
class executor.TableReaderExecutor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="384.832" id="executor.TableReaderExecutor" style="stroke: #A80036; stroke-width: 1.5;" width="473" x="6355.5" y="2315"/><ellipse cx="6525.25" cy="2331" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6524.4834,2332.063 Q6522.6323,2331.3574 6521.9766,2330.5813 Q6521.3208,2329.8052 6521.3208,2328.4937 Q6521.3208,2326.8086 6522.3999,2325.8457 Q6523.479,2324.8828 6525.3633,2324.8828 Q6526.2183,2324.8828 6527.0732,2325.0779 Q6527.9282,2325.2729 6528.7666,2325.6548 L6528.7666,2328.0454 Q6527.978,2327.4893 6527.1646,2327.1987 Q6526.3511,2326.9082 6525.5542,2326.9082 Q6524.666,2326.9082 6524.1929,2327.2651 Q6523.7197,2327.6221 6523.7197,2328.2861 Q6523.7197,2328.8008 6524.0642,2329.137 Q6524.4087,2329.4731 6525.5044,2329.8799 L6526.5586,2330.2783 Q6528.0527,2330.8262 6528.7583,2331.731 Q6529.4639,2332.6357 6529.4639,2334.0137 Q6529.4639,2335.8896 6528.3557,2336.8152 Q6527.2476,2337.7407 6525.0063,2337.7407 Q6524.085,2337.7407 6523.1594,2337.5208 Q6522.2339,2337.3008 6521.3706,2336.8691 L6521.3706,2334.3374 Q6522.3501,2335.0347 6523.2673,2335.375 Q6524.1846,2335.7153 6525.0811,2335.7153 Q6525.9858,2335.7153 6526.4839,2335.3044 Q6526.9819,2334.8936 6526.9819,2334.1548 Q6526.9819,2333.5986 6526.6499,2333.1794 Q6526.3179,2332.7603 6525.687,2332.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="125" x="6545.75" y="2335.5352">TableReaderExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6356.5" x2="6827.5" y1="2347" y2="2347"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2355"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="6375.5" y="2361.6348">table table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2367.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="6375.5" y="2374.5898">ranges []*ranger.Range</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2380.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="6375.5" y="2387.5449">kvRanges []kv.KeyRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2393.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="6375.5" y="2400.5">dagPB *tipb.DAGRequest</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2406.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="6375.5" y="2413.4551">startTS uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2419.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="6375.5" y="2426.4102">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2432.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="6375.5" y="2439.3652">resultHandler *tableResultHandler</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2445.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="6375.5" y="2452.3203">feedback *statistics.QueryFeedback</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2458.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="6375.5" y="2465.2754">plans []core.PhysicalPlan</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2471.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="6375.5" y="2478.2305">memTracker *memory.Tracker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2484.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="6375.5" y="2491.1855">keepOrder bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2497.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="6375.5" y="2504.1406">desc bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2510.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="6375.5" y="2517.0957">streaming bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2523.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="6375.5" y="2530.0508">storeType kv.StoreType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2536.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="6375.5" y="2543.0059">corColInFilter bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2549.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="6375.5" y="2555.9609">corColInAccess bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2562.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="6375.5" y="2568.916">virtualColumnIndex []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2575.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="6375.5" y="2581.8711">virtualColumnRetFieldTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2588.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="6375.5" y="2594.8262">batchCop bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6356.5" x2="6827.5" y1="2601.1465" y2="2601.1465"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2609.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="6375.5" y="2615.7813">buildResp(ctx context.Context, ranges []*ranger.Range) (distsql.SelectResult, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2622.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="6375.5" y="2628.7363">buildVirtualColumnInfo()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6363.5" y="2635.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="6375.5" y="2641.6914">setBatchCop(v *core.PhysicalTableReader)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="6378.5" y="2654.6465"/><ellipse cx="6366.5" cy="2663.9668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="6375.5" y="2667.6016">Open(ctx context.Context) error</text><ellipse cx="6366.5" cy="2676.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="6375.5" y="2680.5566">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="6366.5" cy="2689.877" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="6375.5" y="2693.5117">Close() error</text><!--MD5=[37e074a5fc0a76c30a286ffbc378f4ae]
class executor.TableScanExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="216.416" id="executor.TableScanExec" style="stroke: #A80036; stroke-width: 1.5;" width="404" x="18422" y="2399.5"/><ellipse cx="18576.75" cy="2415.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M18575.9834,2416.563 Q18574.1323,2415.8574 18573.4766,2415.0813 Q18572.8208,2414.3052 18572.8208,2412.9937 Q18572.8208,2411.3086 18573.8999,2410.3457 Q18574.979,2409.3828 18576.8633,2409.3828 Q18577.7183,2409.3828 18578.5732,2409.5779 Q18579.4282,2409.7729 18580.2666,2410.1548 L18580.2666,2412.5454 Q18579.478,2411.9893 18578.6646,2411.6987 Q18577.8511,2411.4082 18577.0542,2411.4082 Q18576.166,2411.4082 18575.6929,2411.7651 Q18575.2197,2412.1221 18575.2197,2412.7861 Q18575.2197,2413.3008 18575.5642,2413.637 Q18575.9087,2413.9731 18577.0044,2414.3799 L18578.0586,2414.7783 Q18579.5527,2415.3262 18580.2583,2416.231 Q18580.9639,2417.1357 18580.9639,2418.5137 Q18580.9639,2420.3896 18579.8557,2421.3152 Q18578.7476,2422.2407 18576.5063,2422.2407 Q18575.585,2422.2407 18574.6594,2422.0208 Q18573.7339,2421.8008 18572.8706,2421.3691 L18572.8706,2418.8374 Q18573.8501,2419.5347 18574.7673,2419.875 Q18575.6846,2420.2153 18576.5811,2420.2153 Q18577.4858,2420.2153 18577.9839,2419.8044 Q18578.4819,2419.3936 18578.4819,2418.6548 Q18578.4819,2418.0986 18578.1499,2417.6794 Q18577.8179,2417.2603 18577.187,2417.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="18597.25" y="2420.0352">TableScanExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18423" x2="18825" y1="2431.5" y2="2431.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18430" y="2439.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="18442" y="2446.1348">t table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18430" y="2452.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="18442" y="2459.0898">seekHandle int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18430" y="2465.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="18442" y="2472.0449">iter kv.Iterator</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18430" y="2478.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="18442" y="2485">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18430" y="2491.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="18442" y="2497.9551">isVirtualTable bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18430" y="2504.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="18442" y="2510.9102">virtualTableChunkList *chunk.List</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18430" y="2517.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="18442" y="2523.8652">virtualTableChunkIdx int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18423" x2="18825" y1="2530.1855" y2="2530.1855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18430" y="2538.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="18442" y="2544.8203">nextChunk4InfoSchema(ctx context.Context, chk *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18430" y="2551.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="18442" y="2557.7754">nextHandle() (int64, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18430" y="2564.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="18442" y="2570.7305">getRow(handle int64) ([]types.Datum, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="18445" y="2583.6855"/><ellipse cx="18433" cy="2593.0059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="18442" y="2596.6406">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="18433" cy="2605.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="18442" y="2609.5957">Open(ctx context.Context) error</text><!--MD5=[ef6052f8d6b2896a278a1f1996f29f26]
class executor.TopNExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="229.3711" id="executor.TopNExec" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="33295" y="3142.5"/><ellipse cx="33418.25" cy="3158.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33417.4834,3159.563 Q33415.6323,3158.8574 33414.9766,3158.0813 Q33414.3208,3157.3052 33414.3208,3155.9937 Q33414.3208,3154.3086 33415.3999,3153.3457 Q33416.479,3152.3828 33418.3633,3152.3828 Q33419.2183,3152.3828 33420.0732,3152.5779 Q33420.9282,3152.7729 33421.7666,3153.1548 L33421.7666,3155.5454 Q33420.978,3154.9893 33420.1646,3154.6987 Q33419.3511,3154.4082 33418.5542,3154.4082 Q33417.666,3154.4082 33417.1929,3154.7651 Q33416.7197,3155.1221 33416.7197,3155.7861 Q33416.7197,3156.3008 33417.0642,3156.637 Q33417.4087,3156.9731 33418.5044,3157.3799 L33419.5586,3157.7783 Q33421.0527,3158.3262 33421.7583,3159.231 Q33422.4639,3160.1357 33422.4639,3161.5137 Q33422.4639,3163.3896 33421.3557,3164.3152 Q33420.2476,3165.2407 33418.0063,3165.2407 Q33417.085,3165.2407 33416.1594,3165.0208 Q33415.2339,3164.8008 33414.3706,3164.3691 L33414.3706,3161.8374 Q33415.3501,3162.5347 33416.2673,3162.875 Q33417.1846,3163.2153 33418.0811,3163.2153 Q33418.9858,3163.2153 33419.4839,3162.8044 Q33419.9819,3162.3936 33419.9819,3161.6548 Q33419.9819,3161.0986 33419.6499,3160.6794 Q33419.3179,3160.2603 33418.687,3160.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="33438.75" y="3163.0352">TopNExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33296" x2="33608" y1="3174.5" y2="3174.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3182.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="33315" y="3189.1348">limit *core.PhysicalLimit</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3195.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="33315" y="3202.0898">totalLimit uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3208.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="33315" y="3215.0449">rowChunks *chunk.List</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3221.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="33315" y="3228">rowPtrs []chunk.RowPtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3234.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="33315" y="3240.9551">chkHeap *topNChunkHeap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33296" x2="33608" y1="3247.2754" y2="3247.2754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3255.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="33315" y="3261.9102">keyColumnsLess(i int, j int) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3268.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="33315" y="3274.8652">initPointers()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3281.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="33315" y="3287.8203">loadChunksUntilTotalLimit(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3294.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="33315" y="3300.7754">executeTopN(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3307.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="33315" y="3313.7305">processChildChk(childRowChk *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33303" y="3320.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="33315" y="3326.6855">doCompaction() error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="33318" y="3339.6406"/><ellipse cx="33306" cy="3348.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="33315" y="3352.5957">Open(ctx context.Context) error</text><ellipse cx="33306" cy="3361.916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="33315" y="3365.5508">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[d0f20b8e3bc53ea7e14dd745402dd84c]
class executor.TraceExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="203.4609" id="executor.TraceExec" style="stroke: #A80036; stroke-width: 1.5;" width="483" x="18861.5" y="2406"/><ellipse cx="19068.75" cy="2422" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M19067.9834,2423.063 Q19066.1323,2422.3574 19065.4766,2421.5813 Q19064.8208,2420.8052 19064.8208,2419.4937 Q19064.8208,2417.8086 19065.8999,2416.8457 Q19066.979,2415.8828 19068.8633,2415.8828 Q19069.7183,2415.8828 19070.5732,2416.0779 Q19071.4282,2416.2729 19072.2666,2416.6548 L19072.2666,2419.0454 Q19071.478,2418.4893 19070.6646,2418.1987 Q19069.8511,2417.9082 19069.0542,2417.9082 Q19068.166,2417.9082 19067.6929,2418.2651 Q19067.2197,2418.6221 19067.2197,2419.2861 Q19067.2197,2419.8008 19067.5642,2420.137 Q19067.9087,2420.4731 19069.0044,2420.8799 L19070.0586,2421.2783 Q19071.5527,2421.8262 19072.2583,2422.731 Q19072.9639,2423.6357 19072.9639,2425.0137 Q19072.9639,2426.8896 19071.8557,2427.8152 Q19070.7476,2428.7407 19068.5063,2428.7407 Q19067.585,2428.7407 19066.6594,2428.5208 Q19065.7339,2428.3008 19064.8706,2427.8691 L19064.8706,2425.3374 Q19065.8501,2426.0347 19066.7673,2426.375 Q19067.6846,2426.7153 19068.5811,2426.7153 Q19069.4858,2426.7153 19069.9839,2426.3044 Q19070.4819,2425.8936 19070.4819,2425.1548 Q19070.4819,2424.5986 19070.1499,2424.1794 Q19069.8179,2423.7603 19069.187,2423.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="60" x="19089.25" y="2426.5352">TraceExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18862.5" x2="19343.5" y1="2438" y2="2438"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18869.5" y="2446"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="18881.5" y="2452.6348">exhausted bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18869.5" y="2458.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="18881.5" y="2465.5898">stmtNode ast.StmtNode</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18869.5" y="2471.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="18881.5" y="2478.5449">rootTrace opentracing.Span</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18869.5" y="2484.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="18881.5" y="2491.5">builder *executorBuilder</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18869.5" y="2497.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="18881.5" y="2504.4551">format string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="18884.5" y="2517.4102"/><ellipse cx="18872.5" cy="2526.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="18881.5" y="2530.3652">CollectedSpans []basictracer.RawSpan</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18862.5" x2="19343.5" y1="2536.6855" y2="2536.6855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18869.5" y="2544.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="18881.5" y="2551.3203">nextTraceLog(ctx context.Context, se sqlexec.SQLExecutor, req *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18869.5" y="2557.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="18881.5" y="2564.2754">nextRowJSON(ctx context.Context, se sqlexec.SQLExecutor, req *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18869.5" y="2570.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="18881.5" y="2577.2305">executeChild(ctx context.Context, se sqlexec.SQLExecutor)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="18884.5" y="2590.1855"/><ellipse cx="18872.5" cy="2599.5059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="18881.5" y="2603.1406">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[570f86ae58383fedc00c6fa96dd9e881]
class executor.UnionExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="229.3711" id="executor.UnionExec" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="23583" y="2393"/><ellipse cx="23699.25" cy="2409" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23698.4834,2410.063 Q23696.6323,2409.3574 23695.9766,2408.5813 Q23695.3208,2407.8052 23695.3208,2406.4937 Q23695.3208,2404.8086 23696.3999,2403.8457 Q23697.479,2402.8828 23699.3633,2402.8828 Q23700.2183,2402.8828 23701.0732,2403.0779 Q23701.9282,2403.2729 23702.7666,2403.6548 L23702.7666,2406.0454 Q23701.978,2405.4893 23701.1646,2405.1987 Q23700.3511,2404.9082 23699.5542,2404.9082 Q23698.666,2404.9082 23698.1929,2405.2651 Q23697.7197,2405.6221 23697.7197,2406.2861 Q23697.7197,2406.8008 23698.0642,2407.137 Q23698.4087,2407.4731 23699.5044,2407.8799 L23700.5586,2408.2783 Q23702.0527,2408.8262 23702.7583,2409.731 Q23703.4639,2410.6357 23703.4639,2412.0137 Q23703.4639,2413.8896 23702.3557,2414.8152 Q23701.2476,2415.7407 23699.0063,2415.7407 Q23698.085,2415.7407 23697.1594,2415.5208 Q23696.2339,2415.3008 23695.3706,2414.8691 L23695.3706,2412.3374 Q23696.3501,2413.0347 23697.2673,2413.375 Q23698.1846,2413.7153 23699.0811,2413.7153 Q23699.9858,2413.7153 23700.4839,2413.3044 Q23700.9819,2412.8936 23700.9819,2412.1548 Q23700.9819,2411.5986 23700.6499,2411.1794 Q23700.3179,2410.7603 23699.687,2410.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="23719.75" y="2413.5352">UnionExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23584" x2="23882" y1="2425" y2="2425"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23591" y="2433"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="23603" y="2439.6348">stopFetchData atomic.Value</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23591" y="2445.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="23603" y="2452.5898">finished</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="23649" y="2452.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="23678" y="2452.5898"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="23678" y="2452.5898">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="23710" y="2452.5898">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23591" y="2458.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="23603" y="2465.5449">resourcePools []</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="23691" y="2465.5449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="23720" y="2465.5449">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23591" y="2471.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="23603" y="2478.5">resultPool</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="23660" y="2478.5">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="23689" y="2478.5">*unionWorkerResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23591" y="2484.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="23603" y="2491.4551">childrenResults []*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23591" y="2497.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="23603" y="2504.4102">wg sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23591" y="2510.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="23603" y="2517.3652">initialized bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23584" x2="23882" y1="2523.6855" y2="2523.6855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23591" y="2531.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="23603" y="2538.3203">waitAllFinished()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23591" y="2544.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="23603" y="2551.2754">initialize(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23591" y="2557.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="23603" y="2564.2305">resultPuller(ctx context.Context, childID int)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="23606" y="2577.1855"/><ellipse cx="23594" cy="2586.5059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="23603" y="2590.1406">Open(ctx context.Context) error</text><ellipse cx="23594" cy="2599.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="23603" y="2603.0957">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="23594" cy="2612.416" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="23603" y="2616.0508">Close() error</text><!--MD5=[6ee62eb9d48ad605aae5f9ec12aee5db]
class executor.UnionScanExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="371.877" id="executor.UnionScanExec" style="stroke: #A80036; stroke-width: 1.5;" width="382" x="20101" y="2321.5"/><ellipse cx="20245.25" cy="2337.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M20244.4834,2338.563 Q20242.6323,2337.8574 20241.9766,2337.0813 Q20241.3208,2336.3052 20241.3208,2334.9937 Q20241.3208,2333.3086 20242.3999,2332.3457 Q20243.479,2331.3828 20245.3633,2331.3828 Q20246.2183,2331.3828 20247.0732,2331.5779 Q20247.9282,2331.7729 20248.7666,2332.1548 L20248.7666,2334.5454 Q20247.978,2333.9893 20247.1646,2333.6987 Q20246.3511,2333.4082 20245.5542,2333.4082 Q20244.666,2333.4082 20244.1929,2333.7651 Q20243.7197,2334.1221 20243.7197,2334.7861 Q20243.7197,2335.3008 20244.0642,2335.637 Q20244.4087,2335.9731 20245.5044,2336.3799 L20246.5586,2336.7783 Q20248.0527,2337.3262 20248.7583,2338.231 Q20249.4639,2339.1357 20249.4639,2340.5137 Q20249.4639,2342.3896 20248.3557,2343.3152 Q20247.2476,2344.2407 20245.0063,2344.2407 Q20244.085,2344.2407 20243.1594,2344.0208 Q20242.2339,2343.8008 20241.3706,2343.3691 L20241.3706,2340.8374 Q20242.3501,2341.5347 20243.2673,2341.875 Q20244.1846,2342.2153 20245.0811,2342.2153 Q20245.9858,2342.2153 20246.4839,2341.8044 Q20246.9819,2341.3936 20246.9819,2340.6548 Q20246.9819,2340.0986 20246.6499,2339.6794 Q20246.3179,2339.2603 20245.687,2339.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="20265.75" y="2342.0352">UnionScanExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20102" x2="20482" y1="2353.5" y2="2353.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2361.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="20121" y="2368.1348">dirty *DirtyTable</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2374.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="20121" y="2381.0898">usedIndex []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2387.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="20121" y="2394.0449">desc bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2400.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="20121" y="2407">conditions []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2413.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="20121" y="2419.9551">conditionsWithVirCol []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2426.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="20121" y="2432.9102">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2439.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="20121" y="2445.8652">table table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2452.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="20121" y="2458.8203">belowHandleIndex int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2465.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="20121" y="2471.7754">addedRows [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2478.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="20121" y="2484.7305">cursor4AddRows int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2491.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="20121" y="2497.6855">sortErr error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2504.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="20121" y="2510.6406">snapshotRows [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2516.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="20121" y="2523.5957">cursor4SnapshotRows int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2529.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="20121" y="2536.5508">snapshotChunkBuffer *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2542.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="20121" y="2549.5059">mutableRow chunk.MutRow</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2555.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="20121" y="2562.4609">virtualColumnIndex []int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20102" x2="20482" y1="2568.7813" y2="2568.7813"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2576.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="20121" y="2583.416">open(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2589.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="20121" y="2596.3711">getOneRow(ctx context.Context) ([]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2602.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="20121" y="2609.3262">getSnapshotRow(ctx context.Context) ([]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2615.6465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="20121" y="2622.2813">getAddedRow() []types.Datum</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2628.6016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="20121" y="2635.2363">shouldPickFirstRow(a []types.Datum, b []types.Datum) (bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20109" y="2641.5566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="20121" y="2648.1914">compare(a []types.Datum, b []types.Datum) (int, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="20124" y="2661.1465"/><ellipse cx="20112" cy="2670.4668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="20121" y="2674.1016">Open(ctx context.Context) error</text><ellipse cx="20112" cy="2683.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="20121" y="2687.0566">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[1398eb5e249a10fd348e316ba92c105c]
class executor.UpdateExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="320.0566" id="executor.UpdateExec" style="stroke: #A80036; stroke-width: 1.5;" width="589" x="23918.5" y="2347.5"/><ellipse cx="24174.25" cy="2363.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24173.4834,2364.563 Q24171.6323,2363.8574 24170.9766,2363.0813 Q24170.3208,2362.3052 24170.3208,2360.9937 Q24170.3208,2359.3086 24171.3999,2358.3457 Q24172.479,2357.3828 24174.3633,2357.3828 Q24175.2183,2357.3828 24176.0732,2357.5779 Q24176.9282,2357.7729 24177.7666,2358.1548 L24177.7666,2360.5454 Q24176.978,2359.9893 24176.1646,2359.6987 Q24175.3511,2359.4082 24174.5542,2359.4082 Q24173.666,2359.4082 24173.1929,2359.7651 Q24172.7197,2360.1221 24172.7197,2360.7861 Q24172.7197,2361.3008 24173.0642,2361.637 Q24173.4087,2361.9731 24174.5044,2362.3799 L24175.5586,2362.7783 Q24177.0527,2363.3262 24177.7583,2364.231 Q24178.4639,2365.1357 24178.4639,2366.5137 Q24178.4639,2368.3896 24177.3557,2369.3152 Q24176.2476,2370.2407 24174.0063,2370.2407 Q24173.085,2370.2407 24172.1594,2370.0208 Q24171.2339,2369.8008 24170.3706,2369.3691 L24170.3706,2366.8374 Q24171.3501,2367.5347 24172.2673,2367.875 Q24173.1846,2368.2153 24174.0811,2368.2153 Q24174.9858,2368.2153 24175.4839,2367.8044 Q24175.9819,2367.3936 24175.9819,2366.6548 Q24175.9819,2366.0986 24175.6499,2365.6794 Q24175.3179,2365.2603 24174.687,2365.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="24194.75" y="2368.0352">UpdateExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23919.5" x2="24506.5" y1="2379.5" y2="2379.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2387.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="23938.5" y="2394.1348">updatedRowKeys</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="24032.5" y="2394.1348">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="24055.5" y="2394.1348">[int64]</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="24091.5" y="2394.1348">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="24114.5" y="2394.1348">[int64]bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2400.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="23938.5" y="2407.0898">tblID2table</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="23999.5" y="2407.0898">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="24022.5" y="2407.0898">[int64]table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2413.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="23938.5" y="2420.0449">matched uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2426.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="23938.5" y="2433">tblColPosInfos core.TblColPosInfoSlice</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2439.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="23938.5" y="2445.9551">evalBuffer chunk.MutRow</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2452.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="23938.5" y="2458.9102">allAssignmentsAreConstant bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2465.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="23938.5" y="2471.8652">drained bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2478.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="23938.5" y="2484.8203">memTracker *memory.Tracker</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="23941.5" y="2497.7754"/><ellipse cx="23929.5" cy="2507.0957" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="23938.5" y="2510.7305">OrderedList []*expression.Assignment</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23919.5" x2="24506.5" y1="2517.0508" y2="2517.0508"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2525.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="563" x="23938.5" y="2531.6855">exec(ctx context.Context, schema *expression.Schema, row []types.Datum, newData []types.Datum) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2538.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="23938.5" y="2544.6406">canNotUpdate(handle types.Datum) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2550.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="23938.5" y="2557.5957">updateRows(ctx context.Context) (int, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2563.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="23938.5" y="2570.5508">handleErr(colName model.CIStr, rowIdx int, err error) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2576.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="23938.5" y="2583.5059">fastComposeNewRow(rowIdx int, oldRow []types.Datum, cols []*table.Column) ([]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2589.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="513" x="23938.5" y="2596.4609">composeNewRow(rowIdx int, oldRow []types.Datum, cols []*table.Column) ([]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23926.5" y="2602.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="23938.5" y="2609.416">setMessage()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="23941.5" y="2622.3711"/><ellipse cx="23929.5" cy="2631.6914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="23938.5" y="2635.3262">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="23929.5" cy="2644.6465" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="23938.5" y="2648.2813">Close() error</text><ellipse cx="23929.5" cy="2657.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="23938.5" y="2661.2363">Open(ctx context.Context) error</text><!--MD5=[e3877b75d92691007fad030c838dc880]
class executor.WindowExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="242.3262" id="executor.WindowExec" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="24543" y="2386.5"/><ellipse cx="24658.25" cy="2402.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24657.4834,2403.563 Q24655.6323,2402.8574 24654.9766,2402.0813 Q24654.3208,2401.3052 24654.3208,2399.9937 Q24654.3208,2398.3086 24655.3999,2397.3457 Q24656.479,2396.3828 24658.3633,2396.3828 Q24659.2183,2396.3828 24660.0732,2396.5779 Q24660.9282,2396.7729 24661.7666,2397.1548 L24661.7666,2399.5454 Q24660.978,2398.9893 24660.1646,2398.6987 Q24659.3511,2398.4082 24658.5542,2398.4082 Q24657.666,2398.4082 24657.1929,2398.7651 Q24656.7197,2399.1221 24656.7197,2399.7861 Q24656.7197,2400.3008 24657.0642,2400.637 Q24657.4087,2400.9731 24658.5044,2401.3799 L24659.5586,2401.7783 Q24661.0527,2402.3262 24661.7583,2403.231 Q24662.4639,2404.1357 24662.4639,2405.5137 Q24662.4639,2407.3896 24661.3557,2408.3152 Q24660.2476,2409.2407 24658.0063,2409.2407 Q24657.085,2409.2407 24656.1594,2409.0208 Q24655.2339,2408.8008 24654.3706,2408.3691 L24654.3706,2405.8374 Q24655.3501,2406.5347 24656.2673,2406.875 Q24657.1846,2407.2153 24658.0811,2407.2153 Q24658.9858,2407.2153 24659.4839,2406.8044 Q24659.9819,2406.3936 24659.9819,2405.6548 Q24659.9819,2405.0986 24659.6499,2404.6794 Q24659.3179,2404.2603 24658.687,2404.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="24678.75" y="2407.0352">WindowExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24544" x2="24852" y1="2418.5" y2="2418.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2426.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="24563" y="2433.1348">groupChecker *vecGroupChecker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2439.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="24563" y="2446.0898">childResult *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2452.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="24563" y="2459.0449">executed bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2465.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="24563" y="2472">resultChunks []*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2478.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="24563" y="2484.9551">remainingRowsInChunk []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2491.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="24563" y="2497.9102">numWindowFuncs int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2504.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="24563" y="2510.8652">processor windowProcessor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24544" x2="24852" y1="2517.1855" y2="2517.1855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2525.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="24563" y="2531.8203">preparedChunkAvailable() bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2538.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="24563" y="2544.7754">consumeOneGroup(ctx context.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2551.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="24563" y="2557.7305">consumeGroupRows(groupRows []chunk.Row) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2564.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="24563" y="2570.6855">fetchChild(ctx context.Context) (bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24551" y="2577.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="24563" y="2583.6406">copyChk(src *chunk.Chunk, dst *chunk.Chunk) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="24566" y="2596.5957"/><ellipse cx="24554" cy="2605.916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="24563" y="2609.5508">Close() error</text><ellipse cx="24554" cy="2618.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="24563" y="2622.5059">Next(ctx context.Context, chk *chunk.Chunk) error</text><!--MD5=[336f57ecb42fbefdb92697953902cf1a]
class executor.aggWindowProcessor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.aggWindowProcessor" style="stroke: #A80036; stroke-width: 1.5;" width="662" x="2699" y="1669.5"/><ellipse cx="2965.25" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2964.4834,1686.563 Q2962.6323,1685.8574 2961.9766,1685.0813 Q2961.3208,1684.3052 2961.3208,1682.9937 Q2961.3208,1681.3086 2962.3999,1680.3457 Q2963.479,1679.3828 2965.3633,1679.3828 Q2966.2183,1679.3828 2967.0732,1679.5779 Q2967.9282,1679.7729 2968.7666,1680.1548 L2968.7666,1682.5454 Q2967.978,1681.9893 2967.1646,1681.6987 Q2966.3511,1681.4082 2965.5542,1681.4082 Q2964.666,1681.4082 2964.1929,1681.7651 Q2963.7197,1682.1221 2963.7197,1682.7861 Q2963.7197,1683.3008 2964.0642,1683.637 Q2964.4087,1683.9731 2965.5044,1684.3799 L2966.5586,1684.7783 Q2968.0527,1685.3262 2968.7583,1686.231 Q2969.4639,1687.1357 2969.4639,1688.5137 Q2969.4639,1690.3896 2968.3557,1691.3152 Q2967.2476,1692.2407 2965.0063,1692.2407 Q2964.085,1692.2407 2963.1594,1692.0208 Q2962.2339,1691.8008 2961.3706,1691.3691 L2961.3706,1688.8374 Q2962.3501,1689.5347 2963.2673,1689.875 Q2964.1846,1690.2153 2965.0811,1690.2153 Q2965.9858,1690.2153 2966.4839,1689.8044 Q2966.9819,1689.3936 2966.9819,1688.6548 Q2966.9819,1688.0986 2966.6499,1687.6794 Q2966.3179,1687.2603 2965.687,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="121" x="2985.75" y="1690.0352">aggWindowProcessor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2700" x2="3360" y1="1701.5" y2="1701.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2707" y="1709.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="2719" y="1716.1348">windowFuncs []aggfuncs.AggFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2707" y="1722.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2719" y="1729.0898">partialResults []aggfuncs.PartialResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2700" x2="3360" y1="1735.4102" y2="1735.4102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2707" y="1743.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="2719" y="1750.0449">consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2707" y="1756.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="636" x="2719" y="1763">appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2707" y="1769.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2719" y="1775.9551">resetPartialResult()</text><!--MD5=[f9eba59276eb022241ace465235a5f2d]
class executor.allocBuf--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.allocBuf" style="stroke: #A80036; stroke-width: 1.5;" width="174" x="35572" y="1689"/><ellipse cx="35632.75" cy="1705" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35631.9834,1706.063 Q35630.1323,1705.3574 35629.4766,1704.5813 Q35628.8208,1703.8052 35628.8208,1702.4937 Q35628.8208,1700.8086 35629.8999,1699.8457 Q35630.979,1698.8828 35632.8633,1698.8828 Q35633.7183,1698.8828 35634.5732,1699.0779 Q35635.4282,1699.2729 35636.2666,1699.6548 L35636.2666,1702.0454 Q35635.478,1701.4893 35634.6646,1701.1987 Q35633.8511,1700.9082 35633.0542,1700.9082 Q35632.166,1700.9082 35631.6929,1701.2651 Q35631.2197,1701.6221 35631.2197,1702.2861 Q35631.2197,1702.8008 35631.5642,1703.137 Q35631.9087,1703.4731 35633.0044,1703.8799 L35634.0586,1704.2783 Q35635.5527,1704.8262 35636.2583,1705.731 Q35636.9639,1706.6357 35636.9639,1708.0137 Q35636.9639,1709.8896 35635.8557,1710.8152 Q35634.7476,1711.7407 35632.5063,1711.7407 Q35631.585,1711.7407 35630.6594,1711.5208 Q35629.7339,1711.3008 35628.8706,1710.8691 L35628.8706,1708.3374 Q35629.8501,1709.0347 35630.7673,1709.375 Q35631.6846,1709.7153 35632.5811,1709.7153 Q35633.4858,1709.7153 35633.9839,1709.3044 Q35634.4819,1708.8936 35634.4819,1708.1548 Q35634.4819,1707.5986 35634.1499,1707.1794 Q35633.8179,1706.7603 35633.187,1706.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="44" x="35653.25" y="1709.5352">allocBuf</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35573" x2="35745" y1="1721" y2="1721"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35580" y="1729"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="35592" y="1735.6348">handleBytes []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35580" y="1741.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="35592" y="1748.5898">rd *rowcodec.BytesDecoder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35573" x2="35745" y1="1754.9102" y2="1754.9102"/><!--MD5=[18ed2c1d9039f273d341944d9d43878b]
class executor.analyzeIndexIncrementalExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.analyzeIndexIncrementalExec" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="33778" y="1689"/><ellipse cx="33793" cy="1705" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33792.2334,1706.063 Q33790.3823,1705.3574 33789.7266,1704.5813 Q33789.0708,1703.8052 33789.0708,1702.4937 Q33789.0708,1700.8086 33790.1499,1699.8457 Q33791.229,1698.8828 33793.1133,1698.8828 Q33793.9683,1698.8828 33794.8232,1699.0779 Q33795.6782,1699.2729 33796.5166,1699.6548 L33796.5166,1702.0454 Q33795.728,1701.4893 33794.9146,1701.1987 Q33794.1011,1700.9082 33793.3042,1700.9082 Q33792.416,1700.9082 33791.9429,1701.2651 Q33791.4697,1701.6221 33791.4697,1702.2861 Q33791.4697,1702.8008 33791.8142,1703.137 Q33792.1587,1703.4731 33793.2544,1703.8799 L33794.3086,1704.2783 Q33795.8027,1704.8262 33796.5083,1705.731 Q33797.2139,1706.6357 33797.2139,1708.0137 Q33797.2139,1709.8896 33796.1057,1710.8152 Q33794.9976,1711.7407 33792.7563,1711.7407 Q33791.835,1711.7407 33790.9094,1711.5208 Q33789.9839,1711.3008 33789.1206,1710.8691 L33789.1206,1708.3374 Q33790.1001,1709.0347 33791.0173,1709.375 Q33791.9346,1709.7153 33792.8311,1709.7153 Q33793.7358,1709.7153 33794.2339,1709.3044 Q33794.7319,1708.8936 33794.7319,1708.1548 Q33794.7319,1707.5986 33794.3999,1707.1794 Q33794.0679,1706.7603 33793.437,1706.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="170" x="33807" y="1709.5352">analyzeIndexIncrementalExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33779" x2="33979" y1="1721" y2="1721"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33786" y="1729"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="33798" y="1735.6348">oldHist *statistics.Histogram</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33786" y="1741.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="33798" y="1748.5898">oldCMS *statistics.CMSketch</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33779" x2="33979" y1="1754.9102" y2="1754.9102"/><!--MD5=[476d012e932fc318531d321fdf893e73]
class executor.analyzePKIncrementalExec--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.analyzePKIncrementalExec" style="stroke: #A80036; stroke-width: 1.5;" width="185" x="34295.5" y="1695.5"/><ellipse cx="34310.5" cy="1711.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34309.7334,1712.563 Q34307.8823,1711.8574 34307.2266,1711.0813 Q34306.5708,1710.3052 34306.5708,1708.9937 Q34306.5708,1707.3086 34307.6499,1706.3457 Q34308.729,1705.3828 34310.6133,1705.3828 Q34311.4683,1705.3828 34312.3232,1705.5779 Q34313.1782,1705.7729 34314.0166,1706.1548 L34314.0166,1708.5454 Q34313.228,1707.9893 34312.4146,1707.6987 Q34311.6011,1707.4082 34310.8042,1707.4082 Q34309.916,1707.4082 34309.4429,1707.7651 Q34308.9697,1708.1221 34308.9697,1708.7861 Q34308.9697,1709.3008 34309.3142,1709.637 Q34309.6587,1709.9731 34310.7544,1710.3799 L34311.8086,1710.7783 Q34313.3027,1711.3262 34314.0083,1712.231 Q34314.7139,1713.1357 34314.7139,1714.5137 Q34314.7139,1716.3896 34313.6057,1717.3152 Q34312.4976,1718.2407 34310.2563,1718.2407 Q34309.335,1718.2407 34308.4094,1718.0208 Q34307.4839,1717.8008 34306.6206,1717.3691 L34306.6206,1714.8374 Q34307.6001,1715.5347 34308.5173,1715.875 Q34309.4346,1716.2153 34310.3311,1716.2153 Q34311.2358,1716.2153 34311.7339,1715.8044 Q34312.2319,1715.3936 34312.2319,1714.6548 Q34312.2319,1714.0986 34311.8999,1713.6794 Q34311.5679,1713.2603 34310.937,1713.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="153" x="34324.5" y="1716.0352">analyzePKIncrementalExec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34296.5" x2="34479.5" y1="1727.5" y2="1727.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34303.5" y="1735.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="34315.5" y="1742.1348">oldHist *statistics.Histogram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34296.5" x2="34479.5" y1="1748.4551" y2="1748.4551"/><!--MD5=[4b507c72ed3a0be8d6dad7d81481e89c]
class executor.analyzeResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.analyzeResult" style="stroke: #A80036; stroke-width: 1.5;" width="170" x="35781" y="1650"/><ellipse cx="35822.55" cy="1666" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35821.7834,1667.063 Q35819.9323,1666.3574 35819.2766,1665.5813 Q35818.6208,1664.8052 35818.6208,1663.4937 Q35818.6208,1661.8086 35819.6999,1660.8457 Q35820.779,1659.8828 35822.6633,1659.8828 Q35823.5183,1659.8828 35824.3732,1660.0779 Q35825.2282,1660.2729 35826.0666,1660.6548 L35826.0666,1663.0454 Q35825.278,1662.4893 35824.4646,1662.1987 Q35823.6511,1661.9082 35822.8542,1661.9082 Q35821.966,1661.9082 35821.4929,1662.2651 Q35821.0197,1662.6221 35821.0197,1663.2861 Q35821.0197,1663.8008 35821.3642,1664.137 Q35821.7087,1664.4731 35822.8044,1664.8799 L35823.8586,1665.2783 Q35825.3527,1665.8262 35826.0583,1666.731 Q35826.7639,1667.6357 35826.7639,1669.0137 Q35826.7639,1670.8896 35825.6557,1671.8152 Q35824.5476,1672.7407 35822.3063,1672.7407 Q35821.385,1672.7407 35820.4594,1672.5208 Q35819.5339,1672.3008 35818.6706,1671.8691 L35818.6706,1669.3374 Q35819.6501,1670.0347 35820.5673,1670.375 Q35821.4846,1670.7153 35822.3811,1670.7153 Q35823.2858,1670.7153 35823.7839,1670.3044 Q35824.2819,1669.8936 35824.2819,1669.1548 Q35824.2819,1668.5986 35823.9499,1668.1794 Q35823.6179,1667.7603 35822.987,1667.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="35842.45" y="1670.5352">analyzeResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35782" x2="35950" y1="1682" y2="1682"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35789" y="1690"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="35801" y="1696.6348">job *statistics.AnalyzeJob</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="35804" y="1709.5898"/><ellipse cx="35792" cy="1718.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="35801" y="1722.5449">PhysicalTableID int64</text><ellipse cx="35792" cy="1731.8652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="35801" y="1735.5">Hist []*statistics.Histogram</text><ellipse cx="35792" cy="1744.8203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="35801" y="1748.4551">Cms []*statistics.CMSketch</text><ellipse cx="35792" cy="1757.7754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="35801" y="1761.4102">Count int64</text><ellipse cx="35792" cy="1770.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="35801" y="1774.3652">IsIndex int</text><ellipse cx="35792" cy="1783.6855" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="35801" y="1787.3203">Err error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35782" x2="35950" y1="1793.6406" y2="1793.6406"/><!--MD5=[d805a8a4b35f1a7242a6893c33b05a0a]
class executor.analyzeTask--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="138.6855" id="executor.analyzeTask" style="stroke: #A80036; stroke-width: 1.5;" width="297" x="35986.5" y="1656.5"/><ellipse cx="36094.75" cy="1672.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36093.9834,1673.563 Q36092.1323,1672.8574 36091.4766,1672.0813 Q36090.8208,1671.3052 36090.8208,1669.9937 Q36090.8208,1668.3086 36091.8999,1667.3457 Q36092.979,1666.3828 36094.8633,1666.3828 Q36095.7183,1666.3828 36096.5732,1666.5779 Q36097.4282,1666.7729 36098.2666,1667.1548 L36098.2666,1669.5454 Q36097.478,1668.9893 36096.6646,1668.6987 Q36095.8511,1668.4082 36095.0542,1668.4082 Q36094.166,1668.4082 36093.6929,1668.7651 Q36093.2197,1669.1221 36093.2197,1669.7861 Q36093.2197,1670.3008 36093.5642,1670.637 Q36093.9087,1670.9731 36095.0044,1671.3799 L36096.0586,1671.7783 Q36097.5527,1672.3262 36098.2583,1673.231 Q36098.9639,1674.1357 36098.9639,1675.5137 Q36098.9639,1677.3896 36097.8557,1678.3152 Q36096.7476,1679.2407 36094.5063,1679.2407 Q36093.585,1679.2407 36092.6594,1679.0208 Q36091.7339,1678.8008 36090.8706,1678.3691 L36090.8706,1675.8374 Q36091.8501,1676.5347 36092.7673,1676.875 Q36093.6846,1677.2153 36094.5811,1677.2153 Q36095.4858,1677.2153 36095.9839,1676.8044 Q36096.4819,1676.3936 36096.4819,1675.6548 Q36096.4819,1675.0986 36096.1499,1674.6794 Q36095.8179,1674.2603 36095.187,1674.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="36115.25" y="1677.0352">analyzeTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35987.5" x2="36282.5" y1="1688.5" y2="1688.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35994.5" y="1696.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="36006.5" y="1703.1348">taskType taskType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35994.5" y="1709.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="36006.5" y="1716.0898">idxExec *AnalyzeIndexExec</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35994.5" y="1722.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="36006.5" y="1729.0449">colExec *AnalyzeColumnsExec</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35994.5" y="1735.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="36006.5" y="1742">fastExec *AnalyzeFastExec</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35994.5" y="1748.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="36006.5" y="1754.9551">idxIncrementalExec *analyzeIndexIncrementalExec</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35994.5" y="1761.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="36006.5" y="1767.9102">colIncrementalExec *analyzePKIncrementalExec</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35994.5" y="1774.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="36006.5" y="1780.8652">job *statistics.AnalyzeJob</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35987.5" x2="36282.5" y1="1787.1855" y2="1787.1855"/><!--MD5=[e484c7ac06b0edade3914e65daeb24db]
class executor.antiLeftOuterSemiJoiner--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.antiLeftOuterSemiJoiner" style="stroke: #A80036; stroke-width: 1.5;" width="811" x="15305.5" y="1663"/><ellipse cx="15639.75" cy="1679" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M15638.9834,1680.063 Q15637.1323,1679.3574 15636.4766,1678.5813 Q15635.8208,1677.8052 15635.8208,1676.4937 Q15635.8208,1674.8086 15636.8999,1673.8457 Q15637.979,1672.8828 15639.8633,1672.8828 Q15640.7183,1672.8828 15641.5732,1673.0779 Q15642.4282,1673.2729 15643.2666,1673.6548 L15643.2666,1676.0454 Q15642.478,1675.4893 15641.6646,1675.1987 Q15640.8511,1674.9082 15640.0542,1674.9082 Q15639.166,1674.9082 15638.6929,1675.2651 Q15638.2197,1675.6221 15638.2197,1676.2861 Q15638.2197,1676.8008 15638.5642,1677.137 Q15638.9087,1677.4731 15640.0044,1677.8799 L15641.0586,1678.2783 Q15642.5527,1678.8262 15643.2583,1679.731 Q15643.9639,1680.6357 15643.9639,1682.0137 Q15643.9639,1683.8896 15642.8557,1684.8152 Q15641.7476,1685.7407 15639.5063,1685.7407 Q15638.585,1685.7407 15637.6594,1685.5208 Q15636.7339,1685.3008 15635.8706,1684.8691 L15635.8706,1682.3374 Q15636.8501,1683.0347 15637.7673,1683.375 Q15638.6846,1683.7153 15639.5811,1683.7153 Q15640.4858,1683.7153 15640.9839,1683.3044 Q15641.4819,1682.8936 15641.4819,1682.1548 Q15641.4819,1681.5986 15641.1499,1681.1794 Q15640.8179,1680.7603 15640.187,1680.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="134" x="15660.25" y="1683.5352">antiLeftOuterSemiJoiner</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15306.5" x2="16115.5" y1="1695" y2="1695"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="15306.5" x2="16115.5" y1="1703" y2="1703"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15313.5" y="1711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="15325.5" y="1717.6348">tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15313.5" y="1723.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="785" x="15325.5" y="1730.5898">tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15313.5" y="1736.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="15325.5" y="1743.5449">onMatch(outer chunk.Row, chk *chunk.Chunk)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15313.5" y="1749.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="15325.5" y="1756.5">onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="15328.5" y="1769.4551"/><ellipse cx="15316.5" cy="1778.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="15325.5" y="1782.4102">Clone() joiner</text><!--MD5=[0b35b52d687bd08eb273198bb32add6a]
class executor.antiSemiJoiner--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.antiSemiJoiner" style="stroke: #A80036; stroke-width: 1.5;" width="811" x="16151.5" y="1669.5"/><ellipse cx="16512.25" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M16511.4834,1686.563 Q16509.6323,1685.8574 16508.9766,1685.0813 Q16508.3208,1684.3052 16508.3208,1682.9937 Q16508.3208,1681.3086 16509.3999,1680.3457 Q16510.479,1679.3828 16512.3633,1679.3828 Q16513.2183,1679.3828 16514.0732,1679.5779 Q16514.9282,1679.7729 16515.7666,1680.1548 L16515.7666,1682.5454 Q16514.978,1681.9893 16514.1646,1681.6987 Q16513.3511,1681.4082 16512.5542,1681.4082 Q16511.666,1681.4082 16511.1929,1681.7651 Q16510.7197,1682.1221 16510.7197,1682.7861 Q16510.7197,1683.3008 16511.0642,1683.637 Q16511.4087,1683.9731 16512.5044,1684.3799 L16513.5586,1684.7783 Q16515.0527,1685.3262 16515.7583,1686.231 Q16516.4639,1687.1357 16516.4639,1688.5137 Q16516.4639,1690.3896 16515.3557,1691.3152 Q16514.2476,1692.2407 16512.0063,1692.2407 Q16511.085,1692.2407 16510.1594,1692.0208 Q16509.2339,1691.8008 16508.3706,1691.3691 L16508.3706,1688.8374 Q16509.3501,1689.5347 16510.2673,1689.875 Q16511.1846,1690.2153 16512.0811,1690.2153 Q16512.9858,1690.2153 16513.4839,1689.8044 Q16513.9819,1689.3936 16513.9819,1688.6548 Q16513.9819,1688.0986 16513.6499,1687.6794 Q16513.3179,1687.2603 16512.687,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="16532.75" y="1690.0352">antiSemiJoiner</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16152.5" x2="16961.5" y1="1701.5" y2="1701.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="16152.5" x2="16961.5" y1="1709.5" y2="1709.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16159.5" y="1717.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="16171.5" y="1724.1348">tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16159.5" y="1730.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="785" x="16171.5" y="1737.0898">tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16159.5" y="1743.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="16171.5" y="1750.0449">onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="16174.5" y="1763"/><ellipse cx="16162.5" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="16171.5" y="1775.9551">Clone() joiner</text><!--MD5=[6df6c6f655b28e348b9123b94f4ee856]
class executor.backfillResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.backfillResult" style="stroke: #A80036; stroke-width: 1.5;" width="137" x="36318.5" y="1682.5"/><ellipse cx="36346.55" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36345.7834,1699.563 Q36343.9323,1698.8574 36343.2766,1698.0813 Q36342.6208,1697.3052 36342.6208,1695.9937 Q36342.6208,1694.3086 36343.6999,1693.3457 Q36344.779,1692.3828 36346.6633,1692.3828 Q36347.5183,1692.3828 36348.3732,1692.5779 Q36349.2282,1692.7729 36350.0666,1693.1548 L36350.0666,1695.5454 Q36349.278,1694.9893 36348.4646,1694.6987 Q36347.6511,1694.4082 36346.8542,1694.4082 Q36345.966,1694.4082 36345.4929,1694.7651 Q36345.0197,1695.1221 36345.0197,1695.7861 Q36345.0197,1696.3008 36345.3642,1696.637 Q36345.7087,1696.9731 36346.8044,1697.3799 L36347.8586,1697.7783 Q36349.3527,1698.3262 36350.0583,1699.231 Q36350.7639,1700.1357 36350.7639,1701.5137 Q36350.7639,1703.3896 36349.6557,1704.3152 Q36348.5476,1705.2407 36346.3063,1705.2407 Q36345.385,1705.2407 36344.4594,1705.0208 Q36343.5339,1704.8008 36342.6706,1704.3691 L36342.6706,1701.8374 Q36343.6501,1702.5347 36344.5673,1702.875 Q36345.4846,1703.2153 36346.3811,1703.2153 Q36347.2858,1703.2153 36347.7839,1702.8044 Q36348.2819,1702.3936 36348.2819,1701.6548 Q36348.2819,1701.0986 36347.9499,1700.6794 Q36347.6179,1700.2603 36346.987,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="36363.45" y="1703.0352">backfillResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36319.5" x2="36454.5" y1="1714.5" y2="1714.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36326.5" y="1722.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="36338.5" y="1729.1348">nextHandle int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36326.5" y="1735.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="36338.5" y="1742.0898">addedCount int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36326.5" y="1748.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="36338.5" y="1755.0449">scanRowCount int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36319.5" x2="36454.5" y1="1761.3652" y2="1761.3652"/><!--MD5=[b0bfc026993c426cb63965b67173470c]
class executor.baseExecutor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="255.2813" id="executor.baseExecutor" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="25089" y="1598.5"/><ellipse cx="25195.75" cy="1614.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25194.9834,1615.563 Q25193.1323,1614.8574 25192.4766,1614.0813 Q25191.8208,1613.3052 25191.8208,1611.9937 Q25191.8208,1610.3086 25192.8999,1609.3457 Q25193.979,1608.3828 25195.8633,1608.3828 Q25196.7183,1608.3828 25197.5732,1608.5779 Q25198.4282,1608.7729 25199.2666,1609.1548 L25199.2666,1611.5454 Q25198.478,1610.9893 25197.6646,1610.6987 Q25196.8511,1610.4082 25196.0542,1610.4082 Q25195.166,1610.4082 25194.6929,1610.7651 Q25194.2197,1611.1221 25194.2197,1611.7861 Q25194.2197,1612.3008 25194.5642,1612.637 Q25194.9087,1612.9731 25196.0044,1613.3799 L25197.0586,1613.7783 Q25198.5527,1614.3262 25199.2583,1615.231 Q25199.9639,1616.1357 25199.9639,1617.5137 Q25199.9639,1619.3896 25198.8557,1620.3152 Q25197.7476,1621.2407 25195.5063,1621.2407 Q25194.585,1621.2407 25193.6594,1621.0208 Q25192.7339,1620.8008 25191.8706,1620.3691 L25191.8706,1617.8374 Q25192.8501,1618.5347 25193.7673,1618.875 Q25194.6846,1619.2153 25195.5811,1619.2153 Q25196.4858,1619.2153 25196.9839,1618.8044 Q25197.4819,1618.3936 25197.4819,1617.6548 Q25197.4819,1617.0986 25197.1499,1616.6794 Q25196.8179,1616.2603 25196.187,1616.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="25216.25" y="1619.0352">baseExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25090" x2="25388" y1="1630.5" y2="1630.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1638.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="25109" y="1645.1348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1651.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="25109" y="1658.0898">id fmt.Stringer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1664.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="25109" y="1671.0449">schema *expression.Schema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1677.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="25109" y="1684">initCap int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1690.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="25109" y="1696.9551">maxChunkSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1703.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="25109" y="1709.9102">children []Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1716.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="25109" y="1722.8652">retFieldTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1729.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="25109" y="1735.8203">runtimeStats *execdetails.RuntimeStats</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25090" x2="25388" y1="1742.1406" y2="1742.1406"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1750.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="25109" y="1756.7754">getSysSession() (sessionctx.Context, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1763.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="25109" y="1769.7305">releaseSysSession(ctx sessionctx.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25097" y="1776.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="25109" y="1782.6855">base() *baseExecutor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="25112" y="1795.6406"/><ellipse cx="25100" cy="1804.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="25109" y="1808.5957">Open(ctx context.Context) error</text><ellipse cx="25100" cy="1817.916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="25109" y="1821.5508">Close() error</text><ellipse cx="25100" cy="1830.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="25109" y="1834.5059">Schema() *expression.Schema</text><ellipse cx="25100" cy="1843.8262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="25109" y="1847.4609">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[2563db112f280dccf531e38bbb1d3715]
class executor.baseHashAggWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.baseHashAggWorker" style="stroke: #A80036; stroke-width: 1.5;" width="691" x="22894.5" y="732.5"/><ellipse cx="23175.75" cy="748.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23174.9834,749.563 Q23173.1323,748.8574 23172.4766,748.0813 Q23171.8208,747.3052 23171.8208,745.9937 Q23171.8208,744.3086 23172.8999,743.3457 Q23173.979,742.3828 23175.8633,742.3828 Q23176.7183,742.3828 23177.5732,742.5779 Q23178.4282,742.7729 23179.2666,743.1548 L23179.2666,745.5454 Q23178.478,744.9893 23177.6646,744.6987 Q23176.8511,744.4082 23176.0542,744.4082 Q23175.166,744.4082 23174.6929,744.7651 Q23174.2197,745.1221 23174.2197,745.7861 Q23174.2197,746.3008 23174.5642,746.637 Q23174.9087,746.9731 23176.0044,747.3799 L23177.0586,747.7783 Q23178.5527,748.3262 23179.2583,749.231 Q23179.9639,750.1357 23179.9639,751.5137 Q23179.9639,753.3896 23178.8557,754.3152 Q23177.7476,755.2407 23175.5063,755.2407 Q23174.585,755.2407 23173.6594,755.0208 Q23172.7339,754.8008 23171.8706,754.3691 L23171.8706,751.8374 Q23172.8501,752.5347 23173.7673,752.875 Q23174.6846,753.2153 23175.5811,753.2153 Q23176.4858,753.2153 23176.9839,752.8044 Q23177.4819,752.3936 23177.4819,751.6548 Q23177.4819,751.0986 23177.1499,750.6794 Q23176.8179,750.2603 23176.187,750.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="120" x="23196.25" y="753.0352">baseHashAggWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22895.5" x2="23584.5" y1="764.5" y2="764.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22902.5" y="772.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="22914.5" y="779.1348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22902.5" y="785.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="22914.5" y="792.0898">finishCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="22962.5" y="792.0898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="22991.5" y="792.0898"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="22991.5" y="792.0898">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="23023.5" y="792.0898">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22902.5" y="798.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="22914.5" y="805.0449">aggFuncs []aggfuncs.AggFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22902.5" y="811.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="22914.5" y="818">maxChunkSize int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22895.5" x2="23584.5" y1="824.3203" y2="824.3203"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22902.5" y="832.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="665" x="22914.5" y="838.9551">getPartialResult(sc *stmtctx.StatementContext, groupKey [][]byte, mapper aggPartialResultMapper) [][]aggfuncs.PartialResult</text><!--MD5=[5779d299c7345d3e8655e4c6fcb39254]
class executor.baseJoiner--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="268.2363" id="executor.baseJoiner" style="stroke: #A80036; stroke-width: 1.5;" width="1012" x="14831" y="655"/><ellipse cx="15302.25" cy="671" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M15301.4834,672.063 Q15299.6323,671.3574 15298.9766,670.5813 Q15298.3208,669.8052 15298.3208,668.4937 Q15298.3208,666.8086 15299.3999,665.8457 Q15300.479,664.8828 15302.3633,664.8828 Q15303.2183,664.8828 15304.0732,665.0779 Q15304.9282,665.2729 15305.7666,665.6548 L15305.7666,668.0454 Q15304.978,667.4893 15304.1646,667.1987 Q15303.3511,666.9082 15302.5542,666.9082 Q15301.666,666.9082 15301.1929,667.2651 Q15300.7197,667.6221 15300.7197,668.2861 Q15300.7197,668.8008 15301.0642,669.137 Q15301.4087,669.4731 15302.5044,669.8799 L15303.5586,670.2783 Q15305.0527,670.8262 15305.7583,671.731 Q15306.4639,672.6357 15306.4639,674.0137 Q15306.4639,675.8896 15305.3557,676.8152 Q15304.2476,677.7407 15302.0063,677.7407 Q15301.085,677.7407 15300.1594,677.5208 Q15299.2339,677.3008 15298.3706,676.8691 L15298.3706,674.3374 Q15299.3501,675.0347 15300.2673,675.375 Q15301.1846,675.7153 15302.0811,675.7153 Q15302.9858,675.7153 15303.4839,675.3044 Q15303.9819,674.8936 15303.9819,674.1548 Q15303.9819,673.5986 15303.6499,673.1794 Q15303.3179,672.7603 15302.687,672.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="15322.75" y="675.5352">baseJoiner</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="14832" x2="15842" y1="687" y2="687"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="695"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="14851" y="701.6348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="707.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="14851" y="714.5898">conditions []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="720.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="14851" y="727.5449">defaultInner chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="733.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="14851" y="740.5">outerIsRight bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="746.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="14851" y="753.4551">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="759.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="14851" y="766.4102">shallowRow chunk.MutRow</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="772.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="14851" y="779.3652">selected []bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="785.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="14851" y="792.3203">isNull []bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="798.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="14851" y="805.2754">maxChunkSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="811.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="14851" y="818.2305">lUsed []int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="14832" x2="15842" y1="824.5508" y2="824.5508"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="832.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="14851" y="839.1855">initDefaultInner(innerTypes []*types.FieldType, defaultInner []types.Datum)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="845.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="14851" y="852.1406">makeJoinRowToChunk(chk *chunk.Chunk, lhs chunk.Row, rhs chunk.Row, lUsed []int, rUsed []int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="858.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="14851" y="865.0957">makeShallowJoinRow(isRightJoin bool, inner chunk.Row, outer chunk.Row)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="871.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="14851" y="878.0508">filter(input *chunk.Chunk, output *chunk.Chunk, outerColLen int, lUsed []int, rUsed []int) (bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14839" y="884.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="986" x="14851" y="891.0059">filterAndCheckOuterRowStatus(input *chunk.Chunk, output *chunk.Chunk, innerColsLen int, outerRowStatus []outerRowStatusFlag, lUsed []int, rUsed []int) ([]outerRowStatusFlag, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="14854" y="903.9609"/><ellipse cx="14842" cy="913.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="14851" y="916.916">Clone() baseJoiner</text><!--MD5=[d7952be191ef1fc1a0693bbd9abcb3f9]
class executor.brieQueue--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="138.6855" id="executor.brieQueue" style="stroke: #A80036; stroke-width: 1.5;" width="451" x="36490.5" y="1656.5"/><ellipse cx="36681.75" cy="1672.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36680.9834,1673.563 Q36679.1323,1672.8574 36678.4766,1672.0813 Q36677.8208,1671.3052 36677.8208,1669.9937 Q36677.8208,1668.3086 36678.8999,1667.3457 Q36679.979,1666.3828 36681.8633,1666.3828 Q36682.7183,1666.3828 36683.5732,1666.5779 Q36684.4282,1666.7729 36685.2666,1667.1548 L36685.2666,1669.5454 Q36684.478,1668.9893 36683.6646,1668.6987 Q36682.8511,1668.4082 36682.0542,1668.4082 Q36681.166,1668.4082 36680.6929,1668.7651 Q36680.2197,1669.1221 36680.2197,1669.7861 Q36680.2197,1670.3008 36680.5642,1670.637 Q36680.9087,1670.9731 36682.0044,1671.3799 L36683.0586,1671.7783 Q36684.5527,1672.3262 36685.2583,1673.231 Q36685.9639,1674.1357 36685.9639,1675.5137 Q36685.9639,1677.3896 36684.8557,1678.3152 Q36683.7476,1679.2407 36681.5063,1679.2407 Q36680.585,1679.2407 36679.6594,1679.0208 Q36678.7339,1678.8008 36677.8706,1678.3691 L36677.8706,1675.8374 Q36678.8501,1676.5347 36679.7673,1676.875 Q36680.6846,1677.2153 36681.5811,1677.2153 Q36682.4858,1677.2153 36682.9839,1676.8044 Q36683.4819,1676.3936 36683.4819,1675.6548 Q36683.4819,1675.0986 36683.1499,1674.6794 Q36682.8179,1674.2603 36682.187,1674.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="60" x="36702.25" y="1677.0352">brieQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36491.5" x2="36940.5" y1="1688.5" y2="1688.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36498.5" y="1696.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="36510.5" y="1703.1348">nextID uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36498.5" y="1709.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="36510.5" y="1716.0898">tasks sync.Map</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36498.5" y="1722.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="36510.5" y="1729.0449">workerCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="36565.5" y="1729.0449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="36594.5" y="1729.0449"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="36594.5" y="1729.0449">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="36626.5" y="1729.0449">{}</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36491.5" x2="36940.5" y1="1735.3652" y2="1735.3652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36498.5" y="1743.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="423" x="36510.5" y="1750">registerTask(ctx context.Context, info *brieTaskInfo) (context.Context, uint64)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36498.5" y="1756.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="36510.5" y="1762.9551">acquireTask(taskCtx context.Context, taskID uint64) (*brieTaskProgress, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36498.5" y="1769.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="36510.5" y="1775.9102">releaseTask()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36498.5" y="1782.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="36510.5" y="1788.8652">cancelTask(taskID uint64)</text><!--MD5=[356882e3f2a9798c805352ef0e823dd0]
class executor.brieQueueItem--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.brieQueueItem" style="stroke: #A80036; stroke-width: 1.5;" width="177" x="36976.5" y="1682.5"/><ellipse cx="37018.5" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M37017.7334,1699.563 Q37015.8823,1698.8574 37015.2266,1698.0813 Q37014.5708,1697.3052 37014.5708,1695.9937 Q37014.5708,1694.3086 37015.6499,1693.3457 Q37016.729,1692.3828 37018.6133,1692.3828 Q37019.4683,1692.3828 37020.3232,1692.5779 Q37021.1782,1692.7729 37022.0166,1693.1548 L37022.0166,1695.5454 Q37021.228,1694.9893 37020.4146,1694.6987 Q37019.6011,1694.4082 37018.8042,1694.4082 Q37017.916,1694.4082 37017.4429,1694.7651 Q37016.9697,1695.1221 37016.9697,1695.7861 Q37016.9697,1696.3008 37017.3142,1696.637 Q37017.6587,1696.9731 37018.7544,1697.3799 L37019.8086,1697.7783 Q37021.3027,1698.3262 37022.0083,1699.231 Q37022.7139,1700.1357 37022.7139,1701.5137 Q37022.7139,1703.3896 37021.6057,1704.3152 Q37020.4976,1705.2407 37018.2563,1705.2407 Q37017.335,1705.2407 37016.4094,1705.0208 Q37015.4839,1704.8008 37014.6206,1704.3691 L37014.6206,1701.8374 Q37015.6001,1702.5347 37016.5173,1702.875 Q37017.4346,1703.2153 37018.3311,1703.2153 Q37019.2358,1703.2153 37019.7339,1702.8044 Q37020.2319,1702.3936 37020.2319,1701.6548 Q37020.2319,1701.0986 37019.8999,1700.6794 Q37019.5679,1700.2603 37018.937,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="37038.5" y="1703.0352">brieQueueItem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36977.5" x2="37152.5" y1="1714.5" y2="1714.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36984.5" y="1722.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="36996.5" y="1729.1348">info *brieTaskInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36984.5" y="1735.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="36996.5" y="1742.0898">progress *brieTaskProgress</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36977.5" x2="37152.5" y1="1748.4102" y2="1748.4102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36984.5" y="1756.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="36996.5" y="1763.0449">cancel</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="37033.5" y="1763.0449">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="37057.5" y="1763.0449">()</text><!--MD5=[cab6ac1f8d9ac2e34009a4a331d9a4c8]
class executor.brieTaskInfo--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="138.6855" id="executor.brieTaskInfo" style="stroke: #A80036; stroke-width: 1.5;" width="146" x="34498" y="2438"/><ellipse cx="34531.9" cy="2454" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34531.1334,2455.063 Q34529.2823,2454.3574 34528.6266,2453.5813 Q34527.9708,2452.8052 34527.9708,2451.4937 Q34527.9708,2449.8086 34529.0499,2448.8457 Q34530.129,2447.8828 34532.0133,2447.8828 Q34532.8683,2447.8828 34533.7232,2448.0779 Q34534.5782,2448.2729 34535.4166,2448.6548 L34535.4166,2451.0454 Q34534.628,2450.4893 34533.8146,2450.1987 Q34533.0011,2449.9082 34532.2042,2449.9082 Q34531.316,2449.9082 34530.8429,2450.2651 Q34530.3697,2450.6221 34530.3697,2451.2861 Q34530.3697,2451.8008 34530.7142,2452.137 Q34531.0587,2452.4731 34532.1544,2452.8799 L34533.2086,2453.2783 Q34534.7027,2453.8262 34535.4083,2454.731 Q34536.1139,2455.6357 34536.1139,2457.0137 Q34536.1139,2458.8896 34535.0057,2459.8152 Q34533.8976,2460.7407 34531.6563,2460.7407 Q34530.735,2460.7407 34529.8094,2460.5208 Q34528.8839,2460.3008 34528.0206,2459.8691 L34528.0206,2457.3374 Q34529.0001,2458.0347 34529.9173,2458.375 Q34530.8346,2458.7153 34531.7311,2458.7153 Q34532.6358,2458.7153 34533.1339,2458.3044 Q34533.6319,2457.8936 34533.6319,2457.1548 Q34533.6319,2456.5986 34533.2999,2456.1794 Q34532.9679,2455.7603 34532.337,2455.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="34550.1" y="2458.5352">brieTaskInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34499" x2="34643" y1="2470" y2="2470"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34506" y="2478"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="34518" y="2484.6348">queueTime types.Time</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34506" y="2490.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="34518" y="2497.5898">execTime types.Time</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34506" y="2503.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="34518" y="2510.5449">kind ast.BRIEKind</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34506" y="2516.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="34518" y="2523.5">storage string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34506" y="2529.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="34518" y="2536.4551">connID uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34506" y="2542.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="34518" y="2549.4102">backupTS uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34506" y="2555.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="34518" y="2562.3652">archiveSize uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34499" x2="34643" y1="2568.6855" y2="2568.6855"/><!--MD5=[acce6471a1a085425bbe9f062f16d429]
class executor.brieTaskProgress--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.brieTaskProgress" style="stroke: #A80036; stroke-width: 1.5;" width="133" x="34679.5" y="2444.5"/><ellipse cx="34694.5" cy="2460.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34693.7334,2461.563 Q34691.8823,2460.8574 34691.2266,2460.0813 Q34690.5708,2459.3052 34690.5708,2457.9937 Q34690.5708,2456.3086 34691.6499,2455.3457 Q34692.729,2454.3828 34694.6133,2454.3828 Q34695.4683,2454.3828 34696.3232,2454.5779 Q34697.1782,2454.7729 34698.0166,2455.1548 L34698.0166,2457.5454 Q34697.228,2456.9893 34696.4146,2456.6987 Q34695.6011,2456.4082 34694.8042,2456.4082 Q34693.916,2456.4082 34693.4429,2456.7651 Q34692.9697,2457.1221 34692.9697,2457.7861 Q34692.9697,2458.3008 34693.3142,2458.637 Q34693.6587,2458.9731 34694.7544,2459.3799 L34695.8086,2459.7783 Q34697.3027,2460.3262 34698.0083,2461.231 Q34698.7139,2462.1357 34698.7139,2463.5137 Q34698.7139,2465.3896 34697.6057,2466.3152 Q34696.4976,2467.2407 34694.2563,2467.2407 Q34693.335,2467.2407 34692.4094,2467.0208 Q34691.4839,2466.8008 34690.6206,2466.3691 L34690.6206,2463.8374 Q34691.6001,2464.5347 34692.5173,2464.875 Q34693.4346,2465.2153 34694.3311,2465.2153 Q34695.2358,2465.2153 34695.7339,2464.8044 Q34696.2319,2464.3936 34696.2319,2463.6548 Q34696.2319,2463.0986 34695.8999,2462.6794 Q34695.5679,2462.2603 34694.937,2462.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="101" x="34708.5" y="2465.0352">brieTaskProgress</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34680.5" x2="34811.5" y1="2476.5" y2="2476.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34687.5" y="2484.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="34699.5" y="2491.1348">current int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34687.5" y="2497.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="34699.5" y="2504.0898">lock sync.Mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34687.5" y="2510.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="34699.5" y="2517.0449">cmd string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34687.5" y="2523.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="34699.5" y="2530">total int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34680.5" x2="34811.5" y1="2536.3203" y2="2536.3203"/><ellipse cx="34690.5" cy="2547.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="34699.5" y="2550.9551">Inc()</text><ellipse cx="34690.5" cy="2560.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="34699.5" y="2563.9102">Close()</text><!--MD5=[3f8fbd379142b816ac55932cfdc1675c]
class executor.checkIndexValue--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.checkIndexValue" style="stroke: #A80036; stroke-width: 1.5;" width="352" x="8342" y="1682.5"/><ellipse cx="8465.25" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8464.4834,1699.563 Q8462.6323,1698.8574 8461.9766,1698.0813 Q8461.3208,1697.3052 8461.3208,1695.9937 Q8461.3208,1694.3086 8462.3999,1693.3457 Q8463.479,1692.3828 8465.3633,1692.3828 Q8466.2183,1692.3828 8467.0732,1692.5779 Q8467.9282,1692.7729 8468.7666,1693.1548 L8468.7666,1695.5454 Q8467.978,1694.9893 8467.1646,1694.6987 Q8466.3511,1694.4082 8465.5542,1694.4082 Q8464.666,1694.4082 8464.1929,1694.7651 Q8463.7197,1695.1221 8463.7197,1695.7861 Q8463.7197,1696.3008 8464.0642,1696.637 Q8464.4087,1696.9731 8465.5044,1697.3799 L8466.5586,1697.7783 Q8468.0527,1698.3262 8468.7583,1699.231 Q8469.4639,1700.1357 8469.4639,1701.5137 Q8469.4639,1703.3896 8468.3557,1704.3152 Q8467.2476,1705.2407 8465.0063,1705.2407 Q8464.085,1705.2407 8463.1594,1705.0208 Q8462.2339,1704.8008 8461.3706,1704.3691 L8461.3706,1701.8374 Q8462.3501,1702.5347 8463.2673,1702.875 Q8464.1846,1703.2153 8465.0811,1703.2153 Q8465.9858,1703.2153 8466.4839,1702.8044 Q8466.9819,1702.3936 8466.9819,1701.6548 Q8466.9819,1701.0986 8466.6499,1700.6794 Q8466.3179,1700.2603 8465.687,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="8485.75" y="1703.0352">checkIndexValue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8343" x2="8693" y1="1714.5" y2="1714.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8350" y="1722.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="8362" y="1729.1348">idxColTps []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8350" y="1735.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="8362" y="1742.0898">idxTblCols []*table.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8350" y="1748.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="8362" y="1755.0449">genExprs</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="8416" y="1755.0449">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="8439" y="1755.0449">[model.TableColumnID]expression.Expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8343" x2="8693" y1="1761.3652" y2="1761.3652"/><!--MD5=[46018cd5182e961e08469f5887285896]
class executor.checkRegionHealth--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.checkRegionHealth" style="stroke: #A80036; stroke-width: 1.5;" width="307" x="5462.5" y="1682.5"/><ellipse cx="5557.25" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5556.4834,1699.563 Q5554.6323,1698.8574 5553.9766,1698.0813 Q5553.3208,1697.3052 5553.3208,1695.9937 Q5553.3208,1694.3086 5554.3999,1693.3457 Q5555.479,1692.3828 5557.3633,1692.3828 Q5558.2183,1692.3828 5559.0732,1692.5779 Q5559.9282,1692.7729 5560.7666,1693.1548 L5560.7666,1695.5454 Q5559.978,1694.9893 5559.1646,1694.6987 Q5558.3511,1694.4082 5557.5542,1694.4082 Q5556.666,1694.4082 5556.1929,1694.7651 Q5555.7197,1695.1221 5555.7197,1695.7861 Q5555.7197,1696.3008 5556.0642,1696.637 Q5556.4087,1696.9731 5557.5044,1697.3799 L5558.5586,1697.7783 Q5560.0527,1698.3262 5560.7583,1699.231 Q5561.4639,1700.1357 5561.4639,1701.5137 Q5561.4639,1703.3896 5560.3557,1704.3152 Q5559.2476,1705.2407 5557.0063,1705.2407 Q5556.085,1705.2407 5555.1594,1705.0208 Q5554.2339,1704.8008 5553.3706,1704.3691 L5553.3706,1701.8374 Q5554.3501,1702.5347 5555.2673,1702.875 Q5556.1846,1703.2153 5557.0811,1703.2153 Q5557.9858,1703.2153 5558.4839,1702.8044 Q5558.9819,1702.3936 5558.9819,1701.6548 Q5558.9819,1701.0986 5558.6499,1700.6794 Q5558.3179,1700.2603 5557.687,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="5577.75" y="1703.0352">checkRegionHealth</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5463.5" x2="5768.5" y1="1714.5" y2="1714.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5463.5" x2="5768.5" y1="1722.5" y2="1722.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5470.5" y="1730.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="5482.5" y="1737.1348">genSQL(timeRange core.QueryTimeRange) string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5470.5" y="1743.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="5482.5" y="1750.0898">genResult(_ string, row chunk.Row) inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5470.5" y="1756.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="5482.5" y="1763.0449">getItem() string</text><!--MD5=[547114b44a16b4dddbdd08120452b870]
class executor.checkStoreRegionTooMuch--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.checkStoreRegionTooMuch" style="stroke: #A80036; stroke-width: 1.5;" width="317" x="5804.5" y="1682.5"/><ellipse cx="5882.25" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5881.4834,1699.563 Q5879.6323,1698.8574 5878.9766,1698.0813 Q5878.3208,1697.3052 5878.3208,1695.9937 Q5878.3208,1694.3086 5879.3999,1693.3457 Q5880.479,1692.3828 5882.3633,1692.3828 Q5883.2183,1692.3828 5884.0732,1692.5779 Q5884.9282,1692.7729 5885.7666,1693.1548 L5885.7666,1695.5454 Q5884.978,1694.9893 5884.1646,1694.6987 Q5883.3511,1694.4082 5882.5542,1694.4082 Q5881.666,1694.4082 5881.1929,1694.7651 Q5880.7197,1695.1221 5880.7197,1695.7861 Q5880.7197,1696.3008 5881.0642,1696.637 Q5881.4087,1696.9731 5882.5044,1697.3799 L5883.5586,1697.7783 Q5885.0527,1698.3262 5885.7583,1699.231 Q5886.4639,1700.1357 5886.4639,1701.5137 Q5886.4639,1703.3896 5885.3557,1704.3152 Q5884.2476,1705.2407 5882.0063,1705.2407 Q5881.085,1705.2407 5880.1594,1705.0208 Q5879.2339,1704.8008 5878.3706,1704.3691 L5878.3706,1701.8374 Q5879.3501,1702.5347 5880.2673,1702.875 Q5881.1846,1703.2153 5882.0811,1703.2153 Q5882.9858,1703.2153 5883.4839,1702.8044 Q5883.9819,1702.3936 5883.9819,1701.6548 Q5883.9819,1701.0986 5883.6499,1700.6794 Q5883.3179,1700.2603 5882.687,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="153" x="5902.75" y="1703.0352">checkStoreRegionTooMuch</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5805.5" x2="6120.5" y1="1714.5" y2="1714.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5805.5" x2="6120.5" y1="1722.5" y2="1722.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5812.5" y="1730.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="5824.5" y="1737.1348">genSQL(timeRange core.QueryTimeRange) string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5812.5" y="1743.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="5824.5" y="1750.0898">genResult(sql string, row chunk.Row) inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5812.5" y="1756.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="5824.5" y="1763.0449">getItem() string</text><!--MD5=[460c7a33ed363ff882cf24e0d5360bc9]
class executor.checksumContext--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="177.5508" id="executor.checksumContext" style="stroke: #A80036; stroke-width: 1.5;" width="592" x="34848" y="2418.5"/><ellipse cx="35089.25" cy="2434.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35088.4834,2435.563 Q35086.6323,2434.8574 35085.9766,2434.0813 Q35085.3208,2433.3052 35085.3208,2431.9937 Q35085.3208,2430.3086 35086.3999,2429.3457 Q35087.479,2428.3828 35089.3633,2428.3828 Q35090.2183,2428.3828 35091.0732,2428.5779 Q35091.9282,2428.7729 35092.7666,2429.1548 L35092.7666,2431.5454 Q35091.978,2430.9893 35091.1646,2430.6987 Q35090.3511,2430.4082 35089.5542,2430.4082 Q35088.666,2430.4082 35088.1929,2430.7651 Q35087.7197,2431.1221 35087.7197,2431.7861 Q35087.7197,2432.3008 35088.0642,2432.637 Q35088.4087,2432.9731 35089.5044,2433.3799 L35090.5586,2433.7783 Q35092.0527,2434.3262 35092.7583,2435.231 Q35093.4639,2436.1357 35093.4639,2437.5137 Q35093.4639,2439.3896 35092.3557,2440.3152 Q35091.2476,2441.2407 35089.0063,2441.2407 Q35088.085,2441.2407 35087.1594,2441.0208 Q35086.2339,2440.8008 35085.3706,2440.3691 L35085.3706,2437.8374 Q35086.3501,2438.5347 35087.2673,2438.875 Q35088.1846,2439.2153 35089.0811,2439.2153 Q35089.9858,2439.2153 35090.4839,2438.8044 Q35090.9819,2438.3936 35090.9819,2437.6548 Q35090.9819,2437.0986 35090.6499,2436.6794 Q35090.3179,2436.2603 35089.687,2436.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="101" x="35109.75" y="2439.0352">checksumContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34849" x2="35439" y1="2450.5" y2="2450.5"/><ellipse cx="34859" cy="2461.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="34868" y="2465.1348">DBInfo *model.DBInfo</text><ellipse cx="34859" cy="2474.4551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="34868" y="2478.0898">TableInfo *model.TableInfo</text><ellipse cx="34859" cy="2487.4102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="34868" y="2491.0449">StartTs uint64</text><ellipse cx="34859" cy="2500.3652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="34868" y="2504">Response *tipb.ChecksumResponse</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34849" x2="35439" y1="2510.3203" y2="2510.3203"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34856" y="2518.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="34868" y="2524.9551">appendRequest(ctx sessionctx.Context, tableID int64, reqs *[]*kv.Request) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34856" y="2531.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="34868" y="2537.9102">buildTableRequest(ctx sessionctx.Context, tableID int64) (*kv.Request, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34856" y="2544.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="566" x="34868" y="2550.8652">buildIndexRequest(ctx sessionctx.Context, tableID int64, indexInfo *model.IndexInfo) (*kv.Request, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="34871" y="2563.8203"/><ellipse cx="34859" cy="2573.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="34868" y="2576.7754">BuildRequests(ctx sessionctx.Context) ([]*kv.Request, error)</text><ellipse cx="34859" cy="2586.0957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="34868" y="2589.7305">HandleResponse(update *tipb.ChecksumResponse)</text><!--MD5=[d269426b2df8b4a13a34490221f1078d]
class executor.checksumResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.checksumResult" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="35475" y="2464"/><ellipse cx="35533.75" cy="2480" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35532.9834,2481.063 Q35531.1323,2480.3574 35530.4766,2479.5813 Q35529.8208,2478.8052 35529.8208,2477.4937 Q35529.8208,2475.8086 35530.8999,2474.8457 Q35531.979,2473.8828 35533.8633,2473.8828 Q35534.7183,2473.8828 35535.5732,2474.0779 Q35536.4282,2474.2729 35537.2666,2474.6548 L35537.2666,2477.0454 Q35536.478,2476.4893 35535.6646,2476.1987 Q35534.8511,2475.9082 35534.0542,2475.9082 Q35533.166,2475.9082 35532.6929,2476.2651 Q35532.2197,2476.6221 35532.2197,2477.2861 Q35532.2197,2477.8008 35532.5642,2478.137 Q35532.9087,2478.4731 35534.0044,2478.8799 L35535.0586,2479.2783 Q35536.5527,2479.8262 35537.2583,2480.731 Q35537.9639,2481.6357 35537.9639,2483.0137 Q35537.9639,2484.8896 35536.8557,2485.8152 Q35535.7476,2486.7407 35533.5063,2486.7407 Q35532.585,2486.7407 35531.6594,2486.5208 Q35530.7339,2486.3008 35529.8706,2485.8691 L35529.8706,2483.3374 Q35530.8501,2484.0347 35531.7673,2484.375 Q35532.6846,2484.7153 35533.5811,2484.7153 Q35534.4858,2484.7153 35534.9839,2484.3044 Q35535.4819,2483.8936 35535.4819,2483.1548 Q35535.4819,2482.5986 35535.1499,2482.1794 Q35534.8179,2481.7603 35534.187,2481.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="35554.25" y="2484.5352">checksumResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35476" x2="35692" y1="2496" y2="2496"/><ellipse cx="35486" cy="2507" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="35495" y="2510.6348">Error error</text><ellipse cx="35486" cy="2519.9551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="35495" y="2523.5898">TableID int64</text><ellipse cx="35486" cy="2532.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="35495" y="2536.5449">Response *tipb.ChecksumResponse</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35476" x2="35692" y1="2542.8652" y2="2542.8652"/><!--MD5=[f07e17e5717d823c0ce4bbf79e4452b3]
class executor.checksumTask--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.checksumTask" style="stroke: #A80036; stroke-width: 1.5;" width="135" x="35728.5" y="2470.5"/><ellipse cx="35751.6" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35750.8334,2487.563 Q35748.9823,2486.8574 35748.3266,2486.0813 Q35747.6708,2485.3052 35747.6708,2483.9937 Q35747.6708,2482.3086 35748.7499,2481.3457 Q35749.829,2480.3828 35751.7133,2480.3828 Q35752.5683,2480.3828 35753.4232,2480.5779 Q35754.2782,2480.7729 35755.1166,2481.1548 L35755.1166,2483.5454 Q35754.328,2482.9893 35753.5146,2482.6987 Q35752.7011,2482.4082 35751.9042,2482.4082 Q35751.016,2482.4082 35750.5429,2482.7651 Q35750.0697,2483.1221 35750.0697,2483.7861 Q35750.0697,2484.3008 35750.4142,2484.637 Q35750.7587,2484.9731 35751.8544,2485.3799 L35752.9086,2485.7783 Q35754.4027,2486.3262 35755.1083,2487.231 Q35755.8139,2488.1357 35755.8139,2489.5137 Q35755.8139,2491.3896 35754.7057,2492.3152 Q35753.5976,2493.2407 35751.3563,2493.2407 Q35750.435,2493.2407 35749.5094,2493.0208 Q35748.5839,2492.8008 35747.7206,2492.3691 L35747.7206,2489.8374 Q35748.7001,2490.5347 35749.6173,2490.875 Q35750.5346,2491.2153 35751.4311,2491.2153 Q35752.3358,2491.2153 35752.8339,2490.8044 Q35753.3319,2490.3936 35753.3319,2489.6548 Q35753.3319,2489.0986 35752.9999,2488.6794 Q35752.6679,2488.2603 35752.037,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="35767.4" y="2491.0352">checksumTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35729.5" x2="35862.5" y1="2502.5" y2="2502.5"/><ellipse cx="35739.5" cy="2513.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="35748.5" y="2517.1348">TableID int64</text><ellipse cx="35739.5" cy="2526.4551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="35748.5" y="2530.0898">Request *kv.Request</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35729.5" x2="35862.5" y1="2536.4102" y2="2536.4102"/><!--MD5=[5178038bb59539198f860526b4fa614d]
class executor.chunkRowRecordSet--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="164.5957" id="executor.chunkRowRecordSet" style="stroke: #A80036; stroke-width: 1.5;" width="301" x="26426.5" y="1643.5"/><ellipse cx="26514.75" cy="1659.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26513.9834,1660.563 Q26512.1323,1659.8574 26511.4766,1659.0813 Q26510.8208,1658.3052 26510.8208,1656.9937 Q26510.8208,1655.3086 26511.8999,1654.3457 Q26512.979,1653.3828 26514.8633,1653.3828 Q26515.7183,1653.3828 26516.5732,1653.5779 Q26517.4282,1653.7729 26518.2666,1654.1548 L26518.2666,1656.5454 Q26517.478,1655.9893 26516.6646,1655.6987 Q26515.8511,1655.4082 26515.0542,1655.4082 Q26514.166,1655.4082 26513.6929,1655.7651 Q26513.2197,1656.1221 26513.2197,1656.7861 Q26513.2197,1657.3008 26513.5642,1657.637 Q26513.9087,1657.9731 26515.0044,1658.3799 L26516.0586,1658.7783 Q26517.5527,1659.3262 26518.2583,1660.231 Q26518.9639,1661.1357 26518.9639,1662.5137 Q26518.9639,1664.3896 26517.8557,1665.3152 Q26516.7476,1666.2407 26514.5063,1666.2407 Q26513.585,1666.2407 26512.6594,1666.0208 Q26511.7339,1665.8008 26510.8706,1665.3691 L26510.8706,1662.8374 Q26511.8501,1663.5347 26512.7673,1663.875 Q26513.6846,1664.2153 26514.5811,1664.2153 Q26515.4858,1664.2153 26515.9839,1663.8044 Q26516.4819,1663.3936 26516.4819,1662.6548 Q26516.4819,1662.0986 26516.1499,1661.6794 Q26515.8179,1661.2603 26515.187,1661.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="26535.25" y="1664.0352">chunkRowRecordSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26427.5" x2="26726.5" y1="1675.5" y2="1675.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26434.5" y="1683.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26446.5" y="1690.1348">rows []chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26434.5" y="1696.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="26446.5" y="1703.0898">idx int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26434.5" y="1709.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="26446.5" y="1716.0449">fields []*ast.ResultField</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26434.5" y="1722.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="26446.5" y="1729">e Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26434.5" y="1735.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="26446.5" y="1741.9551">execStmt *ExecStmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26427.5" x2="26726.5" y1="1748.2754" y2="1748.2754"/><ellipse cx="26437.5" cy="1759.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="26446.5" y="1762.9102">Fields() []*ast.ResultField</text><ellipse cx="26437.5" cy="1772.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="26446.5" y="1775.8652">Next(ctx context.Context, chk *chunk.Chunk) error</text><ellipse cx="26437.5" cy="1785.1855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="26446.5" y="1788.8203">NewChunk() *chunk.Chunk</text><ellipse cx="26437.5" cy="1798.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="26446.5" y="1801.7754">Close() error</text><!--MD5=[cfaad8d14c0d1e966b598a04ae851677]
class executor.clusterConfigRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.clusterConfigRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="435" x="21935.5" y="1682.5"/><ellipse cx="22085.75" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22084.9834,1699.563 Q22083.1323,1698.8574 22082.4766,1698.0813 Q22081.8208,1697.3052 22081.8208,1695.9937 Q22081.8208,1694.3086 22082.8999,1693.3457 Q22083.979,1692.3828 22085.8633,1692.3828 Q22086.7183,1692.3828 22087.5732,1692.5779 Q22088.4282,1692.7729 22089.2666,1693.1548 L22089.2666,1695.5454 Q22088.478,1694.9893 22087.6646,1694.6987 Q22086.8511,1694.4082 22086.0542,1694.4082 Q22085.166,1694.4082 22084.6929,1694.7651 Q22084.2197,1695.1221 22084.2197,1695.7861 Q22084.2197,1696.3008 22084.5642,1696.637 Q22084.9087,1696.9731 22086.0044,1697.3799 L22087.0586,1697.7783 Q22088.5527,1698.3262 22089.2583,1699.231 Q22089.9639,1700.1357 22089.9639,1701.5137 Q22089.9639,1703.3896 22088.8557,1704.3152 Q22087.7476,1705.2407 22085.5063,1705.2407 Q22084.585,1705.2407 22083.6594,1705.0208 Q22082.7339,1704.8008 22081.8706,1704.3691 L22081.8706,1701.8374 Q22082.8501,1702.5347 22083.7673,1702.875 Q22084.6846,1703.2153 22085.5811,1703.2153 Q22086.4858,1703.2153 22086.9839,1702.8044 Q22087.4819,1702.3936 22087.4819,1701.6548 Q22087.4819,1701.0986 22087.1499,1700.6794 Q22086.8179,1700.2603 22086.187,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="126" x="22106.25" y="1703.0352">clusterConfigRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21936.5" x2="22369.5" y1="1714.5" y2="1714.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21943.5" y="1722.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="21955.5" y="1729.1348">retrieved bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21943.5" y="1735.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="21955.5" y="1742.0898">extractor *core.ClusterTableExtractor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21936.5" x2="22369.5" y1="1748.4102" y2="1748.4102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21943.5" y="1756.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="21955.5" y="1763.0449">retrieve(_ context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><!--MD5=[ea529afbf4ca60baeb0df21a6e0dff6f]
class executor.clusterLogRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="164.5957" id="executor.clusterLogRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="933" x="9309.5" y="1643.5"/><ellipse cx="9716.75" cy="1659.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9715.9834,1660.563 Q9714.1323,1659.8574 9713.4766,1659.0813 Q9712.8208,1658.3052 9712.8208,1656.9937 Q9712.8208,1655.3086 9713.8999,1654.3457 Q9714.979,1653.3828 9716.8633,1653.3828 Q9717.7183,1653.3828 9718.5732,1653.5779 Q9719.4282,1653.7729 9720.2666,1654.1548 L9720.2666,1656.5454 Q9719.478,1655.9893 9718.6646,1655.6987 Q9717.8511,1655.4082 9717.0542,1655.4082 Q9716.166,1655.4082 9715.6929,1655.7651 Q9715.2197,1656.1221 9715.2197,1656.7861 Q9715.2197,1657.3008 9715.5642,1657.637 Q9715.9087,1657.9731 9717.0044,1658.3799 L9718.0586,1658.7783 Q9719.5527,1659.3262 9720.2583,1660.231 Q9720.9639,1661.1357 9720.9639,1662.5137 Q9720.9639,1664.3896 9719.8557,1665.3152 Q9718.7476,1666.2407 9716.5063,1666.2407 Q9715.585,1666.2407 9714.6594,1666.0208 Q9713.7339,1665.8008 9712.8706,1665.3691 L9712.8706,1662.8374 Q9713.8501,1663.5347 9714.7673,1663.875 Q9715.6846,1664.2153 9716.5811,1664.2153 Q9717.4858,1664.2153 9717.9839,1663.8044 Q9718.4819,1663.3936 9718.4819,1662.6548 Q9718.4819,1662.0986 9718.1499,1661.6794 Q9717.8179,1661.2603 9717.187,1661.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="9737.25" y="1664.0352">clusterLogRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9310.5" x2="10241.5" y1="1675.5" y2="1675.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9317.5" y="1683.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="9329.5" y="1690.1348">isDrained bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9317.5" y="1696.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="9329.5" y="1703.0898">retrieving bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9317.5" y="1709.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="9329.5" y="1716.0449">heap *logResponseHeap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9317.5" y="1722.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="9329.5" y="1729">extractor *core.ClusterLogTableExtractor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9317.5" y="1735.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="9329.5" y="1741.9551">cancel context.CancelFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9310.5" x2="10241.5" y1="1748.2754" y2="1748.2754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9317.5" y="1756.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="9329.5" y="1762.9102">initialize(ctx context.Context, sctx sessionctx.Context) ([]</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="9639.5" y="1762.9102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="9668.5" y="1762.9102">logStreamResult, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9317.5" y="1769.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="753" x="9329.5" y="1775.8652">startRetrieving(ctx context.Context, sctx sessionctx.Context, serversInfo []infoschema.ServerInfo, req *diagnosticspb.SearchLogRequest) ([]</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="10082.5" y="1775.8652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="10111.5" y="1775.8652">logStreamResult, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9317.5" y="1782.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="9329.5" y="1788.8203">retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9317.5" y="1795.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="9329.5" y="1801.7754">close() error</text><!--MD5=[fb6c949d3dadfa41214cd2144b5ac44d]
class executor.clusterServerInfoRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.clusterServerInfoRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="17844" y="1676"/><ellipse cx="17989.25" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M17988.4834,1693.063 Q17986.6323,1692.3574 17985.9766,1691.5813 Q17985.3208,1690.8052 17985.3208,1689.4937 Q17985.3208,1687.8086 17986.3999,1686.8457 Q17987.479,1685.8828 17989.3633,1685.8828 Q17990.2183,1685.8828 17991.0732,1686.0779 Q17991.9282,1686.2729 17992.7666,1686.6548 L17992.7666,1689.0454 Q17991.978,1688.4893 17991.1646,1688.1987 Q17990.3511,1687.9082 17989.5542,1687.9082 Q17988.666,1687.9082 17988.1929,1688.2651 Q17987.7197,1688.6221 17987.7197,1689.2861 Q17987.7197,1689.8008 17988.0642,1690.137 Q17988.4087,1690.4731 17989.5044,1690.8799 L17990.5586,1691.2783 Q17992.0527,1691.8262 17992.7583,1692.731 Q17993.4639,1693.6357 17993.4639,1695.0137 Q17993.4639,1696.8896 17992.3557,1697.8152 Q17991.2476,1698.7407 17989.0063,1698.7407 Q17988.085,1698.7407 17987.1594,1698.5208 Q17986.2339,1698.3008 17985.3706,1697.8691 L17985.3706,1695.3374 Q17986.3501,1696.0347 17987.2673,1696.375 Q17988.1846,1696.7153 17989.0811,1696.7153 Q17989.9858,1696.7153 17990.4839,1696.3044 Q17990.9819,1695.8936 17990.9819,1695.1548 Q17990.9819,1694.5986 17990.6499,1694.1794 Q17990.3179,1693.7603 17989.687,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="147" x="18009.75" y="1696.5352">clusterServerInfoRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="17845" x2="18289" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17852" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="17864" y="1722.6348">extractor *core.ClusterTableExtractor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17852" y="1728.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="17864" y="1735.5898">serverInfoType diagnosticspb.ServerInfoType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17852" y="1741.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="17864" y="1748.5449">retrieved bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="17845" x2="18289" y1="1754.8652" y2="1754.8652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17852" y="1762.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="17864" y="1769.5">retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><!--MD5=[cc9a0e699a51b80307ff057a19527a1e]
class executor.compareStoreStatus--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.compareStoreStatus" style="stroke: #A80036; stroke-width: 1.5;" width="307" x="6156.5" y="1663"/><ellipse cx="6248.75" cy="1679" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6247.9834,1680.063 Q6246.1323,1679.3574 6245.4766,1678.5813 Q6244.8208,1677.8052 6244.8208,1676.4937 Q6244.8208,1674.8086 6245.8999,1673.8457 Q6246.979,1672.8828 6248.8633,1672.8828 Q6249.7183,1672.8828 6250.5732,1673.0779 Q6251.4282,1673.2729 6252.2666,1673.6548 L6252.2666,1676.0454 Q6251.478,1675.4893 6250.6646,1675.1987 Q6249.8511,1674.9082 6249.0542,1674.9082 Q6248.166,1674.9082 6247.6929,1675.2651 Q6247.2197,1675.6221 6247.2197,1676.2861 Q6247.2197,1676.8008 6247.5642,1677.137 Q6247.9087,1677.4731 6249.0044,1677.8799 L6250.0586,1678.2783 Q6251.5527,1678.8262 6252.2583,1679.731 Q6252.9639,1680.6357 6252.9639,1682.0137 Q6252.9639,1683.8896 6251.8557,1684.8152 Q6250.7476,1685.7407 6248.5063,1685.7407 Q6247.585,1685.7407 6246.6594,1685.5208 Q6245.7339,1685.3008 6244.8706,1684.8691 L6244.8706,1682.3374 Q6245.8501,1683.0347 6246.7673,1683.375 Q6247.6846,1683.7153 6248.5811,1683.7153 Q6249.4858,1683.7153 6249.9839,1683.3044 Q6250.4819,1682.8936 6250.4819,1682.1548 Q6250.4819,1681.5986 6250.1499,1681.1794 Q6249.8179,1680.7603 6249.187,1680.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="6269.25" y="1683.5352">compareStoreStatus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6157.5" x2="6462.5" y1="1695" y2="1695"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6164.5" y="1703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="6176.5" y="1709.6348">item string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6164.5" y="1715.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="6176.5" y="1722.5898">tp string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6164.5" y="1728.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="6176.5" y="1735.5449">threshold float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6157.5" x2="6462.5" y1="1741.8652" y2="1741.8652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6164.5" y="1749.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="6176.5" y="1756.5">genSQL(timeRange core.QueryTimeRange) string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6164.5" y="1762.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="6176.5" y="1769.4551">genResult(_ string, row chunk.Row) inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6164.5" y="1775.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="6176.5" y="1782.4102">getItem() string</text><!--MD5=[91fe46c10953901f2c910b643ffe3283]
class executor.configInspection--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.configInspection" style="stroke: #A80036; stroke-width: 1.5;" width="667" x="10555.5" y="1669.5"/><ellipse cx="10838.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M10837.9834,1686.563 Q10836.1323,1685.8574 10835.4766,1685.0813 Q10834.8208,1684.3052 10834.8208,1682.9937 Q10834.8208,1681.3086 10835.8999,1680.3457 Q10836.979,1679.3828 10838.8633,1679.3828 Q10839.7183,1679.3828 10840.5732,1679.5779 Q10841.4282,1679.7729 10842.2666,1680.1548 L10842.2666,1682.5454 Q10841.478,1681.9893 10840.6646,1681.6987 Q10839.8511,1681.4082 10839.0542,1681.4082 Q10838.166,1681.4082 10837.6929,1681.7651 Q10837.2197,1682.1221 10837.2197,1682.7861 Q10837.2197,1683.3008 10837.5642,1683.637 Q10837.9087,1683.9731 10839.0044,1684.3799 L10840.0586,1684.7783 Q10841.5527,1685.3262 10842.2583,1686.231 Q10842.9639,1687.1357 10842.9639,1688.5137 Q10842.9639,1690.3896 10841.8557,1691.3152 Q10840.7476,1692.2407 10838.5063,1692.2407 Q10837.585,1692.2407 10836.6594,1692.0208 Q10835.7339,1691.8008 10834.8706,1691.3691 L10834.8706,1688.8374 Q10835.8501,1689.5347 10836.7673,1689.875 Q10837.6846,1690.2153 10838.5811,1690.2153 Q10839.4858,1690.2153 10839.9839,1689.8044 Q10840.4819,1689.3936 10840.4819,1688.6548 Q10840.4819,1688.0986 10840.1499,1687.6794 Q10839.8179,1687.2603 10839.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="10859.25" y="1690.0352">configInspection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10556.5" x2="11221.5" y1="1701.5" y2="1701.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="10556.5" x2="11221.5" y1="1709.5" y2="1709.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10563.5" y="1717.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="10575.5" y="1724.1348">inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10563.5" y="1730.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="551" x="10575.5" y="1737.0898">inspectDiffConfig(_ context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10563.5" y="1743.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="576" x="10575.5" y="1750.0449">inspectCheckConfig(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10563.5" y="1756.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="10575.5" y="1763">checkTiKVBlockCacheSizeConfig(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10563.5" y="1769.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="10575.5" y="1775.9551">convertReadableSizeToByteSize(sizeStr string) (uint64, error)</text><!--MD5=[f2c167ad67e6d2e0307622640d9f04b2]
class executor.criticalErrorInspection--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.criticalErrorInspection" style="stroke: #A80036; stroke-width: 1.5;" width="615" x="35898.5" y="2464"/><ellipse cx="36139.75" cy="2480" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36138.9834,2481.063 Q36137.1323,2480.3574 36136.4766,2479.5813 Q36135.8208,2478.8052 36135.8208,2477.4937 Q36135.8208,2475.8086 36136.8999,2474.8457 Q36137.979,2473.8828 36139.8633,2473.8828 Q36140.7183,2473.8828 36141.5732,2474.0779 Q36142.4282,2474.2729 36143.2666,2474.6548 L36143.2666,2477.0454 Q36142.478,2476.4893 36141.6646,2476.1987 Q36140.8511,2475.9082 36140.0542,2475.9082 Q36139.166,2475.9082 36138.6929,2476.2651 Q36138.2197,2476.6221 36138.2197,2477.2861 Q36138.2197,2477.8008 36138.5642,2478.137 Q36138.9087,2478.4731 36140.0044,2478.8799 L36141.0586,2479.2783 Q36142.5527,2479.8262 36143.2583,2480.731 Q36143.9639,2481.6357 36143.9639,2483.0137 Q36143.9639,2484.8896 36142.8557,2485.8152 Q36141.7476,2486.7407 36139.5063,2486.7407 Q36138.585,2486.7407 36137.6594,2486.5208 Q36136.7339,2486.3008 36135.8706,2485.8691 L36135.8706,2483.3374 Q36136.8501,2484.0347 36137.7673,2484.375 Q36138.6846,2484.7153 36139.5811,2484.7153 Q36140.4858,2484.7153 36140.9839,2484.3044 Q36141.4819,2483.8936 36141.4819,2483.1548 Q36141.4819,2482.5986 36141.1499,2482.1794 Q36140.8179,2481.7603 36140.187,2481.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="124" x="36160.25" y="2484.5352">criticalErrorInspection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35899.5" x2="36512.5" y1="2496" y2="2496"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="35899.5" x2="36512.5" y1="2504" y2="2504"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35906.5" y="2512"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="35918.5" y="2518.6348">inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35906.5" y="2524.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="35918.5" y="2531.5898">inspectError(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35906.5" y="2537.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="589" x="35918.5" y="2544.5449">inspectForServerDown(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><!--MD5=[2f4f4eb8ea428853e7157c36b4da10c7]
class executor.dataReaderBuilder--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.dataReaderBuilder" style="stroke: #A80036; stroke-width: 1.5;" width="1347" x="23484.5" y="1650"/><ellipse cx="24099.75" cy="1666" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24098.9834,1667.063 Q24097.1323,1666.3574 24096.4766,1665.5813 Q24095.8208,1664.8052 24095.8208,1663.4937 Q24095.8208,1661.8086 24096.8999,1660.8457 Q24097.979,1659.8828 24099.8633,1659.8828 Q24100.7183,1659.8828 24101.5732,1660.0779 Q24102.4282,1660.2729 24103.2666,1660.6548 L24103.2666,1663.0454 Q24102.478,1662.4893 24101.6646,1662.1987 Q24100.8511,1661.9082 24100.0542,1661.9082 Q24099.166,1661.9082 24098.6929,1662.2651 Q24098.2197,1662.6221 24098.2197,1663.2861 Q24098.2197,1663.8008 24098.5642,1664.137 Q24098.9087,1664.4731 24100.0044,1664.8799 L24101.0586,1665.2783 Q24102.5527,1665.8262 24103.2583,1666.731 Q24103.9639,1667.6357 24103.9639,1669.0137 Q24103.9639,1670.8896 24102.8557,1671.8152 Q24101.7476,1672.7407 24099.5063,1672.7407 Q24098.585,1672.7407 24097.6594,1672.5208 Q24096.7339,1672.3008 24095.8706,1671.8691 L24095.8706,1669.3374 Q24096.8501,1670.0347 24097.7673,1670.375 Q24098.6846,1670.7153 24099.5811,1670.7153 Q24100.4858,1670.7153 24100.9839,1670.3044 Q24101.4819,1669.8936 24101.4819,1669.1548 Q24101.4819,1668.5986 24101.1499,1668.1794 Q24100.8179,1667.7603 24100.187,1667.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="24120.25" y="1670.5352">dataReaderBuilder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23485.5" x2="24830.5" y1="1682" y2="1682"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="23485.5" x2="24830.5" y1="1690" y2="1690"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23492.5" y="1698"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1063" x="23504.5" y="1704.6348">buildExecutorForIndexJoin(ctx context.Context, lookUpContents []*indexJoinLookUpContent, IndexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23492.5" y="1710.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1185" x="23504.5" y="1717.5898">buildExecutorForIndexJoinInternal(ctx context.Context, plan core.Plan, lookUpContents []*indexJoinLookUpContent, IndexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23492.5" y="1723.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1166" x="23504.5" y="1730.5449">buildUnionScanForIndexJoin(ctx context.Context, v *core.PhysicalUnionScan, values []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23492.5" y="1736.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="768" x="23504.5" y="1743.5">buildTableReaderForIndexJoin(ctx context.Context, v *core.PhysicalTableReader, lookUpContents []*indexJoinLookUpContent) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23492.5" y="1749.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="593" x="23504.5" y="1756.4551">buildTableReaderFromHandles(ctx context.Context, e *TableReaderExecutor, handles []int64) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23492.5" y="1762.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1239" x="23504.5" y="1769.4102">buildIndexReaderForIndexJoin(ctx context.Context, v *core.PhysicalIndexReader, lookUpContents []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23492.5" y="1775.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1321" x="23504.5" y="1782.3652">buildIndexLookUpReaderForIndexJoin(ctx context.Context, v *core.PhysicalIndexLookUpReader, lookUpContents []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23492.5" y="1788.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1213" x="23504.5" y="1795.3203">buildProjectionForIndexJoin(ctx context.Context, v *core.PhysicalProjection, lookUpContents []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)</text><!--MD5=[c3c6ae1e764f614248a6cb847111758c]
class executor.defaultVal--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.defaultVal" style="stroke: #A80036; stroke-width: 1.5;" width="111" x="36548.5" y="2470.5"/><ellipse cx="36572.95" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36572.1834,2487.563 Q36570.3323,2486.8574 36569.6766,2486.0813 Q36569.0208,2485.3052 36569.0208,2483.9937 Q36569.0208,2482.3086 36570.0999,2481.3457 Q36571.179,2480.3828 36573.0633,2480.3828 Q36573.9183,2480.3828 36574.7732,2480.5779 Q36575.6282,2480.7729 36576.4666,2481.1548 L36576.4666,2483.5454 Q36575.678,2482.9893 36574.8646,2482.6987 Q36574.0511,2482.4082 36573.2542,2482.4082 Q36572.366,2482.4082 36571.8929,2482.7651 Q36571.4197,2483.1221 36571.4197,2483.7861 Q36571.4197,2484.3008 36571.7642,2484.637 Q36572.1087,2484.9731 36573.2044,2485.3799 L36574.2586,2485.7783 Q36575.7527,2486.3262 36576.4583,2487.231 Q36577.1639,2488.1357 36577.1639,2489.5137 Q36577.1639,2491.3896 36576.0557,2492.3152 Q36574.9476,2493.2407 36572.7063,2493.2407 Q36571.785,2493.2407 36570.8594,2493.0208 Q36569.9339,2492.8008 36569.0706,2492.3691 L36569.0706,2489.8374 Q36570.0501,2490.5347 36570.9673,2490.875 Q36571.8846,2491.2153 36572.7811,2491.2153 Q36573.6858,2491.2153 36574.1839,2490.8044 Q36574.6819,2490.3936 36574.6819,2489.6548 Q36574.6819,2489.0986 36574.3499,2488.6794 Q36574.0179,2488.2603 36573.387,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="36589.05" y="2491.0352">defaultVal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36549.5" x2="36658.5" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36556.5" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="36568.5" y="2517.1348">val types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36556.5" y="2523.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="36568.5" y="2530.0898">valid bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36549.5" x2="36658.5" y1="2536.4102" y2="2536.4102"/><!--MD5=[1a83beafb24d8c5039896d142de61dce]
class executor.dummyCloser--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.dummyCloser" style="stroke: #A80036; stroke-width: 1.5;" width="111" x="19953.5" y="758.5"/><ellipse cx="19968.5" cy="774.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M19967.7334,775.563 Q19965.8823,774.8574 19965.2266,774.0813 Q19964.5708,773.3052 19964.5708,771.9937 Q19964.5708,770.3086 19965.6499,769.3457 Q19966.729,768.3828 19968.6133,768.3828 Q19969.4683,768.3828 19970.3232,768.5779 Q19971.1782,768.7729 19972.0166,769.1548 L19972.0166,771.5454 Q19971.228,770.9893 19970.4146,770.6987 Q19969.6011,770.4082 19968.8042,770.4082 Q19967.916,770.4082 19967.4429,770.7651 Q19966.9697,771.1221 19966.9697,771.7861 Q19966.9697,772.3008 19967.3142,772.637 Q19967.6587,772.9731 19968.7544,773.3799 L19969.8086,773.7783 Q19971.3027,774.3262 19972.0083,775.231 Q19972.7139,776.1357 19972.7139,777.5137 Q19972.7139,779.3896 19971.6057,780.3152 Q19970.4976,781.2407 19968.2563,781.2407 Q19967.335,781.2407 19966.4094,781.0208 Q19965.4839,780.8008 19964.6206,780.3691 L19964.6206,777.8374 Q19965.6001,778.5347 19966.5173,778.875 Q19967.4346,779.2153 19968.3311,779.2153 Q19969.2358,779.2153 19969.7339,778.8044 Q19970.2319,778.3936 19970.2319,777.6548 Q19970.2319,777.0986 19969.8999,776.6794 Q19969.5679,776.2603 19968.937,776.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="19982.5" y="779.0352">dummyCloser</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19954.5" x2="20063.5" y1="790.5" y2="790.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="19954.5" x2="20063.5" y1="798.5" y2="798.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19961.5" y="806.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="19973.5" y="813.1348">close() error</text><!--MD5=[59744dcac8efb681b74084f86fa6750d]
class executor.entry--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.entry" style="stroke: #A80036; stroke-width: 1.5;" width="118" x="36695" y="2470.5"/><ellipse cx="36735.65" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36734.8834,2487.563 Q36733.0323,2486.8574 36732.3766,2486.0813 Q36731.7208,2485.3052 36731.7208,2483.9937 Q36731.7208,2482.3086 36732.7999,2481.3457 Q36733.879,2480.3828 36735.7633,2480.3828 Q36736.6183,2480.3828 36737.4732,2480.5779 Q36738.3282,2480.7729 36739.1666,2481.1548 L36739.1666,2483.5454 Q36738.378,2482.9893 36737.5646,2482.6987 Q36736.7511,2482.4082 36735.9542,2482.4082 Q36735.066,2482.4082 36734.5929,2482.7651 Q36734.1197,2483.1221 36734.1197,2483.7861 Q36734.1197,2484.3008 36734.4642,2484.637 Q36734.8087,2484.9731 36735.9044,2485.3799 L36736.9586,2485.7783 Q36738.4527,2486.3262 36739.1583,2487.231 Q36739.8639,2488.1357 36739.8639,2489.5137 Q36739.8639,2491.3896 36738.7557,2492.3152 Q36737.6476,2493.2407 36735.4063,2493.2407 Q36734.485,2493.2407 36733.5594,2493.0208 Q36732.6339,2492.8008 36731.7706,2492.3691 L36731.7706,2489.8374 Q36732.7501,2490.5347 36733.6673,2490.875 Q36734.5846,2491.2153 36735.4811,2491.2153 Q36736.3858,2491.2153 36736.8839,2490.8044 Q36737.3819,2490.3936 36737.3819,2489.6548 Q36737.3819,2489.0986 36737.0499,2488.6794 Q36736.7179,2488.2603 36736.087,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="36755.35" y="2491.0352">entry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36696" x2="36812" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36703" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="36715" y="2517.1348">ptr chunk.RowPtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36703" y="2523.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="36715" y="2530.0898">next entryAddr</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36696" x2="36812" y1="2536.4102" y2="2536.4102"/><!--MD5=[9bb24b6839fa49ef7b636bd26ee99776]
class executor.entryAddr--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.entryAddr" style="stroke: #A80036; stroke-width: 1.5;" width="105" x="36848.5" y="2470.5"/><ellipse cx="36870.25" cy="2486.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36869.4834,2487.563 Q36867.6323,2486.8574 36866.9766,2486.0813 Q36866.3208,2485.3052 36866.3208,2483.9937 Q36866.3208,2482.3086 36867.3999,2481.3457 Q36868.479,2480.3828 36870.3633,2480.3828 Q36871.2183,2480.3828 36872.0732,2480.5779 Q36872.9282,2480.7729 36873.7666,2481.1548 L36873.7666,2483.5454 Q36872.978,2482.9893 36872.1646,2482.6987 Q36871.3511,2482.4082 36870.5542,2482.4082 Q36869.666,2482.4082 36869.1929,2482.7651 Q36868.7197,2483.1221 36868.7197,2483.7861 Q36868.7197,2484.3008 36869.0642,2484.637 Q36869.4087,2484.9731 36870.5044,2485.3799 L36871.5586,2485.7783 Q36873.0527,2486.3262 36873.7583,2487.231 Q36874.4639,2488.1357 36874.4639,2489.5137 Q36874.4639,2491.3896 36873.3557,2492.3152 Q36872.2476,2493.2407 36870.0063,2493.2407 Q36869.085,2493.2407 36868.1594,2493.0208 Q36867.2339,2492.8008 36866.3706,2492.3691 L36866.3706,2489.8374 Q36867.3501,2490.5347 36868.2673,2490.875 Q36869.1846,2491.2153 36870.0811,2491.2153 Q36870.9858,2491.2153 36871.4839,2490.8044 Q36871.9819,2490.3936 36871.9819,2489.6548 Q36871.9819,2489.0986 36871.6499,2488.6794 Q36871.3179,2488.2603 36870.687,2488.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="36885.75" y="2491.0352">entryAddr</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36849.5" x2="36952.5" y1="2502.5" y2="2502.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36856.5" y="2510.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="36868.5" y="2517.1348">sliceIdx uint32</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36856.5" y="2523.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="36868.5" y="2530.0898">offset uint32</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36849.5" x2="36952.5" y1="2536.4102" y2="2536.4102"/><!--MD5=[f51e256e06e3be47e4670cfc28cbb6d3]
class executor.entryStore--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.entryStore" style="stroke: #A80036; stroke-width: 1.5;" width="165" x="36988.5" y="2457.5"/><ellipse cx="37037.75" cy="2473.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M37036.9834,2474.563 Q37035.1323,2473.8574 37034.4766,2473.0813 Q37033.8208,2472.3052 37033.8208,2470.9937 Q37033.8208,2469.3086 37034.8999,2468.3457 Q37035.979,2467.3828 37037.8633,2467.3828 Q37038.7183,2467.3828 37039.5732,2467.5779 Q37040.4282,2467.7729 37041.2666,2468.1548 L37041.2666,2470.5454 Q37040.478,2469.9893 37039.6646,2469.6987 Q37038.8511,2469.4082 37038.0542,2469.4082 Q37037.166,2469.4082 37036.6929,2469.7651 Q37036.2197,2470.1221 37036.2197,2470.7861 Q37036.2197,2471.3008 37036.5642,2471.637 Q37036.9087,2471.9731 37038.0044,2472.3799 L37039.0586,2472.7783 Q37040.5527,2473.3262 37041.2583,2474.231 Q37041.9639,2475.1357 37041.9639,2476.5137 Q37041.9639,2478.3896 37040.8557,2479.3152 Q37039.7476,2480.2407 37037.5063,2480.2407 Q37036.585,2480.2407 37035.6594,2480.0208 Q37034.7339,2479.8008 37033.8706,2479.3691 L37033.8706,2476.8374 Q37034.8501,2477.5347 37035.7673,2477.875 Q37036.6846,2478.2153 37037.5811,2478.2153 Q37038.4858,2478.2153 37038.9839,2477.8044 Q37039.4819,2477.3936 37039.4819,2476.6548 Q37039.4819,2476.0986 37039.1499,2475.6794 Q37038.8179,2475.2603 37038.187,2475.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="37058.25" y="2478.0352">entryStore</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36989.5" x2="37152.5" y1="2489.5" y2="2489.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36996.5" y="2497.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="37008.5" y="2504.1348">slices [][]entry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36989.5" x2="37152.5" y1="2510.4551" y2="2510.4551"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36996.5" y="2518.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="25" x="37008.5" y="2525.0898">init()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36996.5" y="2531.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="37008.5" y="2538.0449">put(e entry) entryAddr</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36996.5" y="2544.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="37008.5" y="2551">get(addr entryAddr) entry</text><!--MD5=[eb86a9641d27f7bcb265a829f24862bb]
class executor.TestShowClusterConfigFunc--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.TestShowClusterConfigFunc" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="724" y="1702"/><ellipse cx="739" cy="1718" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M740.3418,1725.25 L737.8931,1725.25 L737.8931,1714.9985 L734.7471,1714.9985 L734.7471,1712.8569 L743.4878,1712.8569 L743.4878,1714.9985 L740.3418,1714.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="753" y="1722.5352">TestShowClusterConfigFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="725" x2="911" y1="1734" y2="1734"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="725" x2="911" y1="1742" y2="1742"/><!--MD5=[c3f2e377306420f03b91703a58b861a5]
class executor.aggPartialResultMapper--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.aggPartialResultMapper" style="stroke: #A80036; stroke-width: 1.5;" width="169" x="519.5" y="1702"/><ellipse cx="534.5" cy="1718" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M535.8418,1725.25 L533.3931,1725.25 L533.3931,1714.9985 L530.2471,1714.9985 L530.2471,1712.8569 L538.9878,1712.8569 L538.9878,1714.9985 L535.8418,1714.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="137" x="548.5" y="1722.5352">aggPartialResultMapper</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="520.5" x2="687.5" y1="1734" y2="1734"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="520.5" x2="687.5" y1="1742" y2="1742"/><!--MD5=[8bbddb0a0fae73fc13a75b10450226ea]
class executor.loadDataVarKeyType--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.loadDataVarKeyType" style="stroke: #A80036; stroke-width: 1.5;" width="154" x="22378" y="758.5"/><ellipse cx="22393" cy="774.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22392.2334,775.563 Q22390.3823,774.8574 22389.7266,774.0813 Q22389.0708,773.3052 22389.0708,771.9937 Q22389.0708,770.3086 22390.1499,769.3457 Q22391.229,768.3828 22393.1133,768.3828 Q22393.9683,768.3828 22394.8232,768.5779 Q22395.6782,768.7729 22396.5166,769.1548 L22396.5166,771.5454 Q22395.728,770.9893 22394.9146,770.6987 Q22394.1011,770.4082 22393.3042,770.4082 Q22392.416,770.4082 22391.9429,770.7651 Q22391.4697,771.1221 22391.4697,771.7861 Q22391.4697,772.3008 22391.8142,772.637 Q22392.1587,772.9731 22393.2544,773.3799 L22394.3086,773.7783 Q22395.8027,774.3262 22396.5083,775.231 Q22397.2139,776.1357 22397.2139,777.5137 Q22397.2139,779.3896 22396.1057,780.3152 Q22394.9976,781.2407 22392.7563,781.2407 Q22391.835,781.2407 22390.9094,781.0208 Q22389.9839,780.8008 22389.1206,780.3691 L22389.1206,777.8374 Q22390.1001,778.5347 22391.0173,778.875 Q22391.9346,779.2153 22392.8311,779.2153 Q22393.7358,779.2153 22394.2339,778.8044 Q22394.7319,778.3936 22394.7319,777.6548 Q22394.7319,777.0986 22394.3999,776.6794 Q22394.0679,776.2603 22393.437,776.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="22407" y="779.0352">loadDataVarKeyType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22379" x2="22531" y1="790.5" y2="790.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="22379" x2="22531" y1="798.5" y2="798.5"/><ellipse cx="22389" cy="809.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="22398" y="813.1348">String() string</text><!--MD5=[2262bab6b9e8d707968a805f1a5128e5]
class executor.loadStatsVarKeyType--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.loadStatsVarKeyType" style="stroke: #A80036; stroke-width: 1.5;" width="154" x="22189" y="758.5"/><ellipse cx="22204" cy="774.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22203.2334,775.563 Q22201.3823,774.8574 22200.7266,774.0813 Q22200.0708,773.3052 22200.0708,771.9937 Q22200.0708,770.3086 22201.1499,769.3457 Q22202.229,768.3828 22204.1133,768.3828 Q22204.9683,768.3828 22205.8232,768.5779 Q22206.6782,768.7729 22207.5166,769.1548 L22207.5166,771.5454 Q22206.728,770.9893 22205.9146,770.6987 Q22205.1011,770.4082 22204.3042,770.4082 Q22203.416,770.4082 22202.9429,770.7651 Q22202.4697,771.1221 22202.4697,771.7861 Q22202.4697,772.3008 22202.8142,772.637 Q22203.1587,772.9731 22204.2544,773.3799 L22205.3086,773.7783 Q22206.8027,774.3262 22207.5083,775.231 Q22208.2139,776.1357 22208.2139,777.5137 Q22208.2139,779.3896 22207.1057,780.3152 Q22205.9976,781.2407 22203.7563,781.2407 Q22202.835,781.2407 22201.9094,781.0208 Q22200.9839,780.8008 22200.1206,780.3691 L22200.1206,777.8374 Q22201.1001,778.5347 22202.0173,778.875 Q22202.9346,779.2153 22203.8311,779.2153 Q22204.7358,779.2153 22205.2339,778.8044 Q22205.7319,778.3936 22205.7319,777.6548 Q22205.7319,777.0986 22205.3999,776.6794 Q22205.0679,776.2603 22204.437,776.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="22218" y="779.0352">loadStatsVarKeyType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22190" x2="22342" y1="790.5" y2="790.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="22190" x2="22342" y1="798.5" y2="798.5"/><ellipse cx="22200" cy="809.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="22209" y="813.1348">String() string</text><!--MD5=[28c224a015097f591f297994bceebfbe]
class executor.logResponseHeap--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.logResponseHeap" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="194" y="1669.5"/><ellipse cx="209" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M208.2334,1686.563 Q206.3823,1685.8574 205.7266,1685.0813 Q205.0708,1684.3052 205.0708,1682.9937 Q205.0708,1681.3086 206.1499,1680.3457 Q207.229,1679.3828 209.1133,1679.3828 Q209.9683,1679.3828 210.8232,1679.5779 Q211.6782,1679.7729 212.5166,1680.1548 L212.5166,1682.5454 Q211.728,1681.9893 210.9146,1681.6987 Q210.1011,1681.4082 209.3042,1681.4082 Q208.416,1681.4082 207.9429,1681.7651 Q207.4697,1682.1221 207.4697,1682.7861 Q207.4697,1683.3008 207.8142,1683.637 Q208.1587,1683.9731 209.2544,1684.3799 L210.3086,1684.7783 Q211.8027,1685.3262 212.5083,1686.231 Q213.2139,1687.1357 213.2139,1688.5137 Q213.2139,1690.3896 212.1057,1691.3152 Q210.9976,1692.2407 208.7563,1692.2407 Q207.835,1692.2407 206.9094,1692.0208 Q205.9839,1691.8008 205.1206,1691.3691 L205.1206,1688.8374 Q206.1001,1689.5347 207.0173,1689.875 Q207.9346,1690.2153 208.8311,1690.2153 Q209.7358,1690.2153 210.2339,1689.8044 Q210.7319,1689.3936 210.7319,1688.6548 Q210.7319,1688.0986 210.3999,1687.6794 Q210.0679,1687.2603 209.437,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="223" y="1690.0352">logResponseHeap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="195" x2="329" y1="1701.5" y2="1701.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="195" x2="329" y1="1709.5" y2="1709.5"/><ellipse cx="205" cy="1720.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="214" y="1724.1348">Len() int</text><ellipse cx="205" cy="1733.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="214" y="1737.0898">Less(i int, j int) bool</text><ellipse cx="205" cy="1746.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="214" y="1750.0449">Swap(i int, j int)</text><ellipse cx="205" cy="1759.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="214" y="1763">Push(x</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="254" y="1763">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="301" y="1763">{})</text><ellipse cx="205" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="214" y="1775.9551">Pop()</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="245" y="1775.9551">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="292" y="1775.9551">{}</text><!--MD5=[fda275a0d42cc14ff6fa127436aae330]
class executor.objectType--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.objectType" style="stroke: #A80036; stroke-width: 1.5;" width="97" x="26162.5" y="765"/><ellipse cx="26177.5" cy="781" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26178.8418,788.25 L26176.3931,788.25 L26176.3931,777.9985 L26173.2471,777.9985 L26173.2471,775.8569 L26181.9878,775.8569 L26181.9878,777.9985 L26178.8418,777.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="26191.5" y="785.5352">objectType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26163.5" x2="26258.5" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="26163.5" x2="26258.5" y1="805" y2="805"/><!--MD5=[2e769e4bf953eb87e012bfc3879646c3]
class executor.outerRowStatusFlag--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.outerRowStatusFlag" style="stroke: #A80036; stroke-width: 1.5;" width="143" x="25648.5" y="765"/><ellipse cx="25663.5" cy="781" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25664.8418,788.25 L25662.3931,788.25 L25662.3931,777.9985 L25659.2471,777.9985 L25659.2471,775.8569 L25667.9878,775.8569 L25667.9878,777.9985 L25664.8418,777.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="111" x="25677.5" y="785.5352">outerRowStatusFlag</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25649.5" x2="25790.5" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25649.5" x2="25790.5" y1="805" y2="805"/><!--MD5=[f7d33f1ab440480e0772a82ce5185179]
class executor.processKVFunc--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.processKVFunc" style="stroke: #A80036; stroke-width: 1.5;" width="119" x="365.5" y="1702"/><ellipse cx="380.5" cy="1718" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M381.8418,1725.25 L379.3931,1725.25 L379.3931,1714.9985 L376.2471,1714.9985 L376.2471,1712.8569 L384.9878,1712.8569 L384.9878,1714.9985 L381.8418,1714.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="394.5" y="1722.5352">processKVFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="366.5" x2="483.5" y1="1734" y2="1734"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="366.5" x2="483.5" y1="1742" y2="1742"/><!--MD5=[f5b45e0d651ea3fb7798c1297dae3429]
class executor.promQLQueryRange--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.promQLQueryRange" style="stroke: #A80036; stroke-width: 1.5;" width="148" x="947" y="1702"/><ellipse cx="962" cy="1718" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M963.3418,1725.25 L960.8931,1725.25 L960.8931,1714.9985 L957.7471,1714.9985 L957.7471,1712.8569 L966.4878,1712.8569 L966.4878,1714.9985 L963.3418,1714.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="976" y="1722.5352">promQLQueryRange</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="948" x2="1094" y1="1734" y2="1734"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="948" x2="1094" y1="1742" y2="1742"/><!--MD5=[8c22cbc2d8079160b07c2f66b755a876]
class executor.tableRowMapType--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.tableRowMapType" style="stroke: #A80036; stroke-width: 1.5;" width="139" x="1130.5" y="1702"/><ellipse cx="1145.5" cy="1718" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1146.8418,1725.25 L1144.3931,1725.25 L1144.3931,1714.9985 L1141.2471,1714.9985 L1141.2471,1712.8569 L1149.9878,1712.8569 L1149.9878,1714.9985 L1146.8418,1714.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="1159.5" y="1722.5352">tableRowMapType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1131.5" x2="1268.5" y1="1734" y2="1734"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1131.5" x2="1268.5" y1="1742" y2="1742"/><!--MD5=[041fb8142e13dd0bce3fcce6d9a8c02c]
class executor.taskType--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.taskType" style="stroke: #A80036; stroke-width: 1.5;" width="85" x="22774.5" y="765"/><ellipse cx="22789.5" cy="781" fill="#FF7700" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22790.8418,788.25 L22788.3931,788.25 L22788.3931,777.9985 L22785.2471,777.9985 L22785.2471,775.8569 L22793.9878,775.8569 L22793.9878,777.9985 L22790.8418,777.9985 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="22803.5" y="785.5352">taskType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22775.5" x2="22858.5" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="22775.5" x2="22858.5" y1="805" y2="805"/><!--MD5=[0b1726c2fb87a0725dd819cc6533ae0f]
class executor.executorBuilder--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="1213.957" id="executor.executorBuilder" style="stroke: #A80036; stroke-width: 1.5;" width="776" x="23621" y="182"/><ellipse cx="23959.75" cy="198" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23958.9834,199.063 Q23957.1323,198.3574 23956.4766,197.5813 Q23955.8208,196.8052 23955.8208,195.4937 Q23955.8208,193.8086 23956.8999,192.8457 Q23957.979,191.8828 23959.8633,191.8828 Q23960.7183,191.8828 23961.5732,192.0779 Q23962.4282,192.2729 23963.2666,192.6548 L23963.2666,195.0454 Q23962.478,194.4893 23961.6646,194.1987 Q23960.8511,193.9082 23960.0542,193.9082 Q23959.166,193.9082 23958.6929,194.2651 Q23958.2197,194.6221 23958.2197,195.2861 Q23958.2197,195.8008 23958.5642,196.137 Q23958.9087,196.4731 23960.0044,196.8799 L23961.0586,197.2783 Q23962.5527,197.8262 23963.2583,198.731 Q23963.9639,199.6357 23963.9639,201.0137 Q23963.9639,202.8896 23962.8557,203.8152 Q23961.7476,204.7407 23959.5063,204.7407 Q23958.585,204.7407 23957.6594,204.5208 Q23956.7339,204.3008 23955.8706,203.8691 L23955.8706,201.3374 Q23956.8501,202.0347 23957.7673,202.375 Q23958.6846,202.7153 23959.5811,202.7153 Q23960.4858,202.7153 23960.9839,202.3044 Q23961.4819,201.8936 23961.4819,201.1548 Q23961.4819,200.5986 23961.1499,200.1794 Q23960.8179,199.7603 23960.187,199.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="23980.25" y="202.5352">executorBuilder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23622" x2="24396" y1="214" y2="214"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="222"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="23641" y="228.6348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="234.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="23641" y="241.5898">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="247.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="23641" y="254.5449">snapshotTS uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="260.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="23641" y="267.5">err error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="273.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="23641" y="280.4551">hasLock bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23622" x2="24396" y1="286.7754" y2="286.7754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="294.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="23641" y="301.4102">buildPointGet(p *core.PointGetPlan) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="307.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="23641" y="314.3652">parseTSString(ts string) (uint64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="320.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="23641" y="327.3203">buildBRIE(s *ast.BRIEStmt, schema *expression.Schema) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="333.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="23641" y="340.2754">build(p core.Plan) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="346.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="23641" y="353.2305">buildCancelDDLJobs(v *core.CancelDDLJobs) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="359.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="23641" y="366.1855">buildChange(v *core.Change) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="372.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="23641" y="379.1406">buildShowNextRowID(v *core.ShowNextRowID) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="385.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="23641" y="392.0957">buildShowDDL(v *core.ShowDDL) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="398.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="23641" y="405.0508">buildShowDDLJobs(v *core.PhysicalShowDDLJobs) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="411.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="23641" y="418.0059">buildShowDDLJobQueries(v *core.ShowDDLJobQueries) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="424.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="23641" y="430.9609">buildShowSlow(v *core.ShowSlow) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="437.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="23641" y="443.916">buildCheckTable(v *core.CheckTable) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="450.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="23641" y="456.8711">buildRecoverIndex(v *core.RecoverIndex) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="463.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="23641" y="469.8262">buildCleanupIndex(v *core.CleanupIndex) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="476.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="23641" y="482.7813">buildCheckIndexRange(v *core.CheckIndexRange) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="489.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="23641" y="495.7363">buildChecksumTable(v *core.ChecksumTable) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="502.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="445" x="23641" y="508.6914">buildReloadExprPushdownBlacklist(v *core.ReloadExprPushdownBlacklist) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="515.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="23641" y="521.6465">buildReloadOptRuleBlacklist(v *core.ReloadOptRuleBlacklist) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="527.9668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="23641" y="534.6016">buildAdminPlugins(v *core.AdminPlugins) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="540.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="23641" y="547.5566">buildDeallocate(v *core.Deallocate) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="553.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="23641" y="560.5117">buildSelectLock(v *core.PhysicalLock) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="566.832"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="23641" y="573.4668">buildLimit(v *core.PhysicalLimit) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="579.7871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="23641" y="586.4219">buildPrepare(v *core.Prepare) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="592.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="23641" y="599.377">buildExecute(v *core.Execute) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="605.6973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="23641" y="612.332">buildShow(v *core.PhysicalShow) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="618.6523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="23641" y="625.2871">buildSimple(v *core.Simple) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="631.6074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="23641" y="638.2422">buildSet(v *core.Set) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="644.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="23641" y="651.1973">buildSetConfig(v *core.SetConfig) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="657.5176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="23641" y="664.1523">buildInsert(v *core.Insert) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="670.4727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="23641" y="677.1074">buildLoadData(v *core.LoadData) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="683.4277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="23641" y="690.0625">buildLoadStats(v *core.LoadStats) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="696.3828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="23641" y="703.0176">buildIndexAdvise(v *core.IndexAdvise) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="709.3379"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="23641" y="715.9727">buildReplace(vals *InsertValues) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="722.293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="23641" y="728.9277">buildGrant(grant *ast.GrantStmt) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="735.248"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="23641" y="741.8828">buildRevoke(revoke *ast.RevokeStmt) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="748.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="23641" y="754.8379">buildDDL(v *core.DDL) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="761.1582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="23641" y="767.793">buildTrace(v *core.Trace) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="774.1133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="23641" y="780.748">buildExplain(v *core.Explain) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="787.0684"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="23641" y="793.7031">buildSelectInto(v *core.SelectInto) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="800.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="23641" y="806.6582">buildUnionScanExec(v *core.PhysicalUnionScan) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="812.9785"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="23641" y="819.6133">buildUnionScanFromReader(reader Executor, v *core.PhysicalUnionScan) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="825.9336"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="23641" y="832.5684">buildMergeJoin(v *core.PhysicalMergeJoin) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="838.8887"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="23641" y="845.5234">buildSideEstCount(v *core.PhysicalHashJoin) float64</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="851.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="23641" y="858.4785">buildHashJoin(v *core.PhysicalHashJoin) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="864.7988"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="23641" y="871.4336">buildHashAgg(v *core.PhysicalHashAgg) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="877.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="23641" y="884.3887">buildStreamAgg(v *core.PhysicalStreamAgg) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="890.709"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="23641" y="897.3438">buildSelection(v *core.PhysicalSelection) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="903.6641"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="23641" y="910.2988">buildProjection(v *core.PhysicalProjection) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="916.6191"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="23641" y="923.2539">buildTableDual(v *core.PhysicalTableDual) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="929.5742"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="23641" y="936.209">getSnapshotTS() (uint64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="942.5293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="23641" y="949.1641">buildMemTable(v *core.PhysicalMemTable) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="955.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="23641" y="962.1191">buildSort(v *core.PhysicalSort) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="968.4395"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="23641" y="975.0742">buildTopN(v *core.PhysicalTopN) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="981.3945"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="23641" y="988.0293">buildApply(v *core.PhysicalApply) *NestedLoopApplyExec</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="994.3496"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="23641" y="1000.9844">buildMaxOneRow(v *core.PhysicalMaxOneRow) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1007.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="23641" y="1013.9395">buildUnionAll(v *core.PhysicalUnionAll) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1020.2598"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="23641" y="1026.8945">buildSplitRegion(v *core.SplitRegion) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1033.2148"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="23641" y="1039.8496">buildUpdate(v *core.Update) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1046.1699"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="23641" y="1052.8047">buildDelete(v *core.Delete) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1059.125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="23641" y="1065.7598">updateForUpdateTSIfNeeded(selectPlan core.PhysicalPlan) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1072.0801"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="23641" y="1078.7148">refreshForUpdateTSForRC() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1085.0352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="23641" y="1091.6699">buildAnalyzeIndexPushdown(task core.AnalyzeIndexTask, opts</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="23981" y="1091.6699">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="24004" y="1091.6699">[ast.AnalyzeOptionType]uint64, autoAnalyze string) *analyzeTask</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1097.9902"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="23641" y="1104.625">buildAnalyzeIndexIncremental(task core.AnalyzeIndexTask, opts</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="23989" y="1104.625">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="24012" y="1104.625">[ast.AnalyzeOptionType]uint64) *analyzeTask</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1110.9453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="23641" y="1117.5801">buildAnalyzeColumnsPushdown(task core.AnalyzeColumnsTask, opts</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="24017" y="1117.5801">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="24040" y="1117.5801">[ast.AnalyzeOptionType]uint64, autoAnalyze string) *analyzeTask</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1123.9004"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="23641" y="1130.5352">buildAnalyzePKIncremental(task core.AnalyzeColumnsTask, opts</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="23990" y="1130.5352">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="24013" y="1130.5352">[ast.AnalyzeOptionType]uint64) *analyzeTask</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1136.8555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="23641" y="1143.4902">buildAnalyzeFastColumn(e *AnalyzeExec, task core.AnalyzeColumnsTask, opts</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="24065" y="1143.4902">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="24088" y="1143.4902">[ast.AnalyzeOptionType]uint64)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1149.8105"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="23641" y="1156.4453">buildAnalyzeFastIndex(e *AnalyzeExec, task core.AnalyzeIndexTask, opts</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="24035" y="1156.4453">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="24058" y="1156.4453">[ast.AnalyzeOptionType]uint64)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1162.7656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="23641" y="1169.4004">buildAnalyze(v *core.Analyze) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1175.7207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="23641" y="1182.3555">constructDAGReq(plans []core.PhysicalPlan) (*tipb.DAGRequest, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1188.6758"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="23641" y="1195.3105">corColInDistPlan(plans []core.PhysicalPlan) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1201.6309"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="23641" y="1208.2656">corColInAccess(p core.PhysicalPlan) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1214.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="23641" y="1221.2207">buildIndexLookUpJoin(v *core.PhysicalIndexJoin) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1227.541"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="23641" y="1234.1758">buildIndexLookUpMergeJoin(v *core.PhysicalIndexMergeJoin) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1240.4961"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="23641" y="1247.1309">buildIndexNestedLoopHashJoin(v *core.PhysicalIndexHashJoin) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1253.4512"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="23641" y="1260.0859">buildTableReader(v *core.PhysicalTableReader) *TableReaderExecutor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1266.4063"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="23641" y="1273.041">buildIndexReader(v *core.PhysicalIndexReader) *IndexReaderExecutor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1279.3613"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="462" x="23641" y="1285.9961">buildIndexLookUpReader(v *core.PhysicalIndexLookUpReader) *IndexLookUpExecutor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1292.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="23641" y="1298.9512">buildIndexMergeReader(v *core.PhysicalIndexMergeReader) *IndexMergeReaderExecutor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1305.2715"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="23641" y="1311.9063">buildWindow(v *core.PhysicalWindow) *WindowExec</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1318.2266"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="23641" y="1324.8613">buildShuffle(v *core.PhysicalShuffle) *ShuffleExec</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1331.1816"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="446" x="23641" y="1337.8164">buildShuffleDataSourceStub(v *core.PhysicalShuffleDataSourceStub) *shuffleWorker</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1344.1367"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="23641" y="1350.7715">buildSQLBindExec(v *core.SQLBindPlan) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1357.0918"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="23641" y="1363.7266">buildBatchPointGet(plan *core.BatchPointGetPlan) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1370.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="23641" y="1376.6816">buildAdminShowTelemetry(v *core.AdminShowTelemetry) Executor</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23629" y="1383.002"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="23641" y="1389.6367">buildAdminResetTelemetryID(v *core.AdminResetTelemetryID) Executor</text><!--MD5=[0bf686c31fafc8555b19224733f5d0c8]
class executor.field--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.field" style="stroke: #A80036; stroke-width: 1.5;" width="155" x="34198.5" y="3200.5"/><ellipse cx="34259.25" cy="3216.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34258.4834,3217.563 Q34256.6323,3216.8574 34255.9766,3216.0813 Q34255.3208,3215.3052 34255.3208,3213.9937 Q34255.3208,3212.3086 34256.3999,3211.3457 Q34257.479,3210.3828 34259.3633,3210.3828 Q34260.2183,3210.3828 34261.0732,3210.5779 Q34261.9282,3210.7729 34262.7666,3211.1548 L34262.7666,3213.5454 Q34261.978,3212.9893 34261.1646,3212.6987 Q34260.3511,3212.4082 34259.5542,3212.4082 Q34258.666,3212.4082 34258.1929,3212.7651 Q34257.7197,3213.1221 34257.7197,3213.7861 Q34257.7197,3214.3008 34258.0642,3214.637 Q34258.4087,3214.9731 34259.5044,3215.3799 L34260.5586,3215.7783 Q34262.0527,3216.3262 34262.7583,3217.231 Q34263.4639,3218.1357 34263.4639,3219.5137 Q34263.4639,3221.3896 34262.3557,3222.3152 Q34261.2476,3223.2407 34259.0063,3223.2407 Q34258.085,3223.2407 34257.1594,3223.0208 Q34256.2339,3222.8008 34255.3706,3222.3691 L34255.3706,3219.8374 Q34256.3501,3220.5347 34257.2673,3220.875 Q34258.1846,3221.2153 34259.0811,3221.2153 Q34259.9858,3221.2153 34260.4839,3220.8044 Q34260.9819,3220.3936 34260.9819,3219.6548 Q34260.9819,3219.0986 34260.6499,3218.6794 Q34260.3179,3218.2603 34259.687,3218.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="25" x="34279.75" y="3221.0352">field</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34199.5" x2="34352.5" y1="3232.5" y2="3232.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34206.5" y="3240.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="34218.5" y="3247.1348">str []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34206.5" y="3253.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="34218.5" y="3260.0898">maybeNull bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34206.5" y="3266.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="34218.5" y="3273.0449">enclosed bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34199.5" x2="34352.5" y1="3279.3652" y2="3279.3652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34206.5" y="3287.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="34218.5" y="3294">escape() field</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34206.5" y="3300.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="34218.5" y="3306.9551">escapeChar(c byte) byte</text><!--MD5=[873632c72c9bb783749383fa4b2f001f]
class executor.fieldWriter--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="268.2363" id="executor.fieldWriter" style="stroke: #A80036; stroke-width: 1.5;" width="407" x="34388.5" y="3123"/><ellipse cx="34558.25" cy="3139" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34557.4834,3140.063 Q34555.6323,3139.3574 34554.9766,3138.5813 Q34554.3208,3137.8052 34554.3208,3136.4937 Q34554.3208,3134.8086 34555.3999,3133.8457 Q34556.479,3132.8828 34558.3633,3132.8828 Q34559.2183,3132.8828 34560.0732,3133.0779 Q34560.9282,3133.2729 34561.7666,3133.6548 L34561.7666,3136.0454 Q34560.978,3135.4893 34560.1646,3135.1987 Q34559.3511,3134.9082 34558.5542,3134.9082 Q34557.666,3134.9082 34557.1929,3135.2651 Q34556.7197,3135.6221 34556.7197,3136.2861 Q34556.7197,3136.8008 34557.0642,3137.137 Q34557.4087,3137.4731 34558.5044,3137.8799 L34559.5586,3138.2783 Q34561.0527,3138.8262 34561.7583,3139.731 Q34562.4639,3140.6357 34562.4639,3142.0137 Q34562.4639,3143.8896 34561.3557,3144.8152 Q34560.2476,3145.7407 34558.0063,3145.7407 Q34557.085,3145.7407 34556.1594,3145.5208 Q34555.2339,3145.3008 34554.3706,3144.8691 L34554.3706,3142.3374 Q34555.3501,3143.0347 34556.2673,3143.375 Q34557.1846,3143.7153 34558.0811,3143.7153 Q34558.9858,3143.7153 34559.4839,3143.3044 Q34559.9819,3142.8936 34559.9819,3142.1548 Q34559.9819,3141.5986 34559.6499,3141.1794 Q34559.3179,3140.7603 34558.687,3140.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="34578.75" y="3143.5352">fieldWriter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34389.5" x2="34794.5" y1="3155" y2="3155"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3163"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="34408.5" y="3169.6348">pos int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3175.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="34408.5" y="3182.5898">term string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3188.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="34408.5" y="3195.5449">enclosedChar byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3201.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="34408.5" y="3208.5">fieldTermChar byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3214.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="34408.5" y="3221.4551">isEnclosed bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3227.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="34408.5" y="3234.4102">isLineStart bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3240.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="34408.5" y="3247.3652">isFieldStart bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="34411.5" y="3260.3203"/><ellipse cx="34399.5" cy="3269.6406" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="34408.5" y="3273.2754">ReadBuf []byte</text><ellipse cx="34399.5" cy="3282.5957" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="34408.5" y="3286.2305">OutputBuf []byte</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34389.5" x2="34794.5" y1="3292.5508" y2="3292.5508"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3300.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="34408.5" y="3307.1855">putback()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3313.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="34408.5" y="3320.1406">getChar() (bool, byte)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3326.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="34408.5" y="3333.0957">isTerminator() bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34396.5" y="3339.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="34408.5" y="3346.0508">outputField(enclosed bool) field</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="34411.5" y="3359.0059"/><ellipse cx="34399.5" cy="3368.3262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="34408.5" y="3371.9609">Init(enclosedChar byte, fieldTermChar byte, readBuf []byte, term string)</text><ellipse cx="34399.5" cy="3381.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="34408.5" y="3384.916">GetField() (bool, field)</text><!--MD5=[85751c61bae00fd7b1e41f14ecc74866]
class executor.globalPanicOnExceed--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.globalPanicOnExceed" style="stroke: #A80036; stroke-width: 1.5;" width="232" x="34831" y="3207"/><ellipse cx="34881.25" cy="3223" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34880.4834,3224.063 Q34878.6323,3223.3574 34877.9766,3222.5813 Q34877.3208,3221.8052 34877.3208,3220.4937 Q34877.3208,3218.8086 34878.3999,3217.8457 Q34879.479,3216.8828 34881.3633,3216.8828 Q34882.2183,3216.8828 34883.0732,3217.0779 Q34883.9282,3217.2729 34884.7666,3217.6548 L34884.7666,3220.0454 Q34883.978,3219.4893 34883.1646,3219.1987 Q34882.3511,3218.9082 34881.5542,3218.9082 Q34880.666,3218.9082 34880.1929,3219.2651 Q34879.7197,3219.6221 34879.7197,3220.2861 Q34879.7197,3220.8008 34880.0642,3221.137 Q34880.4087,3221.4731 34881.5044,3221.8799 L34882.5586,3222.2783 Q34884.0527,3222.8262 34884.7583,3223.731 Q34885.4639,3224.6357 34885.4639,3226.0137 Q34885.4639,3227.8896 34884.3557,3228.8152 Q34883.2476,3229.7407 34881.0063,3229.7407 Q34880.085,3229.7407 34879.1594,3229.5208 Q34878.2339,3229.3008 34877.3706,3228.8691 L34877.3706,3226.3374 Q34878.3501,3227.0347 34879.2673,3227.375 Q34880.1846,3227.7153 34881.0811,3227.7153 Q34881.9858,3227.7153 34882.4839,3227.3044 Q34882.9819,3226.8936 34882.9819,3226.1548 Q34882.9819,3225.5986 34882.6499,3225.1794 Q34882.3179,3224.7603 34881.687,3224.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="123" x="34901.75" y="3227.5352">globalPanicOnExceed</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34832" x2="35062" y1="3239" y2="3239"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34839" y="3247"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="34851" y="3253.6348">mutex sync.Mutex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34832" x2="35062" y1="3259.9551" y2="3259.9551"/><ellipse cx="34842" cy="3270.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="34851" y="3274.5898">SetLogHook(hook</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="34949" y="3274.5898">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="34973" y="3274.5898">(uint64) )</text><ellipse cx="34842" cy="3283.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="34851" y="3287.5449">Action(t *memory.Tracker)</text><ellipse cx="34842" cy="3296.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="34851" y="3300.5">SetFallback( memory.ActionOnExceed)</text><!--MD5=[1edf8bf2922fc61d63322bd90837ed10]
class executor.hashContext--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.hashContext" style="stroke: #A80036; stroke-width: 1.5;" width="169" x="35098.5" y="3194"/><ellipse cx="35143.25" cy="3210" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35142.4834,3211.063 Q35140.6323,3210.3574 35139.9766,3209.5813 Q35139.3208,3208.8052 35139.3208,3207.4937 Q35139.3208,3205.8086 35140.3999,3204.8457 Q35141.479,3203.8828 35143.3633,3203.8828 Q35144.2183,3203.8828 35145.0732,3204.0779 Q35145.9282,3204.2729 35146.7666,3204.6548 L35146.7666,3207.0454 Q35145.978,3206.4893 35145.1646,3206.1987 Q35144.3511,3205.9082 35143.5542,3205.9082 Q35142.666,3205.9082 35142.1929,3206.2651 Q35141.7197,3206.6221 35141.7197,3207.2861 Q35141.7197,3207.8008 35142.0642,3208.137 Q35142.4087,3208.4731 35143.5044,3208.8799 L35144.5586,3209.2783 Q35146.0527,3209.8262 35146.7583,3210.731 Q35147.4639,3211.6357 35147.4639,3213.0137 Q35147.4639,3214.8896 35146.3557,3215.8152 Q35145.2476,3216.7407 35143.0063,3216.7407 Q35142.085,3216.7407 35141.1594,3216.5208 Q35140.2339,3216.3008 35139.3706,3215.8691 L35139.3706,3213.3374 Q35140.3501,3214.0347 35141.2673,3214.375 Q35142.1846,3214.7153 35143.0811,3214.7153 Q35143.9858,3214.7153 35144.4839,3214.3044 Q35144.9819,3213.8936 35144.9819,3213.1548 Q35144.9819,3212.5986 35144.6499,3212.1794 Q35144.3179,3211.7603 35143.687,3211.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="35163.75" y="3214.5352">hashContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35099.5" x2="35266.5" y1="3226" y2="3226"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35106.5" y="3234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="35118.5" y="3240.6348">allTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35106.5" y="3246.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="35118.5" y="3253.5898">keyColIdx []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35106.5" y="3259.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="35118.5" y="3266.5449">buf []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35106.5" y="3272.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="35118.5" y="3279.5">hashVals []hash.Hash64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35106.5" y="3285.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="35118.5" y="3292.4551">hasNull []bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35099.5" x2="35266.5" y1="3298.7754" y2="3298.7754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35106.5" y="3306.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="35118.5" y="3313.4102">initHash(rows int)</text><!--MD5=[546f8aebdda6d95f9ce3ad7b9c6db495]
class executor.hashRowContainer--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="320.0566" id="executor.hashRowContainer" style="stroke: #A80036; stroke-width: 1.5;" width="685" x="26762.5" y="1566"/><ellipse cx="27047.75" cy="1582" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27046.9834,1583.063 Q27045.1323,1582.3574 27044.4766,1581.5813 Q27043.8208,1580.8052 27043.8208,1579.4937 Q27043.8208,1577.8086 27044.8999,1576.8457 Q27045.979,1575.8828 27047.8633,1575.8828 Q27048.7183,1575.8828 27049.5732,1576.0779 Q27050.4282,1576.2729 27051.2666,1576.6548 L27051.2666,1579.0454 Q27050.478,1578.4893 27049.6646,1578.1987 Q27048.8511,1577.9082 27048.0542,1577.9082 Q27047.166,1577.9082 27046.6929,1578.2651 Q27046.2197,1578.6221 27046.2197,1579.2861 Q27046.2197,1579.8008 27046.5642,1580.137 Q27046.9087,1580.4731 27048.0044,1580.8799 L27049.0586,1581.2783 Q27050.5527,1581.8262 27051.2583,1582.731 Q27051.9639,1583.6357 27051.9639,1585.0137 Q27051.9639,1586.8896 27050.8557,1587.8152 Q27049.7476,1588.7407 27047.5063,1588.7407 Q27046.585,1588.7407 27045.6594,1588.5208 Q27044.7339,1588.3008 27043.8706,1587.8691 L27043.8706,1585.3374 Q27044.8501,1586.0347 27045.7673,1586.375 Q27046.6846,1586.7153 27047.5811,1586.7153 Q27048.4858,1586.7153 27048.9839,1586.3044 Q27049.4819,1585.8936 27049.4819,1585.1548 Q27049.4819,1584.5986 27049.1499,1584.1794 Q27048.8179,1583.7603 27048.187,1583.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="27068.25" y="1586.5352">hashRowContainer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26763.5" x2="27446.5" y1="1598" y2="1598"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26770.5" y="1606"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="26782.5" y="1612.6348">sc *stmtctx.StatementContext</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26770.5" y="1618.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="26782.5" y="1625.5898">hCtx *hashContext</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26770.5" y="1631.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="26782.5" y="1638.5449">stat hashStatistic</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26770.5" y="1644.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="26782.5" y="1651.5">hashTable *rowHashMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26770.5" y="1657.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="26782.5" y="1664.4551">rowContainer *chunk.RowContainer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26763.5" x2="27446.5" y1="1670.7754" y2="1670.7754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26770.5" y="1678.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="522" x="26782.5" y="1685.4102">matchJoinKey(buildRow chunk.Row, probeRow chunk.Row, probeHCtx *hashContext) (bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26770.5" y="1691.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="26782.5" y="1698.3652">alreadySpilledSafe() bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26770.5" y="1704.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="601" x="26782.5" y="1711.3203">getJoinKeyFromChkRow(sc *stmtctx.StatementContext, row chunk.Row, hCtx *hashContext) (bool, uint64, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="26785.5" y="1724.2754"/><ellipse cx="26773.5" cy="1733.5957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="659" x="26782.5" y="1737.2305">GetMatchedRowsAndPtrs(probeKey uint64, probeRow chunk.Row, hCtx *hashContext) ([]chunk.Row, []chunk.RowPtr, error)</text><ellipse cx="26773.5" cy="1746.5508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26782.5" y="1750.1855">PutChunk(chk *chunk.Chunk) error</text><ellipse cx="26773.5" cy="1759.5059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="26782.5" y="1763.1406">PutChunkSelected(chk *chunk.Chunk, selected []bool) error</text><ellipse cx="26773.5" cy="1772.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="26782.5" y="1776.0957">NumChunks() int</text><ellipse cx="26773.5" cy="1785.416" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="26782.5" y="1789.0508">NumRowsOfChunk(chkID int) int</text><ellipse cx="26773.5" cy="1798.3711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="26782.5" y="1802.0059">GetChunk(chkIdx int) (*chunk.Chunk, error)</text><ellipse cx="26773.5" cy="1811.3262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="26782.5" y="1814.9609">GetRow(ptr chunk.RowPtr) (chunk.Row, error)</text><ellipse cx="26773.5" cy="1824.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="26782.5" y="1827.916">Len() int</text><ellipse cx="26773.5" cy="1837.2363" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="26782.5" y="1840.8711">Close() error</text><ellipse cx="26773.5" cy="1850.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="26782.5" y="1853.8262">GetMemTracker() *memory.Tracker</text><ellipse cx="26773.5" cy="1863.1465" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="26782.5" y="1866.7813">GetDiskTracker() *disk.Tracker</text><ellipse cx="26773.5" cy="1876.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="26782.5" y="1879.7363">ActionSpill() memory.ActionOnExceed</text><!--MD5=[49bc1207ef2a70e6f6c2ff9c5c452be4]
class executor.hashStatistic--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.hashStatistic" style="stroke: #A80036; stroke-width: 1.5;" width="192" x="35303" y="3213.5"/><ellipse cx="35359.75" cy="3229.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35358.9834,3230.563 Q35357.1323,3229.8574 35356.4766,3229.0813 Q35355.8208,3228.3052 35355.8208,3226.9937 Q35355.8208,3225.3086 35356.8999,3224.3457 Q35357.979,3223.3828 35359.8633,3223.3828 Q35360.7183,3223.3828 35361.5732,3223.5779 Q35362.4282,3223.7729 35363.2666,3224.1548 L35363.2666,3226.5454 Q35362.478,3225.9893 35361.6646,3225.6987 Q35360.8511,3225.4082 35360.0542,3225.4082 Q35359.166,3225.4082 35358.6929,3225.7651 Q35358.2197,3226.1221 35358.2197,3226.7861 Q35358.2197,3227.3008 35358.5642,3227.637 Q35358.9087,3227.9731 35360.0044,3228.3799 L35361.0586,3228.7783 Q35362.5527,3229.3262 35363.2583,3230.231 Q35363.9639,3231.1357 35363.9639,3232.5137 Q35363.9639,3234.3896 35362.8557,3235.3152 Q35361.7476,3236.2407 35359.5063,3236.2407 Q35358.585,3236.2407 35357.6594,3236.0208 Q35356.7339,3235.8008 35355.8706,3235.3691 L35355.8706,3232.8374 Q35356.8501,3233.5347 35357.7673,3233.875 Q35358.6846,3234.2153 35359.5811,3234.2153 Q35360.4858,3234.2153 35360.9839,3233.8044 Q35361.4819,3233.3936 35361.4819,3232.6548 Q35361.4819,3232.0986 35361.1499,3231.6794 Q35360.8179,3231.2603 35360.187,3231.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="35380.25" y="3234.0352">hashStatistic</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35304" x2="35494" y1="3245.5" y2="3245.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35311" y="3253.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="35323" y="3260.1348">probeCollision int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35311" y="3266.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="35323" y="3273.0898">buildTableElapse time.Duration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35304" x2="35494" y1="3279.4102" y2="3279.4102"/><ellipse cx="35314" cy="3290.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="35323" y="3294.0449">String() string</text><!--MD5=[fe1a48a2415c6467bbf2939f6c9b0d90]
class executor.hashjoinWorkerResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.hashjoinWorkerResult" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="35530" y="3213.5"/><ellipse cx="35545" cy="3229.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35544.2334,3230.563 Q35542.3823,3229.8574 35541.7266,3229.0813 Q35541.0708,3228.3052 35541.0708,3226.9937 Q35541.0708,3225.3086 35542.1499,3224.3457 Q35543.229,3223.3828 35545.1133,3223.3828 Q35545.9683,3223.3828 35546.8232,3223.5779 Q35547.6782,3223.7729 35548.5166,3224.1548 L35548.5166,3226.5454 Q35547.728,3225.9893 35546.9146,3225.6987 Q35546.1011,3225.4082 35545.3042,3225.4082 Q35544.416,3225.4082 35543.9429,3225.7651 Q35543.4697,3226.1221 35543.4697,3226.7861 Q35543.4697,3227.3008 35543.8142,3227.637 Q35544.1587,3227.9731 35545.2544,3228.3799 L35546.3086,3228.7783 Q35547.8027,3229.3262 35548.5083,3230.231 Q35549.2139,3231.1357 35549.2139,3232.5137 Q35549.2139,3234.3896 35548.1057,3235.3152 Q35546.9976,3236.2407 35544.7563,3236.2407 Q35543.835,3236.2407 35542.9094,3236.0208 Q35541.9839,3235.8008 35541.1206,3235.3691 L35541.1206,3232.8374 Q35542.1001,3233.5347 35543.0173,3233.875 Q35543.9346,3234.2153 35544.8311,3234.2153 Q35545.7358,3234.2153 35546.2339,3233.8044 Q35546.7319,3233.3936 35546.7319,3232.6548 Q35546.7319,3232.0986 35546.3999,3231.6794 Q35546.0679,3231.2603 35545.437,3231.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="124" x="35559" y="3234.0352">hashjoinWorkerResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35531" x2="35685" y1="3245.5" y2="3245.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35538" y="3253.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="35550" y="3260.1348">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35538" y="3266.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="35550" y="3273.0898">err error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35538" y="3279.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="17" x="35550" y="3286.0449">src</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="35570" y="3286.0449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="35599" y="3286.0449">*chunk.Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35531" x2="35685" y1="3292.3652" y2="3292.3652"/><!--MD5=[2b3d6aec20b6b4251d685e83485646f1]
class executor.indexHashJoinInnerWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="294.1465" id="executor.indexHashJoinInnerWorker" style="stroke: #A80036; stroke-width: 1.5;" width="1030" x="767" y="2360.5"/><ellipse cx="1201.75" cy="2376.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1200.9834,2377.563 Q1199.1323,2376.8574 1198.4766,2376.0813 Q1197.8208,2375.3052 1197.8208,2373.9937 Q1197.8208,2372.3086 1198.8999,2371.3457 Q1199.979,2370.3828 1201.8633,2370.3828 Q1202.7183,2370.3828 1203.5732,2370.5779 Q1204.4282,2370.7729 1205.2666,2371.1548 L1205.2666,2373.5454 Q1204.478,2372.9893 1203.6646,2372.6987 Q1202.8511,2372.4082 1202.0542,2372.4082 Q1201.166,2372.4082 1200.6929,2372.7651 Q1200.2197,2373.1221 1200.2197,2373.7861 Q1200.2197,2374.3008 1200.5642,2374.637 Q1200.9087,2374.9731 1202.0044,2375.3799 L1203.0586,2375.7783 Q1204.5527,2376.3262 1205.2583,2377.231 Q1205.9639,2378.1357 1205.9639,2379.5137 Q1205.9639,2381.3896 1204.8557,2382.3152 Q1203.7476,2383.2407 1201.5063,2383.2407 Q1200.585,2383.2407 1199.6594,2383.0208 Q1198.7339,2382.8008 1197.8706,2382.3691 L1197.8706,2379.8374 Q1198.8501,2380.5347 1199.7673,2380.875 Q1200.6846,2381.2153 1201.5811,2381.2153 Q1202.4858,2381.2153 1202.9839,2380.8044 Q1203.4819,2380.3936 1203.4819,2379.6548 Q1203.4819,2379.0986 1203.1499,2378.6794 Q1202.8179,2378.2603 1202.187,2378.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="1222.25" y="2381.0352">indexHashJoinInnerWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="768" x2="1796" y1="2392.5" y2="2392.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2400.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="787" y="2407.1348">matchedOuterPtrs []chunk.RowPtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2413.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="787" y="2420.0898">joiner joiner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2426.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="787" y="2433.0449">joinChkResourceCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="896" y="2433.0449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="925" y="2433.0449">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2439.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="787" y="2446">resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="836" y="2446">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="865" y="2446">*indexHashJoinResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2452.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="787" y="2458.9551">taskCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="827" y="2458.9551">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="856" y="2458.9551">*indexHashJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2465.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="787" y="2471.9102">wg *sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2478.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="787" y="2484.8652">joinKeyBuf []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2491.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="787" y="2497.8203">outerRowStatus []outerRowStatusFlag</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="768" x2="1796" y1="2504.1406" y2="2504.1406"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2512.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="787" y="2518.7754">run(ctx context.Context, cancelFunc context.CancelFunc)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2525.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="787" y="2531.7305">getNewJoinResult(ctx context.Context) (*indexHashJoinResult, bool)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2538.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="679" x="787" y="2544.6855">buildHashTableForOuterResult(ctx context.Context, cancelFunc context.CancelFunc, task *indexHashJoinTask, h hash.Hash64)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2551.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="787" y="2557.6406">fetchInnerResults(ctx context.Context, task *lookUpJoinTask) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2563.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="787" y="2570.5957">handleHashJoinInnerWorkerPanic(r</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="976" y="2570.5957">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="1023" y="2570.5957">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2576.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="800" x="787" y="2583.5508">handleTask(ctx context.Context, cancelFunc context.CancelFunc, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="1590" y="2583.5508">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1619" y="2583.5508">*indexHashJoinResult) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2589.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="656" x="787" y="2596.5059">doJoinUnordered(ctx context.Context, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="1446" y="2596.5059">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1475" y="2596.5059">*indexHashJoinResult) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2602.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="720" x="787" y="2609.4609">getMatchedOuterRows(innerRow chunk.Row, task *indexHashJoinTask, h hash.Hash64, buf []byte) ([]chunk.Row, []chunk.RowPtr, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2615.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1004" x="787" y="2622.416">joinMatchedInnerRow2Chunk(ctx context.Context, innerRow chunk.Row, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, buf []byte) (bool, *indexHashJoinResult)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2628.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="887" x="787" y="2635.3711">collectMatchedInnerPtrs4OuterRows(ctx context.Context, innerRow chunk.Row, innerRowPtr chunk.RowPtr, task *indexHashJoinTask, h hash.Hash64, buf []byte) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="775" y="2641.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="640" x="787" y="2648.3262">doJoinInOrder(ctx context.Context, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="1430" y="2648.3262">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1459" y="2648.3262">*indexHashJoinResult) error</text><!--MD5=[6ebe9d86e1030d12908c1773412067fe]
class executor.indexHashJoinOuterWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.indexHashJoinOuterWorker" style="stroke: #A80036; stroke-width: 1.5;" width="537" x="194.5" y="2444.5"/><ellipse cx="381.25" cy="2460.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M380.4834,2461.563 Q378.6323,2460.8574 377.9766,2460.0813 Q377.3208,2459.3052 377.3208,2457.9937 Q377.3208,2456.3086 378.3999,2455.3457 Q379.479,2454.3828 381.3633,2454.3828 Q382.2183,2454.3828 383.0732,2454.5779 Q383.9282,2454.7729 384.7666,2455.1548 L384.7666,2457.5454 Q383.978,2456.9893 383.1646,2456.6987 Q382.3511,2456.4082 381.5542,2456.4082 Q380.666,2456.4082 380.1929,2456.7651 Q379.7197,2457.1221 379.7197,2457.7861 Q379.7197,2458.3008 380.0642,2458.637 Q380.4087,2458.9731 381.5044,2459.3799 L382.5586,2459.7783 Q384.0527,2460.3262 384.7583,2461.231 Q385.4639,2462.1357 385.4639,2463.5137 Q385.4639,2465.3896 384.3557,2466.3152 Q383.2476,2467.2407 381.0063,2467.2407 Q380.085,2467.2407 379.1594,2467.0208 Q378.2339,2466.8008 377.3706,2466.3691 L377.3706,2463.8374 Q378.3501,2464.5347 379.2673,2464.875 Q380.1846,2465.2153 381.0811,2465.2153 Q381.9858,2465.2153 382.4839,2464.8044 Q382.9819,2464.3936 382.9819,2463.6548 Q382.9819,2463.0986 382.6499,2462.6794 Q382.3179,2462.2603 381.687,2462.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="155" x="401.75" y="2465.0352">indexHashJoinOuterWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="195.5" x2="730.5" y1="2476.5" y2="2476.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="202.5" y="2484.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="214.5" y="2491.1348">innerCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="260.5" y="2491.1348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="289.5" y="2491.1348">*indexHashJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="202.5" y="2497.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="214.5" y="2504.0898">keepOuterOrder bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="202.5" y="2510.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="214.5" y="2517.0449">taskCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="254.5" y="2517.0449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="283.5" y="2517.0449">*indexHashJoinTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="195.5" x2="730.5" y1="2523.3652" y2="2523.3652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="202.5" y="2531.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="214.5" y="2538">run(ctx context.Context, cancelFunc context.CancelFunc)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="202.5" y="2544.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="214.5" y="2550.9551">buildTask(ctx context.Context) (*indexHashJoinTask, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="202.5" y="2557.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="214.5" y="2563.9102">pushToChan(ctx context.Context, task *indexHashJoinTask, dst</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="558.5" y="2563.9102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="587.5" y="2563.9102">*indexHashJoinTask) bool</text><!--MD5=[f52a9fe95e30cbaa9b907b28152c86d5]
class executor.indexHashJoinResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.indexHashJoinResult" style="stroke: #A80036; stroke-width: 1.5;" width="151" x="35721.5" y="3213.5"/><ellipse cx="35737.4" cy="3229.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35736.6334,3230.563 Q35734.7823,3229.8574 35734.1266,3229.0813 Q35733.4708,3228.3052 35733.4708,3226.9937 Q35733.4708,3225.3086 35734.5499,3224.3457 Q35735.629,3223.3828 35737.5133,3223.3828 Q35738.3683,3223.3828 35739.2232,3223.5779 Q35740.0782,3223.7729 35740.9166,3224.1548 L35740.9166,3226.5454 Q35740.128,3225.9893 35739.3146,3225.6987 Q35738.5011,3225.4082 35737.7042,3225.4082 Q35736.816,3225.4082 35736.3429,3225.7651 Q35735.8697,3226.1221 35735.8697,3226.7861 Q35735.8697,3227.3008 35736.2142,3227.637 Q35736.5587,3227.9731 35737.6544,3228.3799 L35738.7086,3228.7783 Q35740.2027,3229.3262 35740.9083,3230.231 Q35741.6139,3231.1357 35741.6139,3232.5137 Q35741.6139,3234.3896 35740.5057,3235.3152 Q35739.3976,3236.2407 35737.1563,3236.2407 Q35736.235,3236.2407 35735.3094,3236.0208 Q35734.3839,3235.8008 35733.5206,3235.3691 L35733.5206,3232.8374 Q35734.5001,3233.5347 35735.4173,3233.875 Q35736.3346,3234.2153 35737.2311,3234.2153 Q35738.1358,3234.2153 35738.6339,3233.8044 Q35739.1319,3233.3936 35739.1319,3232.6548 Q35739.1319,3232.0986 35738.7999,3231.6794 Q35738.4679,3231.2603 35737.837,3231.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="117" x="35751.6" y="3234.0352">indexHashJoinResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35722.5" x2="35871.5" y1="3245.5" y2="3245.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35729.5" y="3253.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="35741.5" y="3260.1348">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35729.5" y="3266.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="35741.5" y="3273.0898">err error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35729.5" y="3279.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="17" x="35741.5" y="3286.0449">src</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="35761.5" y="3286.0449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="35790.5" y="3286.0449">*chunk.Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35722.5" x2="35871.5" y1="3292.3652" y2="3292.3652"/><!--MD5=[fef92229cea86c49c0910fb336c58107]
class executor.indexHashJoinTask--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.indexHashJoinTask" style="stroke: #A80036; stroke-width: 1.5;" width="243" x="10277.5" y="1663"/><ellipse cx="10339.75" cy="1679" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M10338.9834,1680.063 Q10337.1323,1679.3574 10336.4766,1678.5813 Q10335.8208,1677.8052 10335.8208,1676.4937 Q10335.8208,1674.8086 10336.8999,1673.8457 Q10337.979,1672.8828 10339.8633,1672.8828 Q10340.7183,1672.8828 10341.5732,1673.0779 Q10342.4282,1673.2729 10343.2666,1673.6548 L10343.2666,1676.0454 Q10342.478,1675.4893 10341.6646,1675.1987 Q10340.8511,1674.9082 10340.0542,1674.9082 Q10339.166,1674.9082 10338.6929,1675.2651 Q10338.2197,1675.6221 10338.2197,1676.2861 Q10338.2197,1676.8008 10338.5642,1677.137 Q10338.9087,1677.4731 10340.0044,1677.8799 L10341.0586,1678.2783 Q10342.5527,1678.8262 10343.2583,1679.731 Q10343.9639,1680.6357 10343.9639,1682.0137 Q10343.9639,1683.8896 10342.8557,1684.8152 Q10341.7476,1685.7407 10339.5063,1685.7407 Q10338.585,1685.7407 10337.6594,1685.5208 Q10336.7339,1685.3008 10335.8706,1684.8691 L10335.8706,1682.3374 Q10336.8501,1683.0347 10337.7673,1683.375 Q10338.6846,1683.7153 10339.5811,1683.7153 Q10340.4858,1683.7153 10340.9839,1683.3044 Q10341.4819,1682.8936 10341.4819,1682.1548 Q10341.4819,1681.5986 10341.1499,1681.1794 Q10340.8179,1680.7603 10340.187,1680.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="10360.25" y="1683.5352">indexHashJoinTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10278.5" x2="10519.5" y1="1695" y2="1695"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10285.5" y="1703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="10297.5" y="1709.6348">outerRowStatus [][]outerRowStatusFlag</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10285.5" y="1715.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="10297.5" y="1722.5898">lookupMap *rowHashMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10285.5" y="1728.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="10297.5" y="1735.5449">err error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10285.5" y="1741.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="10297.5" y="1748.5">keepOuterOrder bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10285.5" y="1754.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="10297.5" y="1761.4551">resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="10346.5" y="1761.4551">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="10375.5" y="1761.4551">*indexHashJoinResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10285.5" y="1767.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="10297.5" y="1774.4102">matchedInnerRowPtrs [][][]chunk.RowPtr</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10278.5" x2="10519.5" y1="1780.7305" y2="1780.7305"/><!--MD5=[b6477ae46db9932b045ba98e489d054c]
class executor.indexJoinLookUpContent--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.indexJoinLookUpContent" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="35908" y="3220"/><ellipse cx="35923" cy="3236" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35922.2334,3237.063 Q35920.3823,3236.3574 35919.7266,3235.5813 Q35919.0708,3234.8052 35919.0708,3233.4937 Q35919.0708,3231.8086 35920.1499,3230.8457 Q35921.229,3229.8828 35923.1133,3229.8828 Q35923.9683,3229.8828 35924.8232,3230.0779 Q35925.6782,3230.2729 35926.5166,3230.6548 L35926.5166,3233.0454 Q35925.728,3232.4893 35924.9146,3232.1987 Q35924.1011,3231.9082 35923.3042,3231.9082 Q35922.416,3231.9082 35921.9429,3232.2651 Q35921.4697,3232.6221 35921.4697,3233.2861 Q35921.4697,3233.8008 35921.8142,3234.137 Q35922.1587,3234.4731 35923.2544,3234.8799 L35924.3086,3235.2783 Q35925.8027,3235.8262 35926.5083,3236.731 Q35927.2139,3237.6357 35927.2139,3239.0137 Q35927.2139,3240.8896 35926.1057,3241.8152 Q35924.9976,3242.7407 35922.7563,3242.7407 Q35921.835,3242.7407 35920.9094,3242.5208 Q35919.9839,3242.3008 35919.1206,3241.8691 L35919.1206,3239.3374 Q35920.1001,3240.0347 35921.0173,3240.375 Q35921.9346,3240.7153 35922.8311,3240.7153 Q35923.7358,3240.7153 35924.2339,3240.3044 Q35924.7319,3239.8936 35924.7319,3239.1548 Q35924.7319,3238.5986 35924.3999,3238.1794 Q35924.0679,3237.7603 35923.437,3237.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="35937" y="3240.5352">indexJoinLookUpContent</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35909" x2="36079" y1="3252" y2="3252"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35916" y="3260"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="35928" y="3266.6348">keys []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35916" y="3272.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="35928" y="3279.5898">row chunk.Row</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35909" x2="36079" y1="3285.9102" y2="3285.9102"/><!--MD5=[3327163e1ccde6022387cd03ad8831c6]
class executor.indexMergeJoinResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.indexMergeJoinResult" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="36115" y="3220"/><ellipse cx="36130" cy="3236" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36129.2334,3237.063 Q36127.3823,3236.3574 36126.7266,3235.5813 Q36126.0708,3234.8052 36126.0708,3233.4937 Q36126.0708,3231.8086 36127.1499,3230.8457 Q36128.229,3229.8828 36130.1133,3229.8828 Q36130.9683,3229.8828 36131.8232,3230.0779 Q36132.6782,3230.2729 36133.5166,3230.6548 L36133.5166,3233.0454 Q36132.728,3232.4893 36131.9146,3232.1987 Q36131.1011,3231.9082 36130.3042,3231.9082 Q36129.416,3231.9082 36128.9429,3232.2651 Q36128.4697,3232.6221 36128.4697,3233.2861 Q36128.4697,3233.8008 36128.8142,3234.137 Q36129.1587,3234.4731 36130.2544,3234.8799 L36131.3086,3235.2783 Q36132.8027,3235.8262 36133.5083,3236.731 Q36134.2139,3237.6357 36134.2139,3239.0137 Q36134.2139,3240.8896 36133.1057,3241.8152 Q36131.9976,3242.7407 36129.7563,3242.7407 Q36128.835,3242.7407 36127.9094,3242.5208 Q36126.9839,3242.3008 36126.1206,3241.8691 L36126.1206,3239.3374 Q36127.1001,3240.0347 36128.0173,3240.375 Q36128.9346,3240.7153 36129.8311,3240.7153 Q36130.7358,3240.7153 36131.2339,3240.3044 Q36131.7319,3239.8936 36131.7319,3239.1548 Q36131.7319,3238.5986 36131.3999,3238.1794 Q36131.0679,3237.7603 36130.437,3237.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="124" x="36144" y="3240.5352">indexMergeJoinResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36116" x2="36270" y1="3252" y2="3252"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36123" y="3260"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="36135" y="3266.6348">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36123" y="3272.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="17" x="36135" y="3279.5898">src</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="36155" y="3279.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="36184" y="3279.5898">*chunk.Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36116" x2="36270" y1="3285.9102" y2="3285.9102"/><!--MD5=[40aa3f7334124d642ecf4046eb9194b8]
class executor.indexMergeProcessWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.indexMergeProcessWorker" style="stroke: #A80036; stroke-width: 1.5;" width="847" x="36306.5" y="3220"/><ellipse cx="36649.25" cy="3236" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36648.4834,3237.063 Q36646.6323,3236.3574 36645.9766,3235.5813 Q36645.3208,3234.8052 36645.3208,3233.4937 Q36645.3208,3231.8086 36646.3999,3230.8457 Q36647.479,3229.8828 36649.3633,3229.8828 Q36650.2183,3229.8828 36651.0732,3230.0779 Q36651.9282,3230.2729 36652.7666,3230.6548 L36652.7666,3233.0454 Q36651.978,3232.4893 36651.1646,3232.1987 Q36650.3511,3231.9082 36649.5542,3231.9082 Q36648.666,3231.9082 36648.1929,3232.2651 Q36647.7197,3232.6221 36647.7197,3233.2861 Q36647.7197,3233.8008 36648.0642,3234.137 Q36648.4087,3234.4731 36649.5044,3234.8799 L36650.5586,3235.2783 Q36652.0527,3235.8262 36652.7583,3236.731 Q36653.4639,3237.6357 36653.4639,3239.0137 Q36653.4639,3240.8896 36652.3557,3241.8152 Q36651.2476,3242.7407 36649.0063,3242.7407 Q36648.085,3242.7407 36647.1594,3242.5208 Q36646.2339,3242.3008 36645.3706,3241.8691 L36645.3706,3239.3374 Q36646.3501,3240.0347 36647.2673,3240.375 Q36648.1846,3240.7153 36649.0811,3240.7153 Q36649.9858,3240.7153 36650.4839,3240.3044 Q36650.9819,3239.8936 36650.9819,3239.1548 Q36650.9819,3238.5986 36650.6499,3238.1794 Q36650.3179,3237.7603 36649.687,3237.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="153" x="36669.75" y="3240.5352">indexMergeProcessWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36307.5" x2="37152.5" y1="3252" y2="3252"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="36307.5" x2="37152.5" y1="3260" y2="3260"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36314.5" y="3268"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="36326.5" y="3274.6348">fetchLoop(ctx context.Context, fetchCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="36542.5" y="3274.6348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="36571.5" y="3274.6348">*lookupTableTask, workCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="36717.5" y="3274.6348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="36746.5" y="3274.6348">*lookupTableTask, resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="36897.5" y="3274.6348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="36926.5" y="3274.6348">*lookupTableTask, finished</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="37074.5" y="3274.6348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="37103.5" y="3274.6348"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="37103.5" y="3274.6348">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="37135.5" y="3274.6348">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36314.5" y="3280.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="36326.5" y="3287.5898">handleLoopFetcherPanic(ctx context.Context, resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="36623.5" y="3287.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="36652.5" y="3287.5898">*lookupTableTask)</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="36755.5" y="3287.5898">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="4" x="36779.5" y="3287.5898">(</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="36783.5" y="3287.5898">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="36830.5" y="3287.5898">{})</text><!--MD5=[2da374f7f6d651b54db52b5729a6b034]
class executor.indexMergeTableScanWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.indexMergeTableScanWorker" style="stroke: #A80036; stroke-width: 1.5;" width="515" x="33826.5" y="3587"/><ellipse cx="33995.75" cy="3603" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33994.9834,3604.063 Q33993.1323,3603.3574 33992.4766,3602.5813 Q33991.8208,3601.8052 33991.8208,3600.4937 Q33991.8208,3598.8086 33992.8999,3597.8457 Q33993.979,3596.8828 33995.8633,3596.8828 Q33996.7183,3596.8828 33997.5732,3597.0779 Q33998.4282,3597.2729 33999.2666,3597.6548 L33999.2666,3600.0454 Q33998.478,3599.4893 33997.6646,3599.1987 Q33996.8511,3598.9082 33996.0542,3598.9082 Q33995.166,3598.9082 33994.6929,3599.2651 Q33994.2197,3599.6221 33994.2197,3600.2861 Q33994.2197,3600.8008 33994.5642,3601.137 Q33994.9087,3601.4731 33996.0044,3601.8799 L33997.0586,3602.2783 Q33998.5527,3602.8262 33999.2583,3603.731 Q33999.9639,3604.6357 33999.9639,3606.0137 Q33999.9639,3607.8896 33998.8557,3608.8152 Q33997.7476,3609.7407 33995.5063,3609.7407 Q33994.585,3609.7407 33993.6594,3609.5208 Q33992.7339,3609.3008 33991.8706,3608.8691 L33991.8706,3606.3374 Q33992.8501,3607.0347 33993.7673,3607.375 Q33994.6846,3607.7153 33995.5811,3607.7153 Q33996.4858,3607.7153 33996.9839,3607.3044 Q33997.4819,3606.8936 33997.4819,3606.1548 Q33997.4819,3605.5986 33997.1499,3605.1794 Q33996.8179,3604.7603 33996.187,3604.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="168" x="34016.25" y="3607.5352">indexMergeTableScanWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33827.5" x2="34340.5" y1="3619" y2="3619"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33834.5" y="3627"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="33846.5" y="3633.6348">workCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33890.5" y="3633.6348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="33919.5" y="3633.6348">*lookupTableTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33834.5" y="3639.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="33846.5" y="3646.5898">finished</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33892.5" y="3646.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="33921.5" y="3646.5898"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="33921.5" y="3646.5898">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="33953.5" y="3646.5898">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33834.5" y="3652.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="33846.5" y="3659.5449">tblPlans []core.PhysicalPlan</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33834.5" y="3665.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="33846.5" y="3672.5">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33827.5" x2="34340.5" y1="3678.8203" y2="3678.8203"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33834.5" y="3686.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="33846.5" y="3693.4551">buildTblReader</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="33930.5" y="3693.4551">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="33954.5" y="3693.4551">(context.Context, []int64) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33834.5" y="3699.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="33846.5" y="3706.4102">pickAndExecTask(ctx context.Context) *lookupTableTask</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33834.5" y="3712.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="33846.5" y="3719.3652">handlePickAndExecTaskPanic(ctx context.Context, task *lookupTableTask)</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="34248.5" y="3719.3652">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="4" x="34272.5" y="3719.3652">(</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="34276.5" y="3719.3652">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="34323.5" y="3719.3652">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33834.5" y="3725.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="33846.5" y="3732.3203">executeTask(ctx context.Context, task *lookupTableTask) error</text><!--MD5=[1d4332e62f9293a9a58e5edb3068af25]
class executor.indexWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="216.416" id="executor.indexWorker" style="stroke: #A80036; stroke-width: 1.5;" width="792" x="1869" y="2399.5"/><ellipse cx="2224.25" cy="2415.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2223.4834,2416.563 Q2221.6323,2415.8574 2220.9766,2415.0813 Q2220.3208,2414.3052 2220.3208,2412.9937 Q2220.3208,2411.3086 2221.3999,2410.3457 Q2222.479,2409.3828 2224.3633,2409.3828 Q2225.2183,2409.3828 2226.0732,2409.5779 Q2226.9282,2409.7729 2227.7666,2410.1548 L2227.7666,2412.5454 Q2226.978,2411.9893 2226.1646,2411.6987 Q2225.3511,2411.4082 2224.5542,2411.4082 Q2223.666,2411.4082 2223.1929,2411.7651 Q2222.7197,2412.1221 2222.7197,2412.7861 Q2222.7197,2413.3008 2223.0642,2413.637 Q2223.4087,2413.9731 2224.5044,2414.3799 L2225.5586,2414.7783 Q2227.0527,2415.3262 2227.7583,2416.231 Q2228.4639,2417.1357 2228.4639,2418.5137 Q2228.4639,2420.3896 2227.3557,2421.3152 Q2226.2476,2422.2407 2224.0063,2422.2407 Q2223.085,2422.2407 2222.1594,2422.0208 Q2221.2339,2421.8008 2220.3706,2421.3691 L2220.3706,2418.8374 Q2221.3501,2419.5347 2222.2673,2419.875 Q2223.1846,2420.2153 2224.0811,2420.2153 Q2224.9858,2420.2153 2225.4839,2419.8044 Q2225.9819,2419.3936 2225.9819,2418.6548 Q2225.9819,2418.0986 2225.6499,2417.6794 Q2225.3179,2417.2603 2224.687,2417.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="2244.75" y="2420.0352">indexWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1870" x2="2660" y1="2431.5" y2="2431.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2439.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1889" y="2446.1348">idxLookup *IndexLookUpExecutor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2452.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="1889" y="2459.0898">workCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="1933" y="2459.0898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1962" y="2459.0898">*lookupTableTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2465.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="1889" y="2472.0449">finished</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="1935" y="2472.0449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1964" y="2472.0449"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="1964" y="2472.0449">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="1996" y="2472.0449">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2478.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="1889" y="2485">resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="1938" y="2485">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1967" y="2485">*lookupTableTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2491.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1889" y="2497.9551">keepOrder bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2504.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1889" y="2510.9102">batchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2517.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="1889" y="2523.8652">maxBatchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2530.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1889" y="2536.8203">maxChunkSize int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1892" y="2549.7754"/><ellipse cx="1880" cy="2559.0957" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="1889" y="2562.7305">PushedLimit *core.PushedDownLimit</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1870" x2="2660" y1="2569.0508" y2="2569.0508"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2577.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="408" x="1889" y="2583.6855">fetchHandles(ctx context.Context, result distsql.SelectResult) (uint64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2590.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="766" x="1889" y="2596.6406">extractTaskHandles(ctx context.Context, chk *chunk.Chunk, idxResult distsql.SelectResult, count uint64) ([]int64, *chunk.Chunk, uint64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1877" y="2602.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="1889" y="2609.5957">buildTableTask(handles []int64, retChk *chunk.Chunk) *lookupTableTask</text><!--MD5=[2c32844f3a5ed0b194382db77af00f9c]
class executor.innerCtx--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.innerCtx" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="4140.5" y="732.5"/><ellipse cx="4213.75" cy="748.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4212.9834,749.563 Q4211.1323,748.8574 4210.4766,748.0813 Q4209.8208,747.3052 4209.8208,745.9937 Q4209.8208,744.3086 4210.8999,743.3457 Q4211.979,742.3828 4213.8633,742.3828 Q4214.7183,742.3828 4215.5732,742.5779 Q4216.4282,742.7729 4217.2666,743.1548 L4217.2666,745.5454 Q4216.478,744.9893 4215.6646,744.6987 Q4214.8511,744.4082 4214.0542,744.4082 Q4213.166,744.4082 4212.6929,744.7651 Q4212.2197,745.1221 4212.2197,745.7861 Q4212.2197,746.3008 4212.5642,746.637 Q4212.9087,746.9731 4214.0044,747.3799 L4215.0586,747.7783 Q4216.5527,748.3262 4217.2583,749.231 Q4217.9639,750.1357 4217.9639,751.5137 Q4217.9639,753.3896 4216.8557,754.3152 Q4215.7476,755.2407 4213.5063,755.2407 Q4212.585,755.2407 4211.6594,755.0208 Q4210.7339,754.8008 4209.8706,754.3691 L4209.8706,751.8374 Q4210.8501,752.5347 4211.7673,752.875 Q4212.6846,753.2153 4213.5811,753.2153 Q4214.4858,753.2153 4214.9839,752.8044 Q4215.4819,752.3936 4215.4819,751.6548 Q4215.4819,751.0986 4215.1499,750.6794 Q4214.8179,750.2603 4214.187,750.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="4234.25" y="753.0352">innerCtx</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4141.5" x2="4342.5" y1="764.5" y2="764.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148.5" y="772.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="4160.5" y="779.1348">readerBuilder *dataReaderBuilder</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148.5" y="785.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4160.5" y="792.0898">rowTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148.5" y="798.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="4160.5" y="805.0449">keyCols []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148.5" y="811.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="4160.5" y="818">colLens []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148.5" y="824.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="4160.5" y="830.9551">hasPrefixCol bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4141.5" x2="4342.5" y1="837.2754" y2="837.2754"/><!--MD5=[eb3a9977f0521a71aaa3edc700fc0a1f]
class executor.innerJoiner--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.innerJoiner" style="stroke: #A80036; stroke-width: 1.5;" width="811" x="16997.5" y="1669.5"/><ellipse cx="17367.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M17366.9834,1686.563 Q17365.1323,1685.8574 17364.4766,1685.0813 Q17363.8208,1684.3052 17363.8208,1682.9937 Q17363.8208,1681.3086 17364.8999,1680.3457 Q17365.979,1679.3828 17367.8633,1679.3828 Q17368.7183,1679.3828 17369.5732,1679.5779 Q17370.4282,1679.7729 17371.2666,1680.1548 L17371.2666,1682.5454 Q17370.478,1681.9893 17369.6646,1681.6987 Q17368.8511,1681.4082 17368.0542,1681.4082 Q17367.166,1681.4082 17366.6929,1681.7651 Q17366.2197,1682.1221 17366.2197,1682.7861 Q17366.2197,1683.3008 17366.5642,1683.637 Q17366.9087,1683.9731 17368.0044,1684.3799 L17369.0586,1684.7783 Q17370.5527,1685.3262 17371.2583,1686.231 Q17371.9639,1687.1357 17371.9639,1688.5137 Q17371.9639,1690.3896 17370.8557,1691.3152 Q17369.7476,1692.2407 17367.5063,1692.2407 Q17366.585,1692.2407 17365.6594,1692.0208 Q17364.7339,1691.8008 17363.8706,1691.3691 L17363.8706,1688.8374 Q17364.8501,1689.5347 17365.7673,1689.875 Q17366.6846,1690.2153 17367.5811,1690.2153 Q17368.4858,1690.2153 17368.9839,1689.8044 Q17369.4819,1689.3936 17369.4819,1688.6548 Q17369.4819,1688.0986 17369.1499,1687.6794 Q17368.8179,1687.2603 17368.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="17388.25" y="1690.0352">innerJoiner</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16998.5" x2="17807.5" y1="1701.5" y2="1701.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="16998.5" x2="17807.5" y1="1709.5" y2="1709.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17005.5" y="1717.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="17017.5" y="1724.1348">tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17005.5" y="1730.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="785" x="17017.5" y="1737.0898">tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17005.5" y="1743.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="17017.5" y="1750.0449">onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="17020.5" y="1763"/><ellipse cx="17008.5" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="17017.5" y="1775.9551">Clone() joiner</text><!--MD5=[e141752ad40f39529ad20c80fdc7e83a]
class executor.innerMergeCtx--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.innerMergeCtx" style="stroke: #A80036; stroke-width: 1.5;" width="254" x="11445" y="713"/><ellipse cx="11525.75" cy="729" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11524.9834,730.063 Q11523.1323,729.3574 11522.4766,728.5813 Q11521.8208,727.8052 11521.8208,726.4937 Q11521.8208,724.8086 11522.8999,723.8457 Q11523.979,722.8828 11525.8633,722.8828 Q11526.7183,722.8828 11527.5732,723.0779 Q11528.4282,723.2729 11529.2666,723.6548 L11529.2666,726.0454 Q11528.478,725.4893 11527.6646,725.1987 Q11526.8511,724.9082 11526.0542,724.9082 Q11525.166,724.9082 11524.6929,725.2651 Q11524.2197,725.6221 11524.2197,726.2861 Q11524.2197,726.8008 11524.5642,727.137 Q11524.9087,727.4731 11526.0044,727.8799 L11527.0586,728.2783 Q11528.5527,728.8262 11529.2583,729.731 Q11529.9639,730.6357 11529.9639,732.0137 Q11529.9639,733.8896 11528.8557,734.8152 Q11527.7476,735.7407 11525.5063,735.7407 Q11524.585,735.7407 11523.6594,735.5208 Q11522.7339,735.3008 11521.8706,734.8691 L11521.8706,732.3374 Q11522.8501,733.0347 11523.7673,733.375 Q11524.6846,733.7153 11525.5811,733.7153 Q11526.4858,733.7153 11526.9839,733.3044 Q11527.4819,732.8936 11527.4819,732.1548 Q11527.4819,731.5986 11527.1499,731.1794 Q11526.8179,730.7603 11526.187,730.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="11546.25" y="733.5352">innerMergeCtx</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11446" x2="11698" y1="745" y2="745"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11453" y="753"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="11465" y="759.6348">readerBuilder *dataReaderBuilder</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11453" y="765.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="11465" y="772.5898">rowTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11453" y="778.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="11465" y="785.5449">joinKeys []*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11453" y="791.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="11465" y="798.5">keyCols []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11453" y="804.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="11465" y="811.4551">compareFuncs []expression.CompareFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11453" y="817.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="11465" y="824.4102">colLens []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11453" y="830.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="11465" y="837.3652">desc bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11453" y="843.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="11465" y="850.3203">keyOff2KeyOffOrderByIdx []int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11446" x2="11698" y1="856.6406" y2="856.6406"/><!--MD5=[8222bc21a307826cac6c1fa4535c8d0c]
class executor.innerMergeWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="320.0566" id="executor.innerMergeWorker" style="stroke: #A80036; stroke-width: 1.5;" width="629" x="11257.5" y="1566"/><ellipse cx="11514.75" cy="1582" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11513.9834,1583.063 Q11512.1323,1582.3574 11511.4766,1581.5813 Q11510.8208,1580.8052 11510.8208,1579.4937 Q11510.8208,1577.8086 11511.8999,1576.8457 Q11512.979,1575.8828 11514.8633,1575.8828 Q11515.7183,1575.8828 11516.5732,1576.0779 Q11517.4282,1576.2729 11518.2666,1576.6548 L11518.2666,1579.0454 Q11517.478,1578.4893 11516.6646,1578.1987 Q11515.8511,1577.9082 11515.0542,1577.9082 Q11514.166,1577.9082 11513.6929,1578.2651 Q11513.2197,1578.6221 11513.2197,1579.2861 Q11513.2197,1579.8008 11513.5642,1580.137 Q11513.9087,1580.4731 11515.0044,1580.8799 L11516.0586,1581.2783 Q11517.5527,1581.8262 11518.2583,1582.731 Q11518.9639,1583.6357 11518.9639,1585.0137 Q11518.9639,1586.8896 11517.8557,1587.8152 Q11516.7476,1588.7407 11514.5063,1588.7407 Q11513.585,1588.7407 11512.6594,1588.5208 Q11511.7339,1588.3008 11510.8706,1587.8691 L11510.8706,1585.3374 Q11511.8501,1586.0347 11512.7673,1586.375 Q11513.6846,1586.7153 11514.5811,1586.7153 Q11515.4858,1586.7153 11515.9839,1586.3044 Q11516.4819,1585.8936 11516.4819,1585.1548 Q11516.4819,1584.5986 11516.1499,1584.1794 Q11515.8179,1583.7603 11515.187,1583.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="11535.25" y="1586.5352">innerMergeWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11258.5" x2="11885.5" y1="1598" y2="1598"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1606"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="11277.5" y="1612.6348">taskCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="11317.5" y="1612.6348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="11346.5" y="1612.6348">*lookUpMergeJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1618.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="11277.5" y="1625.5898">joinChkResourceCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="11386.5" y="1625.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="11415.5" y="1625.5898">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1631.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="11277.5" y="1638.5449">outerMergeCtx outerMergeCtx</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1644.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="11277.5" y="1651.5">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1657.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="11277.5" y="1664.4551">innerExec Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1670.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="11277.5" y="1677.4102">joiner joiner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1683.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="11277.5" y="1690.3652">retFieldTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1696.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="11277.5" y="1703.3203">maxChunkSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1709.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="11277.5" y="1716.2754">indexRanges []*ranger.Range</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1722.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="11277.5" y="1729.2305">nextColCompareFilters *core.ColWithCmpFuncManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1735.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="11277.5" y="1742.1855">keyOff2IdxOff []int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11258.5" x2="11885.5" y1="1748.5059" y2="1748.5059"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1756.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="11277.5" y="1763.1406">run(ctx context.Context, wg *sync.WaitGroup, cancelFunc context.CancelFunc)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1769.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="11277.5" y="1776.0957">handleTask(ctx context.Context, task *lookUpMergeJoinTask) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1782.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="11277.5" y="1789.0508">fetchNewChunkWhenFull(ctx context.Context, task *lookUpMergeJoinTask, chk **chunk.Chunk) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1795.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="11277.5" y="1802.0059">doMergeJoin(ctx context.Context, task *lookUpMergeJoinTask) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1808.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="574" x="11277.5" y="1814.9609">fetchInnerRowsWithSameKey(ctx context.Context, task *lookUpMergeJoinTask, key chunk.Row) (bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1821.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="11277.5" y="1827.916">compare(outerRow chunk.Row, innerRow chunk.Row) (int, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1834.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="498" x="11277.5" y="1840.8711">constructDatumLookupKeys(task *lookUpMergeJoinTask) ([]*indexJoinLookUpContent, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1847.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="603" x="11277.5" y="1853.8262">constructDatumLookupKey(task *lookUpMergeJoinTask, rowIdx chunk.RowPtr) (*indexJoinLookUpContent, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1860.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="530" x="11277.5" y="1866.7813">dedupDatumLookUpKeys(lookUpContents []*indexJoinLookUpContent) []*indexJoinLookUpContent</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11265.5" y="1873.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="11277.5" y="1879.7363">fetchNextInnerResult(ctx context.Context, task *lookUpMergeJoinTask) (chunk.Row, error)</text><!--MD5=[4d2069438fee219885c0cc3dd517c720]
class executor.innerWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="242.3262" id="executor.innerWorker" style="stroke: #A80036; stroke-width: 1.5;" width="622" x="3931" y="1605"/><ellipse cx="4202.75" cy="1621" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4201.9834,1622.063 Q4200.1323,1621.3574 4199.4766,1620.5813 Q4198.8208,1619.8052 4198.8208,1618.4937 Q4198.8208,1616.8086 4199.8999,1615.8457 Q4200.979,1614.8828 4202.8633,1614.8828 Q4203.7183,1614.8828 4204.5732,1615.0779 Q4205.4282,1615.2729 4206.2666,1615.6548 L4206.2666,1618.0454 Q4205.478,1617.4893 4204.6646,1617.1987 Q4203.8511,1616.9082 4203.0542,1616.9082 Q4202.166,1616.9082 4201.6929,1617.2651 Q4201.2197,1617.6221 4201.2197,1618.2861 Q4201.2197,1618.8008 4201.5642,1619.137 Q4201.9087,1619.4731 4203.0044,1619.8799 L4204.0586,1620.2783 Q4205.5527,1620.8262 4206.2583,1621.731 Q4206.9639,1622.6357 4206.9639,1624.0137 Q4206.9639,1625.8896 4205.8557,1626.8152 Q4204.7476,1627.7407 4202.5063,1627.7407 Q4201.585,1627.7407 4200.6594,1627.5208 Q4199.7339,1627.3008 4198.8706,1626.8691 L4198.8706,1624.3374 Q4199.8501,1625.0347 4200.7673,1625.375 Q4201.6846,1625.7153 4202.5811,1625.7153 Q4203.4858,1625.7153 4203.9839,1625.3044 Q4204.4819,1624.8936 4204.4819,1624.1548 Q4204.4819,1623.5986 4204.1499,1623.1794 Q4203.8179,1622.7603 4203.187,1622.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="4223.25" y="1625.5352">innerWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3932" x2="4552" y1="1637" y2="1637"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1645"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="3951" y="1651.6348">taskCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="3991" y="1651.6348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="4020" y="1651.6348">*lookUpJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1657.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3951" y="1664.5898">outerCtx outerCtx</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1670.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3951" y="1677.5449">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1683.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3951" y="1690.5">executorChk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1696.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="3951" y="1703.4551">indexRanges []*ranger.Range</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1709.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="3951" y="1716.4102">nextColCompareFilters *core.ColWithCmpFuncManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1722.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="3951" y="1729.3652">keyOff2IdxOff []int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3932" x2="4552" y1="1735.6855" y2="1735.6855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1743.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="3951" y="1750.3203">run(ctx context.Context, wg *sync.WaitGroup)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1756.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="3951" y="1763.2754">handleTask(ctx context.Context, task *lookUpJoinTask) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1769.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="3951" y="1776.2305">constructLookupContent(task *lookUpJoinTask) ([]*indexJoinLookUpContent, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1782.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="3951" y="1789.1855">constructDatumLookupKey(task *lookUpJoinTask, chkIdx int, rowIdx int) ([]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1795.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="564" x="3951" y="1802.1406">sortAndDedupLookUpContents(lookUpContents []*indexJoinLookUpContent) []*indexJoinLookUpContent</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1808.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="596" x="3951" y="1815.0957">fetchInnerResults(ctx context.Context, task *lookUpJoinTask, lookUpContent []*indexJoinLookUpContent) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1821.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="3951" y="1828.0508">buildLookUpMap(task *lookUpJoinTask) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3939" y="1834.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="3951" y="1841.0059">hasNullInJoinKey(row chunk.Row) bool</text><!--MD5=[6d54f3f87daf736c1b884ae77857b66a]
class executor.insertCommon--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.insertCommon" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="26038.5" y="1689"/><ellipse cx="26150.25" cy="1705" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26146.6777,1701.2651 L26146.6777,1699.1069 L26154.0571,1699.1069 L26154.0571,1701.2651 L26151.5918,1701.2651 L26151.5918,1709.3418 L26154.0571,1709.3418 L26154.0571,1711.5 L26146.6777,1711.5 L26146.6777,1709.3418 L26149.1431,1709.3418 L26149.1431,1701.2651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="83" x="26170.75" y="1709.5352">insertCommon</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26039.5" x2="26352.5" y1="1721" y2="1721"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="26039.5" x2="26352.5" y1="1729" y2="1729"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26046.5" y="1737"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="26058.5" y="1743.6348">insertCommon() *InsertValues</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26046.5" y="1749.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="26058.5" y="1756.5898">exec(ctx context.Context, rows [][]types.Datum) error</text><!--MD5=[9a269983e9e40383b8ae705f81ff1e68]
class executor.inspectCPULoad--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.inspectCPULoad" style="stroke: #A80036; stroke-width: 1.5;" width="317" x="6498.5" y="1669.5"/><ellipse cx="6606.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6605.9834,1686.563 Q6604.1323,1685.8574 6603.4766,1685.0813 Q6602.8208,1684.3052 6602.8208,1682.9937 Q6602.8208,1681.3086 6603.8999,1680.3457 Q6604.979,1679.3828 6606.8633,1679.3828 Q6607.7183,1679.3828 6608.5732,1679.5779 Q6609.4282,1679.7729 6610.2666,1680.1548 L6610.2666,1682.5454 Q6609.478,1681.9893 6608.6646,1681.6987 Q6607.8511,1681.4082 6607.0542,1681.4082 Q6606.166,1681.4082 6605.6929,1681.7651 Q6605.2197,1682.1221 6605.2197,1682.7861 Q6605.2197,1683.3008 6605.5642,1683.637 Q6605.9087,1683.9731 6607.0044,1684.3799 L6608.0586,1684.7783 Q6609.5527,1685.3262 6610.2583,1686.231 Q6610.9639,1687.1357 6610.9639,1688.5137 Q6610.9639,1690.3896 6609.8557,1691.3152 Q6608.7476,1692.2407 6606.5063,1692.2407 Q6605.585,1692.2407 6604.6594,1692.0208 Q6603.7339,1691.8008 6602.8706,1691.3691 L6602.8706,1688.8374 Q6603.8501,1689.5347 6604.7673,1689.875 Q6605.6846,1690.2153 6606.5811,1690.2153 Q6607.4858,1690.2153 6607.9839,1689.8044 Q6608.4819,1689.3936 6608.4819,1688.6548 Q6608.4819,1688.0986 6608.1499,1687.6794 Q6607.8179,1687.2603 6607.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="6627.25" y="1690.0352">inspectCPULoad</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6499.5" x2="6814.5" y1="1701.5" y2="1701.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506.5" y="1709.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="6518.5" y="1716.1348">item string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506.5" y="1722.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="6518.5" y="1729.0898">tbl string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6499.5" x2="6814.5" y1="1735.4102" y2="1735.4102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506.5" y="1743.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="6518.5" y="1750.0449">genSQL(timeRange core.QueryTimeRange) string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506.5" y="1756.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="6518.5" y="1763">genResult(sql string, row chunk.Row) inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506.5" y="1769.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="6518.5" y="1775.9551">getItem() string</text><!--MD5=[6d657e5b955e7004f0c2f9e855ac9e37]
class executor.inspectDiskUsage--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.inspectDiskUsage" style="stroke: #A80036; stroke-width: 1.5;" width="317" x="6850.5" y="1682.5"/><ellipse cx="6954.25" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6953.4834,1699.563 Q6951.6323,1698.8574 6950.9766,1698.0813 Q6950.3208,1697.3052 6950.3208,1695.9937 Q6950.3208,1694.3086 6951.3999,1693.3457 Q6952.479,1692.3828 6954.3633,1692.3828 Q6955.2183,1692.3828 6956.0732,1692.5779 Q6956.9282,1692.7729 6957.7666,1693.1548 L6957.7666,1695.5454 Q6956.978,1694.9893 6956.1646,1694.6987 Q6955.3511,1694.4082 6954.5542,1694.4082 Q6953.666,1694.4082 6953.1929,1694.7651 Q6952.7197,1695.1221 6952.7197,1695.7861 Q6952.7197,1696.3008 6953.0642,1696.637 Q6953.4087,1696.9731 6954.5044,1697.3799 L6955.5586,1697.7783 Q6957.0527,1698.3262 6957.7583,1699.231 Q6958.4639,1700.1357 6958.4639,1701.5137 Q6958.4639,1703.3896 6957.3557,1704.3152 Q6956.2476,1705.2407 6954.0063,1705.2407 Q6953.085,1705.2407 6952.1594,1705.0208 Q6951.2339,1704.8008 6950.3706,1704.3691 L6950.3706,1701.8374 Q6951.3501,1702.5347 6952.2673,1702.875 Q6953.1846,1703.2153 6954.0811,1703.2153 Q6954.9858,1703.2153 6955.4839,1702.8044 Q6955.9819,1702.3936 6955.9819,1701.6548 Q6955.9819,1701.0986 6955.6499,1700.6794 Q6955.3179,1700.2603 6954.687,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="101" x="6974.75" y="1703.0352">inspectDiskUsage</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6851.5" x2="7166.5" y1="1714.5" y2="1714.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6851.5" x2="7166.5" y1="1722.5" y2="1722.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6858.5" y="1730.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="6870.5" y="1737.1348">genSQL(timeRange core.QueryTimeRange) string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6858.5" y="1743.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="6870.5" y="1750.0898">genResult(sql string, row chunk.Row) inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6858.5" y="1756.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="6870.5" y="1763.0449">getItem() string</text><!--MD5=[e4ed200e62098a801a02120f1ac5438f]
class executor.inspectSwapMemoryUsed--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.inspectSwapMemoryUsed" style="stroke: #A80036; stroke-width: 1.5;" width="317" x="4758.5" y="1682.5"/><ellipse cx="4839.75" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4838.9834,1699.563 Q4837.1323,1698.8574 4836.4766,1698.0813 Q4835.8208,1697.3052 4835.8208,1695.9937 Q4835.8208,1694.3086 4836.8999,1693.3457 Q4837.979,1692.3828 4839.8633,1692.3828 Q4840.7183,1692.3828 4841.5732,1692.5779 Q4842.4282,1692.7729 4843.2666,1693.1548 L4843.2666,1695.5454 Q4842.478,1694.9893 4841.6646,1694.6987 Q4840.8511,1694.4082 4840.0542,1694.4082 Q4839.166,1694.4082 4838.6929,1694.7651 Q4838.2197,1695.1221 4838.2197,1695.7861 Q4838.2197,1696.3008 4838.5642,1696.637 Q4838.9087,1696.9731 4840.0044,1697.3799 L4841.0586,1697.7783 Q4842.5527,1698.3262 4843.2583,1699.231 Q4843.9639,1700.1357 4843.9639,1701.5137 Q4843.9639,1703.3896 4842.8557,1704.3152 Q4841.7476,1705.2407 4839.5063,1705.2407 Q4838.585,1705.2407 4837.6594,1705.0208 Q4836.7339,1704.8008 4835.8706,1704.3691 L4835.8706,1701.8374 Q4836.8501,1702.5347 4837.7673,1702.875 Q4838.6846,1703.2153 4839.5811,1703.2153 Q4840.4858,1703.2153 4840.9839,1702.8044 Q4841.4819,1702.3936 4841.4819,1701.6548 Q4841.4819,1701.0986 4841.1499,1700.6794 Q4840.8179,1700.2603 4840.187,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="146" x="4860.25" y="1703.0352">inspectSwapMemoryUsed</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4759.5" x2="5074.5" y1="1714.5" y2="1714.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4759.5" x2="5074.5" y1="1722.5" y2="1722.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4766.5" y="1730.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="4778.5" y="1737.1348">genSQL(timeRange core.QueryTimeRange) string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4766.5" y="1743.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="4778.5" y="1750.0898">genResult(sql string, row chunk.Row) inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4766.5" y="1756.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="4778.5" y="1763.0449">getItem() string</text><!--MD5=[7bed7d3961b23b785ed8f70f62ea9097]
class executor.inspectVirtualMemUsage--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.inspectVirtualMemUsage" style="stroke: #A80036; stroke-width: 1.5;" width="317" x="5110.5" y="1682.5"/><ellipse cx="5194.25" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5193.4834,1699.563 Q5191.6323,1698.8574 5190.9766,1698.0813 Q5190.3208,1697.3052 5190.3208,1695.9937 Q5190.3208,1694.3086 5191.3999,1693.3457 Q5192.479,1692.3828 5194.3633,1692.3828 Q5195.2183,1692.3828 5196.0732,1692.5779 Q5196.9282,1692.7729 5197.7666,1693.1548 L5197.7666,1695.5454 Q5196.978,1694.9893 5196.1646,1694.6987 Q5195.3511,1694.4082 5194.5542,1694.4082 Q5193.666,1694.4082 5193.1929,1694.7651 Q5192.7197,1695.1221 5192.7197,1695.7861 Q5192.7197,1696.3008 5193.0642,1696.637 Q5193.4087,1696.9731 5194.5044,1697.3799 L5195.5586,1697.7783 Q5197.0527,1698.3262 5197.7583,1699.231 Q5198.4639,1700.1357 5198.4639,1701.5137 Q5198.4639,1703.3896 5197.3557,1704.3152 Q5196.2476,1705.2407 5194.0063,1705.2407 Q5193.085,1705.2407 5192.1594,1705.0208 Q5191.2339,1704.8008 5190.3706,1704.3691 L5190.3706,1701.8374 Q5191.3501,1702.5347 5192.2673,1702.875 Q5193.1846,1703.2153 5194.0811,1703.2153 Q5194.9858,1703.2153 5195.4839,1702.8044 Q5195.9819,1702.3936 5195.9819,1701.6548 Q5195.9819,1701.0986 5195.6499,1700.6794 Q5195.3179,1700.2603 5194.687,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="141" x="5214.75" y="1703.0352">inspectVirtualMemUsage</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5111.5" x2="5426.5" y1="1714.5" y2="1714.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5111.5" x2="5426.5" y1="1722.5" y2="1722.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5118.5" y="1730.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="5130.5" y="1737.1348">genSQL(timeRange core.QueryTimeRange) string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5118.5" y="1743.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="5130.5" y="1750.0898">genResult(sql string, row chunk.Row) inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5118.5" y="1756.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="5130.5" y="1763.0449">getItem() string</text><!--MD5=[63c37e223d24c206f3d6f883897c8182]
class executor.inspectionFilter--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.inspectionFilter" style="stroke: #A80036; stroke-width: 1.5;" width="160" x="34377" y="3626"/><ellipse cx="34410.9" cy="3642" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34410.1334,3643.063 Q34408.2823,3642.3574 34407.6266,3641.5813 Q34406.9708,3640.8052 34406.9708,3639.4937 Q34406.9708,3637.8086 34408.0499,3636.8457 Q34409.129,3635.8828 34411.0133,3635.8828 Q34411.8683,3635.8828 34412.7232,3636.0779 Q34413.5782,3636.2729 34414.4166,3636.6548 L34414.4166,3639.0454 Q34413.628,3638.4893 34412.8146,3638.1987 Q34412.0011,3637.9082 34411.2042,3637.9082 Q34410.316,3637.9082 34409.8429,3638.2651 Q34409.3697,3638.6221 34409.3697,3639.2861 Q34409.3697,3639.8008 34409.7142,3640.137 Q34410.0587,3640.4731 34411.1544,3640.8799 L34412.2086,3641.2783 Q34413.7027,3641.8262 34414.4083,3642.731 Q34415.1139,3643.6357 34415.1139,3645.0137 Q34415.1139,3646.8896 34414.0057,3647.8152 Q34412.8976,3648.7407 34410.6563,3648.7407 Q34409.735,3648.7407 34408.8094,3648.5208 Q34407.8839,3648.3008 34407.0206,3647.8691 L34407.0206,3645.3374 Q34408.0001,3646.0347 34408.9173,3646.375 Q34409.8346,3646.7153 34410.7311,3646.7153 Q34411.6358,3646.7153 34412.1339,3646.3044 Q34412.6319,3645.8936 34412.6319,3645.1548 Q34412.6319,3644.5986 34412.2999,3644.1794 Q34411.9679,3643.7603 34411.337,3643.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="34429.1" y="3646.5352">inspectionFilter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34378" x2="34536" y1="3658" y2="3658"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="34378" x2="34536" y1="3666" y2="3666"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34385" y="3674"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="34397" y="3680.6348">enable(name string) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34385" y="3686.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="34397" y="3693.5898">exist(name string) bool</text><!--MD5=[b3fc51f3989dbdfb3e43dd6e153487cd]
class executor.inspectionName--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.inspectionName" style="stroke: #A80036; stroke-width: 1.5;" width="124" x="10827" y="758.5"/><ellipse cx="10842" cy="774.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M10841.2334,775.563 Q10839.3823,774.8574 10838.7266,774.0813 Q10838.0708,773.3052 10838.0708,771.9937 Q10838.0708,770.3086 10839.1499,769.3457 Q10840.229,768.3828 10842.1133,768.3828 Q10842.9683,768.3828 10843.8232,768.5779 Q10844.6782,768.7729 10845.5166,769.1548 L10845.5166,771.5454 Q10844.728,770.9893 10843.9146,770.6987 Q10843.1011,770.4082 10842.3042,770.4082 Q10841.416,770.4082 10840.9429,770.7651 Q10840.4697,771.1221 10840.4697,771.7861 Q10840.4697,772.3008 10840.8142,772.637 Q10841.1587,772.9731 10842.2544,773.3799 L10843.3086,773.7783 Q10844.8027,774.3262 10845.5083,775.231 Q10846.2139,776.1357 10846.2139,777.5137 Q10846.2139,779.3896 10845.1057,780.3152 Q10843.9976,781.2407 10841.7563,781.2407 Q10840.835,781.2407 10839.9094,781.0208 Q10838.9839,780.8008 10838.1206,780.3691 L10838.1206,777.8374 Q10839.1001,778.5347 10840.0173,778.875 Q10840.9346,779.2153 10841.8311,779.2153 Q10842.7358,779.2153 10843.2339,778.8044 Q10843.7319,778.3936 10843.7319,777.6548 Q10843.7319,777.0986 10843.3999,776.6794 Q10843.0679,776.2603 10842.437,776.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="10856" y="779.0352">inspectionName</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10828" x2="10950" y1="790.5" y2="790.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="10828" x2="10950" y1="798.5" y2="798.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10835" y="806.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="10847" y="813.1348">name() string</text><!--MD5=[ea2126d730a8822acfb6bacba1305dc3]
class executor.inspectionResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="164.5957" id="executor.inspectionResult" style="stroke: #A80036; stroke-width: 1.5;" width="139" x="34572.5" y="3580.5"/><ellipse cx="34593.8" cy="3596.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34593.0334,3597.563 Q34591.1823,3596.8574 34590.5266,3596.0813 Q34589.8708,3595.3052 34589.8708,3593.9937 Q34589.8708,3592.3086 34590.9499,3591.3457 Q34592.029,3590.3828 34593.9133,3590.3828 Q34594.7683,3590.3828 34595.6232,3590.5779 Q34596.4782,3590.7729 34597.3166,3591.1548 L34597.3166,3593.5454 Q34596.528,3592.9893 34595.7146,3592.6987 Q34594.9011,3592.4082 34594.1042,3592.4082 Q34593.216,3592.4082 34592.7429,3592.7651 Q34592.2697,3593.1221 34592.2697,3593.7861 Q34592.2697,3594.3008 34592.6142,3594.637 Q34592.9587,3594.9731 34594.0544,3595.3799 L34595.1086,3595.7783 Q34596.6027,3596.3262 34597.3083,3597.231 Q34598.0139,3598.1357 34598.0139,3599.5137 Q34598.0139,3601.3896 34596.9057,3602.3152 Q34595.7976,3603.2407 34593.5563,3603.2407 Q34592.635,3603.2407 34591.7094,3603.0208 Q34590.7839,3602.8008 34589.9206,3602.3691 L34589.9206,3599.8374 Q34590.9001,3600.5347 34591.8173,3600.875 Q34592.7346,3601.2153 34593.6311,3601.2153 Q34594.5358,3601.2153 34595.0339,3600.8044 Q34595.5319,3600.3936 34595.5319,3599.6548 Q34595.5319,3599.0986 34595.1999,3598.6794 Q34594.8679,3598.2603 34594.237,3598.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="34609.2" y="3601.0352">inspectionResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34573.5" x2="34710.5" y1="3612.5" y2="3612.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34580.5" y="3620.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="34592.5" y="3627.1348">tp string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34580.5" y="3633.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="34592.5" y="3640.0898">instance string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34580.5" y="3646.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="34592.5" y="3653.0449">statusAddress string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34580.5" y="3659.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="34592.5" y="3666">item string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34580.5" y="3672.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="34592.5" y="3678.9551">actual string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34580.5" y="3685.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="34592.5" y="3691.9102">expected string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34580.5" y="3698.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="34592.5" y="3704.8652">severity string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34580.5" y="3711.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="34592.5" y="3717.8203">detail string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34580.5" y="3724.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="34592.5" y="3730.7754">degree float64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34573.5" x2="34710.5" y1="3737.0957" y2="3737.0957"/><!--MD5=[212d35fb318fa5bc120af427a882083e]
class executor.inspectionResultRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.inspectionResultRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="18325" y="1663"/><ellipse cx="18471.25" cy="1679" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M18470.4834,1680.063 Q18468.6323,1679.3574 18467.9766,1678.5813 Q18467.3208,1677.8052 18467.3208,1676.4937 Q18467.3208,1674.8086 18468.3999,1673.8457 Q18469.479,1672.8828 18471.3633,1672.8828 Q18472.2183,1672.8828 18473.0732,1673.0779 Q18473.9282,1673.2729 18474.7666,1673.6548 L18474.7666,1676.0454 Q18473.978,1675.4893 18473.1646,1675.1987 Q18472.3511,1674.9082 18471.5542,1674.9082 Q18470.666,1674.9082 18470.1929,1675.2651 Q18469.7197,1675.6221 18469.7197,1676.2861 Q18469.7197,1676.8008 18470.0642,1677.137 Q18470.4087,1677.4731 18471.5044,1677.8799 L18472.5586,1678.2783 Q18474.0527,1678.8262 18474.7583,1679.731 Q18475.4639,1680.6357 18475.4639,1682.0137 Q18475.4639,1683.8896 18474.3557,1684.8152 Q18473.2476,1685.7407 18471.0063,1685.7407 Q18470.085,1685.7407 18469.1594,1685.5208 Q18468.2339,1685.3008 18467.3706,1684.8691 L18467.3706,1682.3374 Q18468.3501,1683.0347 18469.2673,1683.375 Q18470.1846,1683.7153 18471.0811,1683.7153 Q18471.9858,1683.7153 18472.4839,1683.3044 Q18472.9819,1682.8936 18472.9819,1682.1548 Q18472.9819,1681.5986 18472.6499,1681.1794 Q18472.3179,1680.7603 18471.687,1680.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="145" x="18491.75" y="1683.5352">inspectionResultRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18326" x2="18770" y1="1695" y2="1695"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18333" y="1703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="18345" y="1709.6348">retrieved bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18333" y="1715.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="18345" y="1722.5898">extractor *core.InspectionResultTableExtractor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18333" y="1728.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="18345" y="1735.5449">timeRange core.QueryTimeRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18333" y="1741.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="18345" y="1748.5">instanceToStatusAddress</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="18485" y="1748.5">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="18508" y="1748.5">[string]string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18333" y="1754.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="18345" y="1761.4551">statusToInstanceAddress</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="18485" y="1761.4551">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="18508" y="1761.4551">[string]string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18326" x2="18770" y1="1767.7754" y2="1767.7754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18333" y="1775.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="18345" y="1782.4102">retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><!--MD5=[dcd2514358875ebf9ae540497697ce87]
class executor.inspectionRuleRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.inspectionRuleRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="18806" y="1682.5"/><ellipse cx="18957.25" cy="1698.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M18956.4834,1699.563 Q18954.6323,1698.8574 18953.9766,1698.0813 Q18953.3208,1697.3052 18953.3208,1695.9937 Q18953.3208,1694.3086 18954.3999,1693.3457 Q18955.479,1692.3828 18957.3633,1692.3828 Q18958.2183,1692.3828 18959.0732,1692.5779 Q18959.9282,1692.7729 18960.7666,1693.1548 L18960.7666,1695.5454 Q18959.978,1694.9893 18959.1646,1694.6987 Q18958.3511,1694.4082 18957.5542,1694.4082 Q18956.666,1694.4082 18956.1929,1694.7651 Q18955.7197,1695.1221 18955.7197,1695.7861 Q18955.7197,1696.3008 18956.0642,1696.637 Q18956.4087,1696.9731 18957.5044,1697.3799 L18958.5586,1697.7783 Q18960.0527,1698.3262 18960.7583,1699.231 Q18961.4639,1700.1357 18961.4639,1701.5137 Q18961.4639,1703.3896 18960.3557,1704.3152 Q18959.2476,1705.2407 18957.0063,1705.2407 Q18956.085,1705.2407 18955.1594,1705.0208 Q18954.2339,1704.8008 18953.3706,1704.3691 L18953.3706,1701.8374 Q18954.3501,1702.5347 18955.2673,1702.875 Q18956.1846,1703.2153 18957.0811,1703.2153 Q18957.9858,1703.2153 18958.4839,1702.8044 Q18958.9819,1702.3936 18958.9819,1701.6548 Q18958.9819,1701.0986 18958.6499,1700.6794 Q18958.3179,1700.2603 18957.687,1700.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="135" x="18977.75" y="1703.0352">inspectionRuleRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18807" x2="19251" y1="1714.5" y2="1714.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18814" y="1722.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="18826" y="1729.1348">retrieved bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18814" y="1735.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="18826" y="1742.0898">extractor *core.InspectionRuleTableExtractor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18807" x2="19251" y1="1748.4102" y2="1748.4102"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18814" y="1756.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="18826" y="1763.0449">retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><!--MD5=[8b85f21e1f4d26c88a1774dde1366ac4]
class executor.inspectionSummaryRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.inspectionSummaryRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="19287" y="1669.5"/><ellipse cx="19424.25" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M19423.4834,1686.563 Q19421.6323,1685.8574 19420.9766,1685.0813 Q19420.3208,1684.3052 19420.3208,1682.9937 Q19420.3208,1681.3086 19421.3999,1680.3457 Q19422.479,1679.3828 19424.3633,1679.3828 Q19425.2183,1679.3828 19426.0732,1679.5779 Q19426.9282,1679.7729 19427.7666,1680.1548 L19427.7666,1682.5454 Q19426.978,1681.9893 19426.1646,1681.6987 Q19425.3511,1681.4082 19424.5542,1681.4082 Q19423.666,1681.4082 19423.1929,1681.7651 Q19422.7197,1682.1221 19422.7197,1682.7861 Q19422.7197,1683.3008 19423.0642,1683.637 Q19423.4087,1683.9731 19424.5044,1684.3799 L19425.5586,1684.7783 Q19427.0527,1685.3262 19427.7583,1686.231 Q19428.4639,1687.1357 19428.4639,1688.5137 Q19428.4639,1690.3896 19427.3557,1691.3152 Q19426.2476,1692.2407 19424.0063,1692.2407 Q19423.085,1692.2407 19422.1594,1692.0208 Q19421.2339,1691.8008 19420.3706,1691.3691 L19420.3706,1688.8374 Q19421.3501,1689.5347 19422.2673,1689.875 Q19423.1846,1690.2153 19424.0811,1690.2153 Q19424.9858,1690.2153 19425.4839,1689.8044 Q19425.9819,1689.3936 19425.9819,1688.6548 Q19425.9819,1688.0986 19425.6499,1687.6794 Q19425.3179,1687.2603 19424.687,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="163" x="19444.75" y="1690.0352">inspectionSummaryRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19288" x2="19732" y1="1701.5" y2="1701.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19295" y="1709.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="19307" y="1716.1348">retrieved bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19295" y="1722.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="19307" y="1729.0898">table *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19295" y="1735.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="19307" y="1742.0449">extractor *core.InspectionSummaryTableExtractor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19295" y="1748.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="19307" y="1755">timeRange core.QueryTimeRange</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19288" x2="19732" y1="1761.3203" y2="1761.3203"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19295" y="1769.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="19307" y="1775.9551">retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><!--MD5=[8e77cfbd6fb7ba5075cc5952cc95dad5]
class executor.joiner--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.joiner" style="stroke: #A80036; stroke-width: 1.5;" width="805" x="13990.5" y="732.5"/><ellipse cx="14372.25" cy="748.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M14368.6777,744.7651 L14368.6777,742.6069 L14376.0571,742.6069 L14376.0571,744.7651 L14373.5918,744.7651 L14373.5918,752.8418 L14376.0571,752.8418 L14376.0571,755 L14368.6777,755 L14368.6777,752.8418 L14371.1431,752.8418 L14371.1431,744.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="33" x="14392.75" y="753.0352">joiner</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13991.5" x2="14794.5" y1="764.5" y2="764.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="13991.5" x2="14794.5" y1="772.5" y2="772.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13998.5" y="780.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="14010.5" y="787.1348">tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13998.5" y="793.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="779" x="14010.5" y="800.0898">tryToMatchOuters(outer chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13998.5" y="806.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="14010.5" y="813.0449">onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="14013.5" y="826"/><ellipse cx="14001.5" cy="835.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="14010.5" y="838.9551">Clone() joiner</text><!--MD5=[5803881749b4d9ff5cf2661f89fc79ae]
class executor.keyValue--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.keyValue" style="stroke: #A80036; stroke-width: 1.5;" width="88" x="34747" y="3626"/><ellipse cx="34763.8" cy="3642" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34763.0334,3643.063 Q34761.1823,3642.3574 34760.5266,3641.5813 Q34759.8708,3640.8052 34759.8708,3639.4937 Q34759.8708,3637.8086 34760.9499,3636.8457 Q34762.029,3635.8828 34763.9133,3635.8828 Q34764.7683,3635.8828 34765.6232,3636.0779 Q34766.4782,3636.2729 34767.3166,3636.6548 L34767.3166,3639.0454 Q34766.528,3638.4893 34765.7146,3638.1987 Q34764.9011,3637.9082 34764.1042,3637.9082 Q34763.216,3637.9082 34762.7429,3638.2651 Q34762.2697,3638.6221 34762.2697,3639.2861 Q34762.2697,3639.8008 34762.6142,3640.137 Q34762.9587,3640.4731 34764.0544,3640.8799 L34765.1086,3641.2783 Q34766.6027,3641.8262 34767.3083,3642.731 Q34768.0139,3643.6357 34768.0139,3645.0137 Q34768.0139,3646.8896 34766.9057,3647.8152 Q34765.7976,3648.7407 34763.5563,3648.7407 Q34762.635,3648.7407 34761.7094,3648.5208 Q34760.7839,3648.3008 34759.9206,3647.8691 L34759.9206,3645.3374 Q34760.9001,3646.0347 34761.8173,3646.375 Q34762.7346,3646.7153 34763.6311,3646.7153 Q34764.5358,3646.7153 34765.0339,3646.3044 Q34765.5319,3645.8936 34765.5319,3645.1548 Q34765.5319,3644.5986 34765.1999,3644.1794 Q34764.8679,3643.7603 34764.237,3643.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="34778.2" y="3646.5352">keyValue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34748" x2="34834" y1="3658" y2="3658"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34755" y="3666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="34767" y="3672.6348">key kv.Key</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34755" y="3678.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="34767" y="3685.5898">value []byte</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34748" x2="34834" y1="3691.9102" y2="3691.9102"/><!--MD5=[4d17cdafd5ca9ac587b691e67e401bc7]
class executor.keyValueWithDupInfo--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.keyValueWithDupInfo" style="stroke: #A80036; stroke-width: 1.5;" width="153" x="34870.5" y="3626"/><ellipse cx="34885.5" cy="3642" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34884.7334,3643.063 Q34882.8823,3642.3574 34882.2266,3641.5813 Q34881.5708,3640.8052 34881.5708,3639.4937 Q34881.5708,3637.8086 34882.6499,3636.8457 Q34883.729,3635.8828 34885.6133,3635.8828 Q34886.4683,3635.8828 34887.3232,3636.0779 Q34888.1782,3636.2729 34889.0166,3636.6548 L34889.0166,3639.0454 Q34888.228,3638.4893 34887.4146,3638.1987 Q34886.6011,3637.9082 34885.8042,3637.9082 Q34884.916,3637.9082 34884.4429,3638.2651 Q34883.9697,3638.6221 34883.9697,3639.2861 Q34883.9697,3639.8008 34884.3142,3640.137 Q34884.6587,3640.4731 34885.7544,3640.8799 L34886.8086,3641.2783 Q34888.3027,3641.8262 34889.0083,3642.731 Q34889.7139,3643.6357 34889.7139,3645.0137 Q34889.7139,3646.8896 34888.6057,3647.8152 Q34887.4976,3648.7407 34885.2563,3648.7407 Q34884.335,3648.7407 34883.4094,3648.5208 Q34882.4839,3648.3008 34881.6206,3647.8691 L34881.6206,3645.3374 Q34882.6001,3646.0347 34883.5173,3646.375 Q34884.4346,3646.7153 34885.3311,3646.7153 Q34886.2358,3646.7153 34886.7339,3646.3044 Q34887.2319,3645.8936 34887.2319,3645.1548 Q34887.2319,3644.5986 34886.8999,3644.1794 Q34886.5679,3643.7603 34885.937,3643.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="121" x="34899.5" y="3646.5352">keyValueWithDupInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34871.5" x2="35022.5" y1="3658" y2="3658"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34878.5" y="3666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="34890.5" y="3672.6348">newKV keyValue</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34878.5" y="3678.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="34890.5" y="3685.5898">dupErr error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34871.5" x2="35022.5" y1="3691.9102" y2="3691.9102"/><!--MD5=[a4e3f56444cd13f79ef7bab1099c10e0]
class executor.leftOuterJoiner--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.leftOuterJoiner" style="stroke: #A80036; stroke-width: 1.5;" width="811" x="11921.5" y="1669.5"/><ellipse cx="12281.25" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12280.4834,1686.563 Q12278.6323,1685.8574 12277.9766,1685.0813 Q12277.3208,1684.3052 12277.3208,1682.9937 Q12277.3208,1681.3086 12278.3999,1680.3457 Q12279.479,1679.3828 12281.3633,1679.3828 Q12282.2183,1679.3828 12283.0732,1679.5779 Q12283.9282,1679.7729 12284.7666,1680.1548 L12284.7666,1682.5454 Q12283.978,1681.9893 12283.1646,1681.6987 Q12282.3511,1681.4082 12281.5542,1681.4082 Q12280.666,1681.4082 12280.1929,1681.7651 Q12279.7197,1682.1221 12279.7197,1682.7861 Q12279.7197,1683.3008 12280.0642,1683.637 Q12280.4087,1683.9731 12281.5044,1684.3799 L12282.5586,1684.7783 Q12284.0527,1685.3262 12284.7583,1686.231 Q12285.4639,1687.1357 12285.4639,1688.5137 Q12285.4639,1690.3896 12284.3557,1691.3152 Q12283.2476,1692.2407 12281.0063,1692.2407 Q12280.085,1692.2407 12279.1594,1692.0208 Q12278.2339,1691.8008 12277.3706,1691.3691 L12277.3706,1688.8374 Q12278.3501,1689.5347 12279.2673,1689.875 Q12280.1846,1690.2153 12281.0811,1690.2153 Q12281.9858,1690.2153 12282.4839,1689.8044 Q12282.9819,1689.3936 12282.9819,1688.6548 Q12282.9819,1688.0986 12282.6499,1687.6794 Q12282.3179,1687.2603 12281.687,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="12301.75" y="1690.0352">leftOuterJoiner</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11922.5" x2="12731.5" y1="1701.5" y2="1701.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11922.5" x2="12731.5" y1="1709.5" y2="1709.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11929.5" y="1717.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="11941.5" y="1724.1348">tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11929.5" y="1730.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="785" x="11941.5" y="1737.0898">tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11929.5" y="1743.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="11941.5" y="1750.0449">onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="11944.5" y="1763"/><ellipse cx="11932.5" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="11941.5" y="1775.9551">Clone() joiner</text><!--MD5=[f62acb572bd514b3dfc3e3c042365026]
class executor.leftOuterSemiJoiner--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.leftOuterSemiJoiner" style="stroke: #A80036; stroke-width: 1.5;" width="811" x="12767.5" y="1663"/><ellipse cx="13113.75" cy="1679" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M13112.9834,1680.063 Q13111.1323,1679.3574 13110.4766,1678.5813 Q13109.8208,1677.8052 13109.8208,1676.4937 Q13109.8208,1674.8086 13110.8999,1673.8457 Q13111.979,1672.8828 13113.8633,1672.8828 Q13114.7183,1672.8828 13115.5732,1673.0779 Q13116.4282,1673.2729 13117.2666,1673.6548 L13117.2666,1676.0454 Q13116.478,1675.4893 13115.6646,1675.1987 Q13114.8511,1674.9082 13114.0542,1674.9082 Q13113.166,1674.9082 13112.6929,1675.2651 Q13112.2197,1675.6221 13112.2197,1676.2861 Q13112.2197,1676.8008 13112.5642,1677.137 Q13112.9087,1677.4731 13114.0044,1677.8799 L13115.0586,1678.2783 Q13116.5527,1678.8262 13117.2583,1679.731 Q13117.9639,1680.6357 13117.9639,1682.0137 Q13117.9639,1683.8896 13116.8557,1684.8152 Q13115.7476,1685.7407 13113.5063,1685.7407 Q13112.585,1685.7407 13111.6594,1685.5208 Q13110.7339,1685.3008 13109.8706,1684.8691 L13109.8706,1682.3374 Q13110.8501,1683.0347 13111.7673,1683.375 Q13112.6846,1683.7153 13113.5811,1683.7153 Q13114.4858,1683.7153 13114.9839,1683.3044 Q13115.4819,1682.8936 13115.4819,1682.1548 Q13115.4819,1681.5986 13115.1499,1681.1794 Q13114.8179,1680.7603 13114.187,1680.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="13134.25" y="1683.5352">leftOuterSemiJoiner</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="12768.5" x2="13577.5" y1="1695" y2="1695"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="12768.5" x2="13577.5" y1="1703" y2="1703"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12775.5" y="1711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="12787.5" y="1717.6348">tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12775.5" y="1723.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="785" x="12787.5" y="1730.5898">tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12775.5" y="1736.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="12787.5" y="1743.5449">onMatch(outer chunk.Row, chk *chunk.Chunk)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12775.5" y="1749.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="12787.5" y="1756.5">onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="12790.5" y="1769.4551"/><ellipse cx="12778.5" cy="1778.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="12787.5" y="1782.4102">Clone() joiner</text><!--MD5=[69014e7af7b8fb2f79acea9626e06801]
class executor.logFile--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.logFile" style="stroke: #A80036; stroke-width: 1.5;" width="106" x="35059" y="3626"/><ellipse cx="35091.1" cy="3642" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35090.3334,3643.063 Q35088.4823,3642.3574 35087.8266,3641.5813 Q35087.1708,3640.8052 35087.1708,3639.4937 Q35087.1708,3637.8086 35088.2499,3636.8457 Q35089.329,3635.8828 35091.2133,3635.8828 Q35092.0683,3635.8828 35092.9232,3636.0779 Q35093.7782,3636.2729 35094.6166,3636.6548 L35094.6166,3639.0454 Q35093.828,3638.4893 35093.0146,3638.1987 Q35092.2011,3637.9082 35091.4042,3637.9082 Q35090.516,3637.9082 35090.0429,3638.2651 Q35089.5697,3638.6221 35089.5697,3639.2861 Q35089.5697,3639.8008 35089.9142,3640.137 Q35090.2587,3640.4731 35091.3544,3640.8799 L35092.4086,3641.2783 Q35093.9027,3641.8262 35094.6083,3642.731 Q35095.3139,3643.6357 35095.3139,3645.0137 Q35095.3139,3646.8896 35094.2057,3647.8152 Q35093.0976,3648.7407 35090.8563,3648.7407 Q35089.935,3648.7407 35089.0094,3648.5208 Q35088.0839,3648.3008 35087.2206,3647.8691 L35087.2206,3645.3374 Q35088.2001,3646.0347 35089.1173,3646.375 Q35090.0346,3646.7153 35090.9311,3646.7153 Q35091.8358,3646.7153 35092.3339,3646.3044 Q35092.8319,3645.8936 35092.8319,3645.1548 Q35092.8319,3644.5986 35092.4999,3644.1794 Q35092.1679,3643.7603 35091.537,3643.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="36" x="35108.9" y="3646.5352">logFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35060" x2="35164" y1="3658" y2="3658"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35067" y="3666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="35079" y="3672.6348">file *os.File</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35067" y="3678.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="35079" y="3685.5898">start time.Time</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35060" x2="35164" y1="3691.9102" y2="3691.9102"/><!--MD5=[b8b1b5d302f50c933606fdb826fc7482]
class executor.logStreamResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.logStreamResult" style="stroke: #A80036; stroke-width: 1.5;" width="240" x="35200" y="3606.5"/><ellipse cx="35269.75" cy="3622.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35268.9834,3623.563 Q35267.1323,3622.8574 35266.4766,3622.0813 Q35265.8208,3621.3052 35265.8208,3619.9937 Q35265.8208,3618.3086 35266.8999,3617.3457 Q35267.979,3616.3828 35269.8633,3616.3828 Q35270.7183,3616.3828 35271.5732,3616.5779 Q35272.4282,3616.7729 35273.2666,3617.1548 L35273.2666,3619.5454 Q35272.478,3618.9893 35271.6646,3618.6987 Q35270.8511,3618.4082 35270.0542,3618.4082 Q35269.166,3618.4082 35268.6929,3618.7651 Q35268.2197,3619.1221 35268.2197,3619.7861 Q35268.2197,3620.3008 35268.5642,3620.637 Q35268.9087,3620.9731 35270.0044,3621.3799 L35271.0586,3621.7783 Q35272.5527,3622.3262 35273.2583,3623.231 Q35273.9639,3624.1357 35273.9639,3625.5137 Q35273.9639,3627.3896 35272.8557,3628.3152 Q35271.7476,3629.2407 35269.5063,3629.2407 Q35268.585,3629.2407 35267.6594,3629.0208 Q35266.7339,3628.8008 35265.8706,3628.3691 L35265.8706,3625.8374 Q35266.8501,3626.5347 35267.7673,3626.875 Q35268.6846,3627.2153 35269.5811,3627.2153 Q35270.4858,3627.2153 35270.9839,3626.8044 Q35271.4819,3626.3936 35271.4819,3625.6548 Q35271.4819,3625.0986 35271.1499,3624.6794 Q35270.8179,3624.2603 35270.187,3624.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="35290.25" y="3627.0352">logStreamResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35201" x2="35439" y1="3638.5" y2="3638.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35208" y="3646.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="35220" y="3653.1348">next</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="35247" y="3653.1348">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="35276" y="3653.1348">logStreamResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35208" y="3659.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="35220" y="3666.0898">addr string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35208" y="3672.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="35220" y="3679.0449">typ string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35208" y="3685.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="35220" y="3692">messages []*diagnosticspb.LogMessage</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35208" y="3698.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="35220" y="3704.9551">err error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35201" x2="35439" y1="3711.2754" y2="3711.2754"/><!--MD5=[0f8a412b103014adcce220c62e1385d7]
class executor.lookUpJoinTask--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="190.5059" id="executor.lookUpJoinTask" style="stroke: #A80036; stroke-width: 1.5;" width="225" x="10286.5" y="693.5"/><ellipse cx="10350.25" cy="709.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M10349.4834,710.563 Q10347.6323,709.8574 10346.9766,709.0813 Q10346.3208,708.3052 10346.3208,706.9937 Q10346.3208,705.3086 10347.3999,704.3457 Q10348.479,703.3828 10350.3633,703.3828 Q10351.2183,703.3828 10352.0732,703.5779 Q10352.9282,703.7729 10353.7666,704.1548 L10353.7666,706.5454 Q10352.978,705.9893 10352.1646,705.6987 Q10351.3511,705.4082 10350.5542,705.4082 Q10349.666,705.4082 10349.1929,705.7651 Q10348.7197,706.1221 10348.7197,706.7861 Q10348.7197,707.3008 10349.0642,707.637 Q10349.4087,707.9731 10350.5044,708.3799 L10351.5586,708.7783 Q10353.0527,709.3262 10353.7583,710.231 Q10354.4639,711.1357 10354.4639,712.5137 Q10354.4639,714.3896 10353.3557,715.3152 Q10352.2476,716.2407 10350.0063,716.2407 Q10349.085,716.2407 10348.1594,716.0208 Q10347.2339,715.8008 10346.3706,715.3691 L10346.3706,712.8374 Q10347.3501,713.5347 10348.2673,713.875 Q10349.1846,714.2153 10350.0811,714.2153 Q10350.9858,714.2153 10351.4839,713.8044 Q10351.9819,713.3936 10351.9819,712.6548 Q10351.9819,712.0986 10351.6499,711.6794 Q10351.3179,711.2603 10350.687,711.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="10370.75" y="714.0352">lookUpJoinTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10287.5" x2="10510.5" y1="725.5" y2="725.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="733.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="10306.5" y="740.1348">outerResult *chunk.List</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="746.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="10306.5" y="753.0898">outerMatch [][]bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="759.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="10306.5" y="766.0449">innerResult *chunk.List</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="772.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="10306.5" y="779">encodedLookUpKeys []*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="785.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="10306.5" y="791.9551">lookupMap *mvmap.MVMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="798.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="10306.5" y="804.9102">matchedInners []chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="811.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="10306.5" y="817.8652">doneCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="10351.5" y="817.8652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="10380.5" y="817.8652">error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="824.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="10306.5" y="830.8203">cursor chunk.RowPtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="837.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="10306.5" y="843.7754">hasMatch bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="850.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="10306.5" y="856.7305">hasNull bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10294.5" y="863.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="10306.5" y="869.6855">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10287.5" x2="10510.5" y1="876.0059" y2="876.0059"/><!--MD5=[31954661241d8c801d8b3a617456734f]
class executor.lookUpMergeJoinTask--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="164.5957" id="executor.lookUpMergeJoinTask" style="stroke: #A80036; stroke-width: 1.5;" width="216" x="35475" y="3580.5"/><ellipse cx="35516.55" cy="3596.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35515.7834,3597.563 Q35513.9323,3596.8574 35513.2766,3596.0813 Q35512.6208,3595.3052 35512.6208,3593.9937 Q35512.6208,3592.3086 35513.6999,3591.3457 Q35514.779,3590.3828 35516.6633,3590.3828 Q35517.5183,3590.3828 35518.3732,3590.5779 Q35519.2282,3590.7729 35520.0666,3591.1548 L35520.0666,3593.5454 Q35519.278,3592.9893 35518.4646,3592.6987 Q35517.6511,3592.4082 35516.8542,3592.4082 Q35515.966,3592.4082 35515.4929,3592.7651 Q35515.0197,3593.1221 35515.0197,3593.7861 Q35515.0197,3594.3008 35515.3642,3594.637 Q35515.7087,3594.9731 35516.8044,3595.3799 L35517.8586,3595.7783 Q35519.3527,3596.3262 35520.0583,3597.231 Q35520.7639,3598.1357 35520.7639,3599.5137 Q35520.7639,3601.3896 35519.6557,3602.3152 Q35518.5476,3603.2407 35516.3063,3603.2407 Q35515.385,3603.2407 35514.4594,3603.0208 Q35513.5339,3602.8008 35512.6706,3602.3691 L35512.6706,3599.8374 Q35513.6501,3600.5347 35514.5673,3600.875 Q35515.4846,3601.2153 35516.3811,3601.2153 Q35517.2858,3601.2153 35517.7839,3600.8044 Q35518.2819,3600.3936 35518.2819,3599.6548 Q35518.2819,3599.0986 35517.9499,3598.6794 Q35517.6179,3598.2603 35516.987,3598.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="125" x="35536.45" y="3601.0352">lookUpMergeJoinTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35476" x2="35690" y1="3612.5" y2="3612.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35483" y="3620.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="35495" y="3627.1348">outerResult *chunk.List</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35483" y="3633.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="35495" y="3640.0898">outerOrderIdx []chunk.RowPtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35483" y="3646.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="35495" y="3653.0449">innerResult *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35483" y="3659.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="35495" y="3666">innerIter chunk.Iterator</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35483" y="3672.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="35495" y="3678.9551">sameKeyInnerRows []chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35483" y="3685.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="35495" y="3691.9102">sameKeyIter chunk.Iterator</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35483" y="3698.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="35495" y="3704.8652">doneErr error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35483" y="3711.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="35495" y="3717.8203">results</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="35535" y="3717.8203">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="35564" y="3717.8203">*indexMergeJoinResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35483" y="3724.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="35495" y="3730.7754">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35476" x2="35690" y1="3737.0957" y2="3737.0957"/><!--MD5=[1b6b55d47ae2e8359fb4b7aab219d09f]
class executor.lookupTableTask--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="216.416" id="executor.lookupTableTask" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="35726" y="3555"/><ellipse cx="35781.75" cy="3571" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35780.9834,3572.063 Q35779.1323,3571.3574 35778.4766,3570.5813 Q35777.8208,3569.8052 35777.8208,3568.4937 Q35777.8208,3566.8086 35778.8999,3565.8457 Q35779.979,3564.8828 35781.8633,3564.8828 Q35782.7183,3564.8828 35783.5732,3565.0779 Q35784.4282,3565.2729 35785.2666,3565.6548 L35785.2666,3568.0454 Q35784.478,3567.4893 35783.6646,3567.1987 Q35782.8511,3566.9082 35782.0542,3566.9082 Q35781.166,3566.9082 35780.6929,3567.2651 Q35780.2197,3567.6221 35780.2197,3568.2861 Q35780.2197,3568.8008 35780.5642,3569.137 Q35780.9087,3569.4731 35782.0044,3569.8799 L35783.0586,3570.2783 Q35784.5527,3570.8262 35785.2583,3571.731 Q35785.9639,3572.6357 35785.9639,3574.0137 Q35785.9639,3575.8896 35784.8557,3576.8152 Q35783.7476,3577.7407 35781.5063,3577.7407 Q35780.585,3577.7407 35779.6594,3577.5208 Q35778.7339,3577.3008 35777.8706,3576.8691 L35777.8706,3574.3374 Q35778.8501,3575.0347 35779.7673,3575.375 Q35780.6846,3575.7153 35781.5811,3575.7153 Q35782.4858,3575.7153 35782.9839,3575.3044 Q35783.4819,3574.8936 35783.4819,3574.1548 Q35783.4819,3573.5986 35783.1499,3573.1794 Q35782.8179,3572.7603 35782.187,3572.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="35802.25" y="3575.5352">lookupTableTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35727" x2="35945" y1="3587" y2="3587"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35734" y="3595"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="35746" y="3601.6348">handles []int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35734" y="3607.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="35746" y="3614.5898">rowIdx []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35734" y="3620.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="35746" y="3627.5449">rows []chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35734" y="3633.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="35746" y="3640.5">idxRows *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35734" y="3646.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="35746" y="3653.4551">cursor int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35734" y="3659.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="35746" y="3666.4102">doneCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="35791" y="3666.4102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="35820" y="3666.4102">error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35734" y="3672.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="35746" y="3679.3652">indexOrder</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="35811" y="3679.3652">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="35834" y="3679.3652">[int64]int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35734" y="3685.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="35746" y="3692.3203">duplicatedIndexOrder</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="35867" y="3692.3203">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="35890" y="3692.3203">[int64]int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35734" y="3698.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="35746" y="3705.2754">memUsage int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35734" y="3711.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="35746" y="3718.2305">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35727" x2="35945" y1="3724.5508" y2="3724.5508"/><ellipse cx="35737" cy="3735.5508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="35746" y="3739.1855">Len() int</text><ellipse cx="35737" cy="3748.5059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="35746" y="3752.1406">Less(i int, j int) bool</text><ellipse cx="35737" cy="3761.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="35746" y="3765.0957">Swap(i int, j int)</text><!--MD5=[99ee01cfc1bac6c2a4d28826cab820d0]
class executor.memIndexLookUpReader--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="164.5957" id="executor.memIndexLookUpReader" style="stroke: #A80036; stroke-width: 1.5;" width="232" x="35981" y="3580.5"/><ellipse cx="36020.3" cy="3596.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36019.5334,3597.563 Q36017.6823,3596.8574 36017.0266,3596.0813 Q36016.3708,3595.3052 36016.3708,3593.9937 Q36016.3708,3592.3086 36017.4499,3591.3457 Q36018.529,3590.3828 36020.4133,3590.3828 Q36021.2683,3590.3828 36022.1232,3590.5779 Q36022.9782,3590.7729 36023.8166,3591.1548 L36023.8166,3593.5454 Q36023.028,3592.9893 36022.2146,3592.6987 Q36021.4011,3592.4082 36020.6042,3592.4082 Q36019.716,3592.4082 36019.2429,3592.7651 Q36018.7697,3593.1221 36018.7697,3593.7861 Q36018.7697,3594.3008 36019.1142,3594.637 Q36019.4587,3594.9731 36020.5544,3595.3799 L36021.6086,3595.7783 Q36023.1027,3596.3262 36023.8083,3597.231 Q36024.5139,3598.1357 36024.5139,3599.5137 Q36024.5139,3601.3896 36023.4057,3602.3152 Q36022.2976,3603.2407 36020.0563,3603.2407 Q36019.135,3603.2407 36018.2094,3603.0208 Q36017.2839,3602.8008 36016.4206,3602.3691 L36016.4206,3599.8374 Q36017.4001,3600.5347 36018.3173,3600.875 Q36019.2346,3601.2153 36020.1311,3601.2153 Q36021.0358,3601.2153 36021.5339,3600.8044 Q36022.0319,3600.3936 36022.0319,3599.6548 Q36022.0319,3599.0986 36021.6999,3598.6794 Q36021.3679,3598.2603 36020.737,3598.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="146" x="36039.7" y="3601.0352">memIndexLookUpReader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35982" x2="36212" y1="3612.5" y2="3612.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35989" y="3620.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="36001" y="3627.1348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35989" y="3633.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="36001" y="3640.0898">index *model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35989" y="3646.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="36001" y="3653.0449">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35989" y="3659.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="36001" y="3666">table table.Table</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35989" y="3672.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="36001" y="3678.9551">desc bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35989" y="3685.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="36001" y="3691.9102">conditions []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35989" y="3698.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="36001" y="3704.8652">retFieldTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35989" y="3711.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="36001" y="3717.8203">idxReader *memIndexReader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35982" x2="36212" y1="3724.1406" y2="3724.1406"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35989" y="3732.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="36001" y="3738.7754">getMemRows() ([][]types.Datum, error)</text><!--MD5=[b9bc29e9172f0e4288620aa4d3b02c28]
class executor.memIndexReader--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="229.3711" id="executor.memIndexReader" style="stroke: #A80036; stroke-width: 1.5;" width="513" x="32151.5" y="3870"/><ellipse cx="32352.25" cy="3886" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32351.4834,3887.063 Q32349.6323,3886.3574 32348.9766,3885.5813 Q32348.3208,3884.8052 32348.3208,3883.4937 Q32348.3208,3881.8086 32349.3999,3880.8457 Q32350.479,3879.8828 32352.3633,3879.8828 Q32353.2183,3879.8828 32354.0732,3880.0779 Q32354.9282,3880.2729 32355.7666,3880.6548 L32355.7666,3883.0454 Q32354.978,3882.4893 32354.1646,3882.1987 Q32353.3511,3881.9082 32352.5542,3881.9082 Q32351.666,3881.9082 32351.1929,3882.2651 Q32350.7197,3882.6221 32350.7197,3883.2861 Q32350.7197,3883.8008 32351.0642,3884.137 Q32351.4087,3884.4731 32352.5044,3884.8799 L32353.5586,3885.2783 Q32355.0527,3885.8262 32355.7583,3886.731 Q32356.4639,3887.6357 32356.4639,3889.0137 Q32356.4639,3890.8896 32355.3557,3891.8152 Q32354.2476,3892.7407 32352.0063,3892.7407 Q32351.085,3892.7407 32350.1594,3892.5208 Q32349.2339,3892.3008 32348.3706,3891.8691 L32348.3706,3889.3374 Q32349.3501,3890.0347 32350.2673,3890.375 Q32351.1846,3890.7153 32352.0811,3890.7153 Q32352.9858,3890.7153 32353.4839,3890.3044 Q32353.9819,3889.8936 32353.9819,3889.1548 Q32353.9819,3888.5986 32353.6499,3888.1794 Q32353.3179,3887.7603 32352.687,3887.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="32372.75" y="3890.5352">memIndexReader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32152.5" x2="32663.5" y1="3902" y2="3902"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="3910"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="32171.5" y="3916.6348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="3922.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="32171.5" y="3929.5898">index *model.IndexInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="3935.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="32171.5" y="3942.5449">table *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="3948.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="32171.5" y="3955.5">kvRanges []kv.KeyRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="3961.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="32171.5" y="3968.4551">desc bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="3974.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="32171.5" y="3981.4102">conditions []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="3987.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="32171.5" y="3994.3652">addedRows [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="4000.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="32171.5" y="4007.3203">addedRowsLen int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="4013.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="32171.5" y="4020.2754">retFieldTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="4026.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="32171.5" y="4033.2305">outputOffset []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="4039.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="32171.5" y="4046.1855">belowHandleIndex int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32152.5" x2="32663.5" y1="4052.5059" y2="4052.5059"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="4060.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="32171.5" y="4067.1406">getMemRows() ([][]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="4073.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="487" x="32171.5" y="4080.0957">decodeIndexKeyValue(key []byte, value []byte, tps []*types.FieldType) ([]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32159.5" y="4086.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="32171.5" y="4093.0508">getMemRowsHandle() ([]int64, error)</text><!--MD5=[dfe980b2b3e0edb5af63c758b9671dfb]
class executor.memTableReader--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="203.4609" id="executor.memTableReader" style="stroke: #A80036; stroke-width: 1.5;" width="399" x="32699.5" y="3883"/><ellipse cx="32842.75" cy="3899" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32841.9834,3900.063 Q32840.1323,3899.3574 32839.4766,3898.5813 Q32838.8208,3897.8052 32838.8208,3896.4937 Q32838.8208,3894.8086 32839.8999,3893.8457 Q32840.979,3892.8828 32842.8633,3892.8828 Q32843.7183,3892.8828 32844.5732,3893.0779 Q32845.4282,3893.2729 32846.2666,3893.6548 L32846.2666,3896.0454 Q32845.478,3895.4893 32844.6646,3895.1987 Q32843.8511,3894.9082 32843.0542,3894.9082 Q32842.166,3894.9082 32841.6929,3895.2651 Q32841.2197,3895.6221 32841.2197,3896.2861 Q32841.2197,3896.8008 32841.5642,3897.137 Q32841.9087,3897.4731 32843.0044,3897.8799 L32844.0586,3898.2783 Q32845.5527,3898.8262 32846.2583,3899.731 Q32846.9639,3900.6357 32846.9639,3902.0137 Q32846.9639,3903.8896 32845.8557,3904.8152 Q32844.7476,3905.7407 32842.5063,3905.7407 Q32841.585,3905.7407 32840.6594,3905.5208 Q32839.7339,3905.3008 32838.8706,3904.8691 L32838.8706,3902.3374 Q32839.8501,3903.0347 32840.7673,3903.375 Q32841.6846,3903.7153 32842.5811,3903.7153 Q32843.4858,3903.7153 32843.9839,3903.3044 Q32844.4819,3902.8936 32844.4819,3902.1548 Q32844.4819,3901.5986 32844.1499,3901.1794 Q32843.8179,3900.7603 32843.187,3900.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="32863.25" y="3903.5352">memTableReader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32700.5" x2="33097.5" y1="3915" y2="3915"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="3923"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="32719.5" y="3929.6348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="3935.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="32719.5" y="3942.5898">table *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="3948.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="32719.5" y="3955.5449">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="3961.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="32719.5" y="3968.5">kvRanges []kv.KeyRange</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="3974.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="32719.5" y="3981.4551">desc bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="3987.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="32719.5" y="3994.4102">conditions []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="4000.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="32719.5" y="4007.3652">addedRows [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="4013.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="32719.5" y="4020.3203">retFieldTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="4026.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="32719.5" y="4033.2754">colIDs</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="32755.5" y="4033.2754">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="32778.5" y="4033.2754">[int64]int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="4039.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="32719.5" y="4046.2305">buffer allocBuf</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32700.5" x2="33097.5" y1="4052.5508" y2="4052.5508"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="4060.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="32719.5" y="4067.1855">getMemRows() ([][]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32707.5" y="4073.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="32719.5" y="4080.1406">decodeRecordKeyValue(key []byte, value []byte) ([]types.Datum, error)</text><!--MD5=[f4cbd744c6f4d28dce32404187238a36]
class executor.memTableRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.memTableRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="9166" y="752"/><ellipse cx="9327.75" cy="768" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9324.1777,764.2651 L9324.1777,762.1069 L9331.5571,762.1069 L9331.5571,764.2651 L9329.0918,764.2651 L9329.0918,772.3418 L9331.5571,772.3418 L9331.5571,774.5 L9324.1777,774.5 L9324.1777,772.3418 L9326.6431,772.3418 L9326.6431,764.2651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="114" x="9348.25" y="772.5352">memTableRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9167" x2="9611" y1="784" y2="784"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="9167" x2="9611" y1="792" y2="792"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9174" y="800"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="9186" y="806.6348">retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9174" y="812.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="9186" y="819.5898">close() error</text><!--MD5=[b14f01e3fc07ea1e32d22d65c0e4eb0c]
class executor.memtableRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="540.293" id="executor.memtableRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="482" x="19768" y="1456"/><ellipse cx="19949.75" cy="1472" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M19948.9834,1473.063 Q19947.1323,1472.3574 19946.4766,1471.5813 Q19945.8208,1470.8052 19945.8208,1469.4937 Q19945.8208,1467.8086 19946.8999,1466.8457 Q19947.979,1465.8828 19949.8633,1465.8828 Q19950.7183,1465.8828 19951.5732,1466.0779 Q19952.4282,1466.2729 19953.2666,1466.6548 L19953.2666,1469.0454 Q19952.478,1468.4893 19951.6646,1468.1987 Q19950.8511,1467.9082 19950.0542,1467.9082 Q19949.166,1467.9082 19948.6929,1468.2651 Q19948.2197,1468.6221 19948.2197,1469.2861 Q19948.2197,1469.8008 19948.5642,1470.137 Q19948.9087,1470.4731 19950.0044,1470.8799 L19951.0586,1471.2783 Q19952.5527,1471.8262 19953.2583,1472.731 Q19953.9639,1473.6357 19953.9639,1475.0137 Q19953.9639,1476.8896 19952.8557,1477.8152 Q19951.7476,1478.7407 19949.5063,1478.7407 Q19948.585,1478.7407 19947.6594,1478.5208 Q19946.7339,1478.3008 19945.8706,1477.8691 L19945.8706,1475.3374 Q19946.8501,1476.0347 19947.7673,1476.375 Q19948.6846,1476.7153 19949.5811,1476.7153 Q19950.4858,1476.7153 19950.9839,1476.3044 Q19951.4819,1475.8936 19951.4819,1475.1548 Q19951.4819,1474.5986 19951.1499,1474.1794 Q19950.8179,1473.7603 19950.187,1473.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="19970.25" y="1476.5352">memtableRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19769" x2="20249" y1="1488" y2="1488"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1496"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="19788" y="1502.6348">table *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1508.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="19788" y="1515.5898">columns []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1521.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="19788" y="1528.5449">rows [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1534.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="19788" y="1541.5">rowIdx int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1547.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="19788" y="1554.4551">retrieved bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1560.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="19788" y="1567.4102">initialized bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19769" x2="20249" y1="1573.7305" y2="1573.7305"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1581.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="19788" y="1588.3652">retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1594.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="19788" y="1601.3203">setDataFromSchemata(ctx sessionctx.Context, schemas []*model.DBInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1607.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="19788" y="1614.2754">setDataForStatistics(ctx sessionctx.Context, schemas []*model.DBInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1620.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="19788" y="1627.2305">setDataForStatisticsInTable(schema *model.DBInfo, table *model.TableInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1633.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="19788" y="1640.1855">setDataFromTables(ctx sessionctx.Context, schemas []*model.DBInfo) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1646.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="19788" y="1653.1406">setDataForColumns(ctx sessionctx.Context, schemas []*model.DBInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1659.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="19788" y="1666.0957">dataForColumnsInTable(schema *model.DBInfo, tbl *model.TableInfo) [][]types.Datum</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1672.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="19788" y="1679.0508">setDataFromPartitions(ctx sessionctx.Context, schemas []*model.DBInfo) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1685.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="19788" y="1692.0059">setDataFromIndexes(ctx sessionctx.Context, schemas []*model.DBInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1698.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="19788" y="1704.9609">setDataFromViews(ctx sessionctx.Context, schemas []*model.DBInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1711.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="19788" y="1717.916">setDataFromEngines()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1724.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="19788" y="1730.8711">setDataFromCharacterSets()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1737.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="19788" y="1743.8262">setDataFromCollations()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1750.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="19788" y="1756.7813">dataForCollationCharacterSetApplicability()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1763.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="19788" y="1769.7363">dataForTiDBClusterInfo(ctx sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1776.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="434" x="19788" y="1782.6914">setDataFromKeyColumnUsage(ctx sessionctx.Context, schemas []*model.DBInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1789.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="19788" y="1795.6465">setDataForClusterProcessList(ctx sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1801.9668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="19788" y="1808.6016">setDataForProcessList(ctx sessionctx.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1814.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="19788" y="1821.5566">setDataFromUserPrivileges(ctx sessionctx.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1827.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="19788" y="1834.5117">setDataForMetricTables(ctx sessionctx.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1840.832"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="19788" y="1847.4668">setDataForTikVRegionPeers(ctx sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1853.7871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="19788" y="1860.4219">setNewTiKVRegionPeersCols(region *helper.RegionInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1866.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="19788" y="1873.377">setDataForTiDBHotRegions(ctx sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1879.6973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="19788" y="1886.332">setDataForHotRegionByMetrics(metrics []helper.HotTableIndex, tp string)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1892.6523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="432" x="19788" y="1899.2871">setDataFromTableConstraints(ctx sessionctx.Context, schemas []*model.DBInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1905.6074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="19788" y="1912.2422">setDataFromSessionVar(ctx sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1918.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="19788" y="1925.1973">setDataForAnalyzeStatus(sctx sessionctx.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1931.5176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="19788" y="1938.1523">setDataForPseudoProfiling(sctx sessionctx.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1944.4727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="19788" y="1951.1074">setDataForServersInfo() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1957.4277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="19788" y="1964.0625">setDataFromSequences(ctx sessionctx.Context, schemas []*model.DBInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1970.3828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="19788" y="1977.0176">dataForTableTiFlashReplica(ctx sessionctx.Context, schemas []*model.DBInfo)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19776" y="1983.3379"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="19788" y="1989.9727">setDataForStatementsSummary(ctx sessionctx.Context, tableName string) error</text><!--MD5=[5547d51b04a0ce24d2e1984a777026b8]
class executor.mergeJoinTable--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="307.1016" id="executor.mergeJoinTable" style="stroke: #A80036; stroke-width: 1.5;" width="503" x="33133.5" y="3831"/><ellipse cx="33335.25" cy="3847" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33334.4834,3848.063 Q33332.6323,3847.3574 33331.9766,3846.5813 Q33331.3208,3845.8052 33331.3208,3844.4937 Q33331.3208,3842.8086 33332.3999,3841.8457 Q33333.479,3840.8828 33335.3633,3840.8828 Q33336.2183,3840.8828 33337.0732,3841.0779 Q33337.9282,3841.2729 33338.7666,3841.6548 L33338.7666,3844.0454 Q33337.978,3843.4893 33337.1646,3843.1987 Q33336.3511,3842.9082 33335.5542,3842.9082 Q33334.666,3842.9082 33334.1929,3843.2651 Q33333.7197,3843.6221 33333.7197,3844.2861 Q33333.7197,3844.8008 33334.0642,3845.137 Q33334.4087,3845.4731 33335.5044,3845.8799 L33336.5586,3846.2783 Q33338.0527,3846.8262 33338.7583,3847.731 Q33339.4639,3848.6357 33339.4639,3850.0137 Q33339.4639,3851.8896 33338.3557,3852.8152 Q33337.2476,3853.7407 33335.0063,3853.7407 Q33334.085,3853.7407 33333.1594,3853.5208 Q33332.2339,3853.3008 33331.3706,3852.8691 L33331.3706,3850.3374 Q33332.3501,3851.0347 33333.2673,3851.375 Q33334.1846,3851.7153 33335.0811,3851.7153 Q33335.9858,3851.7153 33336.4839,3851.3044 Q33336.9819,3850.8936 33336.9819,3850.1548 Q33336.9819,3849.5986 33336.6499,3849.1794 Q33336.3179,3848.7603 33335.687,3848.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="33355.75" y="3851.5352">mergeJoinTable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33134.5" x2="33635.5" y1="3863" y2="3863"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="3871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="33153.5" y="3877.6348">isInner bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="3883.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="33153.5" y="3890.5898">childIndex int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="3896.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="33153.5" y="3903.5449">joinKeys []*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="3909.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="33153.5" y="3916.5">filters []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="3922.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="33153.5" y="3929.4551">executed bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="3935.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="33153.5" y="3942.4102">childChunk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="3948.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="33153.5" y="3955.3652">childChunkIter *chunk.Iterator4Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="3961.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="33153.5" y="3968.3203">groupChecker *vecGroupChecker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="3974.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="33153.5" y="3981.2754">groupRowsSelected []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="3987.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="33153.5" y="3994.2305">groupRowsIter chunk.Iterator</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="4000.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="33153.5" y="4007.1855">rowContainer *chunk.RowContainer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="4013.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="33153.5" y="4020.1406">filtersSelected []bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="4026.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="33153.5" y="4033.0957">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33134.5" x2="33635.5" y1="4039.416" y2="4039.416"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="4047.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="33153.5" y="4054.0508">init(exec *MergeJoinExec)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="4060.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="33153.5" y="4067.0059">finish() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="4073.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="33153.5" y="4079.9609">selectNextGroup()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="4086.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="33153.5" y="4092.916">fetchNextChunk(ctx context.Context, exec *MergeJoinExec) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="4099.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="33153.5" y="4105.8711">fetchNextInnerGroup(ctx context.Context, exec *MergeJoinExec) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="4112.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="477" x="33153.5" y="4118.8262">fetchNextOuterGroup(ctx context.Context, exec *MergeJoinExec, requiredRows int) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33141.5" y="4125.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="33153.5" y="4131.7813">hasNullInJoinKey(row chunk.Row) bool</text><!--MD5=[36b9d25ffa06818ad29da46528488aa2]
class executor.mockPhysicalIndexReader--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.mockPhysicalIndexReader" style="stroke: #A80036; stroke-width: 1.5;" width="182" x="8072" y="758.5"/><ellipse cx="8087" cy="774.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8086.2334,775.563 Q8084.3823,774.8574 8083.7266,774.0813 Q8083.0708,773.3052 8083.0708,771.9937 Q8083.0708,770.3086 8084.1499,769.3457 Q8085.229,768.3828 8087.1133,768.3828 Q8087.9683,768.3828 8088.8232,768.5779 Q8089.6782,768.7729 8090.5166,769.1548 L8090.5166,771.5454 Q8089.728,770.9893 8088.9146,770.6987 Q8088.1011,770.4082 8087.3042,770.4082 Q8086.416,770.4082 8085.9429,770.7651 Q8085.4697,771.1221 8085.4697,771.7861 Q8085.4697,772.3008 8085.8142,772.637 Q8086.1587,772.9731 8087.2544,773.3799 L8088.3086,773.7783 Q8089.8027,774.3262 8090.5083,775.231 Q8091.2139,776.1357 8091.2139,777.5137 Q8091.2139,779.3896 8090.1057,780.3152 Q8088.9976,781.2407 8086.7563,781.2407 Q8085.835,781.2407 8084.9094,781.0208 Q8083.9839,780.8008 8083.1206,780.3691 L8083.1206,777.8374 Q8084.1001,778.5347 8085.0173,778.875 Q8085.9346,779.2153 8086.8311,779.2153 Q8087.7358,779.2153 8088.2339,778.8044 Q8088.7319,778.3936 8088.7319,777.6548 Q8088.7319,777.0986 8088.3999,776.6794 Q8088.0679,776.2603 8087.437,776.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="150" x="8101" y="779.0352">mockPhysicalIndexReader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8073" x2="8253" y1="790.5" y2="790.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8080" y="798.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="8092" y="805.1348">e Executor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8073" x2="8253" y1="811.4551" y2="811.4551"/><!--MD5=[37917d01df03190437e5d3470297e6d9]
class executor.multiWayMerge--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="138.6855" id="executor.multiWayMerge" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="33672" y="3915"/><ellipse cx="33774.25" cy="3931" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33773.4834,3932.063 Q33771.6323,3931.3574 33770.9766,3930.5813 Q33770.3208,3929.8052 33770.3208,3928.4937 Q33770.3208,3926.8086 33771.3999,3925.8457 Q33772.479,3924.8828 33774.3633,3924.8828 Q33775.2183,3924.8828 33776.0732,3925.0779 Q33776.9282,3925.2729 33777.7666,3925.6548 L33777.7666,3928.0454 Q33776.978,3927.4893 33776.1646,3927.1987 Q33775.3511,3926.9082 33774.5542,3926.9082 Q33773.666,3926.9082 33773.1929,3927.2651 Q33772.7197,3927.6221 33772.7197,3928.2861 Q33772.7197,3928.8008 33773.0642,3929.137 Q33773.4087,3929.4731 33774.5044,3929.8799 L33775.5586,3930.2783 Q33777.0527,3930.8262 33777.7583,3931.731 Q33778.4639,3932.6357 33778.4639,3934.0137 Q33778.4639,3935.8896 33777.3557,3936.8152 Q33776.2476,3937.7407 33774.0063,3937.7407 Q33773.085,3937.7407 33772.1594,3937.5208 Q33771.2339,3937.3008 33770.3706,3936.8691 L33770.3706,3934.3374 Q33771.3501,3935.0347 33772.2673,3935.375 Q33773.1846,3935.7153 33774.0811,3935.7153 Q33774.9858,3935.7153 33775.4839,3935.3044 Q33775.9819,3934.8936 33775.9819,3934.1548 Q33775.9819,3933.5986 33775.6499,3933.1794 Q33775.3179,3932.7603 33774.687,3932.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="33794.75" y="3935.5352">multiWayMerge</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33673" x2="33971" y1="3947" y2="3947"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33680" y="3955"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="33692" y="3961.6348">elements []partitionPointer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33673" x2="33971" y1="3967.9551" y2="3967.9551"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33680" y="3975.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="33692" y="3982.5898">lessRowFunction</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="33785" y="3982.5898">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="33809" y="3982.5898">(chunk.Row, chunk.Row) bool</text><ellipse cx="33683" cy="3991.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="33692" y="3995.5449">Less(i int, j int) bool</text><ellipse cx="33683" cy="4004.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="33692" y="4008.5">Len() int</text><ellipse cx="33683" cy="4017.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="33692" y="4021.4551">Push(x</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="33732" y="4021.4551">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="33779" y="4021.4551">{})</text><ellipse cx="33683" cy="4030.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="33692" y="4034.4102">Pop()</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="33723" y="4034.4102">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="33770" y="4034.4102">{}</text><ellipse cx="33683" cy="4043.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="33692" y="4047.3652">Swap(i int, j int)</text><!--MD5=[ed5a4b05cbd0438eb04d7d470ebd87a0]
class executor.nodeLoadInspection--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.nodeLoadInspection" style="stroke: #A80036; stroke-width: 1.5;" width="533" x="34007.5" y="3954"/><ellipse cx="34212.25" cy="3970" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34211.4834,3971.063 Q34209.6323,3970.3574 34208.9766,3969.5813 Q34208.3208,3968.8052 34208.3208,3967.4937 Q34208.3208,3965.8086 34209.3999,3964.8457 Q34210.479,3963.8828 34212.3633,3963.8828 Q34213.2183,3963.8828 34214.0732,3964.0779 Q34214.9282,3964.2729 34215.7666,3964.6548 L34215.7666,3967.0454 Q34214.978,3966.4893 34214.1646,3966.1987 Q34213.3511,3965.9082 34212.5542,3965.9082 Q34211.666,3965.9082 34211.1929,3966.2651 Q34210.7197,3966.6221 34210.7197,3967.2861 Q34210.7197,3967.8008 34211.0642,3968.137 Q34211.4087,3968.4731 34212.5044,3968.8799 L34213.5586,3969.2783 Q34215.0527,3969.8262 34215.7583,3970.731 Q34216.4639,3971.6357 34216.4639,3973.0137 Q34216.4639,3974.8896 34215.3557,3975.8152 Q34214.2476,3976.7407 34212.0063,3976.7407 Q34211.085,3976.7407 34210.1594,3976.5208 Q34209.2339,3976.3008 34208.3706,3975.8691 L34208.3706,3973.3374 Q34209.3501,3974.0347 34210.2673,3974.375 Q34211.1846,3974.7153 34212.0811,3974.7153 Q34212.9858,3974.7153 34213.4839,3974.3044 Q34213.9819,3973.8936 34213.9819,3973.1548 Q34213.9819,3972.5986 34213.6499,3972.1794 Q34213.3179,3971.7603 34212.687,3971.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="34232.75" y="3974.5352">nodeLoadInspection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34008.5" x2="34539.5" y1="3986" y2="3986"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="34008.5" x2="34539.5" y1="3994" y2="3994"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34015.5" y="4002"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="34027.5" y="4008.6348">inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><!--MD5=[64f6ec4a4050302ce517a0ebb2fa6de2]
class executor.outerCtx--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.outerCtx" style="stroke: #A80036; stroke-width: 1.5;" width="177" x="3557.5" y="745.5"/><ellipse cx="3617.25" cy="761.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3616.4834,762.563 Q3614.6323,761.8574 3613.9766,761.0813 Q3613.3208,760.3052 3613.3208,758.9937 Q3613.3208,757.3086 3614.3999,756.3457 Q3615.479,755.3828 3617.3633,755.3828 Q3618.2183,755.3828 3619.0732,755.5779 Q3619.9282,755.7729 3620.7666,756.1548 L3620.7666,758.5454 Q3619.978,757.9893 3619.1646,757.6987 Q3618.3511,757.4082 3617.5542,757.4082 Q3616.666,757.4082 3616.1929,757.7651 Q3615.7197,758.1221 3615.7197,758.7861 Q3615.7197,759.3008 3616.0642,759.637 Q3616.4087,759.9731 3617.5044,760.3799 L3618.5586,760.7783 Q3620.0527,761.3262 3620.7583,762.231 Q3621.4639,763.1357 3621.4639,764.5137 Q3621.4639,766.3896 3620.3557,767.3152 Q3619.2476,768.2407 3617.0063,768.2407 Q3616.085,768.2407 3615.1594,768.0208 Q3614.2339,767.8008 3613.3706,767.3691 L3613.3706,764.8374 Q3614.3501,765.5347 3615.2673,765.875 Q3616.1846,766.2153 3617.0811,766.2153 Q3617.9858,766.2153 3618.4839,765.8044 Q3618.9819,765.3936 3618.9819,764.6548 Q3618.9819,764.0986 3618.6499,763.6794 Q3618.3179,763.2603 3617.687,763.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="3637.75" y="766.0352">outerCtx</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3558.5" x2="3733.5" y1="777.5" y2="777.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3565.5" y="785.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3577.5" y="792.1348">rowTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3565.5" y="798.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="3577.5" y="805.0898">keyCols []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3565.5" y="811.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="3577.5" y="818.0449">filter expression.CNFExprs</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3558.5" x2="3733.5" y1="824.3652" y2="824.3652"/><!--MD5=[2e212797f03ea6a2df6493b46bb51dfb]
class executor.outerMergeCtx--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.outerMergeCtx" style="stroke: #A80036; stroke-width: 1.5;" width="254" x="7783" y="726"/><ellipse cx="7863.25" cy="742" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7862.4834,743.063 Q7860.6323,742.3574 7859.9766,741.5813 Q7859.3208,740.8052 7859.3208,739.4937 Q7859.3208,737.8086 7860.3999,736.8457 Q7861.479,735.8828 7863.3633,735.8828 Q7864.2183,735.8828 7865.0732,736.0779 Q7865.9282,736.2729 7866.7666,736.6548 L7866.7666,739.0454 Q7865.978,738.4893 7865.1646,738.1987 Q7864.3511,737.9082 7863.5542,737.9082 Q7862.666,737.9082 7862.1929,738.2651 Q7861.7197,738.6221 7861.7197,739.2861 Q7861.7197,739.8008 7862.0642,740.137 Q7862.4087,740.4731 7863.5044,740.8799 L7864.5586,741.2783 Q7866.0527,741.8262 7866.7583,742.731 Q7867.4639,743.6357 7867.4639,745.0137 Q7867.4639,746.8896 7866.3557,747.8152 Q7865.2476,748.7407 7863.0063,748.7407 Q7862.085,748.7407 7861.1594,748.5208 Q7860.2339,748.3008 7859.3706,747.8691 L7859.3706,745.3374 Q7860.3501,746.0347 7861.2673,746.375 Q7862.1846,746.7153 7863.0811,746.7153 Q7863.9858,746.7153 7864.4839,746.3044 Q7864.9819,745.8936 7864.9819,745.1548 Q7864.9819,744.5986 7864.6499,744.1794 Q7864.3179,743.7603 7863.687,743.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="7883.75" y="746.5352">outerMergeCtx</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7784" x2="8036" y1="758" y2="758"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7791" y="766"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="7803" y="772.6348">rowTypes []*types.FieldType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7791" y="778.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="7803" y="785.5898">joinKeys []*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7791" y="791.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="7803" y="798.5449">keyCols []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7791" y="804.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="7803" y="811.5">filter expression.CNFExprs</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7791" y="817.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="7803" y="824.4551">needOuterSort bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7791" y="830.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="7803" y="837.4102">compareFuncs []expression.CompareFunc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7784" x2="8036" y1="843.7305" y2="843.7305"/><!--MD5=[c7c7a35431e695a699bbcdb7d7d29ef6]
class executor.outerMergeWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="216.416" id="executor.outerMergeWorker" style="stroke: #A80036; stroke-width: 1.5;" width="565" x="7704.5" y="1618"/><ellipse cx="7929.25" cy="1634" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7928.4834,1635.063 Q7926.6323,1634.3574 7925.9766,1633.5813 Q7925.3208,1632.8052 7925.3208,1631.4937 Q7925.3208,1629.8086 7926.3999,1628.8457 Q7927.479,1627.8828 7929.3633,1627.8828 Q7930.2183,1627.8828 7931.0732,1628.0779 Q7931.9282,1628.2729 7932.7666,1628.6548 L7932.7666,1631.0454 Q7931.978,1630.4893 7931.1646,1630.1987 Q7930.3511,1629.9082 7929.5542,1629.9082 Q7928.666,1629.9082 7928.1929,1630.2651 Q7927.7197,1630.6221 7927.7197,1631.2861 Q7927.7197,1631.8008 7928.0642,1632.137 Q7928.4087,1632.4731 7929.5044,1632.8799 L7930.5586,1633.2783 Q7932.0527,1633.8262 7932.7583,1634.731 Q7933.4639,1635.6357 7933.4639,1637.0137 Q7933.4639,1638.8896 7932.3557,1639.8152 Q7931.2476,1640.7407 7929.0063,1640.7407 Q7928.085,1640.7407 7927.1594,1640.5208 Q7926.2339,1640.3008 7925.3706,1639.8691 L7925.3706,1637.3374 Q7926.3501,1638.0347 7927.2673,1638.375 Q7928.1846,1638.7153 7929.0811,1638.7153 Q7929.9858,1638.7153 7930.4839,1638.3044 Q7930.9819,1637.8936 7930.9819,1637.1548 Q7930.9819,1636.5986 7930.6499,1636.1794 Q7930.3179,1635.7603 7929.687,1635.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="7949.75" y="1638.5352">outerMergeWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7705.5" x2="8268.5" y1="1650" y2="1650"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1658"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="7724.5" y="1664.6348">lookup *IndexLookUpMergeJoin</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1670.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="7724.5" y="1677.5898">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1683.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="7724.5" y="1690.5449">executor Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1696.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="7724.5" y="1703.5">maxBatchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1709.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="7724.5" y="1716.4551">batchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1722.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="7724.5" y="1729.4102">nextColCompareFilters *core.ColWithCmpFuncManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1735.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="7724.5" y="1742.3652">resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="7773.5" y="1742.3652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7802.5" y="1742.3652">*lookUpMergeJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1748.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="7724.5" y="1755.3203">innerCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="7770.5" y="1755.3203">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7799.5" y="1755.3203">*lookUpMergeJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1761.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="7724.5" y="1768.2754">parentMemTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7705.5" x2="8268.5" y1="1774.5957" y2="1774.5957"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1782.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="7724.5" y="1789.2305">run(ctx context.Context, wg *sync.WaitGroup, cancelFunc context.CancelFunc)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1795.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="7724.5" y="1802.1855">pushToChan(ctx context.Context, task *lookUpMergeJoinTask, dst</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="8082.5" y="1802.1855">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="8111.5" y="1802.1855">*lookUpMergeJoinTask) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1808.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="7724.5" y="1815.1406">buildTask(ctx context.Context) (*lookUpMergeJoinTask, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7712.5" y="1821.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="7724.5" y="1828.0957">increaseBatchSize()</text><!--MD5=[fa0cd6d7057c15b88d46bec202bf2c6d]
class executor.outerWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="203.4609" id="executor.outerWorker" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="3396.5" y="1624.5"/><ellipse cx="3606.25" cy="1640.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3605.4834,1641.563 Q3603.6323,1640.8574 3602.9766,1640.0813 Q3602.3208,1639.3052 3602.3208,1637.9937 Q3602.3208,1636.3086 3603.3999,1635.3457 Q3604.479,1634.3828 3606.3633,1634.3828 Q3607.2183,1634.3828 3608.0732,1634.5779 Q3608.9282,1634.7729 3609.7666,1635.1548 L3609.7666,1637.5454 Q3608.978,1636.9893 3608.1646,1636.6987 Q3607.3511,1636.4082 3606.5542,1636.4082 Q3605.666,1636.4082 3605.1929,1636.7651 Q3604.7197,1637.1221 3604.7197,1637.7861 Q3604.7197,1638.3008 3605.0642,1638.637 Q3605.4087,1638.9731 3606.5044,1639.3799 L3607.5586,1639.7783 Q3609.0527,1640.3262 3609.7583,1641.231 Q3610.4639,1642.1357 3610.4639,1643.5137 Q3610.4639,1645.3896 3609.3557,1646.3152 Q3608.2476,1647.2407 3606.0063,1647.2407 Q3605.085,1647.2407 3604.1594,1647.0208 Q3603.2339,1646.8008 3602.3706,1646.3691 L3602.3706,1643.8374 Q3603.3501,1644.5347 3604.2673,1644.875 Q3605.1846,1645.2153 3606.0811,1645.2153 Q3606.9858,1645.2153 3607.4839,1644.8044 Q3607.9819,1644.3936 3607.9819,1643.6548 Q3607.9819,1643.0986 3607.6499,1642.6794 Q3607.3179,1642.2603 3606.687,1642.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="3626.75" y="1645.0352">outerWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3397.5" x2="3894.5" y1="1656.5" y2="1656.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1664.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3416.5" y="1671.1348">lookup *IndexLookUpJoin</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1677.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3416.5" y="1684.0898">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1690.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3416.5" y="1697.0449">executor Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1703.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3416.5" y="1710">maxBatchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1716.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="3416.5" y="1722.9551">batchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1729.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="3416.5" y="1735.9102">resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="3465.5" y="1735.9102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="3494.5" y="1735.9102">*lookUpJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1742.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="3416.5" y="1748.8652">innerCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="3462.5" y="1748.8652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="3491.5" y="1748.8652">*lookUpJoinTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1755.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3416.5" y="1761.8203">parentMemTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3397.5" x2="3894.5" y1="1768.1406" y2="1768.1406"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1776.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="3416.5" y="1782.7754">run(ctx context.Context, wg *sync.WaitGroup)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1789.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="3416.5" y="1795.7305">pushToChan(ctx context.Context, task *lookUpJoinTask, dst</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="3741.5" y="1795.7305">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3770.5" y="1795.7305">*lookUpJoinTask) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1802.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="3416.5" y="1808.6855">buildTask(ctx context.Context) (*lookUpJoinTask, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3404.5" y="1815.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="3416.5" y="1821.6406">increaseBatchSize()</text><!--MD5=[7133768a44631570d0ff8bdd3de67224]
class executor.paramMarkerExtractor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.paramMarkerExtractor" style="stroke: #A80036; stroke-width: 1.5;" width="212" x="34576" y="3941"/><ellipse cx="34613.05" cy="3957" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34612.2834,3958.063 Q34610.4323,3957.3574 34609.7766,3956.5813 Q34609.1208,3955.8052 34609.1208,3954.4937 Q34609.1208,3952.8086 34610.1999,3951.8457 Q34611.279,3950.8828 34613.1633,3950.8828 Q34614.0183,3950.8828 34614.8732,3951.0779 Q34615.7282,3951.2729 34616.5666,3951.6548 L34616.5666,3954.0454 Q34615.778,3953.4893 34614.9646,3953.1987 Q34614.1511,3952.9082 34613.3542,3952.9082 Q34612.466,3952.9082 34611.9929,3953.2651 Q34611.5197,3953.6221 34611.5197,3954.2861 Q34611.5197,3954.8008 34611.8642,3955.137 Q34612.2087,3955.4731 34613.3044,3955.8799 L34614.3586,3956.2783 Q34615.8527,3956.8262 34616.5583,3957.731 Q34617.2639,3958.6357 34617.2639,3960.0137 Q34617.2639,3961.8896 34616.1557,3962.8152 Q34615.0476,3963.7407 34612.8063,3963.7407 Q34611.885,3963.7407 34610.9594,3963.5208 Q34610.0339,3963.3008 34609.1706,3962.8691 L34609.1706,3960.3374 Q34610.1501,3961.0347 34611.0673,3961.375 Q34611.9846,3961.7153 34612.8811,3961.7153 Q34613.7858,3961.7153 34614.2839,3961.3044 Q34614.7819,3960.8936 34614.7819,3960.1548 Q34614.7819,3959.5986 34614.4499,3959.1794 Q34614.1179,3958.7603 34613.487,3958.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="131" x="34631.95" y="3961.5352">paramMarkerExtractor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34577" x2="34787" y1="3973" y2="3973"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34584" y="3981"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="34596" y="3987.6348">markers []ast.ParamMarkerExpr</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34577" x2="34787" y1="3993.9551" y2="3993.9551"/><ellipse cx="34587" cy="4004.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="34596" y="4008.5898">Enter(in ast.Node) (ast.Node, bool)</text><ellipse cx="34587" cy="4017.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="34596" y="4021.5449">Leave(in ast.Node) (ast.Node, bool)</text><!--MD5=[474c7f8ed1a79e6f054bea217694c741]
class executor.paramMarkerSorter--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.paramMarkerSorter" style="stroke: #A80036; stroke-width: 1.5;" width="195" x="34823.5" y="3934.5"/><ellipse cx="34861" cy="3950.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34860.2334,3951.563 Q34858.3823,3950.8574 34857.7266,3950.0813 Q34857.0708,3949.3052 34857.0708,3947.9937 Q34857.0708,3946.3086 34858.1499,3945.3457 Q34859.229,3944.3828 34861.1133,3944.3828 Q34861.9683,3944.3828 34862.8232,3944.5779 Q34863.6782,3944.7729 34864.5166,3945.1548 L34864.5166,3947.5454 Q34863.728,3946.9893 34862.9146,3946.6987 Q34862.1011,3946.4082 34861.3042,3946.4082 Q34860.416,3946.4082 34859.9429,3946.7651 Q34859.4697,3947.1221 34859.4697,3947.7861 Q34859.4697,3948.3008 34859.8142,3948.637 Q34860.1587,3948.9731 34861.2544,3949.3799 L34862.3086,3949.7783 Q34863.8027,3950.3262 34864.5083,3951.231 Q34865.2139,3952.1357 34865.2139,3953.5137 Q34865.2139,3955.3896 34864.1057,3956.3152 Q34862.9976,3957.2407 34860.7563,3957.2407 Q34859.835,3957.2407 34858.9094,3957.0208 Q34857.9839,3956.8008 34857.1206,3956.3691 L34857.1206,3953.8374 Q34858.1001,3954.5347 34859.0173,3954.875 Q34859.9346,3955.2153 34860.8311,3955.2153 Q34861.7358,3955.2153 34862.2339,3954.8044 Q34862.7319,3954.3936 34862.7319,3953.6548 Q34862.7319,3953.0986 34862.3999,3952.6794 Q34862.0679,3952.2603 34861.437,3952.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="34880" y="3955.0352">paramMarkerSorter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34824.5" x2="35017.5" y1="3966.5" y2="3966.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34831.5" y="3974.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="34843.5" y="3981.1348">markers []ast.ParamMarkerExpr</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34824.5" x2="35017.5" y1="3987.4551" y2="3987.4551"/><ellipse cx="34834.5" cy="3998.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="34843.5" y="4002.0898">Len() int</text><ellipse cx="34834.5" cy="4011.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="34843.5" y="4015.0449">Less(i int, j int) bool</text><ellipse cx="34834.5" cy="4024.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="34843.5" y="4028">Swap(i int, j int)</text><!--MD5=[4eed9a37a044cd8453a0dc5924d414ee]
class executor.parsedSlowLog--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.parsedSlowLog" style="stroke: #A80036; stroke-width: 1.5;" width="138" x="35054" y="3947.5"/><ellipse cx="35078" cy="3963.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35077.2334,3964.563 Q35075.3823,3963.8574 35074.7266,3963.0813 Q35074.0708,3962.3052 35074.0708,3960.9937 Q35074.0708,3959.3086 35075.1499,3958.3457 Q35076.229,3957.3828 35078.1133,3957.3828 Q35078.9683,3957.3828 35079.8232,3957.5779 Q35080.6782,3957.7729 35081.5166,3958.1548 L35081.5166,3960.5454 Q35080.728,3959.9893 35079.9146,3959.6987 Q35079.1011,3959.4082 35078.3042,3959.4082 Q35077.416,3959.4082 35076.9429,3959.7651 Q35076.4697,3960.1221 35076.4697,3960.7861 Q35076.4697,3961.3008 35076.8142,3961.637 Q35077.1587,3961.9731 35078.2544,3962.3799 L35079.3086,3962.7783 Q35080.8027,3963.3262 35081.5083,3964.231 Q35082.2139,3965.1357 35082.2139,3966.5137 Q35082.2139,3968.3896 35081.1057,3969.3152 Q35079.9976,3970.2407 35077.7563,3970.2407 Q35076.835,3970.2407 35075.9094,3970.0208 Q35074.9839,3969.8008 35074.1206,3969.3691 L35074.1206,3966.8374 Q35075.1001,3967.5347 35076.0173,3967.875 Q35076.9346,3968.2153 35077.8311,3968.2153 Q35078.7358,3968.2153 35079.2339,3967.8044 Q35079.7319,3967.3936 35079.7319,3966.6548 Q35079.7319,3966.0986 35079.3999,3965.6794 Q35079.0679,3965.2603 35078.437,3965.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="35094" y="3968.0352">parsedSlowLog</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35055" x2="35191" y1="3979.5" y2="3979.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35062" y="3987.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="35074" y="3994.1348">rows [][]types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35062" y="4000.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="35074" y="4007.0898">err error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35055" x2="35191" y1="4013.4102" y2="4013.4102"/><!--MD5=[8954496fc2fc93f2662c589e5449d654]
class executor.partialIndexWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.partialIndexWorker" style="stroke: #A80036; stroke-width: 1.5;" width="1017" x="35227.5" y="3921.5"/><ellipse cx="35676.75" cy="3937.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35675.9834,3938.563 Q35674.1323,3937.8574 35673.4766,3937.0813 Q35672.8208,3936.3052 35672.8208,3934.9937 Q35672.8208,3933.3086 35673.8999,3932.3457 Q35674.979,3931.3828 35676.8633,3931.3828 Q35677.7183,3931.3828 35678.5732,3931.5779 Q35679.4282,3931.7729 35680.2666,3932.1548 L35680.2666,3934.5454 Q35679.478,3933.9893 35678.6646,3933.6987 Q35677.8511,3933.4082 35677.0542,3933.4082 Q35676.166,3933.4082 35675.6929,3933.7651 Q35675.2197,3934.1221 35675.2197,3934.7861 Q35675.2197,3935.3008 35675.5642,3935.637 Q35675.9087,3935.9731 35677.0044,3936.3799 L35678.0586,3936.7783 Q35679.5527,3937.3262 35680.2583,3938.231 Q35680.9639,3939.1357 35680.9639,3940.5137 Q35680.9639,3942.3896 35679.8557,3943.3152 Q35678.7476,3944.2407 35676.5063,3944.2407 Q35675.585,3944.2407 35674.6594,3944.0208 Q35673.7339,3943.8008 35672.8706,3943.3691 L35672.8706,3940.8374 Q35673.8501,3941.5347 35674.7673,3941.875 Q35675.6846,3942.2153 35676.5811,3942.2153 Q35677.4858,3942.2153 35677.9839,3941.8044 Q35678.4819,3941.3936 35678.4819,3940.6548 Q35678.4819,3940.0986 35678.1499,3939.6794 Q35677.8179,3939.2603 35677.187,3939.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="35697.25" y="3942.0352">partialIndexWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35228.5" x2="36243.5" y1="3953.5" y2="3953.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35235.5" y="3961.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="35247.5" y="3968.1348">batchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35235.5" y="3974.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="35247.5" y="3981.0898">maxBatchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35235.5" y="3987.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="35247.5" y="3994.0449">maxChunkSize int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35228.5" x2="36243.5" y1="4000.3652" y2="4000.3652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35235.5" y="4008.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="35247.5" y="4015">fetchHandles(ctx context.Context, result distsql.SelectResult, exitCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="35615.5" y="4015">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="35644.5" y="4015"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="35644.5" y="4015">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="35676.5" y="4015">{}, fetchCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="35735.5" y="4015">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="35764.5" y="4015">*lookupTableTask, resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="35915.5" y="4015">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="35944.5" y="4015">*lookupTableTask, finished</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="36092.5" y="4015">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="36121.5" y="4015"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="36121.5" y="4015">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="36153.5" y="4015">{}) (int64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35235.5" y="4021.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="650" x="35247.5" y="4027.9551">extractTaskHandles(ctx context.Context, chk *chunk.Chunk, idxResult distsql.SelectResult) ([]int64, *chunk.Chunk, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35235.5" y="4034.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="35247.5" y="4040.9102">buildTableTask(handles []int64, retChk *chunk.Chunk) *lookupTableTask</text><!--MD5=[6509454c81ec3dfa90464a72ee77238e]
class executor.partialTableWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.partialTableWorker" style="stroke: #A80036; stroke-width: 1.5;" width="874" x="36280" y="3908.5"/><ellipse cx="36657.25" cy="3924.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36656.4834,3925.563 Q36654.6323,3924.8574 36653.9766,3924.0813 Q36653.3208,3923.3052 36653.3208,3921.9937 Q36653.3208,3920.3086 36654.3999,3919.3457 Q36655.479,3918.3828 36657.3633,3918.3828 Q36658.2183,3918.3828 36659.0732,3918.5779 Q36659.9282,3918.7729 36660.7666,3919.1548 L36660.7666,3921.5454 Q36659.978,3920.9893 36659.1646,3920.6987 Q36658.3511,3920.4082 36657.5542,3920.4082 Q36656.666,3920.4082 36656.1929,3920.7651 Q36655.7197,3921.1221 36655.7197,3921.7861 Q36655.7197,3922.3008 36656.0642,3922.637 Q36656.4087,3922.9731 36657.5044,3923.3799 L36658.5586,3923.7783 Q36660.0527,3924.3262 36660.7583,3925.231 Q36661.4639,3926.1357 36661.4639,3927.5137 Q36661.4639,3929.3896 36660.3557,3930.3152 Q36659.2476,3931.2407 36657.0063,3931.2407 Q36656.085,3931.2407 36655.1594,3931.0208 Q36654.2339,3930.8008 36653.3706,3930.3691 L36653.3706,3927.8374 Q36654.3501,3928.5347 36655.2673,3928.875 Q36656.1846,3929.2153 36657.0811,3929.2153 Q36657.9858,3929.2153 36658.4839,3928.8044 Q36658.9819,3928.3936 36658.9819,3927.6548 Q36658.9819,3927.0986 36658.6499,3926.6794 Q36658.3179,3926.2603 36657.687,3926.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="111" x="36677.75" y="3929.0352">partialTableWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36281" x2="37153" y1="3940.5" y2="3940.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36288" y="3948.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="36300" y="3955.1348">batchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36288" y="3961.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="36300" y="3968.0898">maxBatchSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36288" y="3974.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="36300" y="3981.0449">maxChunkSize int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36288" y="3987.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="36300" y="3994">tableReader Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36288" y="4000.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="36300" y="4006.9551">tableInfo *model.TableInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36281" x2="37153" y1="4013.2754" y2="4013.2754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36288" y="4021.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="36300" y="4027.9102">fetchHandles(ctx context.Context, exitCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="36525" y="4027.9102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="36554" y="4027.9102"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="36554" y="4027.9102">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="36586" y="4027.9102">{}, fetchCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="36645" y="4027.9102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="36674" y="4027.9102">*lookupTableTask, resultCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="36825" y="4027.9102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="36854" y="4027.9102">*lookupTableTask, finished</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="37002" y="4027.9102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="37031" y="4027.9102"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="37031" y="4027.9102">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="37063" y="4027.9102">{}) (int64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36288" y="4034.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="580" x="36300" y="4040.8652">extractTaskHandles(ctx context.Context, chk *chunk.Chunk, handleOffset int) ([]int64, *chunk.Chunk, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36288" y="4047.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="36300" y="4053.8203">buildTableTask(handles []int64, retChk *chunk.Chunk) *lookupTableTask</text><!--MD5=[d17445e75d324598136d05e5c4e4fcaf]
class executor.partitionHashSplitter--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="99.8203" id="executor.partitionHashSplitter" style="stroke: #A80036; stroke-width: 1.5;" width="467" x="7202.5" y="1676"/><ellipse cx="7373.25" cy="1692" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7372.4834,1693.063 Q7370.6323,1692.3574 7369.9766,1691.5813 Q7369.3208,1690.8052 7369.3208,1689.4937 Q7369.3208,1687.8086 7370.3999,1686.8457 Q7371.479,1685.8828 7373.3633,1685.8828 Q7374.2183,1685.8828 7375.0732,1686.0779 Q7375.9282,1686.2729 7376.7666,1686.6548 L7376.7666,1689.0454 Q7375.978,1688.4893 7375.1646,1688.1987 Q7374.3511,1687.9082 7373.5542,1687.9082 Q7372.666,1687.9082 7372.1929,1688.2651 Q7371.7197,1688.6221 7371.7197,1689.2861 Q7371.7197,1689.8008 7372.0642,1690.137 Q7372.4087,1690.4731 7373.5044,1690.8799 L7374.5586,1691.2783 Q7376.0527,1691.8262 7376.7583,1692.731 Q7377.4639,1693.6357 7377.4639,1695.0137 Q7377.4639,1696.8896 7376.3557,1697.8152 Q7375.2476,1698.7407 7373.0063,1698.7407 Q7372.085,1698.7407 7371.1594,1698.5208 Q7370.2339,1698.3008 7369.3706,1697.8691 L7369.3706,1695.3374 Q7370.3501,1696.0347 7371.2673,1696.375 Q7372.1846,1696.7153 7373.0811,1696.7153 Q7373.9858,1696.7153 7374.4839,1696.3044 Q7374.9819,1695.8936 7374.9819,1695.1548 Q7374.9819,1694.5986 7374.6499,1694.1794 Q7374.3179,1693.7603 7373.687,1693.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="117" x="7393.75" y="1696.5352">partitionHashSplitter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7203.5" x2="7668.5" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7210.5" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="7222.5" y="1722.6348">byItems []expression.Expression</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7210.5" y="1728.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="7222.5" y="1735.5898">numWorkers int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7210.5" y="1741.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="7222.5" y="1748.5449">hashKeys [][]byte</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7203.5" x2="7668.5" y1="1754.8652" y2="1754.8652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7210.5" y="1762.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="7222.5" y="1769.5">split(ctx sessionctx.Context, input *chunk.Chunk, workerIndices []int) ([]int, error)</text><!--MD5=[95a7e959957082293555d905737f8a81]
class executor.partitionPointer--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.partitionPointer" style="stroke: #A80036; stroke-width: 1.5;" width="120" x="32348" y="4230.5"/><ellipse cx="32363" cy="4246.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32362.2334,4247.563 Q32360.3823,4246.8574 32359.7266,4246.0813 Q32359.0708,4245.3052 32359.0708,4243.9937 Q32359.0708,4242.3086 32360.1499,4241.3457 Q32361.229,4240.3828 32363.1133,4240.3828 Q32363.9683,4240.3828 32364.8232,4240.5779 Q32365.6782,4240.7729 32366.5166,4241.1548 L32366.5166,4243.5454 Q32365.728,4242.9893 32364.9146,4242.6987 Q32364.1011,4242.4082 32363.3042,4242.4082 Q32362.416,4242.4082 32361.9429,4242.7651 Q32361.4697,4243.1221 32361.4697,4243.7861 Q32361.4697,4244.3008 32361.8142,4244.637 Q32362.1587,4244.9731 32363.2544,4245.3799 L32364.3086,4245.7783 Q32365.8027,4246.3262 32366.5083,4247.231 Q32367.2139,4248.1357 32367.2139,4249.5137 Q32367.2139,4251.3896 32366.1057,4252.3152 Q32364.9976,4253.2407 32362.7563,4253.2407 Q32361.835,4253.2407 32360.9094,4253.0208 Q32359.9839,4252.8008 32359.1206,4252.3691 L32359.1206,4249.8374 Q32360.1001,4250.5347 32361.0173,4250.875 Q32361.9346,4251.2153 32362.8311,4251.2153 Q32363.7358,4251.2153 32364.2339,4250.8044 Q32364.7319,4250.3936 32364.7319,4249.6548 Q32364.7319,4249.0986 32364.3999,4248.6794 Q32364.0679,4248.2603 32363.437,4248.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="32377" y="4251.0352">partitionPointer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32349" x2="32467" y1="4262.5" y2="4262.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32356" y="4270.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="32368" y="4277.1348">row chunk.Row</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32356" y="4283.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="32368" y="4290.0898">partitionID int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32356" y="4296.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="32368" y="4303.0449">consumed int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32349" x2="32467" y1="4309.3652" y2="4309.3652"/><!--MD5=[8c42c9d577cd01d597e9c398109cfb68]
class executor.partitionSplitter--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.partitionSplitter" style="stroke: #A80036; stroke-width: 1.5;" width="467" x="7202.5" y="758.5"/><ellipse cx="7387.75" cy="774.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7384.1777,770.7651 L7384.1777,768.6069 L7391.5571,768.6069 L7391.5571,770.7651 L7389.0918,770.7651 L7389.0918,778.8418 L7391.5571,778.8418 L7391.5571,781 L7384.1777,781 L7384.1777,778.8418 L7386.6431,778.8418 L7386.6431,770.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="88" x="7408.25" y="779.0352">partitionSplitter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7203.5" x2="7668.5" y1="790.5" y2="790.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7203.5" x2="7668.5" y1="798.5" y2="798.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7210.5" y="806.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="7222.5" y="813.1348">split(ctx sessionctx.Context, input *chunk.Chunk, workerIndices []int) ([]int, error)</text><!--MD5=[eb4c830519fae483a76695e000d12bdc]
class executor.pessimisticTxn--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.pessimisticTxn" style="stroke: #A80036; stroke-width: 1.5;" width="212" x="32503" y="4243.5"/><ellipse cx="32562.25" cy="4259.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32558.6777,4255.7651 L32558.6777,4253.6069 L32566.0571,4253.6069 L32566.0571,4255.7651 L32563.5918,4255.7651 L32563.5918,4263.8418 L32566.0571,4263.8418 L32566.0571,4266 L32558.6777,4266 L32558.6777,4263.8418 L32561.1431,4263.8418 L32561.1431,4255.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="32582.75" y="4264.0352">pessimisticTxn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32504" x2="32714" y1="4275.5" y2="4275.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="32504" x2="32714" y1="4283.5" y2="4283.5"/><ellipse cx="32514" cy="4294.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="32523" y="4298.1348">KeysNeedToLock() ([]kv.Key, error)</text><!--MD5=[dbc2fa1e52126608c35e1af45a7e6b67]
class executor.probeChkResource--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.probeChkResource" style="stroke: #A80036; stroke-width: 1.5;" width="157" x="32750.5" y="4237"/><ellipse cx="32772.25" cy="4253" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32771.4834,4254.063 Q32769.6323,4253.3574 32768.9766,4252.5813 Q32768.3208,4251.8052 32768.3208,4250.4937 Q32768.3208,4248.8086 32769.3999,4247.8457 Q32770.479,4246.8828 32772.3633,4246.8828 Q32773.2183,4246.8828 32774.0732,4247.0779 Q32774.9282,4247.2729 32775.7666,4247.6548 L32775.7666,4250.0454 Q32774.978,4249.4893 32774.1646,4249.1987 Q32773.3511,4248.9082 32772.5542,4248.9082 Q32771.666,4248.9082 32771.1929,4249.2651 Q32770.7197,4249.6221 32770.7197,4250.2861 Q32770.7197,4250.8008 32771.0642,4251.137 Q32771.4087,4251.4731 32772.5044,4251.8799 L32773.5586,4252.2783 Q32775.0527,4252.8262 32775.7583,4253.731 Q32776.4639,4254.6357 32776.4639,4256.0137 Q32776.4639,4257.8896 32775.3557,4258.8152 Q32774.2476,4259.7407 32772.0063,4259.7407 Q32771.085,4259.7407 32770.1594,4259.5208 Q32769.2339,4259.3008 32768.3706,4258.8691 L32768.3706,4256.3374 Q32769.3501,4257.0347 32770.2673,4257.375 Q32771.1846,4257.7153 32772.0811,4257.7153 Q32772.9858,4257.7153 32773.4839,4257.3044 Q32773.9819,4256.8936 32773.9819,4256.1548 Q32773.9819,4255.5986 32773.6499,4255.1794 Q32773.3179,4254.7603 32772.687,4254.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="32787.75" y="4257.5352">probeChkResource</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32751.5" x2="32906.5" y1="4269" y2="4269"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32758.5" y="4277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="32770.5" y="4283.6348">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32758.5" y="4289.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="32770.5" y="4296.5898">dest</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="32796.5" y="4296.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="32825.5" y="4296.5898">*chunk.Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32751.5" x2="32906.5" y1="4302.9102" y2="4302.9102"/><!--MD5=[69d67b73deb4e940eb169b4e725e86b9]
class executor.processinfoSetter--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.processinfoSetter" style="stroke: #A80036; stroke-width: 1.5;" width="285" x="32942.5" y="4243.5"/><ellipse cx="33031.25" cy="4259.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33027.6777,4255.7651 L33027.6777,4253.6069 L33035.0571,4253.6069 L33035.0571,4255.7651 L33032.5918,4255.7651 L33032.5918,4263.8418 L33035.0571,4263.8418 L33035.0571,4266 L33027.6777,4266 L33027.6777,4263.8418 L33030.1431,4263.8418 L33030.1431,4255.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="33051.75" y="4264.0352">processinfoSetter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32943.5" x2="33226.5" y1="4275.5" y2="4275.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="32943.5" x2="33226.5" y1="4283.5" y2="4283.5"/><ellipse cx="32953.5" cy="4294.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="32962.5" y="4298.1348">SetProcessInfo( string,  time.Time,  byte,  uint64)</text><!--MD5=[57f959ba62d13e13184e15614e2e7631]
class executor.projectionInput--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.projectionInput" style="stroke: #A80036; stroke-width: 1.5;" width="197" x="33262.5" y="4237"/><ellipse cx="33313.25" cy="4253" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33312.4834,4254.063 Q33310.6323,4253.3574 33309.9766,4252.5813 Q33309.3208,4251.8052 33309.3208,4250.4937 Q33309.3208,4248.8086 33310.3999,4247.8457 Q33311.479,4246.8828 33313.3633,4246.8828 Q33314.2183,4246.8828 33315.0732,4247.0779 Q33315.9282,4247.2729 33316.7666,4247.6548 L33316.7666,4250.0454 Q33315.978,4249.4893 33315.1646,4249.1987 Q33314.3511,4248.9082 33313.5542,4248.9082 Q33312.666,4248.9082 33312.1929,4249.2651 Q33311.7197,4249.6221 33311.7197,4250.2861 Q33311.7197,4250.8008 33312.0642,4251.137 Q33312.4087,4251.4731 33313.5044,4251.8799 L33314.5586,4252.2783 Q33316.0527,4252.8262 33316.7583,4253.731 Q33317.4639,4254.6357 33317.4639,4256.0137 Q33317.4639,4257.8896 33316.3557,4258.8152 Q33315.2476,4259.7407 33313.0063,4259.7407 Q33312.085,4259.7407 33311.1594,4259.5208 Q33310.2339,4259.3008 33309.3706,4258.8691 L33309.3706,4256.3374 Q33310.3501,4257.0347 33311.2673,4257.375 Q33312.1846,4257.7153 33313.0811,4257.7153 Q33313.9858,4257.7153 33314.4839,4257.3044 Q33314.9819,4256.8936 33314.9819,4256.1548 Q33314.9819,4255.5986 33314.6499,4255.1794 Q33314.3179,4254.7603 33313.687,4254.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="33333.75" y="4257.5352">projectionInput</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33263.5" x2="33458.5" y1="4269" y2="4269"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33270.5" y="4277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="33282.5" y="4283.6348">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33270.5" y="4289.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="33282.5" y="4296.5898">targetWorker *projectionWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33263.5" x2="33458.5" y1="4302.9102" y2="4302.9102"/><!--MD5=[f23f08bc935ad0df5840e97de04e6088]
class executor.projectionInputFetcher--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.projectionInputFetcher" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="33495" y="4198"/><ellipse cx="33547.25" cy="4214" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33546.4834,4215.063 Q33544.6323,4214.3574 33543.9766,4213.5813 Q33543.3208,4212.8052 33543.3208,4211.4937 Q33543.3208,4209.8086 33544.3999,4208.8457 Q33545.479,4207.8828 33547.3633,4207.8828 Q33548.2183,4207.8828 33549.0732,4208.0779 Q33549.9282,4208.2729 33550.7666,4208.6548 L33550.7666,4211.0454 Q33549.978,4210.4893 33549.1646,4210.1987 Q33548.3511,4209.9082 33547.5542,4209.9082 Q33546.666,4209.9082 33546.1929,4210.2651 Q33545.7197,4210.6221 33545.7197,4211.2861 Q33545.7197,4211.8008 33546.0642,4212.137 Q33546.4087,4212.4731 33547.5044,4212.8799 L33548.5586,4213.2783 Q33550.0527,4213.8262 33550.7583,4214.731 Q33551.4639,4215.6357 33551.4639,4217.0137 Q33551.4639,4218.8896 33550.3557,4219.8152 Q33549.2476,4220.7407 33547.0063,4220.7407 Q33546.085,4220.7407 33545.1594,4220.5208 Q33544.2339,4220.3008 33543.3706,4219.8691 L33543.3706,4217.3374 Q33544.3501,4218.0347 33545.2673,4218.375 Q33546.1846,4218.7153 33547.0811,4218.7153 Q33547.9858,4218.7153 33548.4839,4218.3044 Q33548.9819,4217.8936 33548.9819,4217.1548 Q33548.9819,4216.5986 33548.6499,4216.1794 Q33548.3179,4215.7603 33547.687,4215.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="129" x="33567.75" y="4218.5352">projectionInputFetcher</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33496" x2="33736" y1="4230" y2="4230"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33503" y="4238"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="33515" y="4244.6348">proj *ProjectionExec</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33503" y="4250.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="33515" y="4257.5898">child Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33503" y="4263.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="33515" y="4270.5449">globalFinishCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33598" y="4270.5449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="33627" y="4270.5449"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="33627" y="4270.5449">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="33659" y="4270.5449">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33503" y="4276.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="33515" y="4283.5">globalOutputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33604" y="4283.5">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="33633" y="4283.5">*projectionOutput</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33503" y="4289.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="33515" y="4296.4551">wg sync.WaitGroup</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33503" y="4302.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="33515" y="4309.4102">inputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33561" y="4309.4102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="33590" y="4309.4102">*projectionInput</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33503" y="4315.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="33515" y="4322.3652">outputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33569" y="4322.3652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="33598" y="4322.3652">*projectionOutput</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33496" x2="33736" y1="4328.6855" y2="4328.6855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33503" y="4336.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="33515" y="4343.3203">run(ctx context.Context)</text><!--MD5=[a79034746500ce0df23386d9ff1f016b]
class executor.projectionOutput--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.projectionOutput" style="stroke: #A80036; stroke-width: 1.5;" width="129" x="33772.5" y="4237"/><ellipse cx="33787.5" cy="4253" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33786.7334,4254.063 Q33784.8823,4253.3574 33784.2266,4252.5813 Q33783.5708,4251.8052 33783.5708,4250.4937 Q33783.5708,4248.8086 33784.6499,4247.8457 Q33785.729,4246.8828 33787.6133,4246.8828 Q33788.4683,4246.8828 33789.3232,4247.0779 Q33790.1782,4247.2729 33791.0166,4247.6548 L33791.0166,4250.0454 Q33790.228,4249.4893 33789.4146,4249.1987 Q33788.6011,4248.9082 33787.8042,4248.9082 Q33786.916,4248.9082 33786.4429,4249.2651 Q33785.9697,4249.6221 33785.9697,4250.2861 Q33785.9697,4250.8008 33786.3142,4251.137 Q33786.6587,4251.4731 33787.7544,4251.8799 L33788.8086,4252.2783 Q33790.3027,4252.8262 33791.0083,4253.731 Q33791.7139,4254.6357 33791.7139,4256.0137 Q33791.7139,4257.8896 33790.6057,4258.8152 Q33789.4976,4259.7407 33787.2563,4259.7407 Q33786.335,4259.7407 33785.4094,4259.5208 Q33784.4839,4259.3008 33783.6206,4258.8691 L33783.6206,4256.3374 Q33784.6001,4257.0347 33785.5173,4257.375 Q33786.4346,4257.7153 33787.3311,4257.7153 Q33788.2358,4257.7153 33788.7339,4257.3044 Q33789.2319,4256.8936 33789.2319,4256.1548 Q33789.2319,4255.5986 33788.8999,4255.1794 Q33788.5679,4254.7603 33787.937,4254.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="33801.5" y="4257.5352">projectionOutput</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33773.5" x2="33900.5" y1="4269" y2="4269"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33780.5" y="4277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="33792.5" y="4283.6348">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33780.5" y="4289.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="33792.5" y="4296.5898">done</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="33822.5" y="4296.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="33851.5" y="4296.5898">error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33773.5" x2="33900.5" y1="4302.9102" y2="4302.9102"/><!--MD5=[83b6aab211d6fcb6a6ba6a1e133958c5]
class executor.projectionWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.projectionWorker" style="stroke: #A80036; stroke-width: 1.5;" width="243" x="33936.5" y="4198"/><ellipse cx="34004.25" cy="4214" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34003.4834,4215.063 Q34001.6323,4214.3574 34000.9766,4213.5813 Q34000.3208,4212.8052 34000.3208,4211.4937 Q34000.3208,4209.8086 34001.3999,4208.8457 Q34002.479,4207.8828 34004.3633,4207.8828 Q34005.2183,4207.8828 34006.0732,4208.0779 Q34006.9282,4208.2729 34007.7666,4208.6548 L34007.7666,4211.0454 Q34006.978,4210.4893 34006.1646,4210.1987 Q34005.3511,4209.9082 34004.5542,4209.9082 Q34003.666,4209.9082 34003.1929,4210.2651 Q34002.7197,4210.6221 34002.7197,4211.2861 Q34002.7197,4211.8008 34003.0642,4212.137 Q34003.4087,4212.4731 34004.5044,4212.8799 L34005.5586,4213.2783 Q34007.0527,4213.8262 34007.7583,4214.731 Q34008.4639,4215.6357 34008.4639,4217.0137 Q34008.4639,4218.8896 34007.3557,4219.8152 Q34006.2476,4220.7407 34004.0063,4220.7407 Q34003.085,4220.7407 34002.1594,4220.5208 Q34001.2339,4220.3008 34000.3706,4219.8691 L34000.3706,4217.3374 Q34001.3501,4218.0347 34002.2673,4218.375 Q34003.1846,4218.7153 34004.0811,4218.7153 Q34004.9858,4218.7153 34005.4839,4218.3044 Q34005.9819,4217.8936 34005.9819,4217.1548 Q34005.9819,4216.5986 34005.6499,4216.1794 Q34005.3179,4215.7603 34004.687,4215.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="99" x="34024.75" y="4218.5352">projectionWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33937.5" x2="34178.5" y1="4230" y2="4230"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33944.5" y="4238"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="33956.5" y="4244.6348">proj *ProjectionExec</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33944.5" y="4250.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="33956.5" y="4257.5898">sctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33944.5" y="4263.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="33956.5" y="4270.5449">evaluatorSuit *expression.EvaluatorSuite</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33944.5" y="4276.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="33956.5" y="4283.5">globalFinishCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="34039.5" y="4283.5">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="34068.5" y="4283.5"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="34068.5" y="4283.5">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="34100.5" y="4283.5">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33944.5" y="4289.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="33956.5" y="4296.4551">inputGiveBackCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="34049.5" y="4296.4551">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="34078.5" y="4296.4551">*projectionInput</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33944.5" y="4302.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="33956.5" y="4309.4102">inputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="34002.5" y="4309.4102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="34031.5" y="4309.4102">*projectionInput</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33944.5" y="4315.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="33956.5" y="4322.3652">outputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="34010.5" y="4322.3652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="34039.5" y="4322.3652">*projectionOutput</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33937.5" x2="34178.5" y1="4328.6855" y2="4328.6855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33944.5" y="4336.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="33956.5" y="4343.3203">run(ctx context.Context)</text><!--MD5=[85dde12d87a05603aca3f51c8c0ebd37]
class executor.rangeFrameWindowProcessor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="229.3711" id="executor.rangeFrameWindowProcessor" style="stroke: #A80036; stroke-width: 1.5;" width="662" x="1305" y="1611.5"/><ellipse cx="1547.25" cy="1627.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1546.4834,1628.563 Q1544.6323,1627.8574 1543.9766,1627.0813 Q1543.3208,1626.3052 1543.3208,1624.9937 Q1543.3208,1623.3086 1544.3999,1622.3457 Q1545.479,1621.3828 1547.3633,1621.3828 Q1548.2183,1621.3828 1549.0732,1621.5779 Q1549.9282,1621.7729 1550.7666,1622.1548 L1550.7666,1624.5454 Q1549.978,1623.9893 1549.1646,1623.6987 Q1548.3511,1623.4082 1547.5542,1623.4082 Q1546.666,1623.4082 1546.1929,1623.7651 Q1545.7197,1624.1221 1545.7197,1624.7861 Q1545.7197,1625.3008 1546.0642,1625.637 Q1546.4087,1625.9731 1547.5044,1626.3799 L1548.5586,1626.7783 Q1550.0527,1627.3262 1550.7583,1628.231 Q1551.4639,1629.1357 1551.4639,1630.5137 Q1551.4639,1632.3896 1550.3557,1633.3152 Q1549.2476,1634.2407 1547.0063,1634.2407 Q1546.085,1634.2407 1545.1594,1634.0208 Q1544.2339,1633.8008 1543.3706,1633.3691 L1543.3706,1630.8374 Q1544.3501,1631.5347 1545.2673,1631.875 Q1546.1846,1632.2153 1547.0811,1632.2153 Q1547.9858,1632.2153 1548.4839,1631.8044 Q1548.9819,1631.3936 1548.9819,1630.6548 Q1548.9819,1630.0986 1548.6499,1629.6794 Q1548.3179,1629.2603 1547.687,1629.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="169" x="1567.75" y="1632.0352">rangeFrameWindowProcessor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1306" x2="1966" y1="1643.5" y2="1643.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1651.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1325" y="1658.1348">windowFuncs []aggfuncs.AggFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1664.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1325" y="1671.0898">partialResults []aggfuncs.PartialResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1677.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1325" y="1684.0449">start *core.FrameBound</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1690.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="1325" y="1697">end *core.FrameBound</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1703.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1325" y="1709.9551">curRowIdx uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1716.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1325" y="1722.9102">lastStartOffset uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1729.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1325" y="1735.8652">lastEndOffset uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1742.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="1325" y="1748.8203">orderByCols []*expression.Column</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1755.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="1325" y="1761.7754">expectedCmpResult int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1306" x2="1966" y1="1768.0957" y2="1768.0957"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1776.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="1325" y="1782.7305">getStartOffset(ctx sessionctx.Context, rows []chunk.Row) (uint64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1789.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="1325" y="1795.6855">getEndOffset(ctx sessionctx.Context, rows []chunk.Row) (uint64, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1802.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="636" x="1325" y="1808.6406">appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1814.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="1325" y="1821.5957">consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1313" y="1827.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1325" y="1834.5508">resetPartialResult()</text><!--MD5=[21e996fc946bf3355109ae39b89fb00f]
class executor.recordSet--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="177.5508" id="executor.recordSet" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="27483" y="1637"/><ellipse cx="27601.25" cy="1653" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27600.4834,1654.063 Q27598.6323,1653.3574 27597.9766,1652.5813 Q27597.3208,1651.8052 27597.3208,1650.4937 Q27597.3208,1648.8086 27598.3999,1647.8457 Q27599.479,1646.8828 27601.3633,1646.8828 Q27602.2183,1646.8828 27603.0732,1647.0779 Q27603.9282,1647.2729 27604.7666,1647.6548 L27604.7666,1650.0454 Q27603.978,1649.4893 27603.1646,1649.1987 Q27602.3511,1648.9082 27601.5542,1648.9082 Q27600.666,1648.9082 27600.1929,1649.2651 Q27599.7197,1649.6221 27599.7197,1650.2861 Q27599.7197,1650.8008 27600.0642,1651.137 Q27600.4087,1651.4731 27601.5044,1651.8799 L27602.5586,1652.2783 Q27604.0527,1652.8262 27604.7583,1653.731 Q27605.4639,1654.6357 27605.4639,1656.0137 Q27605.4639,1657.8896 27604.3557,1658.8152 Q27603.2476,1659.7407 27601.0063,1659.7407 Q27600.085,1659.7407 27599.1594,1659.5208 Q27598.2339,1659.3008 27597.3706,1658.8691 L27597.3706,1656.3374 Q27598.3501,1657.0347 27599.2673,1657.375 Q27600.1846,1657.7153 27601.0811,1657.7153 Q27601.9858,1657.7153 27602.4839,1657.3044 Q27602.9819,1656.8936 27602.9819,1656.1548 Q27602.9819,1655.5986 27602.6499,1655.1794 Q27602.3179,1654.7603 27601.687,1654.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="27621.75" y="1657.5352">recordSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27484" x2="27782" y1="1669" y2="1669"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27491" y="1677"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="27503" y="1683.6348">fields []*ast.ResultField</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27491" y="1689.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="27503" y="1696.5898">executor Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27491" y="1702.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="27503" y="1709.5449">stmt *ExecStmt</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27491" y="1715.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="27503" y="1722.5">lastErr error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27491" y="1728.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="27503" y="1735.4551">txnStartTS uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27484" x2="27782" y1="1741.7754" y2="1741.7754"/><ellipse cx="27494" cy="1752.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="27503" y="1756.4102">Fields() []*ast.ResultField</text><ellipse cx="27494" cy="1765.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="27503" y="1769.3652">Next(ctx context.Context, req *chunk.Chunk) error</text><ellipse cx="27494" cy="1778.6855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="27503" y="1782.3203">NewChunk() *chunk.Chunk</text><ellipse cx="27494" cy="1791.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="27503" y="1795.2754">Close() error</text><ellipse cx="27494" cy="1804.5957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="27503" y="1808.2305">OnFetchReturned()</text><!--MD5=[fdc7a1b0509067ac7721a99afdfb065f]
class executor.recoverRows--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.recoverRows" style="stroke: #A80036; stroke-width: 1.5;" width="143" x="34214.5" y="4230.5"/><ellipse cx="34246.6" cy="4246.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34245.8334,4247.563 Q34243.9823,4246.8574 34243.3266,4246.0813 Q34242.6708,4245.3052 34242.6708,4243.9937 Q34242.6708,4242.3086 34243.7499,4241.3457 Q34244.829,4240.3828 34246.7133,4240.3828 Q34247.5683,4240.3828 34248.4232,4240.5779 Q34249.2782,4240.7729 34250.1166,4241.1548 L34250.1166,4243.5454 Q34249.328,4242.9893 34248.5146,4242.6987 Q34247.7011,4242.4082 34246.9042,4242.4082 Q34246.016,4242.4082 34245.5429,4242.7651 Q34245.0697,4243.1221 34245.0697,4243.7861 Q34245.0697,4244.3008 34245.4142,4244.637 Q34245.7587,4244.9731 34246.8544,4245.3799 L34247.9086,4245.7783 Q34249.4027,4246.3262 34250.1083,4247.231 Q34250.8139,4248.1357 34250.8139,4249.5137 Q34250.8139,4251.3896 34249.7057,4252.3152 Q34248.5976,4253.2407 34246.3563,4253.2407 Q34245.435,4253.2407 34244.5094,4253.0208 Q34243.5839,4252.8008 34242.7206,4252.3691 L34242.7206,4249.8374 Q34243.7001,4250.5347 34244.6173,4250.875 Q34245.5346,4251.2153 34246.4311,4251.2153 Q34247.3358,4251.2153 34247.8339,4250.8044 Q34248.3319,4250.3936 34248.3319,4249.6548 Q34248.3319,4249.0986 34247.9999,4248.6794 Q34247.6679,4248.2603 34247.037,4248.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="34264.4" y="4251.0352">recoverRows</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34215.5" x2="34356.5" y1="4262.5" y2="4262.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34222.5" y="4270.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="34234.5" y="4277.1348">handle int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34222.5" y="4283.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="34234.5" y="4290.0898">idxVals []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34222.5" y="4296.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="34234.5" y="4303.0449">skip bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34215.5" x2="34356.5" y1="4309.3652" y2="4309.3652"/><!--MD5=[d87e0f0c756fad131a67e5f3ac8cc158]
class executor.regionKeyDecoder--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.regionKeyDecoder" style="stroke: #A80036; stroke-width: 1.5;" width="216" x="34393" y="4211"/><ellipse cx="34443.75" cy="4227" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34442.9834,4228.063 Q34441.1323,4227.3574 34440.4766,4226.5813 Q34439.8208,4225.8052 34439.8208,4224.4937 Q34439.8208,4222.8086 34440.8999,4221.8457 Q34441.979,4220.8828 34443.8633,4220.8828 Q34444.7183,4220.8828 34445.5732,4221.0779 Q34446.4282,4221.2729 34447.2666,4221.6548 L34447.2666,4224.0454 Q34446.478,4223.4893 34445.6646,4223.1987 Q34444.8511,4222.9082 34444.0542,4222.9082 Q34443.166,4222.9082 34442.6929,4223.2651 Q34442.2197,4223.6221 34442.2197,4224.2861 Q34442.2197,4224.8008 34442.5642,4225.137 Q34442.9087,4225.4731 34444.0044,4225.8799 L34445.0586,4226.2783 Q34446.5527,4226.8262 34447.2583,4227.731 Q34447.9639,4228.6357 34447.9639,4230.0137 Q34447.9639,4231.8896 34446.8557,4232.8152 Q34445.7476,4233.7407 34443.5063,4233.7407 Q34442.585,4233.7407 34441.6594,4233.5208 Q34440.7339,4233.3008 34439.8706,4232.8691 L34439.8706,4230.3374 Q34440.8501,4231.0347 34441.7673,4231.375 Q34442.6846,4231.7153 34443.5811,4231.7153 Q34444.4858,4231.7153 34444.9839,4231.3044 Q34445.4819,4230.8936 34445.4819,4230.1548 Q34445.4819,4229.5986 34445.1499,4229.1794 Q34444.8179,4228.7603 34444.187,4228.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="34464.25" y="4231.5352">regionKeyDecoder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34394" x2="34608" y1="4243" y2="4243"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34401" y="4251"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="34413" y="4257.6348">physicalTableID int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34401" y="4263.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="34413" y="4270.5898">tablePrefix []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34401" y="4276.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="34413" y="4283.5449">recordPrefix []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34401" y="4289.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="34413" y="4296.5">indexPrefix []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34401" y="4302.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="34413" y="4309.4551">indexID int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34394" x2="34608" y1="4315.7754" y2="4315.7754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34401" y="4323.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="34413" y="4330.4102">decodeRegionKey(key []byte) string</text><!--MD5=[d4d1e51f4fba4a3d69910347a7313424]
class executor.regionMeta--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="177.5508" id="executor.regionMeta" style="stroke: #A80036; stroke-width: 1.5;" width="150" x="32333" y="4675.5"/><ellipse cx="32372.3" cy="4691.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32371.5334,4692.563 Q32369.6823,4691.8574 32369.0266,4691.0813 Q32368.3708,4690.3052 32368.3708,4688.9937 Q32368.3708,4687.3086 32369.4499,4686.3457 Q32370.529,4685.3828 32372.4133,4685.3828 Q32373.2683,4685.3828 32374.1232,4685.5779 Q32374.9782,4685.7729 32375.8166,4686.1548 L32375.8166,4688.5454 Q32375.028,4687.9893 32374.2146,4687.6987 Q32373.4011,4687.4082 32372.6042,4687.4082 Q32371.716,4687.4082 32371.2429,4687.7651 Q32370.7697,4688.1221 32370.7697,4688.7861 Q32370.7697,4689.3008 32371.1142,4689.637 Q32371.4587,4689.9731 32372.5544,4690.3799 L32373.6086,4690.7783 Q32375.1027,4691.3262 32375.8083,4692.231 Q32376.5139,4693.1357 32376.5139,4694.5137 Q32376.5139,4696.3896 32375.4057,4697.3152 Q32374.2976,4698.2407 32372.0563,4698.2407 Q32371.135,4698.2407 32370.2094,4698.0208 Q32369.2839,4697.8008 32368.4206,4697.3691 L32368.4206,4694.8374 Q32369.4001,4695.5347 32370.3173,4695.875 Q32371.2346,4696.2153 32372.1311,4696.2153 Q32373.0358,4696.2153 32373.5339,4695.8044 Q32374.0319,4695.3936 32374.0319,4694.6548 Q32374.0319,4694.0986 32373.6999,4693.6794 Q32373.3679,4693.2603 32372.737,4693.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="32391.7" y="4696.0352">regionMeta</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32334" x2="32482" y1="4707.5" y2="4707.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32341" y="4715.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="32353" y="4722.1348">region *metapb.Region</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32341" y="4728.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="32353" y="4735.0898">leaderID uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32341" y="4741.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="32353" y="4748.0449">storeID uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32341" y="4754.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="32353" y="4761">start string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32341" y="4767.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="32353" y="4773.9551">end string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32341" y="4780.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="32353" y="4786.9102">scattering bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32341" y="4793.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="32353" y="4799.8652">writtenBytes int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32341" y="4806.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="32353" y="4812.8203">readBytes int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32341" y="4819.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="32353" y="4825.7754">approximateSize int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32341" y="4832.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="32353" y="4838.7305">approximateKeys int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32334" x2="32482" y1="4845.0508" y2="4845.0508"/><!--MD5=[c2a9586da5c545c4e02986ecc0f34139]
class executor.rightOuterJoiner--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.rightOuterJoiner" style="stroke: #A80036; stroke-width: 1.5;" width="811" x="13613.5" y="1669.5"/><ellipse cx="13969.25" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M13968.4834,1686.563 Q13966.6323,1685.8574 13965.9766,1685.0813 Q13965.3208,1684.3052 13965.3208,1682.9937 Q13965.3208,1681.3086 13966.3999,1680.3457 Q13967.479,1679.3828 13969.3633,1679.3828 Q13970.2183,1679.3828 13971.0732,1679.5779 Q13971.9282,1679.7729 13972.7666,1680.1548 L13972.7666,1682.5454 Q13971.978,1681.9893 13971.1646,1681.6987 Q13970.3511,1681.4082 13969.5542,1681.4082 Q13968.666,1681.4082 13968.1929,1681.7651 Q13967.7197,1682.1221 13967.7197,1682.7861 Q13967.7197,1683.3008 13968.0642,1683.637 Q13968.4087,1683.9731 13969.5044,1684.3799 L13970.5586,1684.7783 Q13972.0527,1685.3262 13972.7583,1686.231 Q13973.4639,1687.1357 13973.4639,1688.5137 Q13973.4639,1690.3896 13972.3557,1691.3152 Q13971.2476,1692.2407 13969.0063,1692.2407 Q13968.085,1692.2407 13967.1594,1692.0208 Q13966.2339,1691.8008 13965.3706,1691.3691 L13965.3706,1688.8374 Q13966.3501,1689.5347 13967.2673,1689.875 Q13968.1846,1690.2153 13969.0811,1690.2153 Q13969.9858,1690.2153 13970.4839,1689.8044 Q13970.9819,1689.3936 13970.9819,1688.6548 Q13970.9819,1688.0986 13970.6499,1687.6794 Q13970.3179,1687.2603 13969.687,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="13989.75" y="1690.0352">rightOuterJoiner</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13614.5" x2="14423.5" y1="1701.5" y2="1701.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="13614.5" x2="14423.5" y1="1709.5" y2="1709.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13621.5" y="1717.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="13633.5" y="1724.1348">tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13621.5" y="1730.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="785" x="13633.5" y="1737.0898">tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13621.5" y="1743.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="13633.5" y="1750.0449">onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="13636.5" y="1763"/><ellipse cx="13624.5" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="13633.5" y="1775.9551">Clone() joiner</text><!--MD5=[e6a15c907a6a9457d357cda0d9f91935]
class executor.rowFrameWindowProcessor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="177.5508" id="executor.rowFrameWindowProcessor" style="stroke: #A80036; stroke-width: 1.5;" width="662" x="2002" y="1637"/><ellipse cx="2250.25" cy="1653" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2249.4834,1654.063 Q2247.6323,1653.3574 2246.9766,1652.5813 Q2246.3208,1651.8052 2246.3208,1650.4937 Q2246.3208,1648.8086 2247.3999,1647.8457 Q2248.479,1646.8828 2250.3633,1646.8828 Q2251.2183,1646.8828 2252.0732,1647.0779 Q2252.9282,1647.2729 2253.7666,1647.6548 L2253.7666,1650.0454 Q2252.978,1649.4893 2252.1646,1649.1987 Q2251.3511,1648.9082 2250.5542,1648.9082 Q2249.666,1648.9082 2249.1929,1649.2651 Q2248.7197,1649.6221 2248.7197,1650.2861 Q2248.7197,1650.8008 2249.0642,1651.137 Q2249.4087,1651.4731 2250.5044,1651.8799 L2251.5586,1652.2783 Q2253.0527,1652.8262 2253.7583,1653.731 Q2254.4639,1654.6357 2254.4639,1656.0137 Q2254.4639,1657.8896 2253.3557,1658.8152 Q2252.2476,1659.7407 2250.0063,1659.7407 Q2249.085,1659.7407 2248.1594,1659.5208 Q2247.2339,1659.3008 2246.3706,1658.8691 L2246.3706,1656.3374 Q2247.3501,1657.0347 2248.2673,1657.375 Q2249.1846,1657.7153 2250.0811,1657.7153 Q2250.9858,1657.7153 2251.4839,1657.3044 Q2251.9819,1656.8936 2251.9819,1656.1548 Q2251.9819,1655.5986 2251.6499,1655.1794 Q2251.3179,1654.7603 2250.687,1654.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="157" x="2270.75" y="1657.5352">rowFrameWindowProcessor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2003" x2="2663" y1="1669" y2="1669"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="1677"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="2022" y="1683.6348">windowFuncs []aggfuncs.AggFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="1689.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2022" y="1696.5898">partialResults []aggfuncs.PartialResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="1702.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="2022" y="1709.5449">start *core.FrameBound</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="1715.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="2022" y="1722.5">end *core.FrameBound</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="1728.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2022" y="1735.4551">curRowIdx uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2003" x2="2663" y1="1741.7754" y2="1741.7754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="1749.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="2022" y="1756.4102">getStartOffset(numRows uint64) uint64</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="1762.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2022" y="1769.3652">getEndOffset(numRows uint64) uint64</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="1775.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="2022" y="1782.3203">consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="1788.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="636" x="2022" y="1795.2754">appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="1801.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2022" y="1808.2305">resetPartialResult()</text><!--MD5=[4fc0fde3cb3d95b77f705ed8565790f1]
class executor.rowHashMap--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="125.7305" id="executor.rowHashMap" style="stroke: #A80036; stroke-width: 1.5;" width="251" x="32518.5" y="4701.5"/><ellipse cx="32602.25" cy="4717.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32601.4834,4718.563 Q32599.6323,4717.8574 32598.9766,4717.0813 Q32598.3208,4716.3052 32598.3208,4714.9937 Q32598.3208,4713.3086 32599.3999,4712.3457 Q32600.479,4711.3828 32602.3633,4711.3828 Q32603.2183,4711.3828 32604.0732,4711.5779 Q32604.9282,4711.7729 32605.7666,4712.1548 L32605.7666,4714.5454 Q32604.978,4713.9893 32604.1646,4713.6987 Q32603.3511,4713.4082 32602.5542,4713.4082 Q32601.666,4713.4082 32601.1929,4713.7651 Q32600.7197,4714.1221 32600.7197,4714.7861 Q32600.7197,4715.3008 32601.0642,4715.637 Q32601.4087,4715.9731 32602.5044,4716.3799 L32603.5586,4716.7783 Q32605.0527,4717.3262 32605.7583,4718.231 Q32606.4639,4719.1357 32606.4639,4720.5137 Q32606.4639,4722.3896 32605.3557,4723.3152 Q32604.2476,4724.2407 32602.0063,4724.2407 Q32601.085,4724.2407 32600.1594,4724.0208 Q32599.2339,4723.8008 32598.3706,4723.3691 L32598.3706,4720.8374 Q32599.3501,4721.5347 32600.2673,4721.875 Q32601.1846,4722.2153 32602.0811,4722.2153 Q32602.9858,4722.2153 32603.4839,4721.8044 Q32603.9819,4721.3936 32603.9819,4720.6548 Q32603.9819,4720.0986 32603.6499,4719.6794 Q32603.3179,4719.2603 32602.687,4719.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="32622.75" y="4722.0352">rowHashMap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32519.5" x2="32768.5" y1="4733.5" y2="4733.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32526.5" y="4741.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="32538.5" y="4748.1348">entryStore entryStore</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32526.5" y="4754.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="32538.5" y="4761.0898">hashTable</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="32596.5" y="4761.0898">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="32619.5" y="4761.0898">[uint64]entryAddr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32526.5" y="4767.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="32538.5" y="4774.0449">length int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32519.5" x2="32768.5" y1="4780.3652" y2="4780.3652"/><ellipse cx="32529.5" cy="4791.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="32538.5" y="4795">Put(hashKey uint64, rowPtr chunk.RowPtr)</text><ellipse cx="32529.5" cy="4804.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="32538.5" y="4807.9551">Get(hashKey uint64) []chunk.RowPtr</text><ellipse cx="32529.5" cy="4817.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="32538.5" y="4820.9102">Len() int</text><!--MD5=[d52bf34eefd3cbc360e8b7d248e44043]
class executor.ruleChecker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.ruleChecker" style="stroke: #A80036; stroke-width: 1.5;" width="317" x="5804.5" y="745.5"/><ellipse cx="5924.25" cy="761.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5920.6777,757.7651 L5920.6777,755.6069 L5928.0571,755.6069 L5928.0571,757.7651 L5925.5918,757.7651 L5925.5918,765.8418 L5928.0571,765.8418 L5928.0571,768 L5920.6777,768 L5920.6777,765.8418 L5923.1431,765.8418 L5923.1431,757.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="69" x="5944.75" y="766.0352">ruleChecker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5805.5" x2="6120.5" y1="777.5" y2="777.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5805.5" x2="6120.5" y1="785.5" y2="785.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5812.5" y="793.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="5824.5" y="800.1348">genSQL(timeRange core.QueryTimeRange) string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5812.5" y="806.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="5824.5" y="813.0898">genResult(sql string, row chunk.Row) inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5812.5" y="819.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="5824.5" y="826.0449">getItem() string</text><!--MD5=[664d0224929786bb86921aa3d2606f68]
class executor.selectResultHook--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.selectResultHook" style="stroke: #A80036; stroke-width: 1.5;" width="1181" x="24432.5" y="745.5"/><ellipse cx="24969.75" cy="761.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24968.9834,762.563 Q24967.1323,761.8574 24966.4766,761.0813 Q24965.8208,760.3052 24965.8208,758.9937 Q24965.8208,757.3086 24966.8999,756.3457 Q24967.979,755.3828 24969.8633,755.3828 Q24970.7183,755.3828 24971.5732,755.5779 Q24972.4282,755.7729 24973.2666,756.1548 L24973.2666,758.5454 Q24972.478,757.9893 24971.6646,757.6987 Q24970.8511,757.4082 24970.0542,757.4082 Q24969.166,757.4082 24968.6929,757.7651 Q24968.2197,758.1221 24968.2197,758.7861 Q24968.2197,759.3008 24968.5642,759.637 Q24968.9087,759.9731 24970.0044,760.3799 L24971.0586,760.7783 Q24972.5527,761.3262 24973.2583,762.231 Q24973.9639,763.1357 24973.9639,764.5137 Q24973.9639,766.3896 24972.8557,767.3152 Q24971.7476,768.2407 24969.5063,768.2407 Q24968.585,768.2407 24967.6594,768.0208 Q24966.7339,767.8008 24965.8706,767.3691 L24965.8706,764.8374 Q24966.8501,765.5347 24967.7673,765.875 Q24968.6846,766.2153 24969.5811,766.2153 Q24970.4858,766.2153 24970.9839,765.8044 Q24971.4819,765.3936 24971.4819,764.6548 Q24971.4819,764.0986 24971.1499,763.6794 Q24970.8179,763.2603 24970.187,763.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="24990.25" y="766.0352">selectResultHook</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24433.5" x2="25612.5" y1="777.5" y2="777.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="24433.5" x2="25612.5" y1="785.5" y2="785.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24440.5" y="793.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="24452.5" y="800.1348">selectResultFunc</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="24545.5" y="800.1348">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="747" x="24569.5" y="800.1348">(context.Context, sessionctx.Context, *kv.Request, []*types.FieldType, *statistics.QueryFeedback, []fmt.Stringer) (distsql.SelectResult, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="24455.5" y="813.0898"/><ellipse cx="24443.5" cy="822.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1155" x="24452.5" y="826.0449">SelectResult(ctx context.Context, sctx sessionctx.Context, kvReq *kv.Request, fieldTypes []*types.FieldType, fb *statistics.QueryFeedback, copPlanIDs []fmt.Stringer, rootPlanID fmt.Stringer) (distsql.SelectResult, error)</text><!--MD5=[99a7cc90ca2c4f2e90e7dbfaaab99bc8]
class executor.semiJoiner--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.semiJoiner" style="stroke: #A80036; stroke-width: 1.5;" width="811" x="14459.5" y="1669.5"/><ellipse cx="14830.75" cy="1685.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M14829.9834,1686.563 Q14828.1323,1685.8574 14827.4766,1685.0813 Q14826.8208,1684.3052 14826.8208,1682.9937 Q14826.8208,1681.3086 14827.8999,1680.3457 Q14828.979,1679.3828 14830.8633,1679.3828 Q14831.7183,1679.3828 14832.5732,1679.5779 Q14833.4282,1679.7729 14834.2666,1680.1548 L14834.2666,1682.5454 Q14833.478,1681.9893 14832.6646,1681.6987 Q14831.8511,1681.4082 14831.0542,1681.4082 Q14830.166,1681.4082 14829.6929,1681.7651 Q14829.2197,1682.1221 14829.2197,1682.7861 Q14829.2197,1683.3008 14829.5642,1683.637 Q14829.9087,1683.9731 14831.0044,1684.3799 L14832.0586,1684.7783 Q14833.5527,1685.3262 14834.2583,1686.231 Q14834.9639,1687.1357 14834.9639,1688.5137 Q14834.9639,1690.3896 14833.8557,1691.3152 Q14832.7476,1692.2407 14830.5063,1692.2407 Q14829.585,1692.2407 14828.6594,1692.0208 Q14827.7339,1691.8008 14826.8706,1691.3691 L14826.8706,1688.8374 Q14827.8501,1689.5347 14828.7673,1689.875 Q14829.6846,1690.2153 14830.5811,1690.2153 Q14831.4858,1690.2153 14831.9839,1689.8044 Q14832.4819,1689.3936 14832.4819,1688.6548 Q14832.4819,1688.0986 14832.1499,1687.6794 Q14831.8179,1687.2603 14831.187,1687.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="60" x="14851.25" y="1690.0352">semiJoiner</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="14460.5" x2="15269.5" y1="1701.5" y2="1701.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="14460.5" x2="15269.5" y1="1709.5" y2="1709.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14467.5" y="1717.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="14479.5" y="1724.1348">tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14467.5" y="1730.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="785" x="14479.5" y="1737.0898">tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14467.5" y="1743.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="14479.5" y="1750.0449">onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="14482.5" y="1763"/><ellipse cx="14470.5" cy="1772.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="14479.5" y="1775.9551">Clone() joiner</text><!--MD5=[4958f5bf965887f57752b90fc5e6dbbc]
class executor.shuffleOutput--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.shuffleOutput" style="stroke: #A80036; stroke-width: 1.5;" width="195" x="32804.5" y="4721"/><ellipse cx="32859.25" cy="4737" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32858.4834,4738.063 Q32856.6323,4737.3574 32855.9766,4736.5813 Q32855.3208,4735.8052 32855.3208,4734.4937 Q32855.3208,4732.8086 32856.3999,4731.8457 Q32857.479,4730.8828 32859.3633,4730.8828 Q32860.2183,4730.8828 32861.0732,4731.0779 Q32861.9282,4731.2729 32862.7666,4731.6548 L32862.7666,4734.0454 Q32861.978,4733.4893 32861.1646,4733.1987 Q32860.3511,4732.9082 32859.5542,4732.9082 Q32858.666,4732.9082 32858.1929,4733.2651 Q32857.7197,4733.6221 32857.7197,4734.2861 Q32857.7197,4734.8008 32858.0642,4735.137 Q32858.4087,4735.4731 32859.5044,4735.8799 L32860.5586,4736.2783 Q32862.0527,4736.8262 32862.7583,4737.731 Q32863.4639,4738.6357 32863.4639,4740.0137 Q32863.4639,4741.8896 32862.3557,4742.8152 Q32861.2476,4743.7407 32859.0063,4743.7407 Q32858.085,4743.7407 32857.1594,4743.5208 Q32856.2339,4743.3008 32855.3706,4742.8691 L32855.3706,4740.3374 Q32856.3501,4741.0347 32857.2673,4741.375 Q32858.1846,4741.7153 32859.0811,4741.7153 Q32859.9858,4741.7153 32860.4839,4741.3044 Q32860.9819,4740.8936 32860.9819,4740.1548 Q32860.9819,4739.5986 32860.6499,4739.1794 Q32860.3179,4738.7603 32859.687,4738.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="32879.75" y="4741.5352">shuffleOutput</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32805.5" x2="32998.5" y1="4753" y2="4753"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32812.5" y="4761"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="32824.5" y="4767.6348">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32812.5" y="4773.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="32824.5" y="4780.5898">err error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32812.5" y="4786.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="32824.5" y="4793.5449">giveBackCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="32888.5" y="4793.5449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="32917.5" y="4793.5449">*chunk.Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32805.5" x2="32998.5" y1="4799.8652" y2="4799.8652"/><!--MD5=[5eb49405eb444dd637cc44810aa357b3]
class executor.shuffleWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="203.4609" id="executor.shuffleWorker" style="stroke: #A80036; stroke-width: 1.5;" width="313" x="24888.5" y="2406"/><ellipse cx="25001.25" cy="2422" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25000.4834,2423.063 Q24998.6323,2422.3574 24997.9766,2421.5813 Q24997.3208,2420.8052 24997.3208,2419.4937 Q24997.3208,2417.8086 24998.3999,2416.8457 Q24999.479,2415.8828 25001.3633,2415.8828 Q25002.2183,2415.8828 25003.0732,2416.0779 Q25003.9282,2416.2729 25004.7666,2416.6548 L25004.7666,2419.0454 Q25003.978,2418.4893 25003.1646,2418.1987 Q25002.3511,2417.9082 25001.5542,2417.9082 Q25000.666,2417.9082 25000.1929,2418.2651 Q24999.7197,2418.6221 24999.7197,2419.2861 Q24999.7197,2419.8008 25000.0642,2420.137 Q25000.4087,2420.4731 25001.5044,2420.8799 L25002.5586,2421.2783 Q25004.0527,2421.8262 25004.7583,2422.731 Q25005.4639,2423.6357 25005.4639,2425.0137 Q25005.4639,2426.8896 25004.3557,2427.8152 Q25003.2476,2428.7407 25001.0063,2428.7407 Q25000.085,2428.7407 24999.1594,2428.5208 Q24998.2339,2428.3008 24997.3706,2427.8691 L24997.3706,2425.3374 Q24998.3501,2426.0347 24999.2673,2426.375 Q25000.1846,2426.7153 25001.0811,2426.7153 Q25001.9858,2426.7153 25002.4839,2426.3044 Q25002.9819,2425.8936 25002.9819,2425.1548 Q25002.9819,2424.5986 25002.6499,2424.1794 Q25002.3179,2423.7603 25001.687,2423.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="25021.75" y="2426.5352">shuffleWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24889.5" x2="25200.5" y1="2438" y2="2438"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24896.5" y="2446"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="24908.5" y="2452.6348">childExec Executor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24896.5" y="2458.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="24908.5" y="2465.5898">finishCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="24956.5" y="2465.5898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="24985.5" y="2465.5898"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="24985.5" y="2465.5898">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="25017.5" y="2465.5898">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24896.5" y="2471.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="24908.5" y="2478.5449">executed bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24896.5" y="2484.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="24908.5" y="2491.5">inputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="24954.5" y="2491.5">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="24983.5" y="2491.5">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24896.5" y="2497.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="24908.5" y="2504.4551">inputHolderCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="24990.5" y="2504.4551">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="25019.5" y="2504.4551">*chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24896.5" y="2510.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="24908.5" y="2517.4102">outputCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="24962.5" y="2517.4102">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="24991.5" y="2517.4102">*shuffleOutput</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24896.5" y="2523.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="24908.5" y="2530.3652">outputHolderCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="24998.5" y="2530.3652">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="25027.5" y="2530.3652">*chunk.Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24889.5" x2="25200.5" y1="2536.6855" y2="2536.6855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24896.5" y="2544.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="24908.5" y="2551.3203">run(ctx context.Context, waitGroup *sync.WaitGroup)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="24911.5" y="2564.2754"/><ellipse cx="24899.5" cy="2573.5957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="24908.5" y="2577.2305">Open(ctx context.Context) error</text><ellipse cx="24899.5" cy="2586.5508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="24908.5" y="2590.1855">Close() error</text><ellipse cx="24899.5" cy="2599.5059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="24908.5" y="2603.1406">Next(ctx context.Context, req *chunk.Chunk) error</text><!--MD5=[faed2cd8266ba07d465402956d1333f8]
class executor.slowLogChecker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="138.6855" id="executor.slowLogChecker" style="stroke: #A80036; stroke-width: 1.5;" width="214" x="33035" y="4695"/><ellipse cx="33091.75" cy="4711" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33090.9834,4712.063 Q33089.1323,4711.3574 33088.4766,4710.5813 Q33087.8208,4709.8052 33087.8208,4708.4937 Q33087.8208,4706.8086 33088.8999,4705.8457 Q33089.979,4704.8828 33091.8633,4704.8828 Q33092.7183,4704.8828 33093.5732,4705.0779 Q33094.4282,4705.2729 33095.2666,4705.6548 L33095.2666,4708.0454 Q33094.478,4707.4893 33093.6646,4707.1987 Q33092.8511,4706.9082 33092.0542,4706.9082 Q33091.166,4706.9082 33090.6929,4707.2651 Q33090.2197,4707.6221 33090.2197,4708.2861 Q33090.2197,4708.8008 33090.5642,4709.137 Q33090.9087,4709.4731 33092.0044,4709.8799 L33093.0586,4710.2783 Q33094.5527,4710.8262 33095.2583,4711.731 Q33095.9639,4712.6357 33095.9639,4714.0137 Q33095.9639,4715.8896 33094.8557,4716.8152 Q33093.7476,4717.7407 33091.5063,4717.7407 Q33090.585,4717.7407 33089.6594,4717.5208 Q33088.7339,4717.3008 33087.8706,4716.8691 L33087.8706,4714.3374 Q33088.8501,4715.0347 33089.7673,4715.375 Q33090.6846,4715.7153 33091.5811,4715.7153 Q33092.4858,4715.7153 33092.9839,4715.3044 Q33093.4819,4714.8936 33093.4819,4714.1548 Q33093.4819,4713.5986 33093.1499,4713.1794 Q33092.8179,4712.7603 33092.187,4712.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="33112.25" y="4715.5352">slowLogChecker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33036" x2="33248" y1="4727" y2="4727"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33043" y="4735"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="33055" y="4741.6348">hasProcessPriv bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33043" y="4747.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="33055" y="4754.5898">user *auth.UserIdentity</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33043" y="4760.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="33055" y="4767.5449">enableTimeCheck bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33043" y="4773.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="33055" y="4780.5">startTime types.Time</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33043" y="4786.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="33055" y="4793.4551">endTime types.Time</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33036" x2="33248" y1="4799.7754" y2="4799.7754"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33043" y="4807.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="33055" y="4814.4102">hasPrivilege(userName string) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33043" y="4820.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="33055" y="4827.3652">isTimeValid(t types.Time) bool</text><!--MD5=[ee7e22656bd6d8307ad3979a87201d0d]
class executor.slowQueryRetriever--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="294.1465" id="executor.slowQueryRetriever" style="stroke: #A80036; stroke-width: 1.5;" width="545" x="8729.5" y="1579"/><ellipse cx="8942.25" cy="1595" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8941.4834,1596.063 Q8939.6323,1595.3574 8938.9766,1594.5813 Q8938.3208,1593.8052 8938.3208,1592.4937 Q8938.3208,1590.8086 8939.3999,1589.8457 Q8940.479,1588.8828 8942.3633,1588.8828 Q8943.2183,1588.8828 8944.0732,1589.0779 Q8944.9282,1589.2729 8945.7666,1589.6548 L8945.7666,1592.0454 Q8944.978,1591.4893 8944.1646,1591.1987 Q8943.3511,1590.9082 8942.5542,1590.9082 Q8941.666,1590.9082 8941.1929,1591.2651 Q8940.7197,1591.6221 8940.7197,1592.2861 Q8940.7197,1592.8008 8941.0642,1593.137 Q8941.4087,1593.4731 8942.5044,1593.8799 L8943.5586,1594.2783 Q8945.0527,1594.8262 8945.7583,1595.731 Q8946.4639,1596.6357 8946.4639,1598.0137 Q8946.4639,1599.8896 8945.3557,1600.8152 Q8944.2476,1601.7407 8942.0063,1601.7407 Q8941.085,1601.7407 8940.1594,1601.5208 Q8939.2339,1601.3008 8938.3706,1600.8691 L8938.3706,1598.3374 Q8939.3501,1599.0347 8940.2673,1599.375 Q8941.1846,1599.7153 8942.0811,1599.7153 Q8942.9858,1599.7153 8943.4839,1599.3044 Q8943.9819,1598.8936 8943.9819,1598.1548 Q8943.9819,1597.5986 8943.6499,1597.1794 Q8943.3179,1596.7603 8942.687,1596.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="111" x="8962.75" y="1599.5352">slowQueryRetriever</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8730.5" x2="9273.5" y1="1611" y2="1611"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1619"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="8749.5" y="1625.6348">table *model.TableInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1631.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="8749.5" y="1638.5898">outputCols []*model.ColumnInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1644.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="8749.5" y="1651.5449">initialized bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1657.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="8749.5" y="1664.5">extractor *core.SlowQueryExtractor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1670.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="8749.5" y="1677.4551">files []logFile</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1683.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="8749.5" y="1690.4102">fileIdx int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1696.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="8749.5" y="1703.3652">fileLine int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1709.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="8749.5" y="1716.3203">checker *slowLogChecker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1722.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="8749.5" y="1729.2754">parsedSlowLogCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="8848.5" y="1729.2754">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="8877.5" y="1729.2754">parsedSlowLog</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8730.5" x2="9273.5" y1="1735.5957" y2="1735.5957"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1743.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="8749.5" y="1750.2305">retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1756.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="8749.5" y="1763.1855">initialize(sctx sessionctx.Context) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1769.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="8749.5" y="1776.1406">close() error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1782.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="8749.5" y="1789.0957">parseDataForSlowLog(ctx context.Context, sctx sessionctx.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1795.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="8749.5" y="1802.0508">dataForSlowLog(ctx context.Context) ([][]types.Datum, bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1808.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="519" x="8749.5" y="1815.0059">parseSlowLog(ctx sessionctx.Context, reader *bufio.Reader, maxRow int) ([][]types.Datum, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1821.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="8749.5" y="1827.9609">getAllFiles(sctx sessionctx.Context, logFilePath string) ([]logFile, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1834.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="8749.5" y="1840.916">getFileStartTime(file *os.File) (time.Time, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1847.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="8749.5" y="1853.8711">getFileEndTime(file *os.File) (time.Time, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8737.5" y="1860.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="8749.5" y="1866.8262">initializeAsyncParsing(ctx context.Context, sctx sessionctx.Context)</text><!--MD5=[744385ab224407e46525dab4c17a8d09]
class executor.slowQueryTuple--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="708.709" id="executor.slowQueryTuple" style="stroke: #A80036; stroke-width: 1.5;" width="607" x="33284.5" y="4410"/><ellipse cx="33537.75" cy="4426" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33536.9834,4427.063 Q33535.1323,4426.3574 33534.4766,4425.5813 Q33533.8208,4424.8052 33533.8208,4423.4937 Q33533.8208,4421.8086 33534.8999,4420.8457 Q33535.979,4419.8828 33537.8633,4419.8828 Q33538.7183,4419.8828 33539.5732,4420.0779 Q33540.4282,4420.2729 33541.2666,4420.6548 L33541.2666,4423.0454 Q33540.478,4422.4893 33539.6646,4422.1987 Q33538.8511,4421.9082 33538.0542,4421.9082 Q33537.166,4421.9082 33536.6929,4422.2651 Q33536.2197,4422.6221 33536.2197,4423.2861 Q33536.2197,4423.8008 33536.5642,4424.137 Q33536.9087,4424.4731 33538.0044,4424.8799 L33539.0586,4425.2783 Q33540.5527,4425.8262 33541.2583,4426.731 Q33541.9639,4427.6357 33541.9639,4429.0137 Q33541.9639,4430.8896 33540.8557,4431.8152 Q33539.7476,4432.7407 33537.5063,4432.7407 Q33536.585,4432.7407 33535.6594,4432.5208 Q33534.7339,4432.3008 33533.8706,4431.8691 L33533.8706,4429.3374 Q33534.8501,4430.0347 33535.7673,4430.375 Q33536.6846,4430.7153 33537.5811,4430.7153 Q33538.4858,4430.7153 33538.9839,4430.3044 Q33539.4819,4429.8936 33539.4819,4429.1548 Q33539.4819,4428.5986 33539.1499,4428.1794 Q33538.8179,4427.7603 33538.187,4427.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="33558.25" y="4430.5352">slowQueryTuple</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33285.5" x2="33890.5" y1="4442" y2="4442"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4450"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="33304.5" y="4456.6348">time types.Time</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4462.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="33304.5" y="4469.5898">txnStartTs uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4475.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="33304.5" y="4482.5449">user string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4488.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="33304.5" y="4495.5">host string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4501.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="33304.5" y="4508.4551">connID uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4514.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="33304.5" y="4521.4102">queryTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4527.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="33304.5" y="4534.3652">parseTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4540.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="33304.5" y="4547.3203">compileTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4553.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="33304.5" y="4560.2754">preWriteTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4566.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="33304.5" y="4573.2305">waitPrewriteBinlogTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4579.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="33304.5" y="4586.1855">commitTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4592.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="33304.5" y="4599.1406">getCommitTSTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4605.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="33304.5" y="4612.0957">commitBackoffTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4618.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="33304.5" y="4625.0508">backoffTypes string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4631.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="33304.5" y="4638.0059">resolveLockTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4644.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="33304.5" y="4650.9609">localLatchWaitTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4657.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="33304.5" y="4663.916">writeKeys uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4670.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="33304.5" y="4676.8711">writeSize uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4683.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="33304.5" y="4689.8262">prewriteRegion uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4696.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="33304.5" y="4702.7813">txnRetry uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4709.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="33304.5" y="4715.7363">copTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4722.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="33304.5" y="4728.6914">processTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4735.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="33304.5" y="4741.6465">waitTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4747.9668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="33304.5" y="4754.6016">backOffTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4760.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="33304.5" y="4767.5566">lockKeysTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4773.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="33304.5" y="4780.5117">requestCount uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4786.832"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="33304.5" y="4793.4668">totalKeys uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4799.7871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="33304.5" y="4806.4219">processKeys uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4812.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="33304.5" y="4819.377">db string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4825.6973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="33304.5" y="4832.332">indexIDs string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4838.6523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="33304.5" y="4845.2871">digest string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4851.6074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="33304.5" y="4858.2422">statsInfo string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4864.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="33304.5" y="4871.1973">avgProcessTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4877.5176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="33304.5" y="4884.1523">p90ProcessTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4890.4727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="33304.5" y="4897.1074">maxProcessTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4903.4277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="33304.5" y="4910.0625">maxProcessAddress string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4916.3828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="33304.5" y="4923.0176">avgWaitTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4929.3379"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="33304.5" y="4935.9727">p90WaitTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4942.293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="33304.5" y="4948.9277">maxWaitTime float64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4955.248"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="33304.5" y="4961.8828">maxWaitAddress string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4968.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="33304.5" y="4974.8379">memMax int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4981.1582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="33304.5" y="4987.793">diskMax int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="4994.1133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="33304.5" y="5000.748">prevStmt string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="5007.0684"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="33304.5" y="5013.7031">sql string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="5020.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="33304.5" y="5026.6582">isInternal bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="5032.9785"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="33304.5" y="5039.6133">succ bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="5045.9336"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="33304.5" y="5052.5684">planFromCache bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="5058.8887"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="33304.5" y="5065.5234">plan string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="5071.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="33304.5" y="5078.4785">planDigest string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33285.5" x2="33890.5" y1="5084.7988" y2="5084.7988"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="5092.7988"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="581" x="33304.5" y="5099.4336">setFieldValue(tz *time.Location, field string, value string, lineNum int, checker *slowLogChecker) (bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33292.5" y="5105.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="33304.5" y="5112.3887">convertToDatumRow() []types.Datum</text><!--MD5=[4b8f5b649be750bca0469938b521bd95]
class executor.splitRegionResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.splitRegionResult" style="stroke: #A80036; stroke-width: 1.5;" width="135" x="4588.5" y="1689"/><ellipse cx="4605.75" cy="1705" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4604.9834,1706.063 Q4603.1323,1705.3574 4602.4766,1704.5813 Q4601.8208,1703.8052 4601.8208,1702.4937 Q4601.8208,1700.8086 4602.8999,1699.8457 Q4603.979,1698.8828 4605.8633,1698.8828 Q4606.7183,1698.8828 4607.5732,1699.0779 Q4608.4282,1699.2729 4609.2666,1699.6548 L4609.2666,1702.0454 Q4608.478,1701.4893 4607.6646,1701.1987 Q4606.8511,1700.9082 4606.0542,1700.9082 Q4605.166,1700.9082 4604.6929,1701.2651 Q4604.2197,1701.6221 4604.2197,1702.2861 Q4604.2197,1702.8008 4604.5642,1703.137 Q4604.9087,1703.4731 4606.0044,1703.8799 L4607.0586,1704.2783 Q4608.5527,1704.8262 4609.2583,1705.731 Q4609.9639,1706.6357 4609.9639,1708.0137 Q4609.9639,1709.8896 4608.8557,1710.8152 Q4607.7476,1711.7407 4605.5063,1711.7407 Q4604.585,1711.7407 4603.6594,1711.5208 Q4602.7339,1711.3008 4601.8706,1710.8691 L4601.8706,1708.3374 Q4602.8501,1709.0347 4603.7673,1709.375 Q4604.6846,1709.7153 4605.5811,1709.7153 Q4606.4858,1709.7153 4606.9839,1709.3044 Q4607.4819,1708.8936 4607.4819,1708.1548 Q4607.4819,1707.5986 4607.1499,1707.1794 Q4606.8179,1706.7603 4606.187,1706.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="4620.25" y="1709.5352">splitRegionResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4589.5" x2="4722.5" y1="1721" y2="1721"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4596.5" y="1729"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="4608.5" y="1735.6348">splitRegions int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4596.5" y="1741.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4608.5" y="1748.5898">finishScatterNum int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4589.5" x2="4722.5" y1="1754.9102" y2="1754.9102"/><!--MD5=[53fd7c04d6b6b658e4b19f2dfb5d23c9]
class executor.statsCache--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.statsCache" style="stroke: #A80036; stroke-width: 1.5;" width="444" x="33927" y="4708"/><ellipse cx="34113.75" cy="4724" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34112.9834,4725.063 Q34111.1323,4724.3574 34110.4766,4723.5813 Q34109.8208,4722.8052 34109.8208,4721.4937 Q34109.8208,4719.8086 34110.8999,4718.8457 Q34111.979,4717.8828 34113.8633,4717.8828 Q34114.7183,4717.8828 34115.5732,4718.0779 Q34116.4282,4718.2729 34117.2666,4718.6548 L34117.2666,4721.0454 Q34116.478,4720.4893 34115.6646,4720.1987 Q34114.8511,4719.9082 34114.0542,4719.9082 Q34113.166,4719.9082 34112.6929,4720.2651 Q34112.2197,4720.6221 34112.2197,4721.2861 Q34112.2197,4721.8008 34112.5642,4722.137 Q34112.9087,4722.4731 34114.0044,4722.8799 L34115.0586,4723.2783 Q34116.5527,4723.8262 34117.2583,4724.731 Q34117.9639,4725.6357 34117.9639,4727.0137 Q34117.9639,4728.8896 34116.8557,4729.8152 Q34115.7476,4730.7407 34113.5063,4730.7407 Q34112.585,4730.7407 34111.6594,4730.5208 Q34110.7339,4730.3008 34109.8706,4729.8691 L34109.8706,4727.3374 Q34110.8501,4728.0347 34111.7673,4728.375 Q34112.6846,4728.7153 34113.5811,4728.7153 Q34114.4858,4728.7153 34114.9839,4728.3044 Q34115.4819,4727.8936 34115.4819,4727.1548 Q34115.4819,4726.5986 34115.1499,4726.1794 Q34114.8179,4725.7603 34114.187,4725.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="34134.25" y="4728.5352">statsCache</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33928" x2="34370" y1="4740" y2="4740"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33935" y="4748"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="33947" y="4754.6348">mu sync.RWMutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33935" y="4760.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="33947" y="4767.5898">modifyTime time.Time</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33935" y="4773.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="33947" y="4780.5449">tableRows</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="34004" y="4780.5449">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="34027" y="4780.5449">[int64]uint64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33935" y="4786.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="33947" y="4793.5">colLength</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="34003" y="4793.5">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="34026" y="4793.5">[tableHistID]uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33928" x2="34370" y1="4799.8203" y2="4799.8203"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33935" y="4807.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="33947" y="4814.4551">get(ctx sessionctx.Context) (</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="34103" y="4814.4551">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="34126" y="4814.4551">[int64]uint64,</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="34203" y="4814.4551">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="34226" y="4814.4551">[tableHistID]uint64, error)</text><!--MD5=[df7796e3206408457d2ab0e8cb28b46b]
class executor.tableHistID--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="73.9102" id="executor.tableHistID" style="stroke: #A80036; stroke-width: 1.5;" width="95" x="34406.5" y="4727.5"/><ellipse cx="34421.5" cy="4743.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34420.7334,4744.563 Q34418.8823,4743.8574 34418.2266,4743.0813 Q34417.5708,4742.3052 34417.5708,4740.9937 Q34417.5708,4739.3086 34418.6499,4738.3457 Q34419.729,4737.3828 34421.6133,4737.3828 Q34422.4683,4737.3828 34423.3232,4737.5779 Q34424.1782,4737.7729 34425.0166,4738.1548 L34425.0166,4740.5454 Q34424.228,4739.9893 34423.4146,4739.6987 Q34422.6011,4739.4082 34421.8042,4739.4082 Q34420.916,4739.4082 34420.4429,4739.7651 Q34419.9697,4740.1221 34419.9697,4740.7861 Q34419.9697,4741.3008 34420.3142,4741.637 Q34420.6587,4741.9731 34421.7544,4742.3799 L34422.8086,4742.7783 Q34424.3027,4743.3262 34425.0083,4744.231 Q34425.7139,4745.1357 34425.7139,4746.5137 Q34425.7139,4748.3896 34424.6057,4749.3152 Q34423.4976,4750.2407 34421.2563,4750.2407 Q34420.335,4750.2407 34419.4094,4750.0208 Q34418.4839,4749.8008 34417.6206,4749.3691 L34417.6206,4746.8374 Q34418.6001,4747.5347 34419.5173,4747.875 Q34420.4346,4748.2153 34421.3311,4748.2153 Q34422.2358,4748.2153 34422.7339,4747.8044 Q34423.2319,4747.3936 34423.2319,4746.6548 Q34423.2319,4746.0986 34422.8999,4745.6794 Q34422.5679,4745.2603 34421.937,4745.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="63" x="34435.5" y="4748.0352">tableHistID</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34407.5" x2="34500.5" y1="4759.5" y2="4759.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34414.5" y="4767.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="34426.5" y="4774.1348">tableID int64</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34414.5" y="4780.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="34426.5" y="4787.0898">histID int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34407.5" x2="34500.5" y1="4793.4102" y2="4793.4102"/><!--MD5=[39d8daf6ff2483a7a3206c6a99c97dbe]
class executor.tableResultHandler--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="151.6406" id="executor.tableResultHandler" style="stroke: #A80036; stroke-width: 1.5;" width="387" x="27855.5" y="1650"/><ellipse cx="27989.75" cy="1666" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27988.9834,1667.063 Q27987.1323,1666.3574 27986.4766,1665.5813 Q27985.8208,1664.8052 27985.8208,1663.4937 Q27985.8208,1661.8086 27986.8999,1660.8457 Q27987.979,1659.8828 27989.8633,1659.8828 Q27990.7183,1659.8828 27991.5732,1660.0779 Q27992.4282,1660.2729 27993.2666,1660.6548 L27993.2666,1663.0454 Q27992.478,1662.4893 27991.6646,1662.1987 Q27990.8511,1661.9082 27990.0542,1661.9082 Q27989.166,1661.9082 27988.6929,1662.2651 Q27988.2197,1662.6221 27988.2197,1663.2861 Q27988.2197,1663.8008 27988.5642,1664.137 Q27988.9087,1664.4731 27990.0044,1664.8799 L27991.0586,1665.2783 Q27992.5527,1665.8262 27993.2583,1666.731 Q27993.9639,1667.6357 27993.9639,1669.0137 Q27993.9639,1670.8896 27992.8557,1671.8152 Q27991.7476,1672.7407 27989.5063,1672.7407 Q27988.585,1672.7407 27987.6594,1672.5208 Q27986.7339,1672.3008 27985.8706,1671.8691 L27985.8706,1669.3374 Q27986.8501,1670.0347 27987.7673,1670.375 Q27988.6846,1670.7153 27989.5811,1670.7153 Q27990.4858,1670.7153 27990.9839,1670.3044 Q27991.4819,1669.8936 27991.4819,1669.1548 Q27991.4819,1668.5986 27991.1499,1668.1794 Q27990.8179,1667.7603 27990.187,1667.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="28010.25" y="1670.5352">tableResultHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27856.5" x2="28241.5" y1="1682" y2="1682"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27863.5" y="1690"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="27875.5" y="1696.6348">optionalResult distsql.SelectResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27863.5" y="1702.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="27875.5" y="1709.5898">result distsql.SelectResult</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27863.5" y="1715.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="27875.5" y="1722.5449">optionalFinished bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27856.5" x2="28241.5" y1="1728.8652" y2="1728.8652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27863.5" y="1736.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="27875.5" y="1743.5">open(optionalResult distsql.SelectResult, result distsql.SelectResult)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27863.5" y="1749.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="27875.5" y="1756.4551">nextChunk(ctx context.Context, chk *chunk.Chunk) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27863.5" y="1762.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="27875.5" y="1769.4102">nextRaw(ctx context.Context) ([]byte, error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="27878.5" y="1782.3652"/><ellipse cx="27866.5" cy="1791.6855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="27875.5" y="1795.3203">Close() error</text><!--MD5=[3ff43d4eecd0cd5eeeef3dffe0898b3e]
class executor.tableWorker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="177.5508" id="executor.tableWorker" style="stroke: #A80036; stroke-width: 1.5;" width="490" x="2696" y="2418.5"/><ellipse cx="2901.75" cy="2434.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2900.9834,2435.563 Q2899.1323,2434.8574 2898.4766,2434.0813 Q2897.8208,2433.3052 2897.8208,2431.9937 Q2897.8208,2430.3086 2898.8999,2429.3457 Q2899.979,2428.3828 2901.8633,2428.3828 Q2902.7183,2428.3828 2903.5732,2428.5779 Q2904.4282,2428.7729 2905.2666,2429.1548 L2905.2666,2431.5454 Q2904.478,2430.9893 2903.6646,2430.6987 Q2902.8511,2430.4082 2902.0542,2430.4082 Q2901.166,2430.4082 2900.6929,2430.7651 Q2900.2197,2431.1221 2900.2197,2431.7861 Q2900.2197,2432.3008 2900.5642,2432.637 Q2900.9087,2432.9731 2902.0044,2433.3799 L2903.0586,2433.7783 Q2904.5527,2434.3262 2905.2583,2435.231 Q2905.9639,2436.1357 2905.9639,2437.5137 Q2905.9639,2439.3896 2904.8557,2440.3152 Q2903.7476,2441.2407 2901.5063,2441.2407 Q2900.585,2441.2407 2899.6594,2441.0208 Q2898.7339,2440.8008 2897.8706,2440.3691 L2897.8706,2437.8374 Q2898.8501,2438.5347 2899.7673,2438.875 Q2900.6846,2439.2153 2901.5811,2439.2153 Q2902.4858,2439.2153 2902.9839,2438.8044 Q2903.4819,2438.3936 2903.4819,2437.6548 Q2903.4819,2437.0986 2903.1499,2436.6794 Q2902.8179,2436.2603 2902.187,2436.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="2922.25" y="2439.0352">tableWorker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2697" x2="3185" y1="2450.5" y2="2450.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2704" y="2458.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="2716" y="2465.1348">idxLookup *IndexLookUpExecutor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2704" y="2471.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="2716" y="2478.0898">workCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="2760" y="2478.0898">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="2789" y="2478.0898">*lookupTableTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2704" y="2484.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="2716" y="2491.0449">finished</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="2762" y="2491.0449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="2791" y="2491.0449"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="2791" y="2491.0449">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="2823" y="2491.0449">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2704" y="2497.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="2716" y="2504">keepOrder bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2704" y="2510.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2716" y="2516.9551">handleIdx int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2704" y="2523.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2716" y="2529.9102">memTracker *memory.Tracker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2697" x2="3185" y1="2536.2305" y2="2536.2305"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2704" y="2544.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2716" y="2550.8652">buildTblReader</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="2800" y="2550.8652">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="2824" y="2550.8652">(context.Context, []int64) (Executor, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2704" y="2557.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2716" y="2563.8203">pickAndExecTask(ctx context.Context)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2704" y="2570.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="464" x="2716" y="2576.7754">compareData(ctx context.Context, task *lookupTableTask, tableReader Executor) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2704" y="2583.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="2716" y="2589.7305">executeTask(ctx context.Context, task *lookupTableTask) error</text><!--MD5=[af9aa0aca4d9c513a227a088d8f54d66]
class executor.thresholdCheckInspection--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.thresholdCheckInspection" style="stroke: #A80036; stroke-width: 1.5;" width="614" x="34537" y="4708"/><ellipse cx="34766.25" cy="4724" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34765.4834,4725.063 Q34763.6323,4724.3574 34762.9766,4723.5813 Q34762.3208,4722.8052 34762.3208,4721.4937 Q34762.3208,4719.8086 34763.3999,4718.8457 Q34764.479,4717.8828 34766.3633,4717.8828 Q34767.2183,4717.8828 34768.0732,4718.0779 Q34768.9282,4718.2729 34769.7666,4718.6548 L34769.7666,4721.0454 Q34768.978,4720.4893 34768.1646,4720.1987 Q34767.3511,4719.9082 34766.5542,4719.9082 Q34765.666,4719.9082 34765.1929,4720.2651 Q34764.7197,4720.6221 34764.7197,4721.2861 Q34764.7197,4721.8008 34765.0642,4722.137 Q34765.4087,4722.4731 34766.5044,4722.8799 L34767.5586,4723.2783 Q34769.0527,4723.8262 34769.7583,4724.731 Q34770.4639,4725.6357 34770.4639,4727.0137 Q34770.4639,4728.8896 34769.3557,4729.8152 Q34768.2476,4730.7407 34766.0063,4730.7407 Q34765.085,4730.7407 34764.1594,4730.5208 Q34763.2339,4730.3008 34762.3706,4729.8691 L34762.3706,4727.3374 Q34763.3501,4728.0347 34764.2673,4728.375 Q34765.1846,4728.7153 34766.0811,4728.7153 Q34766.9858,4728.7153 34767.4839,4728.3044 Q34767.9819,4727.8936 34767.9819,4727.1548 Q34767.9819,4726.5986 34767.6499,4726.1794 Q34767.3179,4725.7603 34766.687,4725.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="147" x="34786.75" y="4728.5352">thresholdCheckInspection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34538" x2="35150" y1="4740" y2="4740"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="34538" x2="35150" y1="4748" y2="4748"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34545" y="4756"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="34557" y="4762.6348">inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34545" y="4768.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="569" x="34557" y="4775.5898">inspectThreshold1(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34545" y="4781.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="569" x="34557" y="4788.5449">inspectThreshold2(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34545" y="4794.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="569" x="34557" y="4801.5">inspectThreshold3(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34545" y="4807.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="588" x="34557" y="4814.4551">inspectForLeaderDrop(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><!--MD5=[9e1b84e7c9cbd10b146f736a6670fa52]
class executor.tidbGlueSession--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="216.416" id="executor.tidbGlueSession" style="stroke: #A80036; stroke-width: 1.5;" width="541" x="35186.5" y="4656.5"/><ellipse cx="35407.25" cy="4672.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35406.4834,4673.563 Q35404.6323,4672.8574 35403.9766,4672.0813 Q35403.3208,4671.3052 35403.3208,4669.9937 Q35403.3208,4668.3086 35404.3999,4667.3457 Q35405.479,4666.3828 35407.3633,4666.3828 Q35408.2183,4666.3828 35409.0732,4666.5779 Q35409.9282,4666.7729 35410.7666,4667.1548 L35410.7666,4669.5454 Q35409.978,4668.9893 35409.1646,4668.6987 Q35408.3511,4668.4082 35407.5542,4668.4082 Q35406.666,4668.4082 35406.1929,4668.7651 Q35405.7197,4669.1221 35405.7197,4669.7861 Q35405.7197,4670.3008 35406.0642,4670.637 Q35406.4087,4670.9731 35407.5044,4671.3799 L35408.5586,4671.7783 Q35410.0527,4672.3262 35410.7583,4673.231 Q35411.4639,4674.1357 35411.4639,4675.5137 Q35411.4639,4677.3896 35410.3557,4678.3152 Q35409.2476,4679.2407 35407.0063,4679.2407 Q35406.085,4679.2407 35405.1594,4679.0208 Q35404.2339,4678.8008 35403.3706,4678.3691 L35403.3706,4675.8374 Q35404.3501,4676.5347 35405.2673,4676.875 Q35406.1846,4677.2153 35407.0811,4677.2153 Q35407.9858,4677.2153 35408.4839,4676.8044 Q35408.9819,4676.3936 35408.9819,4675.6548 Q35408.9819,4675.0986 35408.6499,4674.6794 Q35408.3179,4674.2603 35407.687,4674.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="35427.75" y="4677.0352">tidbGlueSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35187.5" x2="35726.5" y1="4688.5" y2="4688.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35194.5" y="4696.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="35206.5" y="4703.1348">se sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35194.5" y="4709.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="35206.5" y="4716.0898">progress *brieTaskProgress</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35194.5" y="4722.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="35206.5" y="4729.0449">info *brieTaskInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35187.5" x2="35726.5" y1="4735.3652" y2="4735.3652"/><ellipse cx="35197.5" cy="4746.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="35206.5" y="4750">GetDomain(store kv.Storage) (*domain.Domain, error)</text><ellipse cx="35197.5" cy="4759.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="35206.5" y="4762.9551">CreateSession(store kv.Storage) (glue.Session, error)</text><ellipse cx="35197.5" cy="4772.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="35206.5" y="4775.9102">Execute(ctx context.Context, sql string) error</text><ellipse cx="35197.5" cy="4785.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="35206.5" y="4788.8652">CreateDatabase(ctx context.Context, schema *model.DBInfo) error</text><ellipse cx="35197.5" cy="4798.1855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="35206.5" y="4801.8203">CreateTable(ctx context.Context, dbName model.CIStr, table *model.TableInfo) error</text><ellipse cx="35197.5" cy="4811.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="35206.5" y="4814.7754">Close()</text><ellipse cx="35197.5" cy="4824.0957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="35206.5" y="4827.7305">Open( string,  client.SecurityOption) (kv.Storage, error)</text><ellipse cx="35197.5" cy="4837.0508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="35206.5" y="4840.6855">OwnsStorage() bool</text><ellipse cx="35197.5" cy="4850.0059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="35206.5" y="4853.6406">StartProgress(ctx context.Context, cmdName string, total int64, redirectLog bool) glue.Progress</text><ellipse cx="35197.5" cy="4862.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="35206.5" y="4866.5957">Record(name string, value uint64)</text><!--MD5=[a42c412d3d18156ca77f2317871ef41f]
class executor.toBeCheckedRow--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="112.7754" id="executor.toBeCheckedRow" style="stroke: #A80036; stroke-width: 1.5;" width="217" x="35762.5" y="4708"/><ellipse cx="35817.25" cy="4724" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35816.4834,4725.063 Q35814.6323,4724.3574 35813.9766,4723.5813 Q35813.3208,4722.8052 35813.3208,4721.4937 Q35813.3208,4719.8086 35814.3999,4718.8457 Q35815.479,4717.8828 35817.3633,4717.8828 Q35818.2183,4717.8828 35819.0732,4718.0779 Q35819.9282,4718.2729 35820.7666,4718.6548 L35820.7666,4721.0454 Q35819.978,4720.4893 35819.1646,4720.1987 Q35818.3511,4719.9082 35817.5542,4719.9082 Q35816.666,4719.9082 35816.1929,4720.2651 Q35815.7197,4720.6221 35815.7197,4721.2861 Q35815.7197,4721.8008 35816.0642,4722.137 Q35816.4087,4722.4731 35817.5044,4722.8799 L35818.5586,4723.2783 Q35820.0527,4723.8262 35820.7583,4724.731 Q35821.4639,4725.6357 35821.4639,4727.0137 Q35821.4639,4728.8896 35820.3557,4729.8152 Q35819.2476,4730.7407 35817.0063,4730.7407 Q35816.085,4730.7407 35815.1594,4730.5208 Q35814.2339,4730.3008 35813.3706,4729.8691 L35813.3706,4727.3374 Q35814.3501,4728.0347 35815.2673,4728.375 Q35816.1846,4728.7153 35817.0811,4728.7153 Q35817.9858,4728.7153 35818.4839,4728.3044 Q35818.9819,4727.8936 35818.9819,4727.1548 Q35818.9819,4726.5986 35818.6499,4726.1794 Q35818.3179,4725.7603 35817.687,4725.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="99" x="35837.75" y="4728.5352">toBeCheckedRow</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35763.5" x2="35978.5" y1="4740" y2="4740"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35770.5" y="4748"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="35782.5" y="4754.6348">row []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35770.5" y="4760.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="35782.5" y="4767.5898">rowValue []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35770.5" y="4773.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="35782.5" y="4780.5449">handleKey *keyValueWithDupInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35770.5" y="4786.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="35782.5" y="4793.5">uniqueKeys []*keyValueWithDupInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35770.5" y="4799.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="35782.5" y="4806.4551">t table.Table</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35763.5" x2="35978.5" y1="4812.7754" y2="4812.7754"/><!--MD5=[8ffd6e932ae5647c98e28b6ae43db7af]
class executor.topNChunkHeap--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="138.6855" id="executor.topNChunkHeap" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="33304" y="3593.5"/><ellipse cx="33400.25" cy="3609.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33399.4834,3610.563 Q33397.6323,3609.8574 33396.9766,3609.0813 Q33396.3208,3608.3052 33396.3208,3606.9937 Q33396.3208,3605.3086 33397.3999,3604.3457 Q33398.479,3603.3828 33400.3633,3603.3828 Q33401.2183,3603.3828 33402.0732,3603.5779 Q33402.9282,3603.7729 33403.7666,3604.1548 L33403.7666,3606.5454 Q33402.978,3605.9893 33402.1646,3605.6987 Q33401.3511,3605.4082 33400.5542,3605.4082 Q33399.666,3605.4082 33399.1929,3605.7651 Q33398.7197,3606.1221 33398.7197,3606.7861 Q33398.7197,3607.3008 33399.0642,3607.637 Q33399.4087,3607.9731 33400.5044,3608.3799 L33401.5586,3608.7783 Q33403.0527,3609.3262 33403.7583,3610.231 Q33404.4639,3611.1357 33404.4639,3612.5137 Q33404.4639,3614.3896 33403.3557,3615.3152 Q33402.2476,3616.2407 33400.0063,3616.2407 Q33399.085,3616.2407 33398.1594,3616.0208 Q33397.2339,3615.8008 33396.3706,3615.3691 L33396.3706,3612.8374 Q33397.3501,3613.5347 33398.2673,3613.875 Q33399.1846,3614.2153 33400.0811,3614.2153 Q33400.9858,3614.2153 33401.4839,3613.8044 Q33401.9819,3613.3936 33401.9819,3612.6548 Q33401.9819,3612.0986 33401.6499,3611.6794 Q33401.3179,3611.2603 33400.687,3611.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="33420.75" y="3614.0352">topNChunkHeap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33305" x2="33599" y1="3625.5" y2="3625.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="33305" x2="33599" y1="3633.5" y2="3633.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33312" y="3641.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="33324" y="3648.1348">greaterRow(rowI chunk.Row, rowJ chunk.Row) bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="33327" y="3661.0898"/><ellipse cx="33315" cy="3670.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="33324" y="3674.0449">Less(i int, j int) bool</text><ellipse cx="33315" cy="3683.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="33324" y="3687">Len() int</text><ellipse cx="33315" cy="3696.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="33324" y="3699.9551">Push(x</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="33364" y="3699.9551">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="33411" y="3699.9551">{})</text><ellipse cx="33315" cy="3709.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="33324" y="3712.9102">Pop()</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="33355" y="3712.9102">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="33402" y="3712.9102">{}</text><ellipse cx="33315" cy="3722.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="33324" y="3725.8652">Swap(i int, j int)</text><!--MD5=[b2ecafde9fa12116ec324909f975bddf]
class executor.unionWorkerResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.unionWorkerResult" style="stroke: #A80036; stroke-width: 1.5;" width="151" x="32332.5" y="5282.5"/><ellipse cx="32352.9" cy="5298.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32352.1334,5299.563 Q32350.2823,5298.8574 32349.6266,5298.0813 Q32348.9708,5297.3052 32348.9708,5295.9937 Q32348.9708,5294.3086 32350.0499,5293.3457 Q32351.129,5292.3828 32353.0133,5292.3828 Q32353.8683,5292.3828 32354.7232,5292.5779 Q32355.5782,5292.7729 32356.4166,5293.1548 L32356.4166,5295.5454 Q32355.628,5294.9893 32354.8146,5294.6987 Q32354.0011,5294.4082 32353.2042,5294.4082 Q32352.316,5294.4082 32351.8429,5294.7651 Q32351.3697,5295.1221 32351.3697,5295.7861 Q32351.3697,5296.3008 32351.7142,5296.637 Q32352.0587,5296.9731 32353.1544,5297.3799 L32354.2086,5297.7783 Q32355.7027,5298.3262 32356.4083,5299.231 Q32357.1139,5300.1357 32357.1139,5301.5137 Q32357.1139,5303.3896 32356.0057,5304.3152 Q32354.8976,5305.2407 32352.6563,5305.2407 Q32351.735,5305.2407 32350.8094,5305.0208 Q32349.8839,5304.8008 32349.0206,5304.3691 L32349.0206,5301.8374 Q32350.0001,5302.5347 32350.9173,5302.875 Q32351.8346,5303.2153 32352.7311,5303.2153 Q32353.6358,5303.2153 32354.1339,5302.8044 Q32354.6319,5302.3936 32354.6319,5301.6548 Q32354.6319,5301.0986 32354.2999,5300.6794 Q32353.9679,5300.2603 32353.337,5300.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="32368.1" y="5303.0352">unionWorkerResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32333.5" x2="32482.5" y1="5314.5" y2="5314.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32340.5" y="5322.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="32352.5" y="5329.1348">chk *chunk.Chunk</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32340.5" y="5335.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="32352.5" y="5342.0898">err error</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32340.5" y="5348.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="17" x="32352.5" y="5355.0449">src</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="32372.5" y="5355.0449">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="32401.5" y="5355.0449">*chunk.Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32333.5" x2="32482.5" y1="5361.3652" y2="5361.3652"/><!--MD5=[032e2ef6d007ca87fded5bac2981e883]
class executor.vecGroupChecker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="294.1465" id="executor.vecGroupChecker" style="stroke: #A80036; stroke-width: 1.5;" width="580" x="32519" y="5179"/><ellipse cx="32753.75" cy="5195" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32752.9834,5196.063 Q32751.1323,5195.3574 32750.4766,5194.5813 Q32749.8208,5193.8052 32749.8208,5192.4937 Q32749.8208,5190.8086 32750.8999,5189.8457 Q32751.979,5188.8828 32753.8633,5188.8828 Q32754.7183,5188.8828 32755.5732,5189.0779 Q32756.4282,5189.2729 32757.2666,5189.6548 L32757.2666,5192.0454 Q32756.478,5191.4893 32755.6646,5191.1987 Q32754.8511,5190.9082 32754.0542,5190.9082 Q32753.166,5190.9082 32752.6929,5191.2651 Q32752.2197,5191.6221 32752.2197,5192.2861 Q32752.2197,5192.8008 32752.5642,5193.137 Q32752.9087,5193.4731 32754.0044,5193.8799 L32755.0586,5194.2783 Q32756.5527,5194.8262 32757.2583,5195.731 Q32757.9639,5196.6357 32757.9639,5198.0137 Q32757.9639,5199.8896 32756.8557,5200.8152 Q32755.7476,5201.7407 32753.5063,5201.7407 Q32752.585,5201.7407 32751.6594,5201.5208 Q32750.7339,5201.3008 32749.8706,5200.8691 L32749.8706,5198.3374 Q32750.8501,5199.0347 32751.7673,5199.375 Q32752.6846,5199.7153 32753.5811,5199.7153 Q32754.4858,5199.7153 32754.9839,5199.3044 Q32755.4819,5198.8936 32755.4819,5198.1548 Q32755.4819,5197.5986 32755.1499,5197.1794 Q32754.8179,5196.7603 32754.187,5196.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="102" x="32774.25" y="5199.5352">vecGroupChecker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32520" x2="33098" y1="5211" y2="5211"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="32539" y="5225.6348">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5231.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="32539" y="5238.5898">groupOffset []int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5244.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="32539" y="5251.5449">groupCount int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5257.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="32539" y="5264.5">nextGroupID int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5270.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="32539" y="5277.4551">lastGroupKeyOfPrevChk []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5283.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="32539" y="5290.4102">firstGroupKey []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5296.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="32539" y="5303.3652">lastGroupKey []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5309.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="32539" y="5316.3203">firstRowDatums []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5322.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="32539" y="5329.2754">lastRowDatums []types.Datum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5335.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="32539" y="5342.2305">sameGroup []bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="32542" y="5355.1855"/><ellipse cx="32530" cy="5364.5059" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="32539" y="5368.1406">GroupByItems []expression.Expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32520" x2="33098" y1="5374.4609" y2="5374.4609"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5382.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="32539" y="5389.0957">allocateBuffer</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="32615" y="5389.0957">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="32639" y="5389.0957">(types.EvalType, int) (*chunk.Column, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5395.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="32539" y="5402.0508">releaseBuffer</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="32612" y="5402.0508">func</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="32636" y="5402.0508">(*chunk.Column)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5408.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="32539" y="5415.0059">splitIntoGroups(chk *chunk.Chunk) (bool, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5421.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="32539" y="5427.9609">evalGroupItemsAndResolveGroups(item expression.Expression, chk *chunk.Chunk, numRows int) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5434.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="32539" y="5440.916">getNextGroup() int</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5447.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="32539" y="5453.8711">isExhausted() bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32527" y="5460.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="32539" y="5466.8262">reset()</text><!--MD5=[3e6cd5c62cf608e7baecf84a3490dadb]
class executor.versionInspection--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="60.9551" id="executor.versionInspection" style="stroke: #A80036; stroke-width: 1.5;" width="522" x="33134" y="5295.5"/><ellipse cx="33341.25" cy="5311.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33340.4834,5312.563 Q33338.6323,5311.8574 33337.9766,5311.0813 Q33337.3208,5310.3052 33337.3208,5308.9937 Q33337.3208,5307.3086 33338.3999,5306.3457 Q33339.479,5305.3828 33341.3633,5305.3828 Q33342.2183,5305.3828 33343.0732,5305.5779 Q33343.9282,5305.7729 33344.7666,5306.1548 L33344.7666,5308.5454 Q33343.978,5307.9893 33343.1646,5307.6987 Q33342.3511,5307.4082 33341.5542,5307.4082 Q33340.666,5307.4082 33340.1929,5307.7651 Q33339.7197,5308.1221 33339.7197,5308.7861 Q33339.7197,5309.3008 33340.0642,5309.637 Q33340.4087,5309.9731 33341.5044,5310.3799 L33342.5586,5310.7783 Q33344.0527,5311.3262 33344.7583,5312.231 Q33345.4639,5313.1357 33345.4639,5314.5137 Q33345.4639,5316.3896 33344.3557,5317.3152 Q33343.2476,5318.2407 33341.0063,5318.2407 Q33340.085,5318.2407 33339.1594,5318.0208 Q33338.2339,5317.8008 33337.3706,5317.3691 L33337.3706,5314.8374 Q33338.3501,5315.5347 33339.2673,5315.875 Q33340.1846,5316.2153 33341.0811,5316.2153 Q33341.9858,5316.2153 33342.4839,5315.8044 Q33342.9819,5315.3936 33342.9819,5314.6548 Q33342.9819,5314.0986 33342.6499,5313.6794 Q33342.3179,5313.2603 33341.687,5313.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="99" x="33361.75" y="5316.0352">versionInspection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33135" x2="33655" y1="5327.5" y2="5327.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="33135" x2="33655" y1="5335.5" y2="5335.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33142" y="5343.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="496" x="33154" y="5350.1348">inspect(_ context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult</text><!--MD5=[c6eb362250bce951a690fc6f7ecef6b3]
class executor.visibleChecker--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="138.6855" id="executor.visibleChecker" style="stroke: #A80036; stroke-width: 1.5;" width="212" x="33691" y="5256.5"/><ellipse cx="33751.25" cy="5272.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33750.4834,5273.563 Q33748.6323,5272.8574 33747.9766,5272.0813 Q33747.3208,5271.3052 33747.3208,5269.9937 Q33747.3208,5268.3086 33748.3999,5267.3457 Q33749.479,5266.3828 33751.3633,5266.3828 Q33752.2183,5266.3828 33753.0732,5266.5779 Q33753.9282,5266.7729 33754.7666,5267.1548 L33754.7666,5269.5454 Q33753.978,5268.9893 33753.1646,5268.6987 Q33752.3511,5268.4082 33751.5542,5268.4082 Q33750.666,5268.4082 33750.1929,5268.7651 Q33749.7197,5269.1221 33749.7197,5269.7861 Q33749.7197,5270.3008 33750.0642,5270.637 Q33750.4087,5270.9731 33751.5044,5271.3799 L33752.5586,5271.7783 Q33754.0527,5272.3262 33754.7583,5273.231 Q33755.4639,5274.1357 33755.4639,5275.5137 Q33755.4639,5277.3896 33754.3557,5278.3152 Q33753.2476,5279.2407 33751.0063,5279.2407 Q33750.085,5279.2407 33749.1594,5279.0208 Q33748.2339,5278.8008 33747.3706,5278.3691 L33747.3706,5275.8374 Q33748.3501,5276.5347 33749.2673,5276.875 Q33750.1846,5277.2153 33751.0811,5277.2153 Q33751.9858,5277.2153 33752.4839,5276.8044 Q33752.9819,5276.3936 33752.9819,5275.6548 Q33752.9819,5275.0986 33752.6499,5274.6794 Q33752.3179,5274.2603 33751.687,5274.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="33771.75" y="5277.0352">visibleChecker</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33692" x2="33902" y1="5288.5" y2="5288.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33699" y="5296.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="33711" y="5303.1348">defaultDB string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33699" y="5309.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="33711" y="5316.0898">ctx sessionctx.Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33699" y="5322.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="33711" y="5329.0449">is infoschema.InfoSchema</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33699" y="5335.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="33711" y="5342">manager privilege.Manager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33699" y="5348.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="33711" y="5354.9551">ok bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33692" x2="33902" y1="5361.2754" y2="5361.2754"/><ellipse cx="33702" cy="5372.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="33711" y="5375.9102">Enter(in ast.Node) (ast.Node, bool)</text><ellipse cx="33702" cy="5385.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="33711" y="5388.8652">Leave(in ast.Node) (ast.Node, bool)</text><!--MD5=[dba5d60311aeb60c048c0699ce5672a9]
class executor.windowProcessor--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="86.8652" id="executor.windowProcessor" style="stroke: #A80036; stroke-width: 1.5;" width="662" x="2002" y="745.5"/><ellipse cx="2279.25" cy="761.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2275.6777,757.7651 L2275.6777,755.6069 L2283.0571,755.6069 L2283.0571,757.7651 L2280.5918,757.7651 L2280.5918,765.8418 L2283.0571,765.8418 L2283.0571,768 L2275.6777,768 L2275.6777,765.8418 L2278.1431,765.8418 L2278.1431,757.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="2299.75" y="766.0352">windowProcessor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2003" x2="2663" y1="777.5" y2="777.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2003" x2="2663" y1="785.5" y2="785.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="793.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="2022" y="800.1348">consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="806.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="636" x="2022" y="813.0898">appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2010" y="819.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2022" y="826.0449">resetPartialResult()</text><!--MD5=[7baae2508bcdb5fe1341c52eb1aedf17]
class executor.fontcolorbluemapfontint64fontcolorbluemapfontint64typesDatum--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.fontcolorbluemapfontint64fontcolorbluemapfontint64typesDatum" style="stroke: #A80036; stroke-width: 1.5;" width="241" x="1193.5" y="765"/><ellipse cx="1208.5" cy="781" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1210.9731,787.1431 Q1210.3921,787.4419 1209.7529,787.5913 Q1209.1138,787.7407 1208.4082,787.7407 Q1205.9014,787.7407 1204.5815,786.0889 Q1203.2617,784.437 1203.2617,781.3159 Q1203.2617,778.1865 1204.5815,776.5347 Q1205.9014,774.8828 1208.4082,774.8828 Q1209.1138,774.8828 1209.7612,775.0322 Q1210.4087,775.1816 1210.9731,775.4805 L1210.9731,778.2031 Q1210.3423,777.6221 1209.7488,777.3523 Q1209.1553,777.0825 1208.5244,777.0825 Q1207.1797,777.0825 1206.4949,778.1492 Q1205.8101,779.2158 1205.8101,781.3159 Q1205.8101,783.4077 1206.4949,784.4744 Q1207.1797,785.541 1208.5244,785.541 Q1209.1553,785.541 1209.7488,785.2712 Q1210.3423,785.0015 1210.9731,784.4204 Z "/><text fill="#0000FF" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="26" x="1222.5" y="785.5352">map</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="1248.5" y="785.5352">[int64]</text><text fill="#0000FF" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="26" x="1286.5" y="785.5352">map</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="1312.5" y="785.5352">[int64][]types.Datum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1194.5" x2="1433.5" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1194.5" x2="1433.5" y1="805" y2="805"/><!--MD5=[22921464f6598829658c9dd21e05f61f]
class executor.v1Range--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.v1Range" style="stroke: #A80036; stroke-width: 1.5;" width="86" x="1072" y="765"/><ellipse cx="1087" cy="781" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1089.4731,787.1431 Q1088.8921,787.4419 1088.2529,787.5913 Q1087.6138,787.7407 1086.9082,787.7407 Q1084.4014,787.7407 1083.0815,786.0889 Q1081.7617,784.437 1081.7617,781.3159 Q1081.7617,778.1865 1083.0815,776.5347 Q1084.4014,774.8828 1086.9082,774.8828 Q1087.6138,774.8828 1088.2612,775.0322 Q1088.9087,775.1816 1089.4731,775.4805 L1089.4731,778.2031 Q1088.8423,777.6221 1088.2488,777.3523 Q1087.6553,777.0825 1087.0244,777.0825 Q1085.6797,777.0825 1084.9949,778.1492 Q1084.3101,779.2158 1084.3101,781.3159 Q1084.3101,783.4077 1084.9949,784.4744 Q1085.6797,785.541 1087.0244,785.541 Q1087.6553,785.541 1088.2488,785.2712 Q1088.8423,785.0015 1089.4731,784.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="1101" y="785.5352">v1.Range</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1073" x2="1157" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1073" x2="1157" y1="805" y2="805"/><!--MD5=[9e3f56082b2460a2fbc31ae9efcc650b]
class executor.fontcolorbluefuncfonttypesDatumerror--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.fontcolorbluefuncfonttypesDatumerror" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="835" y="765"/><ellipse cx="850" cy="781" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M852.4731,787.1431 Q851.8921,787.4419 851.2529,787.5913 Q850.6138,787.7407 849.9082,787.7407 Q847.4014,787.7407 846.0815,786.0889 Q844.7617,784.437 844.7617,781.3159 Q844.7617,778.1865 846.0815,776.5347 Q847.4014,774.8828 849.9082,774.8828 Q850.6138,774.8828 851.2612,775.0322 Q851.9087,775.1816 852.4731,775.4805 L852.4731,778.2031 Q851.8423,777.6221 851.2488,777.3523 Q850.6553,777.0825 850.0244,777.0825 Q848.6797,777.0825 847.9949,778.1492 Q847.3101,779.2158 847.3101,781.3159 Q847.3101,783.4077 847.9949,784.4744 Q848.6797,785.541 850.0244,785.541 Q850.6553,785.541 851.2488,785.2712 Q851.8423,785.0015 852.4731,784.4204 Z "/><text fill="#0000FF" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="864" y="785.5352">func</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="146" x="888" y="785.5352">() ([][]types.Datum, error)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="836" x2="1036" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="836" x2="1036" y1="805" y2="805"/><!--MD5=[58b6bd268f329ebc6c7c4c020adafa30]
class executor.fontcolorbluemapfontstringaggfuncsPartialResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.fontcolorbluemapfontstringaggfuncsPartialResult" style="stroke: #A80036; stroke-width: 1.5;" width="232" x="568" y="765"/><ellipse cx="583" cy="781" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M585.4731,787.1431 Q584.8921,787.4419 584.2529,787.5913 Q583.6138,787.7407 582.9082,787.7407 Q580.4014,787.7407 579.0815,786.0889 Q577.7617,784.437 577.7617,781.3159 Q577.7617,778.1865 579.0815,776.5347 Q580.4014,774.8828 582.9082,774.8828 Q583.6138,774.8828 584.2612,775.0322 Q584.9087,775.1816 585.4731,775.4805 L585.4731,778.2031 Q584.8423,777.6221 584.2488,777.3523 Q583.6553,777.0825 583.0244,777.0825 Q581.6797,777.0825 580.9949,778.1492 Q580.3101,779.2158 580.3101,781.3159 Q580.3101,783.4077 580.9949,784.4744 Q581.6797,785.541 583.0244,785.541 Q583.6553,785.541 584.2488,785.2712 Q584.8423,785.0015 585.4731,784.4204 Z "/><text fill="#0000FF" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="26" x="597" y="785.5352">map</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="174" x="623" y="785.5352">[string][]aggfuncs.PartialResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="569" x2="799" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="569" x2="799" y1="805" y2="805"/><!--MD5=[1c9cd74b484100ebe544f8d1da889205]
class executor.<font color=blue>func</font>([]byte, []byte) error--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.&lt;font color=blue&gt;func&lt;/font&gt;([]byte, []byte) error" style="stroke: #A80036; stroke-width: 1.5;" width="171" x="361.5" y="765"/><ellipse cx="376.5" cy="781" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M378.9731,787.1431 Q378.3921,787.4419 377.7529,787.5913 Q377.1138,787.7407 376.4082,787.7407 Q373.9014,787.7407 372.5815,786.0889 Q371.2617,784.437 371.2617,781.3159 Q371.2617,778.1865 372.5815,776.5347 Q373.9014,774.8828 376.4082,774.8828 Q377.1138,774.8828 377.7612,775.0322 Q378.4087,775.1816 378.9731,775.4805 L378.9731,778.2031 Q378.3423,777.6221 377.7488,777.3523 Q377.1553,777.0825 376.5244,777.0825 Q375.1797,777.0825 374.4949,778.1492 Q373.8101,779.2158 373.8101,781.3159 Q373.8101,783.4077 374.4949,784.4744 Q375.1797,785.541 376.5244,785.541 Q377.1553,785.541 377.7488,785.2712 Q378.3423,785.0015 378.9731,784.4204 Z "/><text fill="#0000FF" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="390.5" y="785.5352">func</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="414.5" y="785.5352">([]byte, []byte) error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="362.5" x2="531.5" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="362.5" x2="531.5" y1="805" y2="805"/><!--MD5=[769c6dcd951ae1d2a694746052fa24e1]
class executor.[]logStreamResult--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="executor.[]logStreamResult" style="stroke: #A80036; stroke-width: 1.5;" width="132" x="194" y="765"/><ellipse cx="209" cy="781" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M211.4731,787.1431 Q210.8921,787.4419 210.2529,787.5913 Q209.6138,787.7407 208.9082,787.7407 Q206.4014,787.7407 205.0815,786.0889 Q203.7617,784.437 203.7617,781.3159 Q203.7617,778.1865 205.0815,776.5347 Q206.4014,774.8828 208.9082,774.8828 Q209.6138,774.8828 210.2612,775.0322 Q210.9087,775.1816 211.4731,775.4805 L211.4731,778.2031 Q210.8423,777.6221 210.2488,777.3523 Q209.6553,777.0825 209.0244,777.0825 Q207.6797,777.0825 206.9949,778.1492 Q206.3101,779.2158 206.3101,781.3159 Q206.3101,783.4077 206.9949,784.4744 Q207.6797,785.541 209.0244,785.541 Q209.6553,785.541 210.2488,785.2712 Q210.8423,785.0015 211.4731,784.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="223" y="785.5352">[]logStreamResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="195" x2="325" y1="797" y2="797"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="195" x2="325" y1="805" y2="805"/><!--MD5=[846474a38fd6df804b7440e9b431daa5]
class ast.ChangeStmt--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="ast.ChangeStmt" style="stroke: #A80036; stroke-width: 1.5;" width="100" x="38" y="1702"/><ellipse cx="53" cy="1718" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M55.4731,1724.1431 Q54.8921,1724.4419 54.2529,1724.5913 Q53.6138,1724.7407 52.9082,1724.7407 Q50.4014,1724.7407 49.0815,1723.0889 Q47.7617,1721.437 47.7617,1718.3159 Q47.7617,1715.1865 49.0815,1713.5347 Q50.4014,1711.8828 52.9082,1711.8828 Q53.6138,1711.8828 54.2612,1712.0322 Q54.9087,1712.1816 55.4731,1712.4805 L55.4731,1715.2031 Q54.8423,1714.6221 54.2488,1714.3523 Q53.6553,1714.0825 53.0244,1714.0825 Q51.6797,1714.0825 50.9949,1715.1492 Q50.3101,1716.2158 50.3101,1718.3159 Q50.3101,1720.4077 50.9949,1721.4744 Q51.6797,1722.541 53.0244,1722.541 Q53.6553,1722.541 54.2488,1722.2712 Q54.8423,1722.0015 55.4731,1721.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="67" y="1722.5352">ChangeStmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="137" y1="1734" y2="1734"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="137" y1="1742" y2="1742"/><!--MD5=[8005f9e088aacc281e64632c065d370b]
class sync.Mutex--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="sync.Mutex" style="stroke: #A80036; stroke-width: 1.5;" width="67" x="21115.5" y="59"/><ellipse cx="21130.5" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M21132.9731,81.1431 Q21132.3921,81.4419 21131.7529,81.5913 Q21131.1138,81.7407 21130.4082,81.7407 Q21127.9014,81.7407 21126.5815,80.0889 Q21125.2617,78.437 21125.2617,75.3159 Q21125.2617,72.1865 21126.5815,70.5347 Q21127.9014,68.8828 21130.4082,68.8828 Q21131.1138,68.8828 21131.7612,69.0322 Q21132.4087,69.1816 21132.9731,69.4805 L21132.9731,72.2031 Q21132.3423,71.6221 21131.7488,71.3523 Q21131.1553,71.0825 21130.5244,71.0825 Q21129.1797,71.0825 21128.4949,72.1492 Q21127.8101,73.2158 21127.8101,75.3159 Q21127.8101,77.4077 21128.4949,78.4744 Q21129.1797,79.541 21130.5244,79.541 Q21131.1553,79.541 21131.7488,79.2712 Q21132.3423,79.0015 21132.9731,78.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="21144.5" y="79.5352">Mutex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21116.5" x2="21181.5" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="21116.5" x2="21181.5" y1="99" y2="99"/><!--MD5=[6e68a66c33fb1fbda3cab14d572b61b6]
class core.Plan--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="core.Plan" style="stroke: #A80036; stroke-width: 1.5;" width="56" x="4067" y="59"/><ellipse cx="4082" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4084.4731,81.1431 Q4083.8921,81.4419 4083.2529,81.5913 Q4082.6138,81.7407 4081.9082,81.7407 Q4079.4014,81.7407 4078.0815,80.0889 Q4076.7617,78.437 4076.7617,75.3159 Q4076.7617,72.1865 4078.0815,70.5347 Q4079.4014,68.8828 4081.9082,68.8828 Q4082.6138,68.8828 4083.2612,69.0322 Q4083.9087,69.1816 4084.4731,69.4805 L4084.4731,72.2031 Q4083.8423,71.6221 4083.2488,71.3523 Q4082.6553,71.0825 4082.0244,71.0825 Q4080.6797,71.0825 4079.9949,72.1492 Q4079.3101,73.2158 4079.3101,75.3159 Q4079.3101,77.4077 4079.9949,78.4744 Q4080.6797,79.541 4082.0244,79.541 Q4082.6553,79.541 4083.2488,79.2712 Q4083.8423,79.0015 4084.4731,78.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="4096" y="79.5352">Plan</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4068" x2="4122" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4068" x2="4122" y1="99" y2="99"/><!--MD5=[8e343f574602637a6ceb187ca840d734]
class core.PhysicalPlan--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="core.PhysicalPlan" style="stroke: #A80036; stroke-width: 1.5;" width="101" x="4158.5" y="59"/><ellipse cx="4173.5" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4175.9731,81.1431 Q4175.3921,81.4419 4174.7529,81.5913 Q4174.1138,81.7407 4173.4082,81.7407 Q4170.9014,81.7407 4169.5815,80.0889 Q4168.2617,78.437 4168.2617,75.3159 Q4168.2617,72.1865 4169.5815,70.5347 Q4170.9014,68.8828 4173.4082,68.8828 Q4174.1138,68.8828 4174.7612,69.0322 Q4175.4087,69.1816 4175.9731,69.4805 L4175.9731,72.2031 Q4175.3423,71.6221 4174.7488,71.3523 Q4174.1553,71.0825 4173.5244,71.0825 Q4172.1797,71.0825 4171.4949,72.1492 Q4170.8101,73.2158 4170.8101,75.3159 Q4170.8101,77.4077 4171.4949,78.4744 Q4172.1797,79.541 4173.5244,79.541 Q4174.1553,79.541 4174.7488,79.2712 Q4175.3423,79.0015 4175.9731,78.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="4187.5" y="79.5352">PhysicalPlan</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4159.5" x2="4258.5" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4159.5" x2="4258.5" y1="99" y2="99"/><!--MD5=[efcc96742e82f72507832cc2bfe58ec8]
class __builtin__.byte--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="__builtin__.byte" style="stroke: #A80036; stroke-width: 1.5;" width="57" x="25691.5" y="59"/><ellipse cx="25706.5" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25708.9731,81.1431 Q25708.3921,81.4419 25707.7529,81.5913 Q25707.1138,81.7407 25706.4082,81.7407 Q25703.9014,81.7407 25702.5815,80.0889 Q25701.2617,78.437 25701.2617,75.3159 Q25701.2617,72.1865 25702.5815,70.5347 Q25703.9014,68.8828 25706.4082,68.8828 Q25707.1138,68.8828 25707.7612,69.0322 Q25708.4087,69.1816 25708.9731,69.4805 L25708.9731,72.2031 Q25708.3423,71.6221 25707.7488,71.3523 Q25707.1553,71.0825 25706.5244,71.0825 Q25705.1797,71.0825 25704.4949,72.1492 Q25703.8101,73.2158 25703.8101,75.3159 Q25703.8101,77.4077 25704.4949,78.4744 Q25705.1797,79.541 25706.5244,79.541 Q25707.1553,79.541 25707.7488,79.2712 Q25708.3423,79.0015 25708.9731,78.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="25" x="25720.5" y="79.5352">byte</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25692.5" x2="25747.5" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25692.5" x2="25747.5" y1="99" y2="99"/><!--MD5=[2236f6c5d9deadb4f6bceeb4cf3ac6c7]
class __builtin__.int--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="__builtin__.int" style="stroke: #A80036; stroke-width: 1.5;" width="46" x="25610" y="59"/><ellipse cx="25625" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25627.4731,81.1431 Q25626.8921,81.4419 25626.2529,81.5913 Q25625.6138,81.7407 25624.9082,81.7407 Q25622.4014,81.7407 25621.0815,80.0889 Q25619.7617,78.437 25619.7617,75.3159 Q25619.7617,72.1865 25621.0815,70.5347 Q25622.4014,68.8828 25624.9082,68.8828 Q25625.6138,68.8828 25626.2612,69.0322 Q25626.9087,69.1816 25627.4731,69.4805 L25627.4731,72.2031 Q25626.8423,71.6221 25626.2488,71.3523 Q25625.6553,71.0825 25625.0244,71.0825 Q25623.6797,71.0825 25622.9949,72.1492 Q25622.3101,73.2158 25622.3101,75.3159 Q25622.3101,77.4077 25622.9949,78.4744 Q25623.6797,79.541 25625.0244,79.541 Q25625.6553,79.541 25626.2488,79.2712 Q25626.8423,79.0015 25627.4731,78.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="14" x="25639" y="79.5352">int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25611" x2="25655" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25611" x2="25655" y1="99" y2="99"/><!--MD5=[708beb641bcb0eff76b4c6674ee2f355]
class __builtin__.int64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="__builtin__.int64" style="stroke: #A80036; stroke-width: 1.5;" width="62" x="25784" y="59"/><ellipse cx="25799" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25801.4731,81.1431 Q25800.8921,81.4419 25800.2529,81.5913 Q25799.6138,81.7407 25798.9082,81.7407 Q25796.4014,81.7407 25795.0815,80.0889 Q25793.7617,78.437 25793.7617,75.3159 Q25793.7617,72.1865 25795.0815,70.5347 Q25796.4014,68.8828 25798.9082,68.8828 Q25799.6138,68.8828 25800.2612,69.0322 Q25800.9087,69.1816 25801.4731,69.4805 L25801.4731,72.2031 Q25800.8423,71.6221 25800.2488,71.3523 Q25799.6553,71.0825 25799.0244,71.0825 Q25797.6797,71.0825 25796.9949,72.1492 Q25796.3101,73.2158 25796.3101,75.3159 Q25796.3101,77.4077 25796.9949,78.4744 Q25797.6797,79.541 25799.0244,79.541 Q25799.6553,79.541 25800.2488,79.2712 Q25800.8423,79.0015 25801.4731,78.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="25813" y="79.5352">int64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25785" x2="25845" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25785" x2="25845" y1="99" y2="99"/><!--MD5=[f4b0a476a318806863263f0fa6013cbe]
class __builtin__.uint32--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="__builtin__.uint32" style="stroke: #A80036; stroke-width: 1.5;" width="69" x="25985.5" y="59"/><ellipse cx="26000.5" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26002.9731,81.1431 Q26002.3921,81.4419 26001.7529,81.5913 Q26001.1138,81.7407 26000.4082,81.7407 Q25997.9014,81.7407 25996.5815,80.0889 Q25995.2617,78.437 25995.2617,75.3159 Q25995.2617,72.1865 25996.5815,70.5347 Q25997.9014,68.8828 26000.4082,68.8828 Q26001.1138,68.8828 26001.7612,69.0322 Q26002.4087,69.1816 26002.9731,69.4805 L26002.9731,72.2031 Q26002.3423,71.6221 26001.7488,71.3523 Q26001.1553,71.0825 26000.5244,71.0825 Q25999.1797,71.0825 25998.4949,72.1492 Q25997.8101,73.2158 25997.8101,75.3159 Q25997.8101,77.4077 25998.4949,78.4744 Q25999.1797,79.541 26000.5244,79.541 Q26001.1553,79.541 26001.7488,79.2712 Q26002.3423,79.0015 26002.9731,78.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="26014.5" y="79.5352">uint32</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25986.5" x2="26053.5" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25986.5" x2="26053.5" y1="99" y2="99"/><!--MD5=[f4e606473052357ce13c8337ac632a40]
class __builtin__.uint64--><rect fill="#FEFECE" filter="url(#f1tg7zncdo8f11)" height="48" id="__builtin__.uint64" style="stroke: #A80036; stroke-width: 1.5;" width="69" x="25881.5" y="59"/><ellipse cx="25896.5" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25898.9731,81.1431 Q25898.3921,81.4419 25897.7529,81.5913 Q25897.1138,81.7407 25896.4082,81.7407 Q25893.9014,81.7407 25892.5815,80.0889 Q25891.2617,78.437 25891.2617,75.3159 Q25891.2617,72.1865 25892.5815,70.5347 Q25893.9014,68.8828 25896.4082,68.8828 Q25897.1138,68.8828 25897.7612,69.0322 Q25898.4087,69.1816 25898.9731,69.4805 L25898.9731,72.2031 Q25898.3423,71.6221 25897.7488,71.3523 Q25897.1553,71.0825 25896.5244,71.0825 Q25895.1797,71.0825 25894.4949,72.1492 Q25893.8101,73.2158 25893.8101,75.3159 Q25893.8101,77.4077 25894.4949,78.4744 Q25895.1797,79.541 25896.5244,79.541 Q25897.1553,79.541 25897.7488,79.2712 Q25898.3423,79.0015 25898.9731,78.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="25910.5" y="79.5352">uint64</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25882.5" x2="25949.5" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25882.5" x2="25949.5" y1="99" y2="99"/><!--MD5=[a3fcac0375599289aa8a8b9c9c18c909]
reverse link aggfuncs.approxCountDistinctPartial2 to aggfuncs.approxCountDistinctFinal--><path d="M69339,3706.88 C69339,3772.66 69339,3896.82 69339,3953.69 " fill="none" id="aggfuncs.approxCountDistinctPartial2&lt;-aggfuncs.approxCountDistinctFinal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="69339,3693.77,69335,3699.77,69339,3705.77,69343,3699.77,69339,3693.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[49f1610a511d678e2ed2e00d837e121c]
reverse link aggfuncs.baseApproxCountDistinct to aggfuncs.approxCountDistinctOriginal--><path d="M66558.18,1786.8 C66607,1851.98 66695,1952.73 66799,1996 C67029.6,2091.94 68828.08,1933.98 69046,2056 C69216.55,2151.49 69304.18,2392.4 69330.39,2476.76 " fill="none" id="aggfuncs.baseApproxCountDistinct&lt;-aggfuncs.approxCountDistinctOriginal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="66550.39,1776.26,66550.733,1783.4629,66557.5138,1785.9167,66557.1708,1778.7137,66550.39,1776.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[37d5bf440705d94b2bfa1a84ea440f1c]
reverse link aggfuncs.approxCountDistinctOriginal to aggfuncs.approxCountDistinctPartial1--><path d="M69339,2551.28 C69339,2687.65 69339,3109.97 69339,3226.15 " fill="none" id="aggfuncs.approxCountDistinctOriginal&lt;-aggfuncs.approxCountDistinctPartial1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="69339,2538.26,69335,2544.26,69339,2550.26,69343,2544.26,69339,2538.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[68b103be999445eacd9cf411541b4f36]
reverse link aggfuncs.approxCountDistinctPartial1 to aggfuncs.approxCountDistinctPartial2--><path d="M69339,3300.75 C69339,3383.03 69339,3561.51 69339,3632.25 " fill="none" id="aggfuncs.approxCountDistinctPartial1&lt;-aggfuncs.approxCountDistinctPartial2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="69339,3287.71,69335,3293.71,69339,3299.71,69343,3293.71,69339,3287.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6a5ddcfb3f720bb7bbb21d40f26c3406]
reverse link aggfuncs.baseAvgDecimal to aggfuncs.avgOriginal4Decimal--><path d="M53884,1782.88 C53884,1936.39 53884,2360.8 53884,2476.84 " fill="none" id="aggfuncs.baseAvgDecimal&lt;-aggfuncs.avgOriginal4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="53884,1769.74,53880,1775.74,53884,1781.74,53888,1775.74,53884,1769.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bc71cbbb77e19c3ad9e844a7bb26af18]
reverse link aggfuncs.baseAggFunc to aggfuncs.avgOriginal4DistinctDecimal--><path d="M51172.75,835.15 C50782.35,915.49 49999.36,1108.37 49421,1456 C49321.36,1515.89 49228.21,1616.26 49177.58,1676 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.avgOriginal4DistinctDecimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51185.62,832.52,51178.9409,829.8017,51173.8628,834.9216,51180.5419,837.6399,51185.62,832.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[968df27cf7c2b778b361139136119c90]
reverse link aggfuncs.baseAggFunc to aggfuncs.avgOriginal4DistinctFloat64--><path d="M51278.28,836.95 C51014.91,930.93 50424.66,1158.88 49988,1456 C49892.83,1520.76 49799.18,1617.69 49746.76,1675.8 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.avgOriginal4DistinctFloat64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51290.57,832.58,51283.5761,830.8233,51279.2646,836.6035,51286.2585,838.3602,51290.57,832.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9914fe4cda3c8ccb24b40107788f0011]
reverse link aggfuncs.baseAvgFloat64 to aggfuncs.avgOriginal4Float64--><path d="M55016,1782.88 C55016,1936.39 55016,2360.8 55016,2476.84 " fill="none" id="aggfuncs.baseAvgFloat64&lt;-aggfuncs.avgOriginal4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="55016,1769.74,55012,1775.74,55016,1781.74,55020,1775.74,55016,1769.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ac7a026485acdb1d1d65639761636f23]
reverse link aggfuncs.baseAvgDecimal to aggfuncs.avgPartial4Decimal--><path d="M53933.44,1779.44 C53992.05,1842.72 54091.32,1953.42 54167,2056 C54275.57,2203.16 54385.49,2392.17 54429.72,2470.27 " fill="none" id="aggfuncs.baseAvgDecimal&lt;-aggfuncs.avgPartial4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="53924.39,1769.7,53925.5448,1776.818,53932.5595,1778.4898,53931.4047,1771.3717,53924.39,1769.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[773bed010339d11321b1fb050b897c2d]
reverse link aggfuncs.baseAvgFloat64 to aggfuncs.avgPartial4Float64--><path d="M55065.44,1779.44 C55124.05,1842.72 55223.32,1953.42 55299,2056 C55407.57,2203.16 55517.49,2392.17 55561.72,2470.27 " fill="none" id="aggfuncs.baseAvgFloat64&lt;-aggfuncs.avgPartial4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="55056.39,1769.7,55057.5448,1776.818,55064.5595,1778.4898,55063.4047,1771.3717,55056.39,1769.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[12bc81f1a47e223d987749ca02f9c00f]
reverse link aggfuncs.baseAggFunc to aggfuncs.baseApproxCountDistinct--><path d="M51419.19,846.13 C51431.88,970.74 51481.69,1269.43 51672,1396 C51840.43,1508.02 66048.44,1380.25 66236,1456 C66346.37,1500.58 66437.96,1611.28 66484.31,1675.93 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.baseApproxCountDistinct" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51417.92,832.87,51414.5118,839.2249,51419.067,844.8151,51422.4752,838.4602,51417.92,832.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8364b668c4d3e89cd012bdedb0bfe65d]
reverse link aggfuncs.baseAggFunc to aggfuncs.baseAvgDecimal--><path d="M51420.19,845.75 C51434.84,968.29 51488.32,1260.91 51672,1396 C51781.2,1476.31 52144.64,1438.12 52279,1456 C52773.66,1521.82 53349.76,1624.87 53659.45,1682.44 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.baseAvgDecimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51418.7,832.7,51415.4049,839.1143,51420.0585,844.6229,51423.3535,838.2086,51418.7,832.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9196c992d91339dea8bae68e513a3bf7]
reverse link aggfuncs.baseAggFunc to aggfuncs.baseAvgFloat64--><path d="M51419.38,845.86 C51432.43,969.92 51482.96,1267.54 51672,1396 C51786.63,1473.9 54029.29,1433.2 54166,1456 C54444.25,1502.41 54757.12,1619.08 54914.29,1682.44 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.baseAvgFloat64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51418.06,832.66,51414.6797,839.0297,51419.2593,844.5999,51422.6396,838.2302,51418.06,832.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[889b2abffd7d550ad395460f8a502fb6]
reverse link aggfuncs.baseAggFunc to aggfuncs.baseBitAggFunc--><path d="M51419.31,845.96 C51432.22,970.23 51482.48,1268.25 51672,1396 C51755.53,1452.31 55198.05,1443.46 55298,1456 C55663.84,1501.9 56083.44,1618.93 56294.54,1682.44 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.baseBitAggFunc" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51418.01,832.74,51414.6157,839.1023,51419.1832,844.6825,51422.5774,838.3202,51418.01,832.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8063b9e990536b16dd8a2ba49a4dfb73]
reverse link aggfuncs.baseAggFunc to aggfuncs.baseCount--><path d="M51419.24,846.06 C51432.03,970.51 51482.04,1268.89 51672,1396 C51743.09,1443.57 57744.51,1453.43 57830,1456 C59780.49,1514.61 62128.47,1658.35 62905.88,1707.89 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.baseCount" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51417.96,832.81,51414.5595,839.169,51419.1214,844.7537,51422.5219,838.3947,51417.96,832.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[017a75864489cc5c9f0254e3b935d2f5]
reverse link aggfuncs.baseAggFunc to aggfuncs.baseGroupConcat4String--><path d="M51346.24,840.47 C51198.99,949.2 50843.53,1215.26 50560,1456 C50485.66,1519.12 50404.43,1594.81 50346.72,1649.8 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.baseGroupConcat4String" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51356.9,832.6,51349.6971,832.943,51347.2433,839.7238,51354.4463,839.3808,51356.9,832.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[61b9a2ee0c6eab84d8a47e6c110e5d35]
reverse link aggfuncs.baseAggFunc to aggfuncs.baseLeadLag--><path d="M51162.99,830.58 C50436.96,945.4 48277.16,1272.23 46470,1396 C46245.67,1411.36 42631.19,1371.05 42423,1456 C42316.15,1499.6 42226.25,1604.18 42178.02,1669.35 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.baseLeadLag" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51175.94,828.53,51169.3861,825.5222,51164.089,830.4151,51170.6429,833.4229,51175.94,828.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5ec2a7e38ec439b8ca38ade6868c1f77]
reverse link aggfuncs.valueEvaluator to aggfuncs.baseLeadLag--><path d="M39851.64,830.29 C40147.75,931.12 40948.58,1200.32 41625,1396 C41727.31,1425.6 41763.87,1404.33 41857,1456 C41955.69,1510.76 42045.72,1608.08 42096.6,1669.43 " fill="none" id="aggfuncs.valueEvaluator&lt;-aggfuncs.baseLeadLag" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="39839.2,826.05,39843.5855,831.7743,39850.5562,829.9277,39846.1707,824.2035,39839.2,826.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[aec73095660903afd024c3c7557d1a02]
reverse link aggfuncs.baseAggFunc to aggfuncs.baseMaxMinAggFunc--><path d="M51349.79,841.17 C51222.25,944.4 50938.07,1190.53 50775,1456 C50726.19,1535.46 50698.3,1643.75 50686.98,1695.33 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.baseMaxMinAggFunc" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51360.16,832.8,51352.9785,833.4531,51350.8193,840.3333,51358.0007,839.6802,51360.16,832.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7181eed3248998a2a68ade5b226f05cc]
reverse link aggfuncs.baseSumAggFunc to aggfuncs.baseSum4Float64--><path d="M57141.55,1758.45 C57065.43,1818.48 56887.72,1947.75 56713,1996 C56516.01,2050.4 53213.04,1955.68 53035,2056 C52881.3,2142.6 52799.42,2350.75 52767.74,2450.87 " fill="none" id="aggfuncs.baseSumAggFunc&lt;-aggfuncs.baseSum4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="57152.04,1750.11,57144.8541,1750.7125,57142.6465,1757.5773,57149.8323,1756.9749,57152.04,1750.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[66212920249ada5374282f0d2dba9465]
reverse link aggfuncs.baseAggFunc to aggfuncs.baseSumAggFunc--><path d="M51419.26,846.03 C51432.09,970.42 51482.18,1268.69 51672,1396 C51788.3,1474 56577.93,1419.02 56713,1456 C56896.42,1506.22 57082.96,1646.26 57152.05,1701.84 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.baseSumAggFunc" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51417.97,832.79,51414.5695,839.149,51419.1314,844.7337,51422.5319,838.3747,51417.97,832.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[43c901e7ff4544e5a08ce958d7562baf]
reverse link aggfuncs.baseAggFunc to aggfuncs.baseVarPopAggFunc--><path d="M51426.83,845.66 C51453.44,959.93 51527.32,1224.67 51672,1396 C51802.39,1550.41 52023.84,1657.37 52128.26,1701.87 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.baseVarPopAggFunc" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51423.89,832.81,51421.3294,839.5512,51426.5671,844.5076,51429.1277,837.7664,51423.89,832.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a1432e9fdc068a8458a26bc37c0d5316]
reverse link aggfuncs.baseBitAggFunc to aggfuncs.bitAndUint64--><path d="M56451.05,1782.22 C56503.83,1927.59 56646.01,2319.22 56696.18,2457.4 " fill="none" id="aggfuncs.baseBitAggFunc&lt;-aggfuncs.bitAndUint64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="56446.52,1769.74,56444.8047,1776.7441,56450.6103,1781.0214,56452.3256,1774.0172,56446.52,1769.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c8874ea0eda946cd5c6d214afb0ac1ca]
reverse link aggfuncs.baseBitAggFunc to aggfuncs.bitOrUint64--><path d="M56548.19,1774.79 C56670.86,1829.15 56863.81,1927.31 56997,2056 C57130.18,2184.68 57228.34,2388.13 57264.64,2470.3 " fill="none" id="aggfuncs.baseBitAggFunc&lt;-aggfuncs.bitOrUint64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="56536.17,1769.51,56540.0541,1775.5857,56547.1563,1774.3371,56543.2722,1768.2615,56536.17,1769.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0b4c7b15f6f6419fb936ff121f515dd8]
reverse link aggfuncs.baseBitAggFunc to aggfuncs.bitXorUint64--><path d="M56410.96,1782.19 C56356.41,1932.45 56206.32,2345.86 56161.08,2470.48 " fill="none" id="aggfuncs.baseBitAggFunc&lt;-aggfuncs.bitXorUint64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="56415.48,1769.74,56409.6744,1774.0172,56411.3897,1781.0214,56417.1953,1776.7441,56415.48,1769.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[52d67f2ce41d8db67cad74aeb3016233]
reverse link aggfuncs.baseCount to aggfuncs.countOriginal4Decimal--><path d="M63447.41,1766 C63874.69,1824.67 64720.03,1935.24 65441,1996 C65573.25,2007.15 66514.45,1998.35 66634,2056 C66826.02,2148.6 66964.6,2380.73 67012.58,2470.38 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginal4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="63434.26,1764.19,63439.6593,1768.9699,63446.1482,1765.8243,63440.7489,1761.0444,63434.26,1764.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2ed7bcd908301b96bbc6d857654d2fa8]
reverse link aggfuncs.baseCount to aggfuncs.countOriginal4Duration--><path d="M63447.27,1767.8 C63874.36,1828.84 64719.45,1942.48 65441,1996 C65661.38,2012.35 67228.99,1962.01 67429,2056 C67622.18,2146.78 67760.3,2380.53 67807.86,2470.48 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginal4Duration" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="63434.13,1765.92,63439.5025,1770.73,63446.0089,1767.6207,63440.6363,1762.8108,63434.13,1765.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2231556bd3a69f9216c9db4346ef6379]
reverse link aggfuncs.baseCount to aggfuncs.countOriginal4Int--><path d="M63447.21,1768.57 C63874.23,1830.63 64719.23,1945.59 65441,1996 C65595.27,2006.77 68083.76,1990.83 68224,2056 C68417.57,2145.95 68555.46,2380.19 68602.91,2470.38 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginal4Int" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="63434.07,1766.66,63439.432,1771.4817,63445.9451,1768.3866,63440.5831,1763.5649,63434.07,1766.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4d997cd12801eaa50bbd5f39e3aff5cb]
reverse link aggfuncs.baseCount to aggfuncs.countOriginal4JSON--><path d="M63216.26,1779.95 C63345.85,1928.28 63710.11,2345.23 63819.53,2470.48 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginal4JSON" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="63207.34,1769.74,63208.2726,1776.8905,63215.2318,1778.7799,63214.2992,1771.6294,63207.34,1769.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6b1f9492975dd0e8f1c663e0dcbadf1e]
reverse link aggfuncs.baseCount to aggfuncs.countOriginal4Real--><path d="M63447.11,1768.14 C63676.28,1811.91 64002.88,1897.48 64249,2056 C64426.26,2170.17 64571.23,2385.13 64624.29,2470.36 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginal4Real" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="63434.22,1765.7,63439.3726,1770.7449,63446.0112,1767.929,63440.8586,1762.8841,63434.22,1765.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7997477da288b71858ed542030265ac7]
reverse link aggfuncs.baseCount to aggfuncs.countOriginal4String--><path d="M63447.12,1752.97 C63899.87,1799.14 64774.78,1905.01 65044,2056 C65228.8,2159.64 65370.41,2382.68 65420.92,2470.2 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginal4String" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="63434.18,1751.66,63439.7447,1756.2463,63446.1185,1752.8736,63440.5538,1748.2873,63434.18,1751.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[71e97fe9ff9efcf21ac09dc6660f4e2b]
reverse link aggfuncs.baseCount to aggfuncs.countOriginal4Time--><path d="M63447.51,1759.91 C64125.44,1840.48 65812.61,2042.08 65839,2056 C66026.85,2155.13 66167.16,2381.84 66216.61,2470.25 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginal4Time" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="63434.15,1758.32,63439.6331,1763.0035,63446.0653,1759.7435,63440.5821,1755.06,63434.15,1758.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[53dbf2a4e70582ff84e1326446a0825a]
reverse link aggfuncs.baseCount to aggfuncs.countOriginalWithDistinct--><path d="M62892.51,1745.14 C62415.24,1780.84 61463.69,1873.18 61189,2056 C61039.83,2155.28 60954.23,2362.8 60921.51,2457.5 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginalWithDistinct" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="62905.79,1744.15,62899.5119,1740.6024,62893.8225,1745.0331,62900.1006,1748.5807,62905.79,1744.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[05ba41044c2be5cd45b0b0b73479a464]
reverse link aggfuncs.baseCount to aggfuncs.countOriginalWithDistinct4Decimal--><path d="M62892.84,1765.86 C62534.63,1820.37 61935.42,1927.42 61755,2056 C61609.64,2159.59 61522.47,2363.5 61488.47,2457.24 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginalWithDistinct4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="62905.75,1763.9,62899.2164,1760.8485,62893.8867,1765.7059,62900.4203,1768.7574,62905.75,1763.9" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b5d42a602270069c32a944f7d69f5a9b]
reverse link aggfuncs.baseCount to aggfuncs.countOriginalWithDistinct4Duration--><path d="M62944.7,1772.71 C62760.91,1819.11 62502.83,1905.99 62321,2056 C62184.21,2168.86 62093.42,2365.83 62056.57,2457.27 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginalWithDistinct4Duration" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="62957.53,1769.51,62950.7384,1767.0865,62945.8891,1772.4235,62952.6807,1774.8471,62957.53,1769.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4fdbdf5e2cc30dfabac0272641595fdc]
reverse link aggfuncs.baseCount to aggfuncs.countOriginalWithDistinct4Int--><path d="M63120.56,1779.44 C63061.95,1842.72 62962.68,1953.42 62887,2056 C62784.05,2195.54 62679.89,2372.72 62631.67,2457.27 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginalWithDistinct4Int" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="63129.61,1769.7,63122.5953,1771.3717,63121.4405,1778.4898,63128.4552,1776.818,63129.61,1769.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dd647fea708f8c99b1cde33e87eb77e7]
reverse link aggfuncs.baseCount to aggfuncs.countOriginalWithDistinct4Real--><path d="M63170,1783.1 C63170,1929.17 63170,2319.49 63170,2457.4 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginalWithDistinct4Real" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="63170,1769.74,63166,1775.74,63170,1781.74,63174,1775.74,63170,1769.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c3ceef97a851d3b5ade7289e2c58cbd0]
reverse link aggfuncs.baseCount to aggfuncs.countOriginalWithDistinct4String--><path d="M62892.68,1742.49 C62174.83,1784.5 60295.08,1907.53 60057,2056 C59904.56,2151.06 59820.4,2361.72 59788.76,2457.45 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countOriginalWithDistinct4String" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="62905.78,1741.72,62899.5571,1738.0764,62893.8004,1742.4193,62900.0233,1746.0628,62905.78,1741.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e7f2a94611a65d51de65fcadbbd51f5f]
reverse link aggfuncs.baseCount to aggfuncs.countPartial--><path d="M62892.83,1733.42 C62312.91,1751.51 60994.5,1818.31 60623,2056 C60464.67,2157.3 60379.23,2382.22 60350.85,2470.21 " fill="none" id="aggfuncs.baseCount&lt;-aggfuncs.countPartial" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="62905.97,1733.02,62899.8456,1729.2131,62893.9761,1733.4022,62900.1005,1737.2091,62905.97,1733.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c8e034590b398286ef778f6c7ff8027f]
reverse link aggfuncs.baseAggFunc to aggfuncs.cumeDist--><path d="M51162.67,804.4 C50290.27,857.33 47410.1,1058.92 46585,1456 C46478.57,1507.22 46385.91,1613.34 46337.58,1675.9 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.cumeDist" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51175.68,803.62,51169.4491,799.9901,51163.702,804.3455,51169.9328,807.9755,51175.68,803.62" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86c9b196091d18ebb66db67137d5f568]
reverse link aggfuncs.rowComparer to aggfuncs.cumeDist--><path d="M46302,845.78 C46302,1014.28 46302,1516.26 46302,1675.77 " fill="none" id="aggfuncs.rowComparer&lt;-aggfuncs.cumeDist" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="46302,832.6,46298,838.6,46302,844.6,46306,838.6,46302,832.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f26ff4be9dafe219b3c473ca53901455]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstRow4Decimal--><path d="M51410.21,846.01 C51400.56,960.5 51378.52,1229.66 51365,1456 C51363.21,1485.98 51362.56,1975.1 51341,1996 C51250.6,2083.63 46918.78,1994.37 46809,2056 C46655.17,2142.36 46573.35,2350.63 46541.72,2450.82 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstRow4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51411.33,832.82,51406.8368,838.4601,51410.3149,844.777,51414.8081,839.1369,51411.33,832.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a6205489df910b978324a5febc9e764]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstRow4Duration--><path d="M51413.9,846.07 C51409.17,1081.09 51389.82,1975.65 51369,1996 C51289.64,2073.55 47471.7,2001.59 47375,2056 C47221.25,2142.5 47139.39,2350.7 47107.73,2450.85 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstRow4Duration" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51414.17,832.82,51410.0521,838.7397,51413.9327,844.8177,51418.0506,838.8979,51414.17,832.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[68836eb0f0e5606b1f61ebcea4f0975d]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstRow4Enum--><path d="M51416.72,845.74 C51423.61,1077.5 51446.9,1954.7 51406,1996 C51270.53,2132.81 48108.69,1961.41 47941,2056 C47787.35,2142.68 47705.44,2350.79 47673.75,2450.88 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstRow4Enum" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51416.33,832.67,51412.5097,838.786,51416.6859,844.6647,51420.5062,838.5487,51416.33,832.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0663fa145ce85dcd1b872cdc04712ff1]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstRow4Float32--><path d="M51418.49,845.73 C51432.71,1077.44 51483.69,1954.47 51443,1996 C51328.82,2112.53 48648.97,1975.62 48507,2056 C48353.48,2142.92 48271.51,2350.91 48239.78,2450.93 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstRow4Float32" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51417.68,832.67,51414.0569,838.9048,51418.4187,844.6472,51422.0418,838.4124,51417.68,832.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[94c9ede01b38c432660a2c45bb8d3d39]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstRow4Float64--><path d="M51422.7,845.73 C51453.33,1071.87 51561.02,1912.94 51480,1996 C51386.6,2091.76 49189.25,1989.84 49073,2056 C48919.68,2143.26 48837.61,2351.09 48805.82,2451 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstRow4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51420.92,832.65,51417.7613,839.1325,51422.5302,844.5415,51425.6889,838.059,51420.92,832.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c1897fdc4b8888fa9925e2490ec7beb7]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstRow4Int--><path d="M51426.4,845.37 C51449.18,959.13 51499.62,1227.69 51517,1456 C51521.55,1515.83 51558.74,1952.9 51517,1996 C51371.75,2145.96 49820.08,1952.1 49639,2056 C49486.19,2143.68 49403.98,2350.82 49372,2450.71 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstRow4Int" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51423.83,832.59,51421.0959,839.2627,51426.2037,844.3529,51428.9378,837.6802,51423.83,832.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6ec9b6241b6c40995bdb00a46d582e9e]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstRow4JSON--><path d="M51430.64,845.51 C51461.72,959 51530.28,1226.29 51554,1456 C51560.16,1515.68 51595.47,1952.64 51554,1996 C51450.29,2104.42 50334.67,1980.52 50205,2056 C50052.74,2144.64 49970.26,2351.3 49938.11,2450.89 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstRow4JSON" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51427.13,832.76,51424.8628,839.6054,51430.3097,844.3311,51432.5769,837.4856,51427.13,832.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[256d4a6732f20b0f1b117c2067b3de85]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstRow4Set--><path d="M51434.82,845.22 C51474.15,958.09 51560.89,1224.18 51591,1456 C51598.73,1515.5 51631.85,1952.05 51591,1996 C51466.61,2129.83 50927.57,1961.83 50771,2056 C50620.22,2146.69 50537.13,2351.87 50504.49,2450.93 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstRow4Set" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51430.49,832.86,51428.6992,839.8452,51434.4583,844.1849,51436.2491,837.1997,51430.49,832.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0b376f1167095cdffb364345b7fb0051]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstRow4String--><path d="M51438.96,844.78 C51486.52,956.85 51591.42,1221.55 51628,1456 C51637.25,1515.28 51665.9,1949.49 51628,1996 C51544.58,2098.37 51445.49,1980.72 51337,2056 C51193.39,2155.65 51107.45,2354.17 51072.4,2450.91 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstRow4String" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51433.72,832.51,51432.3947,839.5983,51438.4279,843.5479,51439.7533,836.4596,51433.72,832.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c8eee993ecbd6b5801b74c36bd93cd1e]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstRow4Time--><path d="M51443.34,844.75 C51499.22,956.16 51621.95,1218.82 51665,1456 C51733.09,1831.16 51660.11,2293.46 51630.94,2450.95 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstRow4Time" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51437.34,832.86,51436.4702,840.0185,51442.7434,843.5746,51443.6133,836.4162,51437.34,832.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fb8bd59f85e04aa37d89e6f57195613c]
reverse link aggfuncs.baseAggFunc to aggfuncs.firstValue--><path d="M51419.25,846.04 C51432.06,970.47 51482.11,1268.8 51672,1396 C51801.06,1482.45 57120.05,1397.6 57264,1456 C57370.94,1499.38 57460.81,1604.04 57509.01,1669.28 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.firstValue" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51417.96,832.8,51414.5595,839.159,51419.1214,844.7437,51422.5219,838.3847,51417.96,832.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e29c7dbb7445232478fc31a039c8303b]
reverse link aggfuncs.baseGroupConcat4String to aggfuncs.groupConcat--><path d="M50208.4,1812.68 C50157.57,1876.59 50078.67,1958.99 49987,1996 C49715.62,2105.58 39706.74,1913.69 39451,2056 C39300.07,2139.99 39218.64,2341.65 39185.7,2444.26 " fill="none" id="aggfuncs.baseGroupConcat4String&lt;-aggfuncs.groupConcat" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50216.63,1802.19,50209.7809,1804.4459,50209.229,1811.6359,50216.0781,1809.38,50216.63,1802.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3f8232d822cf3f41ea659126bfed2310]
reverse link aggfuncs.baseGroupConcat4String to aggfuncs.groupConcatDistinct--><path d="M50208.41,1812.69 C50157.57,1876.6 50078.68,1959 49987,1996 C49701.02,2111.42 39154.5,1906.08 38885,2056 C38730.83,2141.76 38649.18,2350.32 38617.65,2450.71 " fill="none" id="aggfuncs.baseGroupConcat4String&lt;-aggfuncs.groupConcatDistinct" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50216.63,1802.19,50209.7809,1804.4459,50209.229,1811.6359,50216.0781,1809.38,50216.63,1802.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4e1be465d42ae574477415f36698bb3b]
reverse link aggfuncs.baseGroupConcat4String to aggfuncs.groupConcatDistinctOrder--><path d="M50208.4,1812.67 C50157.56,1876.58 50078.67,1958.97 49987,1996 C49730.21,2099.73 40258.98,1921.29 40017,2056 C39862.86,2141.81 39781.19,2350.35 39749.66,2450.72 " fill="none" id="aggfuncs.baseGroupConcat4String&lt;-aggfuncs.groupConcatDistinctOrder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50216.63,1802.18,50209.7804,1804.4346,50209.2272,1811.6245,50216.0768,1809.3698,50216.63,1802.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[29bd9b8d3fe9c38e39d4aecc48fdb976]
reverse link aggfuncs.baseGroupConcat4String to aggfuncs.groupConcatOrder--><path d="M50208.4,1812.66 C50157.55,1876.56 50078.66,1958.95 49987,1996 C49744.81,2093.89 40811.22,1928.9 40583,2056 C40435.13,2138.35 40353.95,2333.64 40319.75,2437.99 " fill="none" id="aggfuncs.baseGroupConcat4String&lt;-aggfuncs.groupConcatOrder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50216.62,1802.17,50209.7689,1804.42,50209.2108,1811.6095,50216.0619,1809.3595,50216.62,1802.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a82f1f90a6618f2b23bbe7fc10011e35]
reverse link aggfuncs.baseAggFunc to aggfuncs.jsonObjectAgg--><path d="M51309.88,838.46 C51125.89,929.66 50749.69,1145.9 50588,1456 C50532.39,1562.65 50638.65,1913.63 50551,1996 C50455.84,2085.43 41263.09,1992.46 41149,2056 C40994.88,2141.84 40913.2,2350.36 40881.66,2450.72 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.jsonObjectAgg" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51321.72,832.64,51314.57,831.7034,51310.9554,837.9431,51318.1054,838.8798,51321.72,832.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a147cd68787f25b53219c320c648778]
reverse link aggfuncs.baseLeadLag to aggfuncs.lag--><path d="M42094.01,1793.28 C42044.22,1858.69 41958.22,1954.71 41857,1996 C41646.02,2082.07 37954.52,1944.16 37756,2056 C37587.58,2150.89 37505.96,2392.18 37481.86,2476.7 " fill="none" id="aggfuncs.baseLeadLag&lt;-aggfuncs.lag" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="42101.98,1782.65,42095.18,1785.05,42094.78,1792.25,42101.58,1789.85,42101.98,1782.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[aa14ea0ad76e6cf67da52c63ef2cf53b]
reverse link aggfuncs.baseAggFunc to aggfuncs.lastValue--><path d="M51419.19,846.13 C51431.87,970.75 51481.68,1269.44 51672,1396 C51846.95,1512.34 66604.05,1377.68 66799,1456 C66906.24,1499.08 66996.17,1604.1 67044.27,1669.44 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.lastValue" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51417.92,832.87,51414.5118,839.2249,51419.067,844.8151,51422.4752,838.4602,51417.92,832.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ddfb7eeb2a10ad3ccf371404d9eb7e58]
reverse link aggfuncs.baseLeadLag to aggfuncs.lead--><path d="M42093.99,1793.23 C42044.19,1858.6 41958.17,1954.59 41857,1996 C41675.07,2070.47 38490.16,1959.31 38319,2056 C38150.69,2151.08 38069,2392.25 38044.87,2476.72 " fill="none" id="aggfuncs.baseLeadLag&lt;-aggfuncs.lead" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="42101.97,1782.61,42095.1663,1784.9995,42094.7552,1792.1989,42101.5589,1789.8094,42101.97,1782.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5f3e7f0e28d895ad80ab3db17ce7ce47]
reverse link aggfuncs.baseMaxMinAggFunc to aggfuncs.maxMin4Decimal--><path d="M50678.72,1770.07 C50672.85,1832 50652,1944.43 50578,1996 C50354.61,2151.7 45914.5,1922.82 45677,2056 C45523.13,2142.29 45441.33,2350.59 45409.71,2450.81 " fill="none" id="aggfuncs.baseMaxMinAggFunc&lt;-aggfuncs.maxMin4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50679.81,1756.93,50675.3292,1762.58,50678.8211,1768.8892,50683.3019,1763.2392,50679.81,1756.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[606f7dd46b6f4df17923e2afed0a5e78]
reverse link aggfuncs.baseMaxMinAggFunc to aggfuncs.maxMin4Duration--><path d="M50678.71,1770.05 C50672.83,1831.97 50651.95,1944.37 50578,1996 C50380.51,2133.88 46452.99,1938.03 46243,2056 C46089.2,2142.41 46007.36,2350.65 45975.72,2450.83 " fill="none" id="aggfuncs.baseMaxMinAggFunc&lt;-aggfuncs.maxMin4Duration" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50679.8,1756.92,50675.3192,1762.57,50678.8111,1768.8792,50683.2919,1763.2292,50679.8,1756.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f8b2460f219376d4c71ec3452c46ab18]
reverse link aggfuncs.baseMaxMinAggFunc to aggfuncs.maxMin4Float32--><path d="M50678.8,1769.64 C50673.04,1831.54 50652.33,1944.5 50578,1996 C50375.63,2136.22 41930.07,1936.17 41715,2056 C41560.89,2141.87 41479.21,2350.38 41447.66,2450.73 " fill="none" id="aggfuncs.baseMaxMinAggFunc&lt;-aggfuncs.maxMin4Float32" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50679.87,1756.52,50675.3953,1762.1749,50678.8942,1768.4803,50683.3688,1762.8254,50679.87,1756.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c6e3d961d8f553374d4cd4633c571c60]
reverse link aggfuncs.baseMaxMinAggFunc to aggfuncs.maxMin4Float64--><path d="M50678.8,1769.64 C50673.04,1831.53 50652.32,1944.48 50578,1996 C50388.59,2127.31 42482.31,1943.77 42281,2056 C42126.91,2141.9 42045.22,2350.4 42013.67,2450.73 " fill="none" id="aggfuncs.baseMaxMinAggFunc&lt;-aggfuncs.maxMin4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50679.86,1756.52,50675.3853,1762.1749,50678.8842,1768.4803,50683.3588,1762.8254,50679.86,1756.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3229d55fb56feecaee7916c69bd180d2]
reverse link aggfuncs.baseMaxMinAggFunc to aggfuncs.maxMin4Int--><path d="M50678.79,1769.63 C50673.03,1831.52 50652.3,1944.46 50578,1996 C50401.54,2118.4 43034.55,1951.38 42847,2056 C42692.93,2141.94 42611.23,2350.42 42579.67,2450.74 " fill="none" id="aggfuncs.baseMaxMinAggFunc&lt;-aggfuncs.maxMin4Int" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50679.86,1756.52,50675.3853,1762.1749,50678.8842,1768.4803,50683.3588,1762.8254,50679.86,1756.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b88ea76bf5282fcc236f47f27b9c871]
reverse link aggfuncs.baseMaxMinAggFunc to aggfuncs.maxMin4JSON--><path d="M50678.79,1769.63 C50673.02,1831.51 50652.29,1944.44 50578,1996 C50414.49,2109.49 43586.79,1958.99 43413,2056 C43258.96,2141.99 43177.24,2350.44 43145.68,2450.75 " fill="none" id="aggfuncs.baseMaxMinAggFunc&lt;-aggfuncs.maxMin4JSON" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50679.86,1756.51,50675.3853,1762.1649,50678.8842,1768.4703,50683.3588,1762.8154,50679.86,1756.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ab0bc03a5f9709ed139cab2e8933f234]
reverse link aggfuncs.baseMaxMinAggFunc to aggfuncs.maxMin4String--><path d="M50678.78,1769.62 C50673.01,1831.49 50652.27,1944.41 50578,1996 C50427.44,2100.58 44139.03,1966.59 43979,2056 C43828.22,2140.24 43746.71,2341.79 43713.73,2444.32 " fill="none" id="aggfuncs.baseMaxMinAggFunc&lt;-aggfuncs.maxMin4String" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50679.85,1756.51,50675.3753,1762.1649,50678.8742,1768.4703,50683.3488,1762.8154,50679.85,1756.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b5ed1d81378269009f02ccad767994dc]
reverse link aggfuncs.baseMaxMinAggFunc to aggfuncs.maxMin4Time--><path d="M50678.78,1769.61 C50672.99,1831.47 50652.25,1944.38 50578,1996 C50440.4,2091.67 44691.27,1974.2 44545,2056 C44391.03,2142.11 44309.28,2350.5 44277.69,2450.77 " fill="none" id="aggfuncs.baseMaxMinAggFunc&lt;-aggfuncs.maxMin4Time" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50679.85,1756.5,50675.3753,1762.1549,50678.8742,1768.4603,50683.3488,1762.8054,50679.85,1756.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7cbd8b938af410c2e35f499ee1f7092b]
reverse link aggfuncs.baseMaxMinAggFunc to aggfuncs.maxMin4Uint--><path d="M50678.73,1770.08 C50672.87,1832.03 50652.03,1944.48 50578,1996 C50453.35,2082.76 45243.51,1981.8 45111,2056 C44957.07,2142.19 44875.3,2350.54 44843.7,2450.79 " fill="none" id="aggfuncs.baseMaxMinAggFunc&lt;-aggfuncs.maxMin4Uint" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="50679.81,1756.94,50675.3292,1762.59,50678.8211,1768.8992,50683.3019,1763.2492,50679.81,1756.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bc3b316d4752f6b0fbfd96be0da8bfd7]
reverse link aggfuncs.baseAggFunc to aggfuncs.nthValue--><path d="M51162.95,816.72 C50435.9,896.74 48348.07,1148.06 47740,1456 C47641.85,1505.71 47554.19,1600.22 47503.05,1662.93 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.nthValue" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51175.92,815.29,51169.517,811.9732,51163.9926,816.6079,51170.3956,819.9248,51175.92,815.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f639efdcce0dfc330c7c74f3f0ec3ed1]
reverse link aggfuncs.baseAggFunc to aggfuncs.ntile--><path d="M51162.61,796.8 C50609.31,821.38 49261.47,934.62 48289,1456 C48190.56,1508.78 48103.37,1607.41 48054.74,1669.46 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.ntile" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51175.93,796.22,51169.7641,792.4809,51163.941,796.7344,51170.107,800.4735,51175.93,796.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cd4bc82b2b06621dbeed3dfd9fd940d3]
reverse link aggfuncs.partialResult4AvgDecimal to aggfuncs.partialResult4AvgDistinctDecimal--><path d="M42551,839.16 C42551,1007.93 42551,1560.76 42551,1695.29 " fill="none" id="aggfuncs.partialResult4AvgDecimal&lt;-aggfuncs.partialResult4AvgDistinctDecimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="42551,826.08,42547,832.08,42551,838.08,42555,832.08,42551,826.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6ebeb20a0ff2a1dce9aa2fa79fb938d0]
reverse link aggfuncs.partialResult4AvgFloat64 to aggfuncs.partialResult4AvgDistinctFloat64--><path d="M41730,839.16 C41730,1007.93 41730,1560.76 41730,1695.29 " fill="none" id="aggfuncs.partialResult4AvgFloat64&lt;-aggfuncs.partialResult4AvgDistinctFloat64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="41730,826.08,41726,832.08,41730,838.08,41734,832.08,41730,826.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b0ae2279e584f6d58978053d4c6bbfc1]
reverse link aggfuncs.basePartialResult4FirstRow to aggfuncs.partialResult4FirstRowDecimal--><path d="M44288.64,839.16 C44266.8,1007.93 44195.25,1560.76 44177.84,1695.29 " fill="none" id="aggfuncs.basePartialResult4FirstRow&lt;-aggfuncs.partialResult4FirstRowDecimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="44290.33,826.08,44285.5914,831.5156,44288.7864,837.9803,44293.525,832.5447,44290.33,826.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2a29d530d46750281ae4a056ca2fdda3]
reverse link aggfuncs.basePartialResult4FirstRow to aggfuncs.partialResult4FirstRowDuration--><path d="M44301.41,839.16 C44323.44,1007.93 44395.57,1560.76 44413.12,1695.29 " fill="none" id="aggfuncs.basePartialResult4FirstRow&lt;-aggfuncs.partialResult4FirstRowDuration" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="44299.71,826.08,44296.5221,832.5482,44301.2666,837.9786,44304.4545,831.5104,44299.71,826.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d658f5b6ac2b36bdc6e82a6c1327a148]
reverse link aggfuncs.basePartialResult4FirstRow to aggfuncs.partialResult4FirstRowEnum--><path d="M44313.53,838.4 C44377.81,1006.27 44590.04,1560.56 44641.63,1695.29 " fill="none" id="aggfuncs.basePartialResult4FirstRow&lt;-aggfuncs.partialResult4FirstRowEnum" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="44308.81,826.08,44307.2238,833.1145,44313.1071,837.2842,44314.6933,830.2497,44308.81,826.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8150b1f154caba6496cfac60d672b02c]
reverse link aggfuncs.basePartialResult4FirstRow to aggfuncs.partialResult4FirstRowFloat32--><path d="M44332.93,836.47 C44417.91,941.99 44627.1,1209.68 44767,1456 C44814.29,1539.26 44856.14,1644.86 44875.16,1695.41 " fill="none" id="aggfuncs.basePartialResult4FirstRow&lt;-aggfuncs.partialResult4FirstRowFloat32" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="44324.62,826.18,44325.2792,833.3609,44332.1613,835.5143,44331.5021,828.3334,44324.62,826.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bd6dbd0390e52bc0462d754dedf699ef]
reverse link aggfuncs.basePartialResult4FirstRow to aggfuncs.partialResult4FirstRowFloat64--><path d="M44356.66,834.05 C44490.41,932.24 44810.75,1182.14 45005,1456 C45060.69,1534.52 45098.89,1643.25 45115.16,1695.13 " fill="none" id="aggfuncs.basePartialResult4FirstRow&lt;-aggfuncs.partialResult4FirstRowFloat64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="44345.83,826.13,44348.3106,832.901,44355.5148,833.2155,44353.0342,826.4445,44345.83,826.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d3a18c7d970daa4d3712d58657f95a8c]
reverse link aggfuncs.basePartialResult4FirstRow to aggfuncs.partialResult4FirstRowInt--><path d="M44387.21,831.73 C44573.99,920.62 44999.87,1146.11 45243,1456 C45301.64,1530.74 45331,1642.23 45342.3,1695.11 " fill="none" id="aggfuncs.basePartialResult4FirstRow&lt;-aggfuncs.partialResult4FirstRowInt" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="44375.26,826.07,44378.9691,832.2541,44386.104,831.2087,44382.3949,825.0247,44375.26,826.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ae8f9f499f0525870ca37698b5aa8746]
reverse link aggfuncs.basePartialResult4FirstRow to aggfuncs.partialResult4FirstRowJSON--><path d="M44209.61,832.17 C44033.37,923.12 43626.05,1154.14 43389,1456 C43329.79,1531.39 43296.87,1642.57 43283.76,1695.24 " fill="none" id="aggfuncs.basePartialResult4FirstRow&lt;-aggfuncs.partialResult4FirstRowJSON" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="44221.39,826.12,44214.2249,825.3065,44210.7182,831.6076,44217.8833,832.421,44221.39,826.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5a39d85099fbfd179988773d8585cdf7]
reverse link aggfuncs.basePartialResult4FirstRow to aggfuncs.partialResult4FirstRowSet--><path d="M44233.64,834.22 C44101.43,932.3 43786.74,1181.23 43602,1456 C43549.14,1534.62 43516.11,1643.31 43502.37,1695.16 " fill="none" id="aggfuncs.basePartialResult4FirstRow&lt;-aggfuncs.partialResult4FirstRowSet" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="44244.35,826.31,44237.1471,826.653,44234.6933,833.4338,44241.8963,833.0908,44244.35,826.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f3e7401637616f5a7c0efd813d84248c]
reverse link aggfuncs.basePartialResult4FirstRow to aggfuncs.partialResult4FirstRowString--><path d="M44257.34,836.4 C44173,941.79 43965.64,1209.23 43829,1456 C43782.93,1539.2 43743.19,1644.83 43725.22,1695.4 " fill="none" id="aggfuncs.basePartialResult4FirstRow&lt;-aggfuncs.partialResult4FirstRowString" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="44265.59,826.12,44258.7165,828.3005,44258.0856,835.484,44264.9591,833.3035,44265.59,826.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b4ebe117c6a589c8289d6812f03d6709]
reverse link aggfuncs.basePartialResult4FirstRow to aggfuncs.partialResult4FirstRowTime--><path d="M44276.68,838.4 C44213.12,1006.27 44003.26,1560.56 43952.25,1695.29 " fill="none" id="aggfuncs.basePartialResult4FirstRow&lt;-aggfuncs.partialResult4FirstRowTime" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="44281.34,826.08,44275.4755,830.2761,44277.0933,837.3034,44282.9578,833.1073,44281.34,826.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[06c9b9aaa31d60aef4247681db767d6b]
reverse link aggfuncs.basePartialResult4GroupConcat to aggfuncs.partialResult4GroupConcat--><path d="M42904.64,839.13 C42882.43,1010.77 42808.79,1579.81 42793,1701.83 " fill="none" id="aggfuncs.basePartialResult4GroupConcat&lt;-aggfuncs.partialResult4GroupConcat" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="42906.33,826.08,42901.5914,831.5156,42904.7864,837.9803,42909.525,832.5447,42906.33,826.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c20d6eecc23bb8c6a9eeeba160fe32a8]
reverse link aggfuncs.basePartialResult4GroupConcat to aggfuncs.partialResult4GroupConcatDistinct--><path d="M42917.42,839.2 C42939.11,1005.42 43009.36,1543.82 43028.27,1688.78 " fill="none" id="aggfuncs.basePartialResult4GroupConcat&lt;-aggfuncs.partialResult4GroupConcatDistinct" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="42915.71,826.08,42912.5221,832.5482,42917.2666,837.9786,42920.4545,831.5104,42915.71,826.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4aacd8adab24281146f4b7eaff289ea2]
reverse link aggfuncs.baseAggFunc to aggfuncs.percentRank--><path d="M51162.81,810.41 C50362.46,878.15 47890.27,1110.96 47173,1456 C47064.52,1508.18 46967.68,1613.7 46916.78,1675.94 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.percentRank" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51175.92,809.3,51169.6031,805.8219,51163.963,810.3151,51170.2799,813.7932,51175.92,809.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b79e51681967f989edf584379c556ead]
reverse link aggfuncs.rowComparer to aggfuncs.percentRank--><path d="M46335.33,844.02 C46438.23,1010.75 46749.84,1515.7 46848.62,1675.77 " fill="none" id="aggfuncs.rowComparer&lt;-aggfuncs.percentRank" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="46328.29,832.6,46328.0394,839.8067,46334.5954,842.8099,46334.846,835.6032,46328.29,832.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[31ec3ee32dc229fff3fa527dc93d8499]
reverse link aggfuncs.baseAggFunc to aggfuncs.rank--><path d="M51162.76,820.6 C50101.03,949.46 46048.66,1441.98 46019,1456 C45915.73,1504.8 45825.8,1605.9 45776.39,1669.31 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.rank" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51175.87,819.01,51169.4303,815.7649,51163.9581,820.4611,51170.3977,823.7062,51175.87,819.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7cede3fdd5838b015db5a13c8ae7c002]
reverse link aggfuncs.rowComparer to aggfuncs.rank--><path d="M46269.39,843.86 C46169.88,1008.26 45870.7,1502.49 45769.71,1669.31 " fill="none" id="aggfuncs.rowComparer&lt;-aggfuncs.rank" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="46276.21,832.6,46269.6826,835.6649,46270.0012,842.8689,46276.5286,839.8041,46276.21,832.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c0bd949e57359cf914ea655919655229]
reverse link aggfuncs.baseAggFunc to aggfuncs.rowNumber--><path d="M51162.39,813.43 C50684.59,866.56 49627.25,1026.79 48855,1456 C48752.79,1512.81 48659.83,1615.19 48610.06,1675.94 " fill="none" id="aggfuncs.baseAggFunc&lt;-aggfuncs.rowNumber" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="51175.66,811.96,51169.2566,808.6439,51163.7328,813.2794,51170.1362,816.5954,51175.66,811.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[41d4f9a2eab02b8971fede3234674677]
reverse link aggfuncs.baseSumAggFunc to aggfuncs.sum4Decimal--><path d="M57179.21,1763.38 C57180.12,1823 57191.62,1940.4 57264,1996 C57390.2,2092.94 58551.33,1987.56 58695,2056 C58871.19,2139.93 59002.34,2341.62 59060.24,2444.25 " fill="none" id="aggfuncs.baseSumAggFunc&lt;-aggfuncs.sum4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="57179.17,1750.22,57175.1898,1756.2332,57179.2096,1762.2199,57183.1898,1756.2068,57179.17,1750.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d18090171e4c31298df8d761732604b]
reverse link aggfuncs.baseSumAggFunc to aggfuncs.sum4DistinctDecimal--><path d="M57180.27,1763.41 C57182.79,1821.64 57196.66,1935.36 57264,1996 C57364.72,2086.7 57451.44,1979.03 57563,2056 C57710.1,2157.5 57796.51,2362.94 57829.94,2457.21 " fill="none" id="aggfuncs.baseSumAggFunc&lt;-aggfuncs.sum4DistinctDecimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="57179.85,1750.19,57176.0431,1756.3144,57180.2322,1762.1839,57184.0391,1756.0595,57179.85,1750.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[008030dc717cc8326862259e004664d2]
reverse link aggfuncs.baseSumAggFunc to aggfuncs.sum4DistinctFloat64--><path d="M57179.38,1763.16 C57180.54,1822.46 57192.39,1939.42 57264,1996 C57415.19,2115.46 57963.69,1957 58129,2056 C58283.32,2148.42 58366.63,2360.94 58397.65,2457.35 " fill="none" id="aggfuncs.baseSumAggFunc&lt;-aggfuncs.sum4DistinctFloat64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="57179.28,1750.07,57175.3263,1756.1006,57179.3723,1762.0696,57183.326,1756.0391,57179.28,1750.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4b8ca8eba4d1431922f95b2ea4201343]
reverse link aggfuncs.baseSum4Float64 to aggfuncs.sum4Float64--><path d="M52772.14,2576.69 C52806.81,2680.35 52888.54,2874.42 53035,2959 C53364.75,3149.42 59044.03,3232.54 60579.79,3251.59 " fill="none" id="aggfuncs.baseSum4Float64&lt;-aggfuncs.sum4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="52768.05,2564.21,52766.114,2571.1564,52771.7814,2575.6151,52773.7174,2568.6688,52768.05,2564.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7412f2b67fc97d7c835539d55a4326d6]
reverse link aggfuncs.baseSum4Float64 to aggfuncs.sum4Float64HighPrecision--><path d="M52752,2577.54 C52752,2738.55 52752,3132.78 52752,3232.69 " fill="none" id="aggfuncs.baseSum4Float64&lt;-aggfuncs.sum4Float64HighPrecision" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="52752,2564.07,52748,2570.07,52752,2576.07,52756,2570.07,52752,2564.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[884ba7c76791e42e2e2f474fcc6d6c56]
reverse link aggfuncs.baseVarPopAggFunc to aggfuncs.varPop4DistinctFloat64--><path d="M52274,1742.04 C52439.28,1774.1 52800.53,1862.56 53035,2056 C53171.79,2168.86 53262.58,2365.83 53299.43,2457.27 " fill="none" id="aggfuncs.baseVarPopAggFunc&lt;-aggfuncs.varPop4DistinctFloat64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="52261.01,1739.56,52266.1517,1744.616,52272.7963,1741.8144,52267.6546,1736.7584,52261.01,1739.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eec8b0bd085e045d2427932eddea4266]
reverse link aggfuncs.baseVarPopAggFunc to aggfuncs.varPop4Float64--><path d="M52186,1763.48 C52186,1888.55 52186,2300.58 52186,2450.94 " fill="none" id="aggfuncs.baseVarPopAggFunc&lt;-aggfuncs.varPop4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="52186,1750.33,52182,1756.33,52186,1762.33,52190,1756.33,52186,1750.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dcaf419a7a5f6fa1300bcc085e34d9ad]
reverse link aggfuncs.AggFunc to aggfuncs.baseSum4Float64--><path d="M51269.03,1788.11 C51477.4,1846.95 51805.77,1935.67 52094,1996 C52259.21,2030.58 52328.21,1962.9 52469,2056 C52614.99,2152.55 52699.92,2353.01 52734.19,2450.64 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.baseSum4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51266.89,1794.78,51249.55,1782.6,51270.7,1781.31,51266.89,1794.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[539151f7b819353d30f3b2a7741d84c1]
reverse link aggfuncs.SlidingWindowAggFunc to aggfuncs.countOriginal4Decimal--><path d="M65885.73,1769.88 C65956.59,1830.92 66096.34,1941.51 66236,1996 C66402.65,2061.02 66476.93,1970.39 66634,2056 C66820.27,2157.53 66961.27,2382.31 67011.26,2470.24 " fill="none" id="aggfuncs.SlidingWindowAggFunc&lt;-aggfuncs.countOriginal4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="65880.93,1774.98,65870.45,1756.56,65890.13,1764.43,65880.93,1774.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5d8d31bc6ee997c4293b8c74f1b0d1a6]
reverse link aggfuncs.SlidingWindowAggFunc to aggfuncs.countOriginal4Duration--><path d="M65883.7,1770.52 C65953.29,1833.63 66092.89,1948.21 66236,1996 C66487.78,2080.08 67189.9,1940.7 67429,2056 C67621.02,2148.6 67759.6,2380.73 67807.58,2470.38 " fill="none" id="aggfuncs.SlidingWindowAggFunc&lt;-aggfuncs.countOriginal4Duration" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="65878.73,1775.46,65868.75,1756.77,65888.21,1765.15,65878.73,1775.46" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5f6b9e56515d0be7d5d420ebaa40ef50]
reverse link aggfuncs.SlidingWindowAggFunc to aggfuncs.countOriginal4Int--><path d="M65883.05,1770.4 C65952.3,1833.88 66092.05,1949.53 66236,1996 C66446.3,2063.89 68023.99,1962.01 68224,2056 C68417.18,2146.78 68555.3,2380.53 68602.86,2470.48 " fill="none" id="aggfuncs.SlidingWindowAggFunc&lt;-aggfuncs.countOriginal4Int" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="65878.06,1775.32,65868.18,1756.58,65887.59,1765.07,65878.06,1775.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a6bea690d067bbd5125d51f6fb24de84]
reverse link aggfuncs.SlidingWindowAggFunc to aggfuncs.countOriginal4JSON--><path d="M65437.7,1740.17 C65100.47,1766.93 64615.75,1843.24 64249,2056 C64065.75,2162.31 63922.86,2383.29 63871.55,2470.24 " fill="none" id="aggfuncs.SlidingWindowAggFunc&lt;-aggfuncs.countOriginal4JSON" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="65437.19,1733.19,65457.67,1738.63,65438.27,1747.15,65437.19,1733.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8fab0949e71c6b656a85bf141f461ded]
reverse link aggfuncs.SlidingWindowAggFunc to aggfuncs.countOriginal4Real--><path d="M65704.34,1762.08 C65538.62,1809.92 65252.55,1907.11 65044,2056 C64873.06,2178.04 64724.92,2386.61 64669.37,2470.24 " fill="none" id="aggfuncs.SlidingWindowAggFunc&lt;-aggfuncs.countOriginal4Real" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="65702.54,1755.31,65723.69,1756.55,65706.38,1768.77,65702.54,1755.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ab38b44ffe56bd86873727dfc19c0eb3]
reverse link aggfuncs.SlidingWindowAggFunc to aggfuncs.countOriginal4String--><path d="M65813.8,1774.51 C65740.85,1917.75 65524.13,2343.28 65459.43,2470.31 " fill="none" id="aggfuncs.SlidingWindowAggFunc&lt;-aggfuncs.countOriginal4String" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="65807.61,1771.25,65822.92,1756.61,65820.08,1777.6,65807.61,1771.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3fabeeb9f894b5ea3f7ea74f2802587e]
reverse link aggfuncs.SlidingWindowAggFunc to aggfuncs.countOriginal4Time--><path d="M65862.26,1774.51 C65935.39,1917.75 66152.67,2343.28 66217.52,2470.31 " fill="none" id="aggfuncs.SlidingWindowAggFunc&lt;-aggfuncs.countOriginal4Time" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="65855.98,1777.6,65853.12,1756.61,65868.45,1771.23,65855.98,1777.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7db1d3439001f3d12d7a900c40db1b9f]
reverse link aggfuncs.AggFunc to aggfuncs.firstRow4Decimal--><path d="M51007.6,1799 C50957.24,1864.16 50873.29,1955.87 50775,1996 C50570.99,2079.29 47001.05,1947.94 46809,2056 C46655.25,2142.51 46573.39,2350.7 46541.73,2450.85 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.firstRow4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.33,1794.37,51019.98,1782.64,51013.5,1802.82,51002.33,1794.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2e716139d998cf28d970b3d9cab8ec7a]
reverse link aggfuncs.AggFunc to aggfuncs.firstRow4Duration--><path d="M51007.58,1798.95 C50957.2,1864.07 50873.24,1955.75 50775,1996 C50600.18,2067.62 47539.53,1963.15 47375,2056 C47221.36,2142.7 47139.45,2350.8 47107.75,2450.89 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.firstRow4Duration" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.31,1794.32,51019.96,1782.6,51013.47,1802.77,51002.31,1794.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[24ba9ace11cb4155ea46822af58bc291]
reverse link aggfuncs.AggFunc to aggfuncs.firstRow4Enum--><path d="M51007.55,1798.87 C50957.14,1863.93 50873.17,1955.58 50775,1996 C50483.76,2115.92 48215.02,1900.72 47941,2056 C47787.51,2142.97 47705.52,2350.94 47673.78,2450.94 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.firstRow4Enum" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.27,1794.24,51019.93,1782.53,51013.43,1802.7,51002.27,1794.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b4a5cbcfa016c9f8d5055885aec2663]
reverse link aggfuncs.AggFunc to aggfuncs.firstRow4Float32--><path d="M51007.28,1799.04 C50956.81,1864 50872.92,1955.38 50775,1996 C50542.15,2092.6 48725.99,1931.14 48507,2056 C48353.95,2143.26 48271.86,2350.6 48239.95,2450.63 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.firstRow4Float32" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002,1794.41,51019.68,1782.73,51013.15,1802.88,51002,1794.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b32d26583d076e1f74fb652cff4cda5c]
reverse link aggfuncs.AggFunc to aggfuncs.firstRow4Float64--><path d="M51007.19,1798.84 C50956.67,1863.67 50872.74,1954.95 50775,1996 C50600.54,2069.28 49236.97,1961.55 49073,2056 C48920.33,2143.94 48838.05,2350.94 48806.03,2450.76 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.firstRow4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51001.92,1794.22,51019.62,1782.57,51013.05,1802.71,51001.92,1794.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e8dda9979f7bfd398fd477be81829ee5]
reverse link aggfuncs.AggFunc to aggfuncs.firstRow4Int--><path d="M51006.81,1798.74 C50956.14,1863.27 50872.23,1954.16 50775,1996 C50542.79,2095.93 49856.94,1927.91 49639,2056 C49487.31,2145.15 49404.67,2351.08 49372.31,2450.63 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.firstRow4Int" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51001.53,1794.12,51019.27,1782.54,51012.62,1802.66,51001.53,1794.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eafcd8f0664fa40db9b5d0b30229bc7]
reverse link aggfuncs.AggFunc to aggfuncs.firstRow4JSON--><path d="M51005.39,1798.72 C50954.27,1862.37 50870.54,1951.9 50775,1996 C50543.72,2102.76 50421.18,1921.25 50205,2056 C50056.07,2148.83 49972.32,2352.02 49939.04,2450.62 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.firstRow4JSON" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51000.11,1794.11,51017.98,1782.73,51011.1,1802.78,51000.11,1794.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ce4932ece6c066290762c4c8d501695b]
reverse link aggfuncs.AggFunc to aggfuncs.firstRow4Set--><path d="M50990.68,1797.56 C50930.24,1862.4 50840.58,1962.37 50771,2056 C50670.04,2191.85 50568.61,2364.05 50519.11,2450.95 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.firstRow4Set" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="50985.84,1792.48,51004.62,1782.67,50996.06,1802.05,50985.84,1792.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b72aa6329bf9ed5befc8b2462995a24]
reverse link aggfuncs.AggFunc to aggfuncs.firstRow4String--><path d="M51057.61,1803.01 C51056.81,1959.35 51054.99,2313.77 51054.29,2450.89 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.firstRow4String" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51050.61,1802.71,51057.71,1782.75,51064.61,1802.78,51050.61,1802.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7df30648f523c07606408a004d934d6a]
reverse link aggfuncs.AggFunc to aggfuncs.firstRow4Time--><path d="M51122.96,1797.57 C51181.57,1862.61 51268.79,1962.87 51337,2056 C51436.87,2192.37 51538.57,2363.98 51588.45,2450.76 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.firstRow4Time" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51117.67,1802.16,51109.44,1782.63,51128.05,1792.77,51117.67,1802.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1572dcbffd975455b6f0f12c03240289]
reverse link aggfuncs.AggFunc to aggfuncs.groupConcatDistinctOrder--><path d="M51008.23,1798.51 C50957.99,1863.87 50873.83,1956.2 50775,1996 C50497.79,2107.62 40278.14,1910.7 40017,2056 C39862.84,2141.77 39781.18,2350.33 39749.65,2450.71 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.groupConcatDistinctOrder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.64,1794.3,51020.26,1782.53,51013.83,1802.72,51002.64,1794.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ea5d626b7b5cec3ddc8a94d8a35b716]
reverse link aggfuncs.AggFunc to aggfuncs.groupConcatOrder--><path d="M51008.23,1798.51 C50957.98,1863.86 50873.83,1956.19 50775,1996 C50512.39,2101.79 40830.38,1918.31 40583,2056 C40435.11,2138.32 40353.94,2333.62 40319.74,2437.98 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.groupConcatOrder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.64,1794.29,51020.26,1782.52,51013.82,1802.71,51002.64,1794.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[254440d6aafced9a343603f3eed0a32f]
reverse link aggfuncs.AggFunc to aggfuncs.jsonObjectAgg--><path d="M51008.22,1798.5 C50957.98,1863.84 50873.82,1956.17 50775,1996 C50526.99,2095.96 41382.62,1925.92 41149,2056 C40994.87,2141.82 40913.2,2350.36 40881.66,2450.72 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.jsonObjectAgg" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.63,1794.28,51020.26,1782.52,51013.82,1802.7,51002.63,1794.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[45e8e1e4d87b43be442fa40889863571]
reverse link aggfuncs.AggFunc to aggfuncs.maxMin4Decimal--><path d="M51007.63,1799.08 C50957.29,1864.29 50873.36,1956.04 50775,1996 C50512.59,2102.61 45924.08,1917.52 45677,2056 C45523.11,2142.25 45441.32,2350.57 45409.71,2450.8 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.maxMin4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.36,1794.44,51020,1782.7,51013.53,1802.88,51002.36,1794.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d9bedbd4cc873fbe04a3bd77f67b1045]
reverse link aggfuncs.AggFunc to aggfuncs.maxMin4Duration--><path d="M51007.62,1799.05 C50957.27,1864.24 50873.33,1955.97 50775,1996 C50541.79,2090.95 46462.56,1932.73 46243,2056 C46089.17,2142.36 46007.35,2350.63 45975.72,2450.82 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.maxMin4Duration" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.35,1794.41,51019.99,1782.68,51013.52,1802.85,51002.35,1794.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[91fc0e7efb66f41eb7a98b99496569ed]
reverse link aggfuncs.AggFunc to aggfuncs.maxMin4Float32--><path d="M51008.22,1798.49 C50957.97,1863.83 50873.81,1956.15 50775,1996 C50541.59,2090.13 41934.86,1933.52 41715,2056 C41560.89,2141.85 41479.21,2350.37 41447.66,2450.72 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.maxMin4Float32" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.63,1794.28,51020.25,1782.51,51013.82,1802.7,51002.63,1794.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[58b6ebd7767a52a6992694b05a8e83ff]
reverse link aggfuncs.AggFunc to aggfuncs.maxMin4Float64--><path d="M51008.22,1798.48 C50957.96,1863.81 50873.8,1956.13 50775,1996 C50556.19,2084.3 42487.1,1941.13 42281,2056 C42126.9,2141.89 42045.21,2350.39 42013.67,2450.73 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.maxMin4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.63,1794.27,51020.25,1782.5,51013.81,1802.69,51002.63,1794.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[14eb90fde24a9748635e3cd70ebabbcc]
reverse link aggfuncs.AggFunc to aggfuncs.maxMin4Int--><path d="M51007.99,1798.76 C50957.71,1864.06 50873.65,1956.16 50775,1996 C50570.79,2078.46 43039.34,1948.73 42847,2056 C42692.93,2141.93 42611.23,2350.41 42579.67,2450.74 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.maxMin4Int" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.41,1794.54,51020.03,1782.78,51013.59,1802.96,51002.41,1794.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1abe1fc16c03a3d803e4916948ce75a7]
reverse link aggfuncs.AggFunc to aggfuncs.maxMin4JSON--><path d="M51007.99,1798.74 C50957.7,1864.04 50873.64,1956.13 50775,1996 C50585.39,2072.63 43591.58,1956.34 43413,2056 C43258.95,2141.97 43177.24,2350.43 43145.68,2450.75 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.maxMin4JSON" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.4,1794.52,51020.03,1782.77,51013.58,1802.95,51002.4,1794.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fb3acec2b70b8728fdb1de73acbbfe3f]
reverse link aggfuncs.AggFunc to aggfuncs.maxMin4String--><path d="M51007.98,1798.73 C50957.69,1864.01 50873.62,1956.1 50775,1996 C50599.99,2066.8 44143.82,1963.94 43979,2056 C43828.21,2140.22 43746.71,2341.78 43713.73,2444.32 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.maxMin4String" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.39,1794.51,51020.02,1782.76,51013.57,1802.94,51002.39,1794.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8774bfb8f2f3bcd7642fb0ed04a17200]
reverse link aggfuncs.AggFunc to aggfuncs.maxMin4Time--><path d="M51007.97,1798.71 C50957.68,1863.98 50873.61,1956.06 50775,1996 C50614.59,2060.97 44696.06,1971.55 44545,2056 C44391.02,2142.09 44309.27,2350.49 44277.69,2450.77 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.maxMin4Time" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.39,1794.49,51020.02,1782.74,51013.56,1802.92,51002.39,1794.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[083ac41ec148d9a3e74c0cf19304b6fe]
reverse link aggfuncs.AggFunc to aggfuncs.maxMin4Uint--><path d="M51007.96,1798.69 C50957.66,1863.95 50873.59,1956.01 50775,1996 C50483.39,2114.28 45385.6,1902.31 45111,2056 C44957.06,2142.16 44875.29,2350.53 44843.7,2450.78 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.maxMin4Uint" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51002.38,1794.47,51020.01,1782.73,51013.55,1802.91,51002.38,1794.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e47a9d33f9e70523f031bcda1caac312]
reverse link aggfuncs.AggFunc to aggfuncs.sum4Decimal--><path d="M51240.13,1788.82 C51444.96,1854.9 51788.9,1955.63 52094,1996 C52275.78,2020.06 58528.18,1979.87 58695,2056 C58873.02,2137.24 59003.77,2341.14 59061,2444.45 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.sum4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51237.92,1795.46,51221.05,1782.63,51242.24,1782.14,51237.92,1795.46" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3ec6ba4743a5b10bf104b5bb5e7e0a3f]
reverse link aggfuncs.SlidingWindowAggFunc to aggfuncs.sum4Decimal--><path d="M65615.95,1759.34 C65194.99,1819.01 64251.38,1945.01 63452,1996 C63232.37,2010.01 59690.94,1964.02 59491,2056 C59313.47,2137.67 59182.71,2340.89 59125.28,2444.15 " fill="none" id="aggfuncs.SlidingWindowAggFunc&lt;-aggfuncs.sum4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="65615.12,1752.38,65635.9,1756.5,65617.09,1766.24,65615.12,1752.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3bde95da45d533c2adc18df6d9501836]
reverse link aggfuncs.SlidingWindowAggFunc to aggfuncs.sum4Float64--><path d="M65883,1770.56 C65952.18,1834.24 66091.85,1950.15 66236,1996 C66383.37,2042.88 68910.83,1945.48 69019,2056 C69054.09,2091.85 69053.81,2922.88 69019,2959 C68749.7,3238.41 62900.92,3256.61 61340.03,3256.48 " fill="none" id="aggfuncs.SlidingWindowAggFunc&lt;-aggfuncs.sum4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="65877.98,1775.46,65868.15,1756.69,65887.54,1765.23,65877.98,1775.46" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[43c49f0a030c07f8d41bf55e52a7361c]
reverse link aggfuncs.valueEvaluator to aggfuncs.value4Decimal--><path d="M39851.14,833.33 C40092.52,925.74 40657.19,1158.3 41069,1456 C41159.39,1521.34 41247.13,1618.08 41296.11,1676 " fill="none" id="aggfuncs.valueEvaluator&lt;-aggfuncs.value4Decimal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="39848.44,839.79,39832.25,826.13,39853.43,826.71,39848.44,839.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df5051b19062969531e8ca2db5ae43e0]
reverse link aggfuncs.valueEvaluator to aggfuncs.value4Duration--><path d="M39534,830.36 C39177.22,908.82 38416.72,1105.69 37865,1456 C37769.87,1516.4 37682.54,1616.37 37635.14,1675.93 " fill="none" id="aggfuncs.valueEvaluator&lt;-aggfuncs.value4Duration" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="39532.77,823.47,39553.8,826.04,39535.75,837.14,39532.77,823.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8ec4ef12b8c40bdcee1cfb8790a06e0e]
reverse link aggfuncs.valueEvaluator to aggfuncs.value4Float32--><path d="M39616.86,833.33 C39375.48,925.74 38810.81,1158.3 38399,1456 C38308.61,1521.34 38220.87,1618.08 38171.89,1676 " fill="none" id="aggfuncs.valueEvaluator&lt;-aggfuncs.value4Float32" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="39614.57,826.71,39635.75,826.13,39619.56,839.79,39614.57,826.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e42f1bdf943760693e8ad953c68bb459]
reverse link aggfuncs.valueEvaluator to aggfuncs.value4Float64--><path d="M39671.44,838.67 C39534.24,946.11 39198.05,1213.31 38933,1456 C38852.44,1529.76 38764.09,1620.97 38711.93,1675.99 " fill="none" id="aggfuncs.valueEvaluator&lt;-aggfuncs.value4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="39667.48,832.88,39687.54,826.07,39676.1,843.91,39667.48,832.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[01be42a9b2261bab0765a315f795e317]
reverse link aggfuncs.valueEvaluator to aggfuncs.value4Int--><path d="M39703.43,843.53 C39608.49,1009.76 39319.62,1515.56 39228.11,1675.77 " fill="none" id="aggfuncs.valueEvaluator&lt;-aggfuncs.value4Int" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="39697.4,839.98,39713.39,826.08,39709.55,846.92,39697.4,839.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80e8db50e7f266f03b49b73f5c4cc07e]
reverse link aggfuncs.valueEvaluator to aggfuncs.value4JSON--><path d="M39734,846.08 C39734,1014.88 39734,1516.37 39734,1675.77 " fill="none" id="aggfuncs.valueEvaluator&lt;-aggfuncs.value4JSON" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="39727,846.08,39734,826.08,39741,846.08,39727,846.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a7217a3bbc132c65f6d42a882e91ef3b]
reverse link aggfuncs.valueEvaluator to aggfuncs.value4String--><path d="M39764.57,843.53 C39859.51,1009.76 40148.38,1515.56 40239.89,1675.77 " fill="none" id="aggfuncs.valueEvaluator&lt;-aggfuncs.value4String" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="39758.45,846.92,39754.61,826.08,39770.6,839.98,39758.45,846.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[94abfec55518a51ac0f2d56927e73e2c]
reverse link aggfuncs.valueEvaluator to aggfuncs.value4Time--><path d="M39796.56,838.67 C39933.76,946.11 40269.95,1213.31 40535,1456 C40615.56,1529.76 40703.91,1620.97 40756.07,1675.99 " fill="none" id="aggfuncs.valueEvaluator&lt;-aggfuncs.value4Time" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="39791.9,843.91,39780.46,826.07,39800.52,832.88,39791.9,843.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[49710f13b9e7f70313b0dbe9fb2b0ee3]
reverse link aggfuncs.AggFunc to aggfuncs.varPop4Float64--><path d="M51338.41,1787.94 C51515.13,1837.27 51739.89,1921.21 51903,2056 C52036.5,2166.32 52126.26,2356.7 52164.73,2450.69 " fill="none" id="aggfuncs.AggFunc&lt;-aggfuncs.varPop4Float64" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51336.45,1794.66,51319.02,1782.61,51340.16,1781.16,51336.45,1794.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[81ddf1c1be9a3f020cd888db0c5e425c]
reverse link executor.baseExecutor to executor.AdminPluginsExec--><path d="M25182.44,1865.05 C25154.2,1915.6 25114.62,1967.39 25062,1996 C24860.96,2105.32 17010.72,1923.7 16824,2056 C16694.98,2147.42 16668.25,2351.77 16663.04,2450.7 " fill="none" id="executor.baseExecutor&lt;-executor.AdminPluginsExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.65,1853.62,25182.2712,1856.9832,25182.9223,1864.1648,25189.3011,1860.8017,25188.65,1853.62" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2a77bd8018ef5cf9f11dac0454de580b]
reverse link executor.baseExecutor to executor.AdminResetTelemetryIDExec--><path d="M25182.42,1865.02 C25154.18,1915.56 25114.6,1967.35 25062,1996 C24891.43,2088.9 18228.41,1943.61 18070,2056 C17931.72,2154.11 17910.95,2381.93 17908.22,2470.43 " fill="none" id="executor.baseExecutor&lt;-executor.AdminResetTelemetryIDExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.63,1853.58,25182.248,1856.937,25182.8921,1864.1193,25189.2741,1860.7623,25188.63,1853.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4b2d2e4c9f8f470104ee49ea46ddc248]
reverse link executor.baseExecutor to executor.AdminShowTelemetryExec--><path d="M25182.49,1865.16 C25154.27,1915.72 25114.68,1967.49 25062,1996 C24848.11,2111.77 7750.54,1916.94 7551,2056 C7411.29,2153.36 7387.56,2381.62 7383.69,2470.34 " fill="none" id="executor.baseExecutor&lt;-executor.AdminShowTelemetryExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.7,1853.72,25182.323,1857.0865,25182.9778,1864.2678,25189.3548,1860.9013,25188.7,1853.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d7c996026ebf9c53efb2e8e47f483e98]
reverse link executor.baseExecutor to executor.AnalyzeExec--><path d="M25182.49,1865.15 C25154.26,1915.71 25114.67,1967.48 25062,1996 C24863.41,2103.53 9000.14,1947.63 8802,2056 C8645.97,2141.34 8560.78,2350.11 8527.58,2450.62 " fill="none" id="executor.baseExecutor&lt;-executor.AnalyzeExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.7,1853.71,25182.3197,1857.0704,25182.9676,1864.2523,25189.3479,1860.8919,25188.7,1853.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e8317fd7b9e9d47e746edc44ceeeac2]
reverse link executor.AnalyzeFastExec to executor.AnalyzeTestFastExec--><path d="M32314.07,1032.27 C32386.8,1164.41 32496.33,1316.8 32643,1396 C32908.21,1539.22 33743.85,1293.96 33998,1456 C34061.15,1496.26 34097.34,1574.84 34117.04,1636.71 " fill="none" id="executor.AnalyzeFastExec&lt;-executor.AnalyzeTestFastExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="32307.81,1020.77,32307.1728,1027.9529,32313.5581,1031.3037,32314.1953,1024.1208,32307.81,1020.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4155135858cf9e6c0038a71c2e4581fe]
reverse link executor.baseExecutor to executor.BRIEExec--><path d="M25182.49,1865.15 C25154.26,1915.71 25114.67,1967.48 25062,1996 C24871.6,2099.11 9649.62,1932.16 9472,2056 C9338.65,2148.97 9310.96,2361.21 9305.35,2457.44 " fill="none" id="executor.baseExecutor&lt;-executor.BRIEExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.7,1853.71,25182.323,1857.0765,25182.9778,1864.2578,25189.3548,1860.8913,25188.7,1853.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e02cb971194cde719aed44ddaad20fbf]
reverse link executor.baseExecutor to executor.BatchPointGetExec--><path d="M25265.47,1866.39 C25288.84,1989.49 25323.18,2170.37 25349.4,2308.47 " fill="none" id="executor.baseExecutor&lt;-executor.BatchPointGetExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25263.03,1853.54,25260.2213,1860.1816,25265.2717,1865.3288,25268.0804,1858.6871,25263.03,1853.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[860760cc62904e34b36e5fb2017582fb]
reverse link executor.baseExecutor to executor.CancelDDLJobsExec--><path d="M25182.47,1865.11 C25154.24,1915.67 25114.65,1967.44 25062,1996 C24920.35,2072.83 13592.12,1963.75 13460,2056 C13326.71,2149.06 13298.99,2361.25 13293.36,2457.46 " fill="none" id="executor.baseExecutor&lt;-executor.CancelDDLJobsExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.68,1853.67,25182.2997,1857.0304,25182.9476,1864.2123,25189.3279,1860.8519,25188.68,1853.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e951caa9a13be589ec4628e7b073b4f3]
reverse link ast.ChangeStmt to executor.ChangeExec--><path d="M87.93,1763.64 C90.05,1823.64 103.98,1941.59 178,1996 C313.48,2095.59 3066.94,1958.6 3204,2056 C3346.11,2156.98 3367.49,2393.35 3370.55,2476.73 " fill="none" id="ast.ChangeStmt&lt;-executor.ChangeExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="87.63,1750.39,83.7695,1756.4807,87.9068,1762.3868,91.7674,1756.2961,87.63,1750.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[42dc0ff05f65cbb290f7175fd42cae75]
reverse link executor.baseExecutor to executor.ChangeExec--><path d="M25089.33,1861.82 C25021.1,1914.49 24936.17,1968.72 24849,1996 C24707.77,2040.2 3660.44,1971.43 3539,2056 C3395.67,2155.82 3374.41,2393.44 3371.42,2476.9 " fill="none" id="executor.baseExecutor&lt;-executor.ChangeExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25099.71,1853.73,25092.5192,1854.2708,25090.2527,1861.1164,25097.4435,1860.5757,25099.71,1853.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e835dc4bbae2cfd201891bf6c6519080]
reverse link executor.baseExecutor to executor.CheckIndexRangeExec--><path d="M25302.97,1865.14 C25329.83,1911.55 25364.75,1960.49 25407,1996 C25461.34,2041.66 25505.57,2005.06 25555,2056 C25644.45,2148.19 25686.72,2292.49 25706.19,2392.84 " fill="none" id="executor.baseExecutor&lt;-executor.CheckIndexRangeExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25296.5,1853.72,25295.9794,1860.9123,25302.4181,1864.1591,25302.9388,1856.9669,25296.5,1853.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2e64fc81c4ecc9b0ac3656933e3497bb]
reverse link executor.baseExecutor to executor.CheckTableExec--><path d="M25294.83,1865.44 C25321.52,1914.43 25358.45,1965.01 25407,1996 C25589.34,2112.38 25712.19,1932.8 25890,2056 C25997.41,2130.42 26059.51,2269.36 26092.78,2373.35 " fill="none" id="executor.baseExecutor&lt;-executor.CheckTableExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25288.6,1853.7,25287.8746,1860.8745,25294.2183,1864.3035,25294.9437,1857.129,25288.6,1853.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[af9f40f7ad5fa7f39dff43f1977e8d1e]
reverse link executor.baseExecutor to executor.ChecksumTableExec--><path d="M25182.42,1865.03 C25154.19,1915.57 25114.61,1967.36 25062,1996 C24883.53,2093.15 17921.33,1951.6 17747,2056 C17612.83,2136.35 17547,2318.26 17518.87,2424.71 " fill="none" id="executor.baseExecutor&lt;-executor.ChecksumTableExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.64,1853.59,25182.2597,1856.9504,25182.9076,1864.1323,25189.2879,1860.7719,25188.64,1853.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[08cf7d2fcc954f0bacc30ff0a9337431]
reverse link executor.baseExecutor to executor.CleanupIndexExec--><path d="M25292.99,1865.39 C25319.62,1915.09 25356.98,1966.18 25407,1996 C25589.84,2105 26182.47,1943.23 26363,2056 C26452.36,2111.82 26513.54,2210.86 26553.62,2301.89 " fill="none" id="executor.baseExecutor&lt;-executor.CleanupIndexExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25286.96,1853.81,25286.1818,1860.979,25292.5,1864.4547,25293.2782,1857.2857,25286.96,1853.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[67818a652c2c5c24fdfec25ee3e16ffd]
reverse link executor.baseExecutor to executor.DDLExec--><path d="M25182.01,1865.57 C25153.78,1915.9 25114.33,1967.38 25062,1996 C24819.34,2128.7 20332.6,1934.79 20084,2056 C19981.98,2105.74 19899.57,2199.64 19839.39,2288.89 " fill="none" id="executor.baseExecutor&lt;-executor.DDLExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.4,1853.85,25182.0147,1857.2008,25182.6519,1864.3837,25189.0372,1861.0329,25188.4,1853.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d6a947fe961fe66998f774f89ba9db09]
reverse link executor.DDLJobRetriever to executor.DDLJobsReaderExec--><path d="M25605.64,1812.94 C25561.51,1876.52 25492.02,1958.33 25407,1996 C25191.82,2091.34 21363.37,1920.4 21171,2056 C21038.3,2149.54 21010.26,2360.99 21004.45,2457.19 " fill="none" id="executor.DDLJobRetriever&lt;-executor.DDLJobsReaderExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25613.04,1802.11,25606.352,1804.8063,25606.2685,1812.0169,25612.9566,1809.3206,25613.04,1802.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a473673cd8563aa81f07c66d7fc58d3e]
reverse link executor.baseExecutor to executor.DDLJobsReaderExec--><path d="M25181.96,1865.48 C25153.73,1915.79 25114.28,1967.29 25062,1996 C24872.49,2100.05 21347.63,1931.33 21171,2056 C21038.36,2149.62 21010.29,2361.03 21004.46,2457.2 " fill="none" id="executor.baseExecutor&lt;-executor.DDLJobsReaderExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.35,1853.76,25181.9647,1857.1108,25182.6019,1864.2937,25188.9872,1860.9429,25188.35,1853.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[aba09a2068ed7e449288a452e4b7a059]
reverse link executor.baseExecutor to executor.DeallocateExec--><path d="M25182.49,1865.15 C25154.26,1915.71 25114.68,1967.48 25062,1996 C24856.3,2107.36 8412.89,1922.25 8221,2056 C8081.3,2153.37 8057.57,2381.63 8053.69,2470.34 " fill="none" id="executor.baseExecutor&lt;-executor.DeallocateExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.7,1853.71,25182.323,1857.0765,25182.9778,1864.2578,25189.3548,1860.8913,25188.7,1853.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[332df6fe4fb0af614c0575dd99dd4f3c]
reverse link executor.baseExecutor to executor.DeleteExec--><path d="M25292.31,1865.3 C25318.91,1915.28 25356.44,1966.6 25407,1996 C25689.25,2160.12 26587.1,1902.01 26875,2056 C27007.98,2127.13 27100.62,2278.66 27152.75,2386.31 " fill="none" id="executor.baseExecutor&lt;-executor.DeleteExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25286.29,1853.65,25285.4905,1860.8166,25291.7984,1864.311,25292.5979,1857.1444,25286.29,1853.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d87906054c06e467fc2a60f8ce1eec43]
reverse link sync.Mutex to executor.DirtyDB--><path d="M21149,120.08 C21149,240.91 21149,630.53 21149,751.69 " fill="none" id="sync.Mutex&lt;-executor.DirtyDB" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="21149,107.02,21145,113.02,21149,119.02,21153,113.02,21149,107.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[35d73b33a1a1a0fc70345971c20843c9]
reverse link executor.baseExecutor to executor.ExecuteExec--><path d="M25182.49,1865.15 C25154.26,1915.71 25114.67,1967.48 25062,1996 C24867.5,2101.32 9318.44,1929.51 9137,2056 C9021.96,2136.2 8985.56,2305.15 8974.13,2411.83 " fill="none" id="executor.baseExecutor&lt;-executor.ExecuteExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.7,1853.71,25182.323,1857.0765,25182.9778,1864.2578,25189.3548,1860.8913,25188.7,1853.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ec60c06dfcf6d2e6b3a879883ec365f3]
reverse link executor.baseExecutor to executor.ExplainExec--><path d="M25291.94,1865.3 C25318.53,1915.43 25356.14,1966.85 25407,1996 C25611.84,2113.39 27336.39,1922.33 27531,2056 C27653.25,2139.97 27696.21,2319.66 27711.16,2424.96 " fill="none" id="executor.baseExecutor&lt;-executor.ExplainExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.93,1853.62,25285.1199,1860.7855,25291.4226,1864.2892,25292.2327,1857.1237,25285.93,1853.62" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f72a97ade348382e4c8e1badbb6e6b46]
reverse link executor.baseExecutor to executor.GrantExec--><path d="M25182.48,1865.14 C25154.25,1915.7 25114.67,1967.47 25062,1996 C24884.08,2092.38 10674.13,1965.79 10493,2056 C10363.32,2120.59 10269.28,2260.11 10212.81,2366.89 " fill="none" id="executor.baseExecutor&lt;-executor.GrantExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.7,1853.7,25182.323,1857.0665,25182.9778,1864.2478,25189.3548,1860.8813,25188.7,1853.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f452a8b59d3b5f0b7ca6de61559c290c]
reverse link executor.baseExecutor to executor.HashAggExec--><path d="M25291.88,1865.41 C25318.46,1915.56 25356.08,1966.96 25407,1996 C25648.37,2133.64 27674.48,1903.89 27907,2056 C27971.9,2098.46 28017.12,2166.63 28048.47,2237.22 " fill="none" id="executor.baseExecutor&lt;-executor.HashAggExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.87,1853.72,25285.0635,1860.8859,25291.368,1864.3864,25292.1745,1857.2205,25285.87,1853.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ee24fb2564922b7398ce57be86063704]
reverse link executor.baseHashAggWorker to executor.HashAggFinalWorker--><path d="M23243.23,858.71 C23250.82,1020.02 23269.83,1423.97 23278.96,1617.86 " fill="none" id="executor.baseHashAggWorker&lt;-executor.HashAggFinalWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="23242.62,845.69,23238.908,851.8723,23243.187,857.6766,23246.899,851.4943,23242.62,845.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[67391c3e8b439024968e1bcec081d41d]
reverse link executor.baseHashAggWorker to executor.HashAggPartialWorker--><path d="M23204.39,857.26 C23119.51,1017.59 22904.68,1423.38 22801.72,1617.86 " fill="none" id="executor.baseHashAggWorker&lt;-executor.HashAggPartialWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="23210.52,845.69,23204.1781,849.1223,23204.9072,856.2964,23211.2491,852.8642,23210.52,845.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8608a52182b68ac03ffae69442cb5bfd]
reverse link executor.baseExecutor to executor.HashJoinExec--><path d="M25291.83,1865.5 C25318.4,1915.66 25356.03,1967.05 25407,1996 C25548.09,2076.13 28174.62,2000.25 28327,2056 C28398.17,2082.04 28466.99,2121.25 28530.54,2165.87 " fill="none" id="executor.baseExecutor&lt;-executor.HashJoinExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.82,1853.81,25285.0065,1860.9751,25291.3076,1864.4818,25292.121,1857.3167,25285.82,1853.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[195b79d982fc250a9d13fa2d395a93f4]
reverse link executor.baseExecutor to executor.IndexAdviseExec--><path d="M25291.57,1865.32 C25318.14,1915.61 25355.84,1967.13 25407,1996 C25602.16,2106.11 29257.02,1926.65 29440,2056 C29566.86,2145.68 29597.52,2343.32 29604.82,2444.37 " fill="none" id="executor.baseExecutor&lt;-executor.IndexAdviseExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.56,1853.6,25284.7465,1860.7651,25291.0476,1864.2718,25291.861,1857.1067,25285.56,1853.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[39295a4ba8092f0ddae89d47c1f17cb4]
reverse link executor.baseExecutor to executor.IndexLookUpExecutor--><path d="M25101.22,1861.99 C25038.23,1914.53 24959.34,1968.62 24877,1996 C24619.45,2081.65 5578.69,1936.48 5335,2056 C5258.33,2093.6 5193.52,2156.89 5141.27,2224.33 " fill="none" id="executor.baseExecutor&lt;-executor.IndexLookUpExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25111.19,1853.58,25104.0245,1854.3896,25102.0159,1861.3153,25109.1814,1860.5057,25111.19,1853.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d2f744eba078221f40b8dcfb2feb6b02]
reverse link executor.checkIndexValue to executor.IndexLookUpExecutor--><path d="M8495.05,1781.51 C8464.56,1846.07 8403.97,1950.56 8315,1996 C8020.07,2146.64 5631.09,1907.63 5335,2056 C5258.99,2094.09 5194.52,2157.21 5142.38,2224.31 " fill="none" id="executor.checkIndexValue&lt;-executor.IndexLookUpExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8500.57,1769.55,8494.4264,1773.3258,8495.5488,1780.449,8501.6924,1776.6732,8500.57,1769.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[99f5f9a17024accf8efa43298dbcc785]
reverse link executor.dataReaderBuilder to executor.IndexLookUpExecutor--><path d="M24000.28,1807.72 C23863.35,1873.03 23657.65,1959.87 23467,1996 C23219.57,2042.89 5561.09,1945.08 5335,2056 C5258.34,2093.61 5193.53,2156.9 5141.28,2224.34 " fill="none" id="executor.dataReaderBuilder&lt;-executor.IndexLookUpExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="24012.08,1802.07,24004.941,1801.0527,24001.2562,1807.2512,24008.3952,1808.2685,24012.08,1802.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[011991434674fb677b09cbd8d03daf89]
reverse link executor.baseExecutor to executor.IndexLookUpJoin--><path d="M25291.46,1865.52 C25318.01,1915.84 25355.73,1967.33 25407,1996 C25611.42,2110.3 33633.34,1942.14 33838,2056 C33940.3,2112.92 34010.89,2223.75 34056.1,2321.23 " fill="none" id="executor.baseExecutor&lt;-executor.IndexLookUpJoin" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.45,1853.8,25284.6259,1860.9639,25290.9218,1864.4799,25291.7458,1857.316,25285.45,1853.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3a39ab6aeb5586a60aa05ffbd1fd7b46]
reverse link executor.baseExecutor to executor.IndexLookUpMergeJoin--><path d="M25291.55,1865.35 C25318.12,1915.64 25355.82,1967.16 25407,1996 C25618.43,2115.14 29558.99,1945.38 29775,2056 C29892.42,2116.13 29979.12,2238.82 30034.71,2340.99 " fill="none" id="executor.baseExecutor&lt;-executor.IndexLookUpMergeJoin" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.55,1853.63,25284.7259,1860.7939,25291.0218,1864.3099,25291.8458,1857.146,25285.55,1853.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e38e4d3e02eb37b3336b1ab02487705c]
reverse link executor.baseExecutor to executor.IndexMergeReaderExecutor--><path d="M25116.57,1862.74 C25060.58,1914.93 24989.85,1968.54 24914,1996 C24671.4,2083.82 6578.79,1963.35 6338,2056 C6243.05,2092.53 6154.74,2156.15 6079.49,2224.26 " fill="none" id="executor.baseExecutor&lt;-executor.IndexMergeReaderExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25126.13,1853.7,25119.0212,1854.9104,25117.4044,1861.9379,25124.5132,1860.7275,25126.13,1853.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9418b6e1bcb7aeb384898049bc0ecbc2]
reverse link executor.checkIndexValue to executor.IndexMergeReaderExecutor--><path d="M8494.85,1781.63 C8464.24,1846.05 8403.61,1950.17 8315,1996 C8119.8,2096.96 6542.02,1974.31 6338,2056 C6244.24,2093.54 6156.67,2156.93 6081.77,2224.47 " fill="none" id="executor.checkIndexValue&lt;-executor.IndexMergeReaderExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8500.39,1769.69,8494.2317,1773.4417,8495.3262,1780.5692,8501.4845,1776.8176,8500.39,1769.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[87b905d98205d039c7164451d833f5cf]
reverse link executor.dataReaderBuilder to executor.IndexMergeReaderExecutor--><path d="M24000.28,1807.71 C23863.35,1873.02 23657.65,1959.85 23467,1996 C23233.26,2040.32 6560.02,1970.54 6338,2056 C6243.06,2092.55 6154.74,2156.17 6079.49,2224.28 " fill="none" id="executor.dataReaderBuilder&lt;-executor.IndexMergeReaderExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="24012.07,1802.06,24004.93,1801.0497,24001.2513,1807.2519,24008.3913,1808.2622,24012.07,1802.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c40a9061af18706485e3ba0fb286b75f]
reverse link executor.IndexLookUpJoin to executor.IndexNestedLoopHashJoin--><path d="M34064.3,2706.36 C34025.94,2837.89 33976.6,3007.07 33942.85,3122.78 " fill="none" id="executor.IndexLookUpJoin&lt;-executor.IndexNestedLoopHashJoin" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="34067.97,2693.76,34062.4496,2698.3995,34064.609,2705.2797,34070.1294,2700.6402,34067.97,2693.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[01d25d6a05e6f84e2b42f16f5cd8a173]
reverse link executor.baseExecutor to executor.IndexReaderExecutor--><path d="M25182.5,1865.16 C25154.27,1915.72 25114.68,1967.49 25062,1996 C24844.02,2113.98 7421.65,1917.64 7216,2056 C7127.79,2115.35 7081.6,2225.1 7057.43,2321.4 " fill="none" id="executor.baseExecutor&lt;-executor.IndexReaderExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.71,1853.72,25182.333,1857.0865,25182.9878,1864.2678,25189.3648,1860.9013,25188.71,1853.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[773415092e021496ab1ad0f46558dee2]
reverse link executor.selectResultHook to executor.IndexReaderExecutor--><path d="M25024.04,845.91 C25027.66,1072.77 25035.35,1916.27 24951,1996 C24861.5,2080.6 7318.18,1987.25 7216,2056 C7127.79,2115.35 7081.6,2225.1 7057.43,2321.4 " fill="none" id="executor.selectResultHook&lt;-executor.IndexReaderExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25023.82,832.79,25019.9194,838.8551,25024.0178,844.7884,25027.9183,838.7233,25023.82,832.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c5c5f1780f544a67800e46ccf84b3dd8]
reverse link executor.InsertValues to executor.InsertExec--><path d="M22421.1,2845.45 C22374.49,2891.08 22321.83,2931.57 22264,2959 C21810.1,3174.31 14281.59,3239.78 12332.68,3253.16 " fill="none" id="executor.InsertValues&lt;-executor.InsertExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="22430.34,2836.25,22423.2646,2837.6422,22421.8284,2844.7088,22428.9038,2843.3166,22430.34,2836.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[234cd0d31596984e835e32ebdc812dc0]
reverse link executor.baseExecutor to executor.InsertValues--><path d="M25181.56,1865.43 C25153.32,1915.58 25113.96,1966.98 25062,1996 C24866.24,2105.31 23247.58,1959.92 23045,2056 C22983.24,2085.29 22927.34,2129.42 22878.38,2178.79 " fill="none" id="executor.baseExecutor&lt;-executor.InsertValues" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25187.96,1853.74,25181.5697,1857.0813,25182.1962,1864.2652,25188.5865,1860.9238,25187.96,1853.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[387846ff2ba1b4f330c57a439d91e3e8]
reverse link executor.baseExecutor to executor.LimitExec--><path d="M25291.53,1865.4 C25318.09,1915.69 25355.8,1967.21 25407,1996 C25650.89,2133.13 30212.58,1897.27 30443,2056 C30561.77,2137.82 30601.29,2312.19 30614.44,2418.4 " fill="none" id="executor.baseExecutor&lt;-executor.LimitExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.52,1853.68,25284.6959,1860.8439,25290.9918,1864.3599,25291.8158,1857.196,25285.52,1853.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[63836aa3469e24ae1f4aa2d0a453b540]
reverse link executor.baseExecutor to executor.LoadDataExec--><path d="M25291.52,1865.42 C25318.08,1915.72 25355.78,1967.23 25407,1996 C25537.59,2069.36 30676.53,1969.77 30799,2056 C30923.3,2143.52 30955.26,2334.75 30963.35,2437.67 " fill="none" id="executor.baseExecutor&lt;-executor.LoadDataExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.51,1853.7,25284.6859,1860.8639,25290.9818,1864.3799,25291.8058,1857.216,25285.51,1853.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5b1d8ac0310769f656b81ff272cb23db]
reverse link executor.InsertValues to executor.LoadDataInfo--><path d="M22654,2849.45 C22654,2906.71 22654,2965.01 22654,3018.91 " fill="none" id="executor.InsertValues&lt;-executor.LoadDataInfo" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="22654,2836.09,22650,2842.09,22654,2848.09,22658,2842.09,22654,2836.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[20f810d1429ecf1f007de0e147cc9358]
reverse link executor.baseExecutor to executor.LoadStatsExec--><path d="M25291.51,1865.43 C25318.07,1915.74 25355.77,1967.25 25407,1996 C25545.73,2073.87 31003.89,1964.45 31134,2056 C31266.69,2149.36 31294.15,2360.9 31299.69,2457.16 " fill="none" id="executor.baseExecutor&lt;-executor.LoadStatsExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.5,1853.71,25284.6759,1860.8739,25290.9718,1864.3899,25291.7958,1857.226,25285.5,1853.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[45a3a681740fed090633d0f206a529e6]
reverse link executor.baseExecutor to executor.MaxOneRowExec--><path d="M25182.49,1865.16 C25154.27,1915.72 25114.68,1967.48 25062,1996 C24852.21,2109.57 8081.71,1919.6 7886,2056 C7749.55,2151.1 7723.73,2371.07 7718.99,2463.92 " fill="none" id="executor.baseExecutor&lt;-executor.MaxOneRowExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.7,1853.71,25182.323,1857.0765,25182.9778,1864.2578,25189.3548,1860.8913,25188.7,1853.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[311da8122c0d546e481b8db233f7a7b4]
reverse link executor.baseExecutor to executor.MemTableReaderExec--><path d="M25291.5,1865.45 C25318.06,1915.75 25355.77,1967.26 25407,1996 C25553.87,2078.39 31331.25,1959.14 31469,2056 C31593.35,2143.44 31625.29,2334.7 31633.37,2437.65 " fill="none" id="executor.baseExecutor&lt;-executor.MemTableReaderExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.49,1853.73,25284.6659,1860.8939,25290.9618,1864.4099,25291.7858,1857.246,25285.49,1853.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b549323bfcfa2bf969bdc31ea27a9b3b]
reverse link executor.baseExecutor to executor.MergeJoinExec--><path d="M25291.49,1865.46 C25318.05,1915.77 25355.76,1967.27 25407,1996 C25562.01,2082.9 31655.29,1958.71 31804,2056 C31913.3,2127.5 31964.05,2273.49 31987.23,2379.96 " fill="none" id="executor.baseExecutor&lt;-executor.MergeJoinExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.49,1853.74,25284.6589,1860.9031,25290.9513,1864.4252,25291.7824,1857.2622,25285.49,1853.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d13b42b99a6a313db8fce063349bfabb]
reverse link executor.dummyCloser to executor.MetricRetriever--><path d="M20035.4,830.6 C20126.87,971.27 20431.61,1439.91 20559.61,1636.74 " fill="none" id="executor.dummyCloser&lt;-executor.MetricRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="20028.2,819.53,20028.1231,826.7407,20034.7496,829.585,20034.8265,822.3743,20028.2,819.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8d2890401bb68b99f8bed5da3774e70a]
reverse link executor.dummyCloser to executor.MetricsSummaryByLabelRetriever--><path d="M20071.09,826.21 C20229,919.72 20655.35,1181.27 20966,1456 C21041.74,1522.98 21117.68,1612.31 21163.52,1669.26 " fill="none" id="executor.dummyCloser&lt;-executor.MetricsSummaryByLabelRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="20059.75,819.51,20062.8823,826.0053,20070.0827,825.6121,20066.9504,819.1168,20059.75,819.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d32cb041aeede9af3d3f5d804a4ac26d]
reverse link executor.dummyCloser to executor.MetricsSummaryRetriever--><path d="M20056.12,827.72 C20194.83,936.56 20617.54,1252.49 21024,1396 C21203.46,1459.36 21280.67,1365.31 21448,1456 C21539.73,1505.72 21612.39,1606.28 21651.43,1669.37 " fill="none" id="executor.dummyCloser&lt;-executor.MetricsSummaryRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="20045.86,819.65,20048.0994,826.5046,20055.288,827.0738,20053.0486,820.2192,20045.86,819.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[604a9672e9b28011f1d2a1b60eb778e7]
reverse link executor.baseExecutor to executor.NestedLoopApplyExec--><path d="M25291.48,1865.48 C25318.04,1915.79 25355.75,1967.29 25407,1996 C25571.82,2088.34 32045.13,1960.26 32208,2056 C32303.87,2112.36 32366.85,2219.34 32406.34,2314.91 " fill="none" id="executor.baseExecutor&lt;-executor.NestedLoopApplyExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.48,1853.75,25284.6559,1860.9139,25290.9518,1864.4299,25291.7758,1857.266,25285.48,1853.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[48d63b1738a69548fe16ecd4a6ec34da]
reverse link executor.baseExecutor to executor.PointGetExecutor--><path d="M25291.47,1865.49 C25318.03,1915.8 25355.74,1967.3 25407,1996 C25584.26,2095.24 32551.3,1942.83 32720,2056 C32806.55,2114.06 32853.55,2220.17 32879.04,2314.83 " fill="none" id="executor.baseExecutor&lt;-executor.PointGetExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.47,1853.77,25284.6389,1860.9331,25290.9313,1864.4552,25291.7624,1857.2922,25285.47,1853.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f10125c96e849a1f5c71cb65eecc7e77]
reverse link executor.baseExecutor to executor.PrepareExec--><path d="M25182.49,1865.14 C25154.26,1915.7 25114.67,1967.47 25062,1996 C24875.69,2096.9 9980.8,1934.82 9807,2056 C9684.78,2141.22 9651.32,2326.62 9642.26,2431.07 " fill="none" id="executor.baseExecutor&lt;-executor.PrepareExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.7,1853.7,25182.3212,1857.0632,25182.9723,1864.2448,25189.3511,1860.8817,25188.7,1853.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eccef2d7a20594529dae038378d5d5d1]
reverse link executor.baseExecutor to executor.ProjectionExec--><path d="M25291.47,1865.5 C25318.02,1915.82 25355.74,1967.31 25407,1996 C25593.44,2100.33 32919.12,1939.18 33098,2056 C33192.37,2117.63 33243.09,2234.82 33270.1,2334.22 " fill="none" id="executor.baseExecutor&lt;-executor.ProjectionExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.46,1853.78,25284.6289,1860.9431,25290.9213,1864.4652,25291.7524,1857.3022,25285.46,1853.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ee7ef7793223a779df61f5fcaf6cabd5]
reverse link executor.baseExecutor to executor.RecoverIndexExec--><path d="M25182.48,1865.13 C25154.25,1915.69 25114.66,1967.46 25062,1996 C24892.6,2087.79 11362.81,1970.81 11190,2056 C11074.64,2112.87 10986.44,2228.15 10927.57,2327.86 " fill="none" id="executor.baseExecutor&lt;-executor.RecoverIndexExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.69,1853.69,25182.313,1857.0565,25182.9678,1864.2378,25189.3448,1860.8713,25188.69,1853.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a27d27ba932a26fa7b450e0f0551affd]
reverse link executor.baseExecutor to executor.ReloadExprPushdownBlacklistExec--><path d="M25182.48,1865.13 C25154.25,1915.69 25114.66,1967.46 25062,1996 C24896.55,2085.66 11666.7,1947.42 11513,2056 C11370.95,2156.35 11352.88,2393.64 11351.02,2476.96 " fill="none" id="executor.baseExecutor&lt;-executor.ReloadExprPushdownBlacklistExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.69,1853.69,25182.3097,1857.0504,25182.9576,1864.2323,25189.3379,1860.8719,25188.69,1853.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[739579f5bc98e2eabf757e91b7fb301f]
reverse link executor.baseExecutor to executor.ReloadOptRuleBlacklistExec--><path d="M25182.48,1865.13 C25154.25,1915.68 25114.66,1967.46 25062,1996 C24900.5,2083.53 11986.03,1950.01 11836,2056 C11693.95,2156.35 11675.89,2393.64 11674.02,2476.96 " fill="none" id="executor.baseExecutor&lt;-executor.ReloadOptRuleBlacklistExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.69,1853.69,25182.3112,1857.0532,25182.9623,1864.2348,25189.3411,1860.8717,25188.69,1853.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a8daac64906d3a8e2f4bd486ba5f149]
reverse link executor.InsertValues to executor.ReplaceExec--><path d="M22889.95,2845.54 C22936.18,2890.71 22988.17,2931.03 23045,2959 C23473.82,3170.05 26823.53,3236.89 27818.95,3252.2 " fill="none" id="executor.InsertValues&lt;-executor.ReplaceExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="22880.48,2836.14,22881.9217,2843.2055,22888.9982,2844.5923,22887.5565,2837.5267,22880.48,2836.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fd71103a9a51001f1c53916d8ac1cb70]
reverse link executor.baseExecutor to executor.RevokeExec--><path d="M25182.47,1865.12 C25154.24,1915.68 25114.66,1967.45 25062,1996 C24754.13,2162.91 12764.58,1892.29 12455,2056 C12326.38,2124.01 12240.66,2272.04 12192.57,2379.91 " fill="none" id="executor.baseExecutor&lt;-executor.RevokeExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.69,1853.68,25182.313,1857.0465,25182.9678,1864.2278,25189.3448,1860.8613,25188.69,1853.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9bee2dfde697f299bdbd2820ef44563e]
reverse link executor.baseExecutor to executor.SQLBindExec--><path d="M25182.47,1865.12 C25154.24,1915.67 25114.66,1967.45 25062,1996 C24912.16,2077.25 12929.77,1958.44 12790,2056 C12685.96,2128.62 12646.24,2273.82 12631.14,2379.81 " fill="none" id="executor.baseExecutor&lt;-executor.SQLBindExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.68,1853.68,25182.303,1857.0465,25182.9578,1864.2278,25189.3348,1860.8613,25188.68,1853.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d51b30f409c2a95f5e59df28e5de1981]
reverse link executor.baseExecutor to executor.SelectIntoExec--><path d="M25181.94,1865.45 C25153.7,1915.75 25114.26,1967.26 25062,1996 C24888.87,2091.22 21667.34,1941.94 21506,2056 C21395.92,2133.82 21357.87,2292.74 21344.78,2399.47 " fill="none" id="executor.baseExecutor&lt;-executor.SelectIntoExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.33,1853.72,25181.948,1857.077,25182.5921,1864.2593,25188.9741,1860.9023,25188.33,1853.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9e794649426fe9bde4495cea0fc115b6]
reverse link executor.baseExecutor to executor.SelectLockExec--><path d="M25182.47,1865.11 C25154.24,1915.67 25114.65,1967.44 25062,1996 C24916.26,2075.04 13260.95,1961.1 13125,2056 C13002.82,2141.29 12969.35,2326.66 12960.28,2431.09 " fill="none" id="executor.baseExecutor&lt;-executor.SelectLockExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.68,1853.68,25182.303,1857.0465,25182.9578,1864.2278,25189.3348,1860.8613,25188.68,1853.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f32fbcc3e7090b79eb509cb509ca4bce]
reverse link executor.baseExecutor to executor.SelectionExec--><path d="M25181.91,1865.39 C25153.67,1915.69 25114.23,1967.2 25062,1996 C24908.09,2080.86 22045.16,1958.4 21899,2056 C21784.17,2132.68 21735.8,2292.31 21715.75,2399.45 " fill="none" id="executor.baseExecutor&lt;-executor.SelectionExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.3,1853.67,25181.9147,1857.0208,25182.5519,1864.2037,25188.9372,1860.8529,25188.3,1853.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7c9edda7e561b1e3f87674f0531e9cc9]
reverse link executor.baseExecutor to executor.SetConfigExec--><path d="M25182.47,1865.11 C25154.23,1915.66 25114.65,1967.44 25062,1996 C24924.45,2070.62 13923.3,1966.41 13795,2056 C13667.53,2145.01 13636.62,2342.96 13629.23,2444.22 " fill="none" id="executor.baseExecutor&lt;-executor.SetConfigExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.68,1853.67,25182.3012,1857.0332,25182.9523,1864.2148,25189.3311,1860.8517,25188.68,1853.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[693ce12f9f2abf25bca99a6110af4314]
reverse link executor.baseExecutor to executor.SetExecutor--><path d="M25182.46,1865.1 C25154.23,1915.65 25114.65,1967.43 25062,1996 C24799.98,2138.19 14588.73,1907.91 14330,2056 C14191.19,2135.45 14116.66,2318.14 14083.57,2424.87 " fill="none" id="executor.baseExecutor&lt;-executor.SetExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.67,1853.66,25182.2897,1857.0204,25182.9376,1864.2023,25189.3179,1860.8419,25188.67,1853.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0740b6dd5c92c5660bba3ac3087b1dd7]
reverse link executor.baseExecutor to executor.ShowDDLExec--><path d="M25182.46,1865.09 C25154.23,1915.65 25114.64,1967.42 25062,1996 C24935.09,2064.89 14783.38,1973.3 14665,2056 C14534.82,2146.95 14505.34,2351.53 14498.79,2450.61 " fill="none" id="executor.baseExecutor&lt;-executor.ShowDDLExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.67,1853.66,25182.293,1857.0265,25182.9478,1864.2078,25189.3248,1860.8413,25188.67,1853.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[10c922caaa2f847cd1bd7be4f2016ab6]
reverse link executor.baseExecutor to executor.ShowDDLJobQueriesExec--><path d="M25182.46,1865.09 C25154.22,1915.64 25114.64,1967.42 25062,1996 C24816.36,2129.36 15229.11,1895.9 15000,2056 C14869.83,2146.96 14840.35,2351.53 14833.79,2450.61 " fill="none" id="executor.baseExecutor&lt;-executor.ShowDDLJobQueriesExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.67,1853.65,25182.288,1857.007,25182.9321,1864.1893,25189.3141,1860.8323,25188.67,1853.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c4b96b2038a74622ed1b34e2b4ae537b]
reverse link executor.DDLJobRetriever to executor.ShowDDLJobsExec--><path d="M25605.65,1812.97 C25561.53,1876.55 25492.04,1958.38 25407,1996 C25174.75,2098.76 21043.65,1909.79 20836,2056 C20706.15,2147.43 20676.52,2351.77 20669.86,2450.71 " fill="none" id="executor.DDLJobRetriever&lt;-executor.ShowDDLJobsExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25613.05,1802.13,25606.3627,1804.8282,25606.2814,1812.0389,25612.9686,1809.3406,25613.05,1802.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7f254f20dc96f7c12917e470495d6b86]
reverse link executor.baseExecutor to executor.ShowDDLJobsExec--><path d="M25181.98,1865.52 C25153.75,1915.83 25114.3,1967.33 25062,1996 C24856.11,2108.88 21027.91,1920.72 20836,2056 C20706.2,2147.5 20676.54,2351.81 20669.87,2450.72 " fill="none" id="executor.baseExecutor&lt;-executor.ShowDDLJobsExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.37,1853.79,25181.988,1857.147,25182.6321,1864.3293,25189.0141,1860.9723,25188.37,1853.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6224669aa66ac9a23bd3c315ec1c2f9b]
reverse link executor.baseExecutor to executor.ShowExec--><path d="M25182.45,1865.08 C25154.22,1915.62 25114.63,1967.41 25062,1996 C24836.68,2118.41 16065.57,1952.41 15831,2056 C15825.04,2058.63 15819.12,2061.4 15813.25,2064.29 " fill="none" id="executor.baseExecutor&lt;-executor.ShowExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.66,1853.64,25182.283,1857.0065,25182.9378,1864.1878,25189.3148,1860.8213,25188.66,1853.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[53f6bbe861cb143c1564175a20385c7d]
reverse link executor.baseExecutor to executor.ShowNextRowIDExec--><path d="M25182.45,1865.07 C25154.21,1915.62 25114.63,1967.4 25062,1996 C24844.87,2113.99 16368.51,1914.37 16166,2056 C16029.7,2151.32 16003.8,2371.17 15999.01,2463.95 " fill="none" id="executor.baseExecutor&lt;-executor.ShowNextRowIDExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.66,1853.63,25182.278,1856.987,25182.9221,1864.1693,25189.3041,1860.8123,25188.66,1853.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3d9a551e7402f2b7a4b5848d4eec87a2]
reverse link executor.baseExecutor to executor.ShowSlowExec--><path d="M25182.44,1865.06 C25154.21,1915.61 25114.63,1967.39 25062,1996 C24853.06,2109.58 16695.86,1919.68 16501,2056 C16373.61,2145.12 16342.66,2343.02 16335.25,2444.24 " fill="none" id="executor.baseExecutor&lt;-executor.ShowSlowExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.65,1853.62,25182.273,1856.9865,25182.9278,1864.1678,25189.3048,1860.8013,25188.65,1853.62" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2e75ddd203d7beddf580377d6625d1e9]
reverse link executor.baseExecutor to executor.ShuffleExec--><path d="M25181.87,1865.32 C25153.63,1915.61 25114.2,1967.14 25062,1996 C24925.94,2071.24 22392.04,1967.8 22264,2056 C22156.16,2130.29 22111.81,2279.96 22093.62,2386.38 " fill="none" id="executor.baseExecutor&lt;-executor.ShuffleExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.27,1853.61,25181.8847,1856.9608,25182.5219,1864.1437,25188.9072,1860.7929,25188.27,1853.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fbfd0df5566cd3bf528e683de334a636]
reverse link executor.baseExecutor to executor.SimpleExec--><path d="M25182.43,1865.04 C25154.2,1915.59 25114.62,1967.37 25062,1996 C24871.52,2099.63 17439.06,1939.77 17256,2056 C17181.86,2103.07 17132.58,2183.38 17100.09,2263.27 " fill="none" id="executor.baseExecutor&lt;-executor.SimpleExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.65,1853.61,25182.273,1856.9765,25182.9278,1864.1578,25189.3048,1860.7913,25188.65,1853.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[26e312985218235bf9f8a9830a5d4593]
reverse link executor.baseExecutor to executor.SortExec--><path d="M25291.46,1865.51 C25318.02,1915.83 25355.73,1967.32 25407,1996 C25603.28,2105.78 33318.87,1926.87 33503,2056 C33590.58,2117.42 33632.33,2230.37 33652.18,2327.8 " fill="none" id="executor.baseExecutor&lt;-executor.SortExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25285.46,1853.79,25284.6289,1860.9531,25290.9213,1864.4752,25291.7524,1857.3122,25285.46,1853.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0256c473080193c29f51adf9dac99dfe]
reverse link executor.baseExecutor to executor.SplitIndexRegionExec--><path d="M25089.33,1861.82 C25021.1,1914.48 24936.17,1968.71 24849,1996 C24581.06,2079.88 4876.46,1914.43 4634,2056 C4522.23,2121.26 4455.23,2255.46 4417.99,2360.5 " fill="none" id="executor.baseExecutor&lt;-executor.SplitIndexRegionExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25099.7,1853.72,25092.5084,1854.2497,25090.2313,1861.0919,25097.4229,1860.5622,25099.7,1853.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2f94ac233ff505f4759da72913a1b35e]
reverse link executor.splitRegionResult to executor.SplitIndexRegionExec--><path d="M4641.42,1775.96 C4625.1,1830.07 4597.46,1919.69 4571,1996 C4528.09,2119.76 4475.24,2258.74 4435.7,2360.4 " fill="none" id="executor.splitRegionResult&lt;-executor.SplitIndexRegionExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4645.22,1763.32,4639.6612,1767.9135,4641.7634,1774.8114,4647.3221,1770.2179,4645.22,1763.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[510bba1c8f446633dc03e2a4d9896821]
reverse link executor.baseExecutor to executor.SplitTableRegionExec--><path d="M25089.33,1861.82 C25021.1,1914.48 24936.17,1968.71 24849,1996 C24574.27,2081.99 4374.73,1918.16 4122,2056 C4001.61,2121.66 3923.16,2260.64 3878.2,2366.99 " fill="none" id="executor.baseExecutor&lt;-executor.SplitTableRegionExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25099.7,1853.72,25092.5084,1854.2497,25090.2313,1861.0919,25097.4229,1860.5622,25099.7,1853.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f9c912a964322e79bc91ffc1bfa2b9db]
reverse link executor.splitRegionResult to executor.SplitTableRegionExec--><path d="M4655.44,1776.39 C4651.87,1837.9 4635.84,1941.52 4571,1996 C4416.86,2125.51 4292.12,1948.33 4122,2056 C4007.71,2128.34 3929.16,2263.44 3882.56,2366.89 " fill="none" id="executor.splitRegionResult&lt;-executor.SplitTableRegionExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4656.05,1763.19,4651.7773,1768.999,4655.4961,1775.1772,4659.7688,1769.3682,4656.05,1763.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[82a9c3549220ae3ac4d316a40d370dfb]
reverse link executor.baseExecutor to executor.StreamAggExec--><path d="M25181.22,1865.48 C25152.97,1915.49 25113.7,1966.78 25062,1996 C24772.35,2159.71 23850.87,1884.12 23566,2056 C23455.13,2122.89 23386.62,2255.98 23347.77,2360.24 " fill="none" id="executor.baseExecutor&lt;-executor.StreamAggExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25187.63,1853.83,25181.2315,1857.1556,25181.8404,1864.341,25188.2389,1861.0154,25187.63,1853.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[540bc18640469d45f7b360f05e37f087]
reverse link executor.baseExecutor to executor.TableDualExec--><path d="M25182.41,1865.01 C25154.17,1915.55 25114.6,1967.34 25062,1996 C24899.62,2084.48 18556.42,1949.85 18405,2056 C18272.06,2149.2 18244.15,2360.83 18238.41,2457.13 " fill="none" id="executor.baseExecutor&lt;-executor.TableDualExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.63,1853.57,25182.2497,1856.9304,25182.8976,1864.1123,25189.2779,1860.7519,25188.63,1853.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3bdc262043fcba5cfbe23594e200e3fd]
reverse link executor.baseExecutor to executor.TableReaderExecutor--><path d="M25165.35,1864.51 C25130.21,1915.58 25083.04,1967.89 25025,1996 C24797.78,2106.05 7064.9,1928.47 6847,2056 C6751.11,2112.12 6688.37,2219.1 6649.12,2314.72 " fill="none" id="executor.baseExecutor&lt;-executor.TableReaderExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25172.66,1853.64,25165.9918,1856.3851,25165.9611,1863.5961,25172.6292,1860.851,25172.66,1853.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ad1bcd306dd10bca8cdbea33d6637fb1]
reverse link executor.selectResultHook to executor.TableReaderExecutor--><path d="M25016.98,845.89 C24991.69,1078.24 24893.33,1957.48 24849,1996 C24754.64,2078 6954.89,1992.85 6847,2056 C6751.11,2112.12 6688.37,2219.1 6649.12,2314.72 " fill="none" id="executor.selectResultHook&lt;-executor.TableReaderExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25018.4,832.79,25013.7773,838.3245,25017.1081,844.7203,25021.7308,839.1858,25018.4,832.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0a526f7a1281e4453adb4287dcf0ca5a]
reverse link executor.baseExecutor to executor.TableScanExec--><path d="M25182.4,1864.99 C25154.16,1915.53 25114.59,1967.32 25062,1996 C24910.35,2078.7 18990.06,1963.8 18844,2056 C18724.76,2131.27 18668.34,2291.68 18642.97,2399.33 " fill="none" id="executor.baseExecutor&lt;-executor.TableScanExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.62,1853.56,25182.243,1856.9265,25182.8978,1864.1078,25189.2748,1860.7413,25188.62,1853.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[68953d322f660a21e8e8dd1c8752808f]
reverse link executor.SortExec to executor.TopNExec--><path d="M33614.26,2699.62 C33573.42,2839.65 33519.36,3025.03 33485.12,3142.43 " fill="none" id="executor.SortExec&lt;-executor.TopNExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="33617.92,2687.07,33612.4045,2691.7153,33614.5711,2698.5932,33620.0867,2693.9479,33617.92,2687.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[97d27d9c29c62a32571daec15cc2fe3e]
reverse link executor.baseExecutor to executor.TraceExec--><path d="M25182.39,1864.97 C25154.15,1915.5 25114.58,1967.3 25062,1996 C24784.08,2147.71 19636.36,1896.22 19363,2056 C19233.97,2131.42 19163.11,2297.6 19129.13,2405.68 " fill="none" id="executor.baseExecutor&lt;-executor.TraceExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.61,1853.53,25182.228,1856.887,25182.8721,1864.0693,25189.2541,1860.7123,25188.61,1853.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[64ceeb78d8314f11249aae3e1037aec3]
reverse link executor.baseExecutor to executor.UnionExec--><path d="M25181.05,1865.18 C25152.77,1915.14 25113.53,1966.48 25062,1996 C24837.83,2124.42 24109.33,1903.23 23901,2056 C23794.81,2133.87 23755.7,2286.83 23741.32,2392.77 " fill="none" id="executor.baseExecutor&lt;-executor.UnionExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25187.46,1853.54,25181.0615,1856.8656,25181.6704,1864.051,25188.0689,1860.7254,25187.46,1853.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c92dd5dbc4b0ccb50f6016f3ba1db015]
reverse link executor.baseExecutor to executor.UnionScanExec--><path d="M25181.99,1865.54 C25153.77,1915.86 25114.31,1967.35 25062,1996 C24839.73,2117.71 20713.69,1918.23 20501,2056 C20409.91,2115 20357.87,2224.9 20328.5,2321.37 " fill="none" id="executor.baseExecutor&lt;-executor.UnionScanExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25188.38,1853.82,25181.9947,1857.1708,25182.6319,1864.3537,25189.0172,1861.0029,25188.38,1853.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[760b747d7dc1d890c4272a7718372784]
reverse link executor.baseExecutor to executor.UpdateExec--><path d="M25179.18,1865.24 C25150.85,1914.48 25112.07,1965.29 25062,1996 C24857.66,2121.32 24731.91,1933.27 24526,2056 C24414.23,2122.62 24332.61,2246.45 24280.8,2347.44 " fill="none" id="executor.baseExecutor&lt;-executor.UpdateExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25185.61,1853.77,25179.1855,1857.045,25179.7375,1864.2349,25186.1621,1860.9599,25185.61,1853.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e5842a4d16c2d2c906b81d18c2caf1f3]
reverse link executor.baseExecutor to executor.WindowExec--><path d="M25173.18,1864.85 C25144.74,1912.12 25107.44,1961.7 25062,1996 C24990.98,2049.61 24935.85,1995.07 24871,2056 C24778.42,2142.99 24734.82,2284.97 24714.66,2386.28 " fill="none" id="executor.baseExecutor&lt;-executor.WindowExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.85,1853.53,25173.3577,1856.6685,25173.7577,1863.8685,25180.25,1860.73,25179.85,1853.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e019e4fd3bd50ab181b504b5b9b582f5]
reverse link executor.AnalyzeIndexExec to executor.analyzeIndexIncrementalExec--><path d="M31462.35,916.62 C31504.38,1060.93 31595.56,1290.44 31769,1396 C31957.2,1510.55 33566.52,1335.54 33751,1456 C33832.2,1509.02 33863.12,1628.68 33873.85,1688.92 " fill="none" id="executor.AnalyzeIndexExec&lt;-executor.analyzeIndexIncrementalExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="31458.68,903.79,31456.4822,910.658,31461.9767,915.3283,31464.1744,908.4603,31458.68,903.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[20902ed9396c7353f381614a1b426bea]
reverse link executor.AnalyzeColumnsExec to executor.analyzePKIncrementalExec--><path d="M32925.48,910.2 C32950.84,1052.57 33015.74,1284.46 33177,1396 C33378.52,1535.39 34078.37,1313.92 34278,1456 C34357.75,1512.76 34379.8,1637.97 34385.8,1695.3 " fill="none" id="executor.AnalyzeColumnsExec&lt;-executor.analyzePKIncrementalExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="32923.22,897.13,32920.3084,903.7272,32925.2783,908.9522,32928.1899,902.355,32923.22,897.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[63e2e1b3d7b7d4c81959f4f47b9f1714]
reverse link executor.baseJoiner to executor.antiLeftOuterSemiJoiner--><path d="M15395.27,935.68 C15478.35,1143.37 15627.28,1515.69 15686.11,1662.78 " fill="none" id="executor.baseJoiner&lt;-executor.antiLeftOuterSemiJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="15390.39,923.47,15388.9044,930.5264,15394.8467,934.6117,15396.3323,927.5553,15390.39,923.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[232327b7900dfde4cf13b7afdcee7cb8]
reverse link executor.baseJoiner to executor.antiSemiJoiner--><path d="M15521.28,931.23 C15795.27,1141.21 16297.81,1526.35 16484.58,1669.5 " fill="none" id="executor.baseJoiner&lt;-executor.antiSemiJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="15510.82,923.22,15513.1497,930.0444,15520.3452,930.5187,15518.0155,923.6943,15510.82,923.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[db4b5f1f0e34e4b77eab4fd38231dabe]
reverse link executor.dummyCloser to executor.clusterConfigRetriever--><path d="M20054.21,828.01 C20190.11,939.7 20611.11,1267.09 21024,1396 C21214.07,1455.34 21739.57,1367.62 21918,1456 C22018.72,1505.89 22094.62,1619.98 22130.35,1682.35 " fill="none" id="executor.dummyCloser&lt;-executor.clusterConfigRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="20044.17,819.73,20046.2477,826.6353,20053.421,827.3733,20051.3432,820.468,20044.17,819.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c2b37fca8c8bcd8341e46453ca8aeaa1]
reverse link executor.dummyCloser to executor.clusterServerInfoRetriever--><path d="M19940.76,804.61 C19699.71,858.59 18872.43,1064.26 18308,1456 C18219.91,1517.13 18141.98,1616.62 18099.93,1675.95 " fill="none" id="executor.dummyCloser&lt;-executor.clusterServerInfoRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="19953.46,801.78,19946.7367,799.1728,19941.7442,804.3762,19948.4675,806.9834,19953.46,801.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[14a2804634138b71d178f0fb76a1fb5e]
reverse link executor.inspectionName to executor.configInspection--><path d="M10889,832.67 C10889,984.51 10889,1498.65 10889,1669.38 " fill="none" id="executor.inspectionName&lt;-executor.configInspection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="10889,819.53,10885,825.53,10889,831.53,10893,825.53,10889,819.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f94ea2b8d3fc3fe4d89b5a2caf0c5d76]
reverse link core.Plan to executor.dataReaderBuilder--><path d="M4053.51,84.18 C3636.33,86.06 212.88,102.61 177,139 C-19.13,337.9 -20.26,1198.23 177,1396 C234.11,1453.26 23387.54,1440.97 23467,1456 C23663.22,1493.11 23875.36,1584.02 24012.08,1649.9 " fill="none" id="core.Plan&lt;-executor.dataReaderBuilder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4066.81,84.12,4060.7925,80.1464,4054.8101,84.1727,4060.8276,88.1463,4066.81,84.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c50e4ac95d37f687d4613c946bd3dd99]
reverse link executor.executorBuilder to executor.dataReaderBuilder--><path d="M24107.65,1409.01 C24122.96,1505.14 24136.75,1591.68 24146.01,1649.78 " fill="none" id="executor.executorBuilder&lt;-executor.dataReaderBuilder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="24105.57,1396.01,24102.5705,1402.5676,24107.47,1407.8586,24110.4695,1401.301,24105.57,1396.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[32fd5a154af18201858e228aa135a56e]
reverse link executor.selectResultHook to executor.dataReaderBuilder--><path d="M24974.43,842.5 C24829.06,999.63 24397.01,1466.65 24227.43,1649.96 " fill="none" id="executor.selectResultHook&lt;-executor.dataReaderBuilder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="24983.59,832.6,24976.5792,834.2879,24975.4408,841.4085,24982.4516,839.7207,24983.59,832.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d493b1b318f1684f668ba48824306457]
reverse link executor.innerWorker to executor.indexHashJoinInnerWorker--><path d="M4123.58,1856.14 C4065.85,1909.9 3991.91,1966.56 3913,1996 C3477.88,2158.32 2258.46,1891.93 1824,2056 C1658.45,2118.52 1506.97,2254.18 1406.5,2360.39 " fill="none" id="executor.innerWorker&lt;-executor.indexHashJoinInnerWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4133.07,1847.19,4125.9602,1848.3947,4124.3378,1855.421,4131.4476,1854.2162,4133.07,1847.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b11f471fe3c5284d452a3c2b859d2771]
reverse link executor.outerWorker to executor.indexHashJoinOuterWorker--><path d="M3569.29,1838.1 C3521.96,1896.66 3455.7,1963.03 3379,1996 C3110.56,2111.39 1004.55,1912.55 750,2056 C599.13,2141.03 515.65,2341.74 481.52,2444.1 " fill="none" id="executor.outerWorker&lt;-executor.indexHashJoinOuterWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3577.61,1827.65,3570.7451,1829.8577,3570.1427,1837.0435,3577.0075,1834.8359,3577.61,1827.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8f8a23452c73ab2ce90f5b644ecad5aa]
reverse link executor.lookUpJoinTask to executor.indexHashJoinTask--><path d="M10399,898.03 C10399,1095.01 10399,1506.64 10399,1662.97 " fill="none" id="executor.lookUpJoinTask&lt;-executor.indexHashJoinTask" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="10399,884.8,10395,890.8,10399,896.8,10403,890.8,10399,884.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a0bfbdc121bd8a6da9fb5a78ff86e485]
reverse link executor.checkIndexValue to executor.indexWorker--><path d="M8495.13,1781.65 C8464.7,1846.35 8404.18,1950.98 8315,1996 C8035.47,2137.11 2965.03,1928.57 2679,2056 C2520.72,2126.52 2396.06,2290.08 2326.44,2399.48 " fill="none" id="executor.checkIndexValue&lt;-executor.indexWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8500.63,1769.67,8494.4902,1773.4519,8495.6197,1780.574,8501.7595,1776.7921,8500.63,1769.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1e13dfc28f2a962adff14961cb124b0f]
reverse link executor.baseJoiner to executor.innerJoiner--><path d="M15733.14,927.57 C16071.61,1050.5 16567.74,1243.59 16980,1456 C17105.72,1520.77 17242.27,1611.7 17325.25,1669.48 " fill="none" id="executor.baseJoiner&lt;-executor.innerJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="15720.92,923.14,15725.1994,928.944,15732.2029,927.2261,15727.9235,921.4221,15720.92,923.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9bfdda70ef848d3ffaf627a629c2aea3]
reverse link executor.innerMergeCtx to executor.innerMergeWorker--><path d="M11572,878.66 C11572,1036.34 11572,1367.48 11572,1565.58 " fill="none" id="executor.innerMergeCtx&lt;-executor.innerMergeWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="11572,865.33,11568,871.33,11572,877.33,11576,871.33,11572,865.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54c2b7fb42f1694036f1dde2eaec2e99]
reverse link executor.innerCtx to executor.innerWorker--><path d="M4242,858.89 C4242,1016.78 4242,1406.37 4242,1604.75 " fill="none" id="executor.innerCtx&lt;-executor.innerWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4242,845.69,4238,851.69,4242,857.69,4246,851.69,4242,845.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[212987a87361f17e5ec4292a34e82fcf]
reverse link executor.dummyCloser to executor.inspectionResultRetriever--><path d="M19941.15,817.25 C19748.16,896.73 19184.62,1142.59 18789,1456 C18711.84,1517.13 18638.68,1604.45 18593.63,1662.85 " fill="none" id="executor.dummyCloser&lt;-executor.inspectionResultRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="19953.32,812.26,19946.2499,810.8407,19942.2206,816.821,19949.2906,818.2403,19953.32,812.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[64d72756e19c728be6b4e9ea0a087d54]
reverse link executor.dummyCloser to executor.inspectionRuleRetriever--><path d="M19963.41,828.12 C19845.22,927.56 19520.66,1204.61 19270,1456 C19193.63,1532.59 19110.76,1628.1 19064.82,1682.26 " fill="none" id="executor.dummyCloser&lt;-executor.inspectionRuleRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="19973.54,819.6,19966.3727,820.3934,19964.3484,827.3146,19971.5157,826.5212,19973.54,819.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3d5996cd9f16956af2e74b55da75ae75]
reverse link executor.dummyCloser to executor.inspectionSummaryRetriever--><path d="M19986.96,831.3 C19906.85,981.4 19631.08,1498.13 19539.68,1669.38 " fill="none" id="executor.dummyCloser&lt;-executor.inspectionSummaryRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="19993.24,819.53,19986.8829,822.934,19987.5799,830.1113,19993.9371,826.7073,19993.24,819.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[282e826bb63c1d0837854737b7a213a3]
reverse link executor.baseJoiner to executor.leftOuterJoiner--><path d="M15260.09,934.61 C15173.29,1080.95 15017.17,1299.02 14813,1396 C14605.86,1494.39 12969.23,1388.72 12750,1456 C12608.35,1499.47 12468.02,1604.09 12389.91,1669.31 " fill="none" id="executor.baseJoiner&lt;-executor.leftOuterJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="15266.73,923.33,15260.2394,926.4721,15260.6435,933.6719,15267.134,930.5298,15266.73,923.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dcf50496e8fe0da5cd84501c288da95f]
reverse link executor.baseJoiner to executor.leftOuterSemiJoiner--><path d="M15259.3,934.45 C15172.1,1080.1 15015.88,1297.11 14813,1396 C14569.6,1514.64 13854.04,1373.95 13596,1456 C13459.77,1499.31 13324.22,1597.78 13244.56,1662.8 " fill="none" id="executor.baseJoiner&lt;-executor.leftOuterSemiJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="15265.97,923.21,15259.4653,926.3227,15259.8368,933.5243,15266.3415,930.4115,15265.97,923.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6cf20ee3d30678090ccfc722646e55f3]
reverse link executor.dummyCloser to executor.memtableRetriever--><path d="M20009,832.72 C20009,941.28 20009,1234.82 20009,1455.81 " fill="none" id="executor.dummyCloser&lt;-executor.memtableRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="20009,819.53,20005,825.53,20009,831.53,20013,825.53,20009,819.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eef3d7c2800db36e4204e09bcb49762d]
reverse link core.PhysicalPlan to executor.mockPhysicalIndexReader--><path d="M4272.84,84.35 C4771.04,87.18 8017.6,106.85 8055,139 C8242.74,300.4 8189.99,653.74 8169.4,758.29 " fill="none" id="core.PhysicalPlan&lt;-executor.mockPhysicalIndexReader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4259.58,84.28,4265.5579,88.3129,4271.5798,84.3459,4265.6019,80.313,4259.58,84.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b3fc5d4eade0ca08a3bb08c7b55717ed]
reverse link executor.outerMergeCtx to executor.outerMergeWorker--><path d="M7916.22,865.48 C7929.86,1031.1 7962.44,1426.78 7978.19,1617.97 " fill="none" id="executor.outerMergeCtx&lt;-executor.outerMergeWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7915.11,852.07,7911.6181,858.3792,7916.0989,864.0292,7919.5908,857.72,7915.11,852.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4c3a55bb06f229c387f38cfd15cb6ea3]
reverse link executor.outerCtx to executor.outerWorker--><path d="M3646,845.7 C3646,998.84 3646,1427.86 3646,1624.38 " fill="none" id="executor.outerCtx&lt;-executor.outerWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3646,832.6,3642,838.6,3646,844.6,3650,838.6,3646,832.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[566f93a5eb6121752b2645266967869d]
reverse link executor.baseJoiner to executor.rightOuterJoiner--><path d="M15254.07,934.58 C15164.45,1076.55 15007.96,1287.18 14813,1396 C14667.15,1477.41 14598.12,1396.63 14442,1456 C14305.74,1507.81 14166.7,1606.98 14086.85,1669.36 " fill="none" id="executor.baseJoiner&lt;-executor.rightOuterJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="15261.2,923.2,15254.6222,926.155,15254.8199,933.3634,15261.3977,930.4084,15261.2,923.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cf3b8fd244a689939a75e0700cb04455]
reverse link executor.baseJoiner to executor.semiJoiner--><path d="M15263.68,935.23 C15157.31,1145.96 14965.03,1526.85 14893.13,1669.27 " fill="none" id="executor.baseJoiner&lt;-executor.semiJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="15269.62,923.47,15263.3467,927.0262,15264.2166,934.1846,15270.4898,930.6285,15269.62,923.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d4c0715819e77986049b17d3685cc426]
reverse link executor.baseExecutor to executor.shuffleWorker--><path d="M25204.31,1866.4 C25165.7,2021.54 25104.25,2268.41 25070.06,2405.82 " fill="none" id="executor.baseExecutor&lt;-executor.shuffleWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25207.51,1853.54,25202.1833,1858.4007,25204.6213,1865.1871,25209.948,1860.3265,25207.51,1853.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fdeab3d1d0378c516d94d07d09a41114]
reverse link executor.checkIndexValue to executor.tableWorker--><path d="M8495.12,1781.64 C8464.69,1846.32 8404.16,1950.93 8315,1996 C8061.57,2124.11 3449.43,1913.17 3204,2056 C3069.37,2134.35 2996.93,2310.78 2963.88,2418.13 " fill="none" id="executor.checkIndexValue&lt;-executor.tableWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8500.63,1769.65,8494.4902,1773.4319,8495.6197,1780.554,8501.7595,1776.7721,8500.63,1769.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b7a53fb57a5f5de4a29dd565a01ef936]
reverse link executor.TopNExec to executor.topNChunkHeap--><path d="M33452,3384.78 C33452,3453.79 33452,3536.48 33452,3593.48 " fill="none" id="executor.TopNExec&lt;-executor.topNChunkHeap" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="33452,3371.61,33448,3377.61,33452,3383.61,33456,3377.61,33452,3371.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[aef78e1250aba55936d101ca58f5e391]
reverse link executor.Closeable to executor.BatchPointGetExec--><path d="M28441.03,839.7 C28432.25,950.37 28410.69,1225.51 28395,1456 C28390.92,1515.97 28405.34,1954.35 28362,1996 C28249.54,2104.09 25682.16,1965.67 25555,2056 C25473.59,2113.82 25431.58,2215.98 25409.93,2308.4 " fill="none" id="executor.Closeable&lt;-executor.BatchPointGetExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28434.07,838.91,28442.64,819.53,28448.03,840.02,28434.07,838.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c6beeef44db692c258e5389552d02e1]
reverse link executor.Closeable to executor.CheckIndexRangeExec--><path d="M28444.03,839.64 C28439.51,1064.24 28419.93,1975.37 28399,1996 C28299.71,2093.89 26003.57,1975.11 25890,2056 C25782.49,2132.57 25743.7,2286.43 25729.75,2392.88 " fill="none" id="executor.Closeable&lt;-executor.CheckIndexRangeExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28437.03,839.4,28444.43,819.54,28451.03,839.68,28437.03,839.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[84a9c162a352bbe13762a0cbc3d14ced]
reverse link executor.Closeable to executor.CheckTableExec--><path d="M28446.53,839.72 C28453.13,1061.8 28477.02,1954.09 28436,1996 C28355.41,2078.34 26460.76,1995.02 26363,2056 C26251.09,2125.81 26189.11,2267.34 26156.88,2373.24 " fill="none" id="executor.Closeable&lt;-executor.CheckTableExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28439.53,839.74,28445.92,819.54,28453.52,839.32,28439.53,839.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7ee4f06c44be8d62621381676aff8dc6]
reverse link executor.Closeable to executor.CleanupIndexExec--><path d="M28448.1,839.7 C28461.71,1061.72 28513.69,1953.76 28473,1996 C28349.74,2123.97 27026.87,1963.77 26875,2056 C26784.66,2110.87 26723.31,2210.27 26683.38,2301.78 " fill="none" id="executor.Closeable&lt;-executor.CleanupIndexExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28441.1,839.92,28446.86,819.53,28455.08,839.06,28441.1,839.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eefba0b9e677c43639f218f320305684]
reverse link executor.Closeable to executor.DeleteExec--><path d="M28451.82,839.74 C28481,1056.41 28590.21,1910.73 28510,1996 C28435.33,2075.38 27626.57,2003.62 27531,2056 C27398.97,2128.36 27306.25,2279.23 27253.84,2386.41 " fill="none" id="executor.Closeable&lt;-executor.DeleteExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28444.86,840.49,28449.11,819.73,28458.74,838.61,28444.86,840.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0739a4f2729b0e06f035d317c3eb0d80]
reverse link executor.Closeable to executor.ExplainExec--><path d="M28455.22,839.47 C28477.38,949.6 28529.31,1223.64 28547,1456 C28551.55,1515.83 28587.39,1951.63 28547,1996 C28450.98,2101.46 28022.94,1971.56 27908,2056 C27788.89,2143.5 27744.37,2320.6 27728.07,2424.79 " fill="none" id="executor.Closeable&lt;-executor.ExplainExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28448.32,840.68,28451.2,819.69,28462.04,837.89,28448.32,840.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b9493ffd4f99f08ee7b87a0e11e7e8d8]
reverse link executor.Closeable to executor.HashAggExec--><path d="M28471.91,837.59 C28567.47,1013.55 28869.82,1635.77 28584,1996 C28511.1,2087.88 28418.06,1982.07 28327,2056 C28269.05,2103.05 28226.29,2169.74 28195.06,2237.42 " fill="none" id="executor.Closeable&lt;-executor.HashAggExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28465.71,840.84,28462.2,819.94,28477.98,834.09,28465.71,840.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[019617c9ee9b32b7b12754e7189a35fd]
reverse link executor.Closeable to executor.HashJoinExec--><path d="M28461.69,838.66 C28498.87,948.1 28590.12,1222.34 28652,1456 C28714.33,1691.34 28773.09,1959.44 28815.74,2165.89 " fill="none" id="executor.Closeable&lt;-executor.HashJoinExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28455.02,840.8,28455.19,819.61,28468.27,836.28,28455.02,840.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[698e97c78bc7b6ddf8e46c34ee0e680b]
reverse link executor.Closeable to executor.IndexAdviseExec--><path d="M28488.51,834.31 C28639.07,989.69 29144.83,1528.98 29440,2056 C29513.06,2186.45 29565.68,2355.09 29590.67,2444.48 " fill="none" id="executor.Closeable&lt;-executor.IndexAdviseExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28483.2,838.89,28474.28,819.67,28493.24,829.13,28483.2,838.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[162cb1517b319ff224c425089264bcea]
reverse link executor.Closeable to executor.IndexLookUpExecutor--><path d="M28378.44,814.71 C28116.01,910.82 27125.73,1261.09 26277,1396 C26199.9,1408.26 24928.25,1400.84 24873,1456 C24830.5,1498.43 24892.34,1954.42 24849,1996 C24751.22,2089.82 5456.67,1996.33 5335,2056 C5258.33,2093.6 5193.52,2156.89 5141.27,2224.33 " fill="none" id="executor.Closeable&lt;-executor.IndexLookUpExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28376.27,808.05,28397.46,807.72,28381.1,821.19,28376.27,808.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c96b9c39db8fd1a4e95b19d4e791fa33]
reverse link executor.Closeable to executor.IndexLookUpJoin--><path d="M28512.21,810.47 C28810.99,900.39 30049.98,1261.77 31096,1396 C31312.66,1423.8 32857.16,1377.49 33061,1456 C33406.72,1589.15 33380.6,1801.65 33696,1996 C33754.33,2031.94 33785.78,2011.65 33838,2056 C33922.66,2127.89 33990.4,2231.51 34038.46,2321.25 " fill="none" id="executor.Closeable&lt;-executor.IndexLookUpJoin" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28509.86,817.07,28492.73,804.59,28513.9,803.67,28509.86,817.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f02cd99dfdef2f372c36604ff4dd07ba]
reverse link executor.Closeable to executor.IndexLookUpMergeJoin--><path d="M28499.11,832 C28629.36,933.92 28968.8,1204.53 29229,1456 C29488.26,1706.56 29546.01,1777.5 29775,2056 C29850.44,2147.75 29929.83,2254.37 29992.27,2340.84 " fill="none" id="executor.Closeable&lt;-executor.IndexLookUpMergeJoin" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28494.67,837.41,28483.21,819.58,28503.28,826.37,28494.67,837.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[78dcdae8bab2d40f2b634a860c7050a9]
reverse link executor.Closeable to executor.IndexMergeReaderExecutor--><path d="M28378.44,814.68 C28115.99,910.68 27125.66,1260.6 26277,1396 C26201.93,1407.98 24964.21,1402.71 24910,1456 C24824.26,1540.28 24964.43,1913.48 24877,1996 C24783.37,2084.37 6458.16,2009.77 6338,2056 C6243.05,2092.53 6154.74,2156.15 6079.49,2224.26 " fill="none" id="executor.Closeable&lt;-executor.IndexMergeReaderExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28376.27,808.02,28397.45,807.7,28381.09,821.16,28376.27,808.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[42f7e6ab4f80588a20d2a14702463933]
reverse link executor.Closeable to executor.IndexNestedLoopHashJoin--><path d="M28512.19,810.63 C28810.89,901.23 30049.56,1265.05 31096,1396 C31232.37,1413.07 33457.69,1375.4 33569,1456 C33775.31,1605.39 33559.69,1839.94 33761,1996 C33878.62,2087.18 34327.59,1946.15 34428,2056 C34495.69,2130.06 34490.01,2880.12 34428,2959 C34358.18,3047.81 34281.57,2967.53 34181,3019 C34128.6,3045.82 34077.72,3084.42 34034.16,3122.72 " fill="none" id="executor.Closeable&lt;-executor.IndexNestedLoopHashJoin" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28509.81,817.23,28492.72,804.71,28513.89,803.83,28509.81,817.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d025a6e6418bd0ed45010b85e077bb9c]
reverse link executor.Closeable to executor.IndexReaderExecutor--><path d="M28378.42,814.53 C28115.87,909.98 27125.25,1258.1 26277,1396 C26144.68,1417.51 25168.53,1362.98 25072,1456 C24985.26,1539.58 25113.65,1914.45 25025,1996 C24933.98,2079.73 7318.61,1986.96 7216,2056 C7127.79,2115.35 7081.6,2225.1 7057.43,2321.4 " fill="none" id="executor.Closeable&lt;-executor.IndexReaderExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28376.25,807.87,28397.44,807.59,28381.05,821.02,28376.25,807.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[45ca49a26f421f579e42fe41ca978553]
reverse link executor.Closeable to executor.InsertExec--><path d="M28378.16,815.87 C28115.62,915.94 27127.75,1277.89 26277,1396 C26153.52,1413.14 8416.05,1370.84 8325,1456 C8237.14,1538.17 8374.61,1913.57 8287,1996 C8156.81,2118.49 1977.81,1929.01 1852,2056 C1816.69,2091.64 1817.06,2923.01 1852,2959 C2020.74,3132.81 9476.98,3228.94 11417.36,3251.04 " fill="none" id="executor.Closeable&lt;-executor.InsertExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28376,809.2,28397.18,808.6,28381.01,822.28,28376,809.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fc3dd8154b2242d9236373608c0e0ec0]
reverse link executor.insertCommon to executor.InsertValues--><path d="M26176.29,1781.77 C26149.81,1846.21 26096.01,1950.19 26011,1996 C25720.83,2152.38 23343.49,1916.17 23045,2056 C22982.87,2085.11 22926.71,2129.32 22877.59,2178.87 " fill="none" id="executor.insertCommon&lt;-executor.InsertValues" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="26169.78,1779.19,26183.63,1763.16,26182.8,1784.33,26169.78,1779.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c385e30461ecc4a5996b196231544657]
reverse link executor.Closeable to executor.LimitExec--><path d="M28511.77,814.33 C28789.12,918.58 29862.71,1354.55 30443,2056 C30531.98,2163.56 30580.41,2321.05 30603.46,2418.49 " fill="none" id="executor.Closeable&lt;-executor.LimitExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28509.12,820.81,28492.83,807.26,28514.02,807.69,28509.12,820.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b6c5f32b0ea161f1ab33e54fe4e6c9a]
reverse link executor.Closeable to executor.LoadDataExec--><path d="M28511.96,809.35 C28740.74,877.1 29508.39,1117.95 30073,1456 C30432.15,1671.03 30556.61,1714.72 30799,2056 C30884.25,2176.03 30931.33,2344.69 30952.35,2437.87 " fill="none" id="executor.Closeable&lt;-executor.LoadDataExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28509.95,816.06,28492.74,803.69,28513.91,802.63,28509.95,816.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[201b8f42b20bde47e3bf0ec7e290a4cf]
reverse link executor.Closeable to executor.LoadStatsExec--><path d="M28512.66,803.33 C28772.38,856.4 29725.39,1068.81 30416,1456 C30778.74,1659.37 30894.12,1716.3 31134,2056 C31225.18,2185.12 31272.88,2369.93 31291.51,2457.23 " fill="none" id="executor.Closeable&lt;-executor.LoadStatsExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28510.98,810.13,28492.76,799.3,28513.76,796.41,28510.98,810.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86c9b324d330e71010b1ae497020da74]
reverse link executor.Closeable to executor.MemTableReaderExec--><path d="M28512.45,798.93 C28798.91,838.96 29937.45,1019.33 30756,1456 C31121.42,1650.94 31230.68,1717.28 31469,2056 C31553.72,2176.41 31601,2344.93 31622.2,2437.98 " fill="none" id="executor.Closeable&lt;-executor.MemTableReaderExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28511.42,805.86,28492.56,796.19,28513.33,791.99,28511.42,805.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[064f15b97d5c6c23978d5f91563cf35d]
reverse link executor.Closeable to executor.MergeJoinExec--><path d="M28513.03,795.75 C28825.39,824.43 30147.37,970.41 31094,1456 C31461.6,1644.57 31555.51,1725.94 31804,2056 C31878.24,2154.61 31932.87,2284.82 31966.47,2379.89 " fill="none" id="executor.Closeable&lt;-executor.MergeJoinExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28512,802.69,28492.71,793.93,28513.26,788.75,28512,802.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[82816a65192e8d7bf7e9563786caa94c]
reverse link executor.Closeable to executor.NestedLoopApplyExec--><path d="M28512.34,806.61 C28812.88,880.48 30062.17,1184.82 31096,1396 C31243.34,1426.1 31291.52,1395.05 31429,1456 C31828.51,1633.12 31921.28,1726.19 32208,2056 C32274.99,2133.06 32332.9,2230.34 32376.61,2314.77 " fill="none" id="executor.Closeable&lt;-executor.NestedLoopApplyExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28510.5,813.37,28492.75,801.79,28513.84,799.77,28510.5,813.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b5924f90fc02a4eb747e7c6acb0b8d18]
reverse link executor.Closeable to executor.PointGetExecutor--><path d="M28512.41,809.07 C28812.04,893.05 30054.08,1232.94 31096,1396 C31403.62,1444.14 31499.47,1355 31794,1456 C32257.88,1615.07 32405.37,1679.84 32720,2056 C32782.51,2130.74 32826.98,2229.11 32857.01,2314.86 " fill="none" id="executor.Closeable&lt;-executor.PointGetExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28510.24,815.73,28492.88,803.58,28514.02,802.25,28510.24,815.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[add415ec3ee22ee70395e830fa338e2f]
reverse link executor.Closeable to executor.ProjectionExec--><path d="M28512.29,809.91 C28811.38,897.47 30051.51,1250.29 31096,1396 C31347.69,1431.11 31997.65,1373.45 32238,1456 C32678.78,1607.39 32800.77,1697.03 33098,2056 C33165.37,2137.37 33214.7,2244.81 33247.73,2334.36 " fill="none" id="executor.Closeable&lt;-executor.ProjectionExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28510,816.54,28492.79,804.19,28513.95,803.11,28510,816.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cf9c582bac40428765566edc4a1b7682]
reverse link executor.Closeable to executor.ReplaceExec--><path d="M28512.2,810.58 C28810.92,900.97 30049.69,1264.04 31096,1396 C31222.32,1411.93 33276.1,1393.45 33387,1456 C33635.27,1596.04 33489.24,1848.26 33733,1996 C33861.6,2073.94 34305.5,1945.06 34407,2056 C34440.86,2093.01 34441.63,2922.7 34407,2959 C34393.78,2972.86 29592.75,3188.95 28375.12,3243.55 " fill="none" id="executor.Closeable&lt;-executor.ReplaceExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28509.83,817.18,28492.72,804.67,28513.89,803.78,28509.83,817.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[35052253632a58e30cb713d8f75d1f0f]
reverse link executor.Closeable to executor.SelectIntoExec--><path d="M28378.25,811.3 C28114.14,895.01 27115.65,1206.15 26277,1396 C26201.32,1413.13 25984.24,1397.73 25933,1456 C25893.34,1501.1 25952.12,1954.19 25909,1996 C25821.19,2081.15 21605.99,1985.55 21506,2056 C21395.79,2133.64 21357.78,2292.61 21344.72,2399.4 " fill="none" id="executor.Closeable&lt;-executor.SelectIntoExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28376.2,804.6,28397.38,805.23,28380.44,817.95,28376.2,804.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[827750633829a076135f81b61f8c42d0]
reverse link executor.Closeable to executor.SelectionExec--><path d="M28378.14,810.79 C28113.58,892.62 27113.67,1197.64 26277,1396 C26141.72,1428.07 26061.61,1351.43 25970,1456 C25890.78,1546.43 26023.95,1912.97 25937,1996 C25774.73,2150.94 22085.84,1931.79 21899,2056 C21784.02,2132.44 21735.69,2292.13 21715.69,2399.36 " fill="none" id="executor.Closeable&lt;-executor.SelectionExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28376.12,804.09,28397.3,804.86,28380.27,817.46,28376.12,804.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[677029e0e702b5f05483984ea45ca053]
reverse link executor.Closeable to executor.ShuffleExec--><path d="M28377.91,809.87 C28112.5,888.25 27109.84,1182.11 26277,1396 C26163.81,1425.07 26097.5,1367.66 26021,1456 C25942.15,1547.06 26062.13,1913.89 25974,1996 C25823.18,2136.52 22434.07,1939.51 22264,2056 C22155.96,2130 22111.66,2279.74 22093.52,2386.25 " fill="none" id="executor.Closeable&lt;-executor.ShuffleExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28375.97,803.15,28397.14,804.19,28379.94,816.57,28375.97,803.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7ce319d540849807ae77e5e81bca04f1]
reverse link executor.Closeable to executor.SortExec--><path d="M28512.24,810.27 C28811.13,899.32 30050.52,1257.56 31096,1396 C31438.82,1441.39 32323.41,1345.23 32651,1456 C33089.74,1604.35 33220.46,1689.02 33503,2056 C33564.19,2135.48 33604.74,2239.69 33630.54,2327.86 " fill="none" id="executor.Closeable&lt;-executor.SortExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28509.91,816.88,28492.75,804.45,28513.92,803.46,28509.91,816.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98171ed438f4d15dd988a7d0d138ca6a]
reverse link executor.Closeable to executor.StreamAggExec--><path d="M28377.43,801.8 C28053.8,859.77 26667.24,1124.94 26409,1456 C26335.01,1550.85 26458.12,1913.04 26371,1996 C26258.12,2103.49 23700.21,1976.73 23566,2056 C23454.22,2122.03 23385.71,2255.77 23347.11,2360.46 " fill="none" id="executor.Closeable&lt;-executor.StreamAggExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28376.27,794.9,28397.19,798.29,28378.72,808.68,28376.27,794.9" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d09dc1cd735f133232258a9facf1ee54]
reverse link executor.Closeable to executor.TableReaderExecutor--><path d="M28378.42,814.58 C28115.91,910.22 27125.39,1258.96 26277,1396 C26139.07,1418.28 25127.63,1365.72 25021,1456 C24833.59,1614.68 25094.89,1841.52 24904,1996 C24709.05,2153.77 7063.45,1929.32 6847,2056 C6751.11,2112.12 6688.37,2219.1 6649.12,2314.72 " fill="none" id="executor.Closeable&lt;-executor.TableReaderExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28376.26,807.92,28397.44,807.63,28381.06,821.07,28376.26,807.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5eeb4eb66428dfa04d3efa3e1f412594]
reverse link executor.Closeable to executor.UnionExec--><path d="M28386.5,831.63 C28259.55,925.83 27960.37,1169.57 27838,1456 C27814.37,1511.31 27844.64,1954.62 27801,1996 C27643.77,2145.11 24078.04,1931.05 23901,2056 C23793.08,2132.17 23754.39,2286.32 23740.57,2392.93 " fill="none" id="executor.Closeable&lt;-executor.UnionExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28382.62,825.8,28402.88,819.6,28390.91,837.08,28382.62,825.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cbdfcbf41314ec22fdb73b7fc5c25b8b]
reverse link executor.Closeable to executor.UpdateExec--><path d="M28429.65,839.17 C28396.23,948.66 28317.25,1221.4 28284,1456 C28279.79,1485.73 28281.53,1975.07 28260,1996 C28111.23,2140.61 24709.08,1958.39 24526,2056 C24409.92,2117.89 24327.99,2244.14 24277.14,2347.28 " fill="none" id="executor.Closeable&lt;-executor.UpdateExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28423.03,836.86,28435.61,819.8,28436.42,840.98,28423.03,836.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ddbb8957cd41005f978eb27f9c629c4c]
reverse link executor.Closeable to executor.WindowExec--><path d="M28433.63,839.44 C28408.8,949.52 28349.64,1223.45 28321,1456 C28313.65,1515.66 28331.42,1954.43 28288,1996 C28150.86,2127.3 25026.53,1947.1 24871,2056 C24764.62,2130.48 24723.64,2279.92 24707.86,2386.24 " fill="none" id="executor.Closeable&lt;-executor.WindowExec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28426.87,837.62,28438.12,819.67,28440.52,840.72,28426.87,837.62" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[99e075b6467508dfd4af9f71ba9c12a5]
reverse link executor.windowProcessor to executor.aggWindowProcessor--><path d="M2376.9,848.89 C2503.05,1018.11 2865.37,1504.16 2988.48,1669.31 " fill="none" id="executor.windowProcessor&lt;-executor.aggWindowProcessor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2371.1,852.82,2364.76,832.6,2382.33,844.46,2371.1,852.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8032fb1cb34c601ddf8ba01e7d19a696]
reverse link executor.joiner to executor.antiLeftOuterSemiJoiner--><path d="M14420.85,864.52 C14474.49,996.6 14605.62,1269.74 14814,1396 C14995.61,1506.04 15088.25,1383.95 15288,1456 C15421.03,1503.98 15555.61,1599.44 15636.18,1662.76 " fill="none" id="executor.joiner&lt;-executor.antiLeftOuterSemiJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="14414.25,866.88,14413.35,845.71,14427.26,861.69,14414.25,866.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6118a04e8110e6def3343d6e635eda89]
reverse link executor.joiner to executor.antiSemiJoiner--><path d="M14419.29,864.69 C14471,998.88 14599.91,1277.78 14814,1396 C15071.05,1537.94 15854,1367.56 16134,1456 C16275.08,1500.56 16415.32,1604.56 16493.63,1669.41 " fill="none" id="executor.joiner&lt;-executor.antiSemiJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="14412.6,866.77,14412.08,845.59,14425.69,861.83,14412.6,866.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2ec69489b016c6d15a265ac6de8e9273]
reverse link executor.Closeable to executor.baseExecutor--><path d="M28378.33,814.05 C28115.49,907.7 27123.9,1250 26277,1396 C26086.02,1428.92 25573.15,1356.25 25407,1456 C25353.18,1488.31 25313.98,1545.19 25287.05,1598.34 " fill="none" id="executor.Closeable&lt;-executor.baseExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28376.19,807.38,28397.38,807.24,28380.9,820.56,28376.19,807.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1c0cf69dff818f9b4cfc5325b928a6da]
reverse link executor.Executor to executor.baseExecutor--><path d="M25980.31,872.39 C25980.72,1004.37 25960.55,1261.93 25809,1396 C25673.7,1515.69 25558.07,1356.95 25407,1456 C25355.2,1489.96 25316.48,1546.03 25289.35,1598.2 " fill="none" id="executor.Executor&lt;-executor.baseExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25973.31,872.4,25980.08,852.32,25987.31,872.24,25973.31,872.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b62002adcf3056ed1ca5d452c45e7eeb]
reverse link executor.ruleChecker to executor.checkRegionHealth--><path d="M5940.18,851.5 C5874.72,1027.87 5687.49,1532.37 5631.8,1682.41 " fill="none" id="executor.ruleChecker&lt;-executor.checkRegionHealth" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5933.67,848.92,5947.19,832.6,5946.79,853.79,5933.67,848.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8fbdc6a7b020c5f35a7200ccd27150f3]
reverse link executor.ruleChecker to executor.checkStoreRegionTooMuch--><path d="M5963,852.84 C5963,1030.43 5963,1532.75 5963,1682.41 " fill="none" id="executor.ruleChecker&lt;-executor.checkStoreRegionTooMuch" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5956,852.6,5963,832.6,5970,852.6,5956,852.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3304e8d8ca51653281b5f97160f97592]
reverse link executor.Closeable to executor.chunkRowRecordSet--><path d="M28377.32,800.76 C28131.94,842.73 27275.5,1015.51 26745,1456 C26684.42,1506.3 26639.1,1584.34 26610.89,1643.43 " fill="none" id="executor.Closeable&lt;-executor.chunkRowRecordSet" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28376.32,793.83,28397.2,797.41,28378.64,807.63,28376.32,793.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[731d82a8efaaa76efac32cf09f19579d]
reverse link executor.memTableRetriever to executor.clusterLogRetriever--><path d="M9411.59,844.58 C9476.66,1001.79 9664.8,1456.33 9742.16,1643.25 " fill="none" id="executor.memTableRetriever&lt;-executor.clusterLogRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="9405.11,847.24,9403.93,826.08,9418.05,841.88,9405.11,847.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[762a6872a3c1b5a160bf7e0ca1775b04]
reverse link executor.ruleChecker to executor.compareStoreStatus--><path d="M5985.82,851.49 C6048.66,1020.82 6223.77,1492.66 6286.92,1662.82 " fill="none" id="executor.ruleChecker&lt;-executor.compareStoreStatus" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5979.21,853.79,5978.81,832.6,5992.33,848.92,5979.21,853.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e7bae39f08b44335538e00d204a2165a]
reverse link executor.Closeable to executor.hashRowContainer--><path d="M28383.36,830.6 C28227.97,933.23 27808.2,1212.28 27466,1456 C27416.82,1491.03 27364.45,1529.41 27315.29,1565.93 " fill="none" id="executor.Closeable&lt;-executor.hashRowContainer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28379.59,824.7,28400.13,819.53,28387.3,836.39,28379.59,824.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7638a104754fe45f3258d1ee0d2418f4]
reverse link executor.joiner to executor.innerJoiner--><path d="M14418.93,864.64 C14470.21,999.27 14598.65,1279.57 14814,1396 C15025.79,1510.51 16749.79,1385.53 16980,1456 C17121.68,1499.37 17262,1604.03 17340.1,1669.27 " fill="none" id="executor.joiner&lt;-executor.innerJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="14412.36,867.06,14411.92,845.87,14425.48,862.16,14412.36,867.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d77690e15bc3aface93ad8c5193a013]
reverse link executor.ruleChecker to executor.inspectCPULoad--><path d="M6011.12,848.49 C6104.65,962.92 6316.28,1225.37 6481,1456 C6532.49,1528.1 6587.8,1614.22 6622.39,1669.25 " fill="none" id="executor.ruleChecker&lt;-executor.inspectCPULoad" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6005.44,852.61,5998.19,832.7,6016.28,843.75,6005.44,852.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[809796b5631b847019fa723e13aa76bc]
reverse link executor.ruleChecker to executor.inspectDiskUsage--><path d="M6051.13,843.14 C6217.6,946.4 6583.88,1187.73 6833,1456 C6899.27,1527.36 6956.97,1626.42 6986.99,1682.27 " fill="none" id="executor.ruleChecker&lt;-executor.inspectDiskUsage" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6047.33,849.01,6033.99,832.55,6054.68,837.1,6047.33,849.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[12a605b8861689ce307560c4add3b0da]
reverse link executor.ruleChecker to executor.inspectSwapMemoryUsed--><path d="M5874.87,843.14 C5708.4,946.4 5342.12,1187.73 5093,1456 C5026.73,1527.36 4969.03,1626.42 4939.01,1682.27 " fill="none" id="executor.ruleChecker&lt;-executor.inspectSwapMemoryUsed" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5871.32,837.1,5892.01,832.55,5878.67,849.01,5871.32,837.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d9c76235efb606667a504c774a518ca3]
reverse link executor.ruleChecker to executor.inspectVirtualMemUsage--><path d="M5914.88,848.49 C5821.35,962.92 5609.72,1225.37 5445,1456 C5389.21,1534.11 5328.94,1628.69 5295.39,1682.35 " fill="none" id="executor.ruleChecker&lt;-executor.inspectVirtualMemUsage" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5909.72,843.75,5927.81,832.7,5920.56,852.61,5909.72,843.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[95f54223f0f11d6164f58fd884e8b3b3]
reverse link executor.joiner to executor.leftOuterJoiner--><path d="M14209.36,852.1 C13900.54,959.24 13260.86,1192.78 12750,1456 C12624.28,1520.77 12487.73,1611.7 12404.75,1669.48 " fill="none" id="executor.joiner&lt;-executor.leftOuterJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="14207.13,845.47,14228.32,845.54,14211.71,858.7,14207.13,845.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[120ca501581333e439985783dbbf123e]
reverse link executor.joiner to executor.leftOuterSemiJoiner--><path d="M14304.27,858.01 C14076.36,1032.67 13473.02,1495.07 13253.94,1662.97 " fill="none" id="executor.joiner&lt;-executor.leftOuterSemiJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="14300.2,852.3,14320.34,845.69,14308.72,863.41,14300.2,852.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0be0a59382b9dc7106e935d4aa071343]
reverse link executor.partitionSplitter to executor.partitionHashSplitter--><path d="M7436,839.59 C7436,1001.69 7436,1514.74 7436,1676 " fill="none" id="executor.partitionSplitter&lt;-executor.partitionHashSplitter" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7429,839.53,7436,819.53,7443,839.53,7429,839.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[25ec62f78990315f030409eee0d7ebf5]
reverse link executor.windowProcessor to executor.rangeFrameWindowProcessor--><path d="M2288.96,849.07 C2175.23,1001.64 1870.15,1410.89 1720.77,1611.29 " fill="none" id="executor.windowProcessor&lt;-executor.rangeFrameWindowProcessor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2283.67,844.46,2301.24,832.6,2294.9,852.82,2283.67,844.46" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[37abb39432c1292e4dafb6316a6ff405]
reverse link executor.Closeable to executor.recordSet--><path d="M28397.91,833.68 C28288.29,936.51 28010.2,1204.22 27810,1456 C27764.25,1513.54 27718.79,1582.95 27685.41,1636.84 " fill="none" id="executor.Closeable&lt;-executor.recordSet" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28393.44,828.27,28412.83,819.72,28403,838.5,28393.44,828.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[293f7dac83aa6eda8a0b154afbd10754]
reverse link executor.joiner to executor.rightOuterJoiner--><path d="M14363.24,864.39 C14290.59,1046.03 14105.42,1508.95 14041.28,1669.31 " fill="none" id="executor.joiner&lt;-executor.rightOuterJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="14356.8,861.66,14370.72,845.69,14369.8,866.86,14356.8,861.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b671f5e2893eca22cde291d815cc689a]
reverse link executor.windowProcessor to executor.rowFrameWindowProcessor--><path d="M2333,852.79 C2333,1015.17 2333,1449.38 2333,1636.82 " fill="none" id="executor.windowProcessor&lt;-executor.rowFrameWindowProcessor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2326,852.6,2333,832.6,2340,852.6,2326,852.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bd11b14724e67d74a70adad074a0a660]
reverse link executor.joiner to executor.semiJoiner--><path d="M14430.14,863.57 C14521.54,1044.62 14755.81,1508.7 14836.89,1669.31 " fill="none" id="executor.joiner&lt;-executor.semiJoiner" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="14423.88,866.7,14421.11,845.69,14436.37,860.39,14423.88,866.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d6c4321bc9dee8ef78ff3119ed94298e]
reverse link executor.Closeable to executor.shuffleWorker--><path d="M28437.33,839.63 C28420.51,950.09 28380.14,1224.75 28358,1456 C28352.27,1515.84 28368.38,1954.39 28325,1996 C28200.48,2115.43 25361.44,1957.19 25220,2056 C25106.68,2135.17 25066.74,2299.02 25052.66,2405.77 " fill="none" id="executor.Closeable&lt;-executor.shuffleWorker" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28430.42,838.5,28440.36,819.79,28444.26,840.62,28430.42,838.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[544e1ed4047f6ea83c7bc01455273c94]
reverse link executor.memTableRetriever to executor.slowQueryRetriever--><path d="M9366.32,844.78 C9307.78,986.22 9150.05,1367.32 9062.54,1578.73 " fill="none" id="executor.memTableRetriever&lt;-executor.slowQueryRetriever" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="9359.95,841.88,9374.07,826.08,9372.89,847.24,9359.95,841.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c4ec1eaccbd0de92c67c1239cb2d49b3]
reverse link executor.Closeable to executor.tableResultHandler--><path d="M28424.64,838.08 C28360.02,990.65 28159.23,1464.73 28080.83,1649.86 " fill="none" id="executor.Closeable&lt;-executor.tableResultHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28418.25,835.21,28432.49,819.53,28431.14,840.67,28418.25,835.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[94e688afeea026a611008e8aaff91dc6]
reverse link __builtin__.byte to executor.outerRowStatusFlag--><path d="M25720,112.26 C25720,227.35 25720,659.57 25720,764.8 " fill="none" id="__builtin__.byte&lt;-executor.outerRowStatusFlag" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="25715" y="102.02"/><!--MD5=[f3ca13a1cae46c7603eba7f65f7916f3]
reverse link __builtin__.int to executor.IndexAdviseVarKeyType--><path d="M25604.52,84.04 C25309.11,84.48 22813.74,89.69 22757,139 C22570.32,301.25 22625.2,654 22646.42,758.35 " fill="none" id="__builtin__.int&lt;-executor.IndexAdviseVarKeyType" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="25604.91" y="79.03"/><!--MD5=[510ac19f78b31f4147da26fb0eb354ea]
reverse link __builtin__.int to executor.loadDataVarKeyType--><path d="M25604.38,84 C25296.68,84.01 22610.62,85.66 22550,139 C22364.71,302.06 22425.08,654.25 22447.95,758.41 " fill="none" id="__builtin__.int&lt;-executor.loadDataVarKeyType" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="25604.57" y="79"/><!--MD5=[587e324901fc6454b6a3dd8cac56c806]
reverse link __builtin__.int to executor.loadStatsVarKeyType--><path d="M25604.61,83.97 C25287.82,83.64 22425.49,82.31 22361,139 C22175.62,301.96 22236.05,654.22 22258.94,758.4 " fill="none" id="__builtin__.int&lt;-executor.loadStatsVarKeyType" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="25604.94" y="78.97"/><!--MD5=[0cd8f5fd5cbef91226fccfbeeb9d7d62]
reverse link __builtin__.int to executor.objectType--><path d="M25650.29,111.36 C25656.71,119.15 25664.72,126.69 25674,131 C25697.73,142.03 26125.73,121.29 26145,139 C26329.5,308.55 26244.39,669.8 26217.88,764.74 " fill="none" id="__builtin__.int&lt;-executor.objectType" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="25641.89" y="102.03"/><!--MD5=[5e4c54c65745a0164b87906cce6372e2]
reverse link __builtin__.int to executor.taskType--><path d="M25604.36,84.04 C25315.03,84.53 22929.66,90.01 22877,139 C22693.7,309.52 22782.42,670.06 22809.88,764.8 " fill="none" id="__builtin__.int&lt;-executor.taskType" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="25604.65" y="79.03"/><!--MD5=[76c57741d6c295d5e6253d37e1b1029a]
reverse link __builtin__.int64 to aggfuncs.partialResult4Count--><path d="M25836.13,111.12 C25843.94,119.07 25853.47,126.77 25864,131 C25884.78,139.36 51655.11,124.28 51672,139 C51861.98,304.5 51790.58,669.47 51767.89,764.83 " fill="none" id="__builtin__.int64&lt;-aggfuncs.partialResult4Count" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="25827.44" y="102.21"/><!--MD5=[be2fc7432f52dfcb33087b36d1bd6d6b]
reverse link __builtin__.uint32 to aggfuncs.approxCountDistinctHashValue--><path d="M26059.83,84 C27189.56,83.91 51972.11,82.56 52040,139 C52235.5,301.52 52183.85,669.45 52166.53,764.99 " fill="none" id="__builtin__.uint32&lt;-aggfuncs.approxCountDistinctHashValue" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="26049.63" y="79"/><!--MD5=[03abf0d0dd9cc17df7dcc60f05387d03]
reverse link __builtin__.uint64 to aggfuncs.partialResult4BitFunc--><path d="M25938.71,111.15 C25947.01,119.1 25957.07,126.79 25968,131 C25988.97,139.08 51835.01,124.29 51852,139 C52042.64,304.07 51973.76,669.35 51951.73,764.81 " fill="none" id="__builtin__.uint64&lt;-aggfuncs.partialResult4BitFunc" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="25929.78" y="102.23"/><!--MD5=[830d95008ebc883de9b7b91cd3cfae1f]
reverse link aggfuncs.unsafePointer to aggfuncs.PartialResult--><path d="M37266.85,818.27 C37266.1,958.12 37262.81,1574.34 37262.12,1701.86 " fill="none" id="aggfuncs.unsafePointer&lt;-aggfuncs.PartialResult" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="37261.88" y="808.11"/><!--MD5=[c37052efc2e8ca9300199ea4e1021fb4]
reverse link executor.fontcolorbluefuncfonttypesDatumerror to executor.TestShowClusterConfigFunc--><path d="M932.43,818.27 C914.78,958.12 837.01,1574.34 820.92,1701.86 " fill="none" id="executor.fontcolorbluefuncfonttypesDatumerror&lt;-executor.TestShowClusterConfigFunc" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="928.08" y="808.11"/><!--MD5=[af9c7165dc2a5ea74047cb56313c0b6e]
reverse link executor.<font color=blue>func</font>([]byte, []byte) error to executor.processKVFunc--><path d="M446.33,818.27 C443.04,958.12 428.54,1574.34 425.54,1701.86 " fill="none" id="executor.&lt;font color=blue&gt;func&lt;/font&gt;([]byte, []byte) error&lt;-executor.processKVFunc" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="441.46" y="808.11"/><!--MD5=[8cd7254252b0ff31bf1abeccd9107f1b]
reverse link executor.fontcolorbluemapfontint64fontcolorbluemapfontint64typesDatum to executor.tableRowMapType--><path d="M1310.55,818.27 C1293.5,958.12 1218.37,1574.34 1202.82,1701.86 " fill="none" id="executor.fontcolorbluemapfontint64fontcolorbluemapfontint64typesDatum&lt;-executor.tableRowMapType" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="1306.18" y="808.11"/><!--MD5=[18c74e23a82967a015a559645e86afac]
reverse link executor.fontcolorbluemapfontstringaggfuncsPartialResult to executor.aggPartialResultMapper--><path d="M681.58,818.27 C669.62,958.12 616.89,1574.34 605.98,1701.86 " fill="none" id="executor.fontcolorbluemapfontstringaggfuncsPartialResult&lt;-executor.aggPartialResultMapper" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="677.02" y="808.11"/><!--MD5=[caf967b4c34c4b0bcd4c3523b50e5511]
reverse link executor.[]logStreamResult to executor.logResponseHeap--><path d="M260.06,818.29 C260.34,948.7 261.5,1492.92 261.88,1669.45 " fill="none" id="executor.[]logStreamResult&lt;-executor.logResponseHeap" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="255.05" y="808.11"/><!--MD5=[d23126f40e1f256884da727f59397d37]
reverse link executor.v1Range to executor.promQLQueryRange--><path d="M1112.24,818.31 C1103.8,904.85 1077.52,1173.46 1055,1396 C1043.38,1510.83 1029.05,1648.16 1023.42,1701.87 " fill="none" id="executor.v1Range&lt;-executor.promQLQueryRange" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke: #A80036; stroke-width: 1.5;" width="10" x="1107.75" y="808.12"/><!--MD5=[3c3ba8ae19123ff110cd6e6be9f216dc]
link aggfuncs.partialResult4ApproxCountDistinct to aggfuncs.partialResult4CountDistinctDecimal--><!--MD5=[fdcda39950b624eb358968c84e3e828f]
link aggfuncs.partialResult4CountDistinctDecimal to aggfuncs.partialResult4CountDistinctDuration--><!--MD5=[66039ccf2f0e567fcbd04bf80e46a564]
link aggfuncs.partialResult4CountDistinctDuration to aggfuncs.partialResult4CountDistinctInt--><!--MD5=[b72e72166e3e62e393c738e58219b590]
link aggfuncs.partialResult4CountDistinctInt to aggfuncs.partialResult4CountDistinctReal--><!--MD5=[4ee2a3741967f571e3e0f3fd442f6849]
link aggfuncs.partialResult4CountDistinctReal to aggfuncs.partialResult4CountDistinctString--><!--MD5=[4f7d522e1ea45375a706d6671de10a79]
link aggfuncs.partialResult4ApproxCountDistinct to aggfuncs.partialResult4CountWithDistinct--><!--MD5=[e75b0cd19a0f4796c5bfe87ddfe9d7bc]
link aggfuncs.partialResult4CountWithDistinct to aggfuncs.partialResult4CumeDist--><!--MD5=[2744d147a3273b7f0e3e6a7da87a364e]
link aggfuncs.partialResult4CumeDist to aggfuncs.partialResult4FirstValue--><!--MD5=[dc2b47deef3b9910ff1df46c00051c79]
link aggfuncs.partialResult4FirstValue to aggfuncs.partialResult4GroupConcatOrder--><!--MD5=[f3153b7b2df703fc0ce0d19a5d35066f]
link aggfuncs.partialResult4GroupConcatOrder to aggfuncs.partialResult4GroupConcatOrderDistinct--><!--MD5=[c2b38891621de07d90a44be414a15075]
link aggfuncs.partialResult4GroupConcatOrderDistinct to aggfuncs.partialResult4JsonObjectAgg--><!--MD5=[a8c0f505202c617ab5d171fbeae28d0a]
link aggfuncs.partialResult4CountWithDistinct to aggfuncs.partialResult4LastValue--><!--MD5=[9946cdd1420b17b98236a077e45d48d8]
link aggfuncs.partialResult4LastValue to aggfuncs.partialResult4LeadLag--><!--MD5=[603e76f3939e86d834194448973904d9]
link aggfuncs.partialResult4LeadLag to aggfuncs.partialResult4MaxMinDecimal--><!--MD5=[34b876b2aeb74d8d2831f14e75c0a586]
link aggfuncs.partialResult4MaxMinDecimal to aggfuncs.partialResult4MaxMinDuration--><!--MD5=[81ed389ba03b8a4161599bd95a7b72b5]
link aggfuncs.partialResult4MaxMinDuration to aggfuncs.partialResult4MaxMinFloat32--><!--MD5=[e9e41e20108db0b4e64fea1c38eda614]
link aggfuncs.partialResult4MaxMinFloat32 to aggfuncs.partialResult4MaxMinFloat64--><!--MD5=[05cb2089faefd44ac55901c6ae735acd]
link aggfuncs.partialResult4LastValue to aggfuncs.partialResult4MaxMinInt--><!--MD5=[ec8caf907d13e44d6e6cc110fb0861a9]
link aggfuncs.partialResult4MaxMinInt to aggfuncs.partialResult4MaxMinJSON--><!--MD5=[4eb7e059a7d4d65abc605e54404eed12]
link aggfuncs.partialResult4MaxMinJSON to aggfuncs.partialResult4MaxMinString--><!--MD5=[16f8b2742945e6690b344cead129dae9]
link aggfuncs.partialResult4MaxMinString to aggfuncs.partialResult4MaxMinUint--><!--MD5=[32412380137d405edf6d8778ed150426]
link aggfuncs.partialResult4MaxMinUint to aggfuncs.partialResult4NthValue--><!--MD5=[28224dfc62206b678a5e392c999e880b]
link aggfuncs.partialResult4NthValue to aggfuncs.partialResult4Ntile--><!--MD5=[042988d4911ff1471b9dbfb1223a82b9]
link aggfuncs.partialResult4MaxMinInt to aggfuncs.partialResult4Rank--><!--MD5=[dcf37f0338d6977d701b48346cbfe888]
link aggfuncs.partialResult4Rank to aggfuncs.partialResult4RowNumber--><!--MD5=[f0abd73caced969fe78307f778504812]
link aggfuncs.partialResult4RowNumber to aggfuncs.partialResult4SumDecimal--><!--MD5=[5429dd8f7f28d35b93e66d0ca43a7608]
link aggfuncs.partialResult4SumDecimal to aggfuncs.partialResult4SumDistinctDecimal--><!--MD5=[fab45d2b62c8e6e556f3caea458d5103]
link aggfuncs.partialResult4SumDistinctDecimal to aggfuncs.partialResult4SumDistinctFloat64--><!--MD5=[48e1c4fce5e20f1f11ece2ebfa34e49e]
link aggfuncs.partialResult4SumDistinctFloat64 to aggfuncs.partialResult4SumFloat64--><!--MD5=[698c4fb5e060efca76b0939298a1f35a]
link aggfuncs.partialResult4Rank to aggfuncs.partialResult4Time--><!--MD5=[db9226c71b18f19befac2a20f77da5c1]
link aggfuncs.partialResult4Time to aggfuncs.partialResult4VarPopDistinctFloat64--><!--MD5=[392ada503cad44a58fbb5aa39d6ac177]
link aggfuncs.partialResult4VarPopDistinctFloat64 to aggfuncs.partialResult4VarPopFloat64--><!--MD5=[b16acafb2186037a7109b1b5bd6dbb98]
link aggfuncs.partialResult4VarPopFloat64 to aggfuncs.sortRow--><!--MD5=[ab02a2cf3b13cf7ee6055d18c855b60f]
link aggfuncs.sortRow to aggfuncs.topNRows--><!--MD5=[08e2a91daccb6fb89d8783f9a163211d]
link executor.AfFinalResult to executor.AnalyzeFastTask--><!--MD5=[9cef0d8947cc2bad632868998229c292]
link executor.AnalyzeFastTask to executor.CommitTask--><!--MD5=[8a68e5bcbd229803476140320f7b30f1]
link executor.CommitTask to executor.Compiler--><!--MD5=[b1c18d27e741d9757c6030b38e337c24]
link executor.Compiler to executor.CoprocessorDAGHandler--><!--MD5=[3c8048a08b8ca03a701a20301489aa04]
link executor.CoprocessorDAGHandler to executor.DirtyTable--><!--MD5=[eb621ddb4a30b0f3b20fa95eaf6d1a78]
link executor.DirtyTable to executor.ExecStmt--><!--MD5=[09231e7be6e89579c37740ce43d83bd1]
link executor.ExecStmt to executor.HashAggInput--><!--MD5=[547926b054b7b42e18da24c2f63af0fb]
link executor.HashAggInput to executor.HashAggIntermData--><!--MD5=[b5578851814a0d124386d87a91645161]
link executor.HashAggIntermData to executor.IndexAdvice--><!--MD5=[961643866190fd90ab533d28edc61fe7]
link executor.AfFinalResult to executor.IndexAdviseInfo--><!--MD5=[a0a2acadad68974dde7c9227a224f876]
link executor.IndexAdviseInfo to executor.LoadStatsInfo--><!--MD5=[9567bcc5e1bd60653649f89e086dce73]
link executor.LoadStatsInfo to executor.MockPhysicalPlan--><!--MD5=[4bef7623af14afb4af529bc7096b0c98]
link executor.MockPhysicalPlan to executor.PessimisticLockCacheGetter--><!--MD5=[22fe974aea5e866224a34957e12e0069]
link executor.PessimisticLockCacheGetter to executor.allocBuf--><!--MD5=[100ed24a238e972d89ef6639420971b5]
link executor.allocBuf to executor.analyzeResult--><!--MD5=[1dd9146e9f7e0b64769f9a81cf49666a]
link executor.analyzeResult to executor.analyzeTask--><!--MD5=[6a431d2d28e6ae7eaa519ddedc3dd4e9]
link executor.analyzeTask to executor.backfillResult--><!--MD5=[c4939f35e11da0cac8c373ab4fd04271]
link executor.backfillResult to executor.brieQueue--><!--MD5=[f18f4a113d3e16ca1b6828f0c49f8189]
link executor.brieQueue to executor.brieQueueItem--><!--MD5=[1aabadbf71b1f3f76810197e510bb6cd]
link executor.IndexAdviseInfo to executor.brieTaskInfo--><!--MD5=[b95d85ebc08ecddabeeae11d7a801ed6]
link executor.brieTaskInfo to executor.brieTaskProgress--><!--MD5=[4b5c4e698e522353806732d77db3ee4d]
link executor.brieTaskProgress to executor.checksumContext--><!--MD5=[bbab255d9ad9f321be0991c8af76ac09]
link executor.checksumContext to executor.checksumResult--><!--MD5=[5bcf28ab30efa9b15c44acefa7ac0210]
link executor.checksumResult to executor.checksumTask--><!--MD5=[d3c67efbe9f5b8feee5160e9bf9eaf40]
link executor.checksumTask to executor.criticalErrorInspection--><!--MD5=[449f7b1bd8b6c68105e3d3cf9707b656]
link executor.criticalErrorInspection to executor.defaultVal--><!--MD5=[93bd87d682e0222826c99ad8f6da428d]
link executor.defaultVal to executor.entry--><!--MD5=[ea144c575b84ece65a0643a9e436283f]
link executor.entry to executor.entryAddr--><!--MD5=[7e93e409d3feb08c1e02f3d2ad81d4d4]
link executor.entryAddr to executor.entryStore--><!--MD5=[8fa79d715ab9179a0e5e744799bb0be2]
link executor.brieTaskInfo to executor.field--><!--MD5=[827bb61160bad61f9655b8e26cfd905a]
link executor.field to executor.fieldWriter--><!--MD5=[7a12744842f979aff50d373c383f0787]
link executor.fieldWriter to executor.globalPanicOnExceed--><!--MD5=[c585231bab4b930eb9af5b4384b2ff4b]
link executor.globalPanicOnExceed to executor.hashContext--><!--MD5=[5417410594402d37d3c10642f4cc6fad]
link executor.hashContext to executor.hashStatistic--><!--MD5=[c588efea4ea4aaf91e75f7a7d0cd6145]
link executor.hashStatistic to executor.hashjoinWorkerResult--><!--MD5=[1597c295b35c40232793fafd546a0d8f]
link executor.hashjoinWorkerResult to executor.indexHashJoinResult--><!--MD5=[ff9b9ab19e4ce3df774c17287f04020c]
link executor.indexHashJoinResult to executor.indexJoinLookUpContent--><!--MD5=[a323bc32efc8695219164f7ca27744e2]
link executor.indexJoinLookUpContent to executor.indexMergeJoinResult--><!--MD5=[a7bb2612203c5d1f71eed929988e1ec0]
link executor.indexMergeJoinResult to executor.indexMergeProcessWorker--><!--MD5=[da8c2a80412ab326f2640f6e78563c27]
link executor.field to executor.indexMergeTableScanWorker--><!--MD5=[7f1e25f0144e43af1bea6e2e616a4488]
link executor.indexMergeTableScanWorker to executor.inspectionFilter--><!--MD5=[b11071ec8a07ed53b533d105bc946e4f]
link executor.inspectionFilter to executor.inspectionResult--><!--MD5=[5061e374c5a323d0a850066983888c4e]
link executor.inspectionResult to executor.keyValue--><!--MD5=[2d0f3ff8096246d5861098f2d32a0d42]
link executor.keyValue to executor.keyValueWithDupInfo--><!--MD5=[c153aee4a7e2f8029b9cdd3a0875f80c]
link executor.keyValueWithDupInfo to executor.logFile--><!--MD5=[e786b2d1befa54b156a49907ecb2f751]
link executor.logFile to executor.logStreamResult--><!--MD5=[6e8ddace5fef826ddb3d1e27b6453275]
link executor.logStreamResult to executor.lookUpMergeJoinTask--><!--MD5=[ebc4377484a991c160db3cc1ad8a8284]
link executor.lookUpMergeJoinTask to executor.lookupTableTask--><!--MD5=[4b0e34f23240cdffcb132cf729c73fb2]
link executor.lookupTableTask to executor.memIndexLookUpReader--><!--MD5=[428a44bb081f5a5939543580612218ea]
link executor.indexMergeTableScanWorker to executor.memIndexReader--><!--MD5=[5f3adecb8ef38880e087f24fd2588882]
link executor.memIndexReader to executor.memTableReader--><!--MD5=[572eb9791560eb2b48593cbd572999a2]
link executor.memTableReader to executor.mergeJoinTable--><!--MD5=[639d41bbc96a81b3ea950fa0464d3084]
link executor.mergeJoinTable to executor.multiWayMerge--><!--MD5=[e846603f365c10a642c3b1715db35b3f]
link executor.multiWayMerge to executor.nodeLoadInspection--><!--MD5=[ef35fdf509b53be85634f8fb57707d64]
link executor.nodeLoadInspection to executor.paramMarkerExtractor--><!--MD5=[30a82eee4feb3c02c11ee6c918cb5af2]
link executor.paramMarkerExtractor to executor.paramMarkerSorter--><!--MD5=[1ca600bf5f8f4e1146a08cb6a1e8c9e1]
link executor.paramMarkerSorter to executor.parsedSlowLog--><!--MD5=[5497a05eff1cf374a983235f3f86dfbd]
link executor.parsedSlowLog to executor.partialIndexWorker--><!--MD5=[0d33bbb805ff18b4d7fbaeb15d47aa90]
link executor.partialIndexWorker to executor.partialTableWorker--><!--MD5=[a537938bdcf82f1ec7483836c338e05c]
link executor.memIndexReader to executor.partitionPointer--><!--MD5=[309ef6490b940d3c97f808fb9becabff]
link executor.partitionPointer to executor.pessimisticTxn--><!--MD5=[bf94ef96dd99e20b643f8eeb633ade30]
link executor.pessimisticTxn to executor.probeChkResource--><!--MD5=[cf5c692db124c89271264c9d42adc754]
link executor.probeChkResource to executor.processinfoSetter--><!--MD5=[2ae8ea5dc7f376517f20498599028b30]
link executor.processinfoSetter to executor.projectionInput--><!--MD5=[c7980bcc23f69a7579f9ef29b41df3e2]
link executor.projectionInput to executor.projectionInputFetcher--><!--MD5=[4304642be8c78ded18d0589a5e001855]
link executor.projectionInputFetcher to executor.projectionOutput--><!--MD5=[9ab1041e4255aff5e473931efefe9b1c]
link executor.projectionOutput to executor.projectionWorker--><!--MD5=[acad4e50918ed1143d1838c60116b6d9]
link executor.projectionWorker to executor.recoverRows--><!--MD5=[c2d912dd1167fc6e83b8f206c8e4cab0]
link executor.recoverRows to executor.regionKeyDecoder--><!--MD5=[510ff21881e6b9c47373233cc54e4d96]
link executor.partitionPointer to executor.regionMeta--><!--MD5=[020fc254cf12fd792edaab4474fe2927]
link executor.regionMeta to executor.rowHashMap--><!--MD5=[ed2651c50056435167574d53586bf7f2]
link executor.rowHashMap to executor.shuffleOutput--><!--MD5=[b2ed46f4755b64a286463012cd146c82]
link executor.shuffleOutput to executor.slowLogChecker--><!--MD5=[d80ef21b3aa0e87dc0ed6f8cb7cbbc4b]
link executor.slowLogChecker to executor.slowQueryTuple--><!--MD5=[f886ef9ac28e46254c3d2fcb94299a45]
link executor.slowQueryTuple to executor.statsCache--><!--MD5=[b5dda253def552df7b75648853c1bd0d]
link executor.statsCache to executor.tableHistID--><!--MD5=[33bbfab7c75f1f565e485f5f3250cf25]
link executor.tableHistID to executor.thresholdCheckInspection--><!--MD5=[e4f5174365e368c73fda2f5fd46e396a]
link executor.thresholdCheckInspection to executor.tidbGlueSession--><!--MD5=[3335f9e78264c3816c28f7d57b8db17c]
link executor.tidbGlueSession to executor.toBeCheckedRow--><!--MD5=[32fb86d6422bf20e553956fce4a803cb]
link executor.regionMeta to executor.unionWorkerResult--><!--MD5=[96fbd003fda4a5adb3076bf0f4d62aec]
link executor.unionWorkerResult to executor.vecGroupChecker--><!--MD5=[64727f3f53129cce1f8ad37d12235355]
link executor.vecGroupChecker to executor.versionInspection--><!--MD5=[7725ef8721bd2b010c9e2df6a7ae21a9]
link executor.versionInspection to executor.visibleChecker--><!--MD5=[8d75252df8bab7906d2fc13dff57af2c]
@startuml
namespace aggfuncs {
    interface AggFunc  {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    interface SlidingWindowAggFunc  {
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class aggfuncs.PartialResult << (T, #FF7700) >>  {
    }
    class aggfuncs.approxCountDistinctHashValue << (T, #FF7700) >>  {
    }
    class aggfuncs.partialResult4BitFunc << (T, #FF7700) >>  {
    }
    class aggfuncs.partialResult4Count << (T, #FF7700) >>  {
    }
    class approxCountDistinctFinal << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class approxCountDistinctOriginal << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class approxCountDistinctPartial1 << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class approxCountDistinctPartial2 << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class avgOriginal4Decimal << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class avgOriginal4DistinctDecimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class avgOriginal4DistinctFloat64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class avgOriginal4Float64 << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class avgPartial4Decimal << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class avgPartial4Float64 << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class baseAggFunc << (S,Aquamarine) >> {
        - args []expression.Expression
        - ordinal int

        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class baseApproxCountDistinct << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class baseAvgDecimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class baseAvgFloat64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class baseBitAggFunc << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class baseCount << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class baseGroupConcat4String << (S,Aquamarine) >> {
        - byItems []*util.ByItems
        - sep string
        - maxLen uint64
        - truncated *int32

        - handleTruncateError(sctx sessionctx.Context) error
        - truncatePartialResultIfNeed(sctx sessionctx.Context, buffer *bytes.Buffer) error

        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class baseLeadLag << (S,Aquamarine) >> {
        - defaultExpr expression.Expression
        - offset uint64

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class baseMaxMinAggFunc << (S,Aquamarine) >> {
        - isMax bool

    }
    class basePartialResult4FirstRow << (S,Aquamarine) >> {
        - isNull bool
        - gotFirstRow bool

    }
    class basePartialResult4GroupConcat << (S,Aquamarine) >> {
        - valsBuf *bytes.Buffer
        - buffer *bytes.Buffer

    }
    class baseSum4Float64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class baseSumAggFunc << (S,Aquamarine) >> {
    }
    class baseVarPopAggFunc << (S,Aquamarine) >> {
    }
    class bitAndUint64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class bitOrUint64 << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class bitXorUint64 << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class countOriginal4Decimal << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4Duration << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4Int << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4JSON << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4Real << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4String << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4Time << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginalWithDistinct << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countOriginalWithDistinct4Decimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countOriginalWithDistinct4Duration << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countOriginalWithDistinct4Int << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countOriginalWithDistinct4Real << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countOriginalWithDistinct4String << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countPartial << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class cumeDist << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Decimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class firstRow4Duration << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Enum << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Float32 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Float64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Int << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4JSON << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Set << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4String << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Time << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstValue << (S,Aquamarine) >> {
        - tp *types.FieldType

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class groupConcat << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + SetTruncated(t *int32) 
        + GetTruncated() *int32

    }
    class groupConcatDistinct << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + SetTruncated(t *int32) 
        + GetTruncated() *int32

    }
    class groupConcatDistinctOrder << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class groupConcatOrder << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + SetTruncated(t *int32) 
        + GetTruncated() *int32

    }
    class jsonObjectAgg << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class lag << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class lastValue << (S,Aquamarine) >> {
        - tp *types.FieldType

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class lead << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class maxMin4Decimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Duration << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Float32 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Float64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Int << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4JSON << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4String << (S,Aquamarine) >> {
        - retTp *types.FieldType

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Time << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Uint << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class nthValue << (S,Aquamarine) >> {
        - tp *types.FieldType
        - nth uint64

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class ntile << (S,Aquamarine) >> {
        - n uint64

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(_ sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(_ sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class partialResult4ApproxCountDistinct << (S,Aquamarine) >> {
        - size uint32
        - sizeDegree uint8
        - skipDegree uint8
        - hasZero bool
        - buf []approxCountDistinctHashValue

        - alloc(newSizeDegree uint8) 
        - reset() 
        - bufSize() uint32
        - mask() uint32
        - place(x approxCountDistinctHashValue) uint32
        - resize(newSizeDegree uint8) 
        - readAndMerge(rb []byte) error
        - fixedSize() uint64
        - insertHash(hashValue approxCountDistinctHashValue) 
        - good(hash approxCountDistinctHashValue) bool
        - insertImpl(x approxCountDistinctHashValue) 
        - shrinkIfNeed() 
        - maxFill() uint32
        - rehash() 
        - reinsertImpl(x approxCountDistinctHashValue) 
        - merge(tar *partialResult4ApproxCountDistinct) 

        + InsertHash64(x uint64) 
        + Serialize() []byte

    }
    class partialResult4AvgDecimal << (S,Aquamarine) >> {
        - sum types.MyDecimal
        - count int64

    }
    class partialResult4AvgDistinctDecimal << (S,Aquamarine) >> {
        - valSet set.StringSet

    }
    class partialResult4AvgDistinctFloat64 << (S,Aquamarine) >> {
        - valSet set.Float64Set

    }
    class partialResult4AvgFloat64 << (S,Aquamarine) >> {
        - sum float64
        - count int64

    }
    class partialResult4CountDistinctDecimal << (S,Aquamarine) >> {
        - valSet set.StringSet

    }
    class partialResult4CountDistinctDuration << (S,Aquamarine) >> {
        - valSet set.Int64Set

    }
    class partialResult4CountDistinctInt << (S,Aquamarine) >> {
        - valSet set.Int64Set

    }
    class partialResult4CountDistinctReal << (S,Aquamarine) >> {
        - valSet set.Float64Set

    }
    class partialResult4CountDistinctString << (S,Aquamarine) >> {
        - valSet set.StringSet

    }
    class partialResult4CountWithDistinct << (S,Aquamarine) >> {
        - valSet set.StringSet

    }
    class partialResult4CumeDist << (S,Aquamarine) >> {
        - curIdx int
        - lastRank int
        - rows []chunk.Row

    }
    class partialResult4FirstRowDecimal << (S,Aquamarine) >> {
        - val types.MyDecimal

    }
    class partialResult4FirstRowDuration << (S,Aquamarine) >> {
        - val types.Duration

    }
    class partialResult4FirstRowEnum << (S,Aquamarine) >> {
        - val types.Enum

    }
    class partialResult4FirstRowFloat32 << (S,Aquamarine) >> {
        - val float32

    }
    class partialResult4FirstRowFloat64 << (S,Aquamarine) >> {
        - val float64

    }
    class partialResult4FirstRowInt << (S,Aquamarine) >> {
        - val int64

    }
    class partialResult4FirstRowJSON << (S,Aquamarine) >> {
        - val json.BinaryJSON

    }
    class partialResult4FirstRowSet << (S,Aquamarine) >> {
        - val types.Set

    }
    class partialResult4FirstRowString << (S,Aquamarine) >> {
        - val string

    }
    class partialResult4FirstRowTime << (S,Aquamarine) >> {
        - val types.Time

    }
    class partialResult4FirstValue << (S,Aquamarine) >> {
        - gotFirstValue bool
        - evaluator valueEvaluator

    }
    class partialResult4GroupConcat << (S,Aquamarine) >> {
    }
    class partialResult4GroupConcatDistinct << (S,Aquamarine) >> {
        - valSet set.StringSet
        - encodeBytesBuffer []byte

    }
    class partialResult4GroupConcatOrder << (S,Aquamarine) >> {
        - topN *topNRows

    }
    class partialResult4GroupConcatOrderDistinct << (S,Aquamarine) >> {
        - topN *topNRows
        - valSet set.StringSet
        - encodeBytesBuffer []byte

    }
    class partialResult4JsonObjectAgg << (S,Aquamarine) >> {
        - entries <font color=blue>map</font>[string]<font color=blue>interface</font>{}

    }
    class partialResult4LastValue << (S,Aquamarine) >> {
        - gotLastValue bool
        - evaluator valueEvaluator

    }
    class partialResult4LeadLag << (S,Aquamarine) >> {
        - rows []chunk.Row
        - curIdx uint64

    }
    class partialResult4MaxMinDecimal << (S,Aquamarine) >> {
        - val types.MyDecimal
        - isNull bool

    }
    class partialResult4MaxMinDuration << (S,Aquamarine) >> {
        - val types.Duration
        - isNull bool

    }
    class partialResult4MaxMinFloat32 << (S,Aquamarine) >> {
        - val float32
        - isNull bool

    }
    class partialResult4MaxMinFloat64 << (S,Aquamarine) >> {
        - val float64
        - isNull bool

    }
    class partialResult4MaxMinInt << (S,Aquamarine) >> {
        - val int64
        - isNull bool

    }
    class partialResult4MaxMinJSON << (S,Aquamarine) >> {
        - val json.BinaryJSON
        - isNull bool

    }
    class partialResult4MaxMinString << (S,Aquamarine) >> {
        - val string
        - isNull bool

    }
    class partialResult4MaxMinUint << (S,Aquamarine) >> {
        - val uint64
        - isNull bool

    }
    class partialResult4NthValue << (S,Aquamarine) >> {
        - seenRows uint64
        - evaluator valueEvaluator

    }
    class partialResult4Ntile << (S,Aquamarine) >> {
        - curIdx uint64
        - curGroupIdx uint64
        - remainder uint64
        - quotient uint64
        - numRows uint64

    }
    class partialResult4Rank << (S,Aquamarine) >> {
        - curIdx int64
        - lastRank int64
        - rows []chunk.Row

    }
    class partialResult4RowNumber << (S,Aquamarine) >> {
        - curIdx int64

    }
    class partialResult4SumDecimal << (S,Aquamarine) >> {
        - val types.MyDecimal
        - notNullRowCount int64

    }
    class partialResult4SumDistinctDecimal << (S,Aquamarine) >> {
        - val types.MyDecimal
        - isNull bool
        - valSet set.StringSet

    }
    class partialResult4SumDistinctFloat64 << (S,Aquamarine) >> {
        - val float64
        - isNull bool
        - valSet set.Float64Set

    }
    class partialResult4SumFloat64 << (S,Aquamarine) >> {
        - val float64
        - notNullRowCount int64

    }
    class partialResult4Time << (S,Aquamarine) >> {
        - val types.Time
        - isNull bool

    }
    class partialResult4VarPopDistinctFloat64 << (S,Aquamarine) >> {
        - count int64
        - sum float64
        - variance float64
        - valSet set.Float64Set

    }
    class partialResult4VarPopFloat64 << (S,Aquamarine) >> {
        - count int64
        - sum float64
        - variance float64

    }
    class percentRank << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(partial PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, partial PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, partial PartialResult, chk *chunk.Chunk) error

    }
    class rank << (S,Aquamarine) >> {
        - isDense bool

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class rowComparer << (S,Aquamarine) >> {
        - cmpFuncs []chunk.CompareFunc
        - colIdx []int

        - compareRows(prev chunk.Row, curr chunk.Row) int

    }
    class rowNumber << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class sortRow << (S,Aquamarine) >> {
        - buffer *bytes.Buffer
        - byItems []*types.Datum

    }
    class sum4Decimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class sum4DistinctDecimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class sum4DistinctFloat64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class sum4Float64 << (S,Aquamarine) >> {
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class sum4Float64HighPrecision << (S,Aquamarine) >> {
    }
    class topNRows << (S,Aquamarine) >> {
        - rows []sortRow
        - desc []bool
        - sctx sessionctx.Context
        - err error
        - currSize uint64
        - limitSize uint64
        - sepSize uint64

        - tryToAdd(row sortRow) bool
        - reset() 
        - concat(sep string, truncated bool) string

        + Len() int
        + Less(i int, j int) bool
        + Swap(i int, j int) 
        + Push(x <font color=blue>interface</font>{}) 
        + Pop() <font color=blue>interface</font>{}

    }
    class value4Decimal << (S,Aquamarine) >> {
        - val *types.MyDecimal
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4Duration << (S,Aquamarine) >> {
        - val types.Duration
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4Float32 << (S,Aquamarine) >> {
        - val float32
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4Float64 << (S,Aquamarine) >> {
        - val float64
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4Int << (S,Aquamarine) >> {
        - val int64
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4JSON << (S,Aquamarine) >> {
        - val json.BinaryJSON
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4String << (S,Aquamarine) >> {
        - val string
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4Time << (S,Aquamarine) >> {
        - val types.Time
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    interface valueEvaluator  {
        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class varPop4DistinctFloat64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class varPop4Float64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class "unsafe.Pointer" as unsafePointer {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"aggfuncs.approxCountDistinctPartial2" *- - "aggfuncs.approxCountDistinctFinal"
"aggfuncs.baseApproxCountDistinct" *- - "aggfuncs.approxCountDistinctOriginal"
"aggfuncs.approxCountDistinctOriginal" *- - "aggfuncs.approxCountDistinctPartial1"
"aggfuncs.approxCountDistinctPartial1" *- - "aggfuncs.approxCountDistinctPartial2"
"aggfuncs.baseAvgDecimal" *- - "aggfuncs.avgOriginal4Decimal"
"aggfuncs.baseAggFunc" *- - "aggfuncs.avgOriginal4DistinctDecimal"
"aggfuncs.baseAggFunc" *- - "aggfuncs.avgOriginal4DistinctFloat64"
"aggfuncs.baseAvgFloat64" *- - "aggfuncs.avgOriginal4Float64"
"aggfuncs.baseAvgDecimal" *- - "aggfuncs.avgPartial4Decimal"
"aggfuncs.baseAvgFloat64" *- - "aggfuncs.avgPartial4Float64"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseApproxCountDistinct"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseAvgDecimal"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseAvgFloat64"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseBitAggFunc"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseCount"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseGroupConcat4String"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseLeadLag"
"aggfuncs.valueEvaluator" *- - "aggfuncs.baseLeadLag"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseMaxMinAggFunc"
"aggfuncs.baseSumAggFunc" *- - "aggfuncs.baseSum4Float64"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseSumAggFunc"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseVarPopAggFunc"
"aggfuncs.baseBitAggFunc" *- - "aggfuncs.bitAndUint64"
"aggfuncs.baseBitAggFunc" *- - "aggfuncs.bitOrUint64"
"aggfuncs.baseBitAggFunc" *- - "aggfuncs.bitXorUint64"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4Decimal"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4Duration"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4Int"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4JSON"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4Real"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4String"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4Time"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct4Decimal"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct4Duration"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct4Int"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct4Real"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct4String"
"aggfuncs.baseCount" *- - "aggfuncs.countPartial"
"aggfuncs.baseAggFunc" *- - "aggfuncs.cumeDist"
"aggfuncs.rowComparer" *- - "aggfuncs.cumeDist"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Decimal"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Duration"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Enum"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Float32"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Float64"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Int"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4JSON"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Set"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4String"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Time"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstValue"
"aggfuncs.baseGroupConcat4String" *- - "aggfuncs.groupConcat"
"aggfuncs.baseGroupConcat4String" *- - "aggfuncs.groupConcatDistinct"
"aggfuncs.baseGroupConcat4String" *- - "aggfuncs.groupConcatDistinctOrder"
"aggfuncs.baseGroupConcat4String" *- - "aggfuncs.groupConcatOrder"
"aggfuncs.baseAggFunc" *- - "aggfuncs.jsonObjectAgg"
"aggfuncs.baseLeadLag" *- - "aggfuncs.lag"
"aggfuncs.baseAggFunc" *- - "aggfuncs.lastValue"
"aggfuncs.baseLeadLag" *- - "aggfuncs.lead"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Decimal"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Duration"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Float32"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Float64"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Int"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4JSON"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4String"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Time"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Uint"
"aggfuncs.baseAggFunc" *- - "aggfuncs.nthValue"
"aggfuncs.baseAggFunc" *- - "aggfuncs.ntile"
"aggfuncs.partialResult4AvgDecimal" *- - "aggfuncs.partialResult4AvgDistinctDecimal"
"aggfuncs.partialResult4AvgFloat64" *- - "aggfuncs.partialResult4AvgDistinctFloat64"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowDecimal"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowDuration"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowEnum"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowFloat32"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowFloat64"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowInt"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowJSON"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowSet"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowString"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowTime"
"aggfuncs.basePartialResult4GroupConcat" *- - "aggfuncs.partialResult4GroupConcat"
"aggfuncs.basePartialResult4GroupConcat" *- - "aggfuncs.partialResult4GroupConcatDistinct"
"aggfuncs.baseAggFunc" *- - "aggfuncs.percentRank"
"aggfuncs.rowComparer" *- - "aggfuncs.percentRank"
"aggfuncs.baseAggFunc" *- - "aggfuncs.rank"
"aggfuncs.rowComparer" *- - "aggfuncs.rank"
"aggfuncs.baseAggFunc" *- - "aggfuncs.rowNumber"
"aggfuncs.baseSumAggFunc" *- - "aggfuncs.sum4Decimal"
"aggfuncs.baseSumAggFunc" *- - "aggfuncs.sum4DistinctDecimal"
"aggfuncs.baseSumAggFunc" *- - "aggfuncs.sum4DistinctFloat64"
"aggfuncs.baseSum4Float64" *- - "aggfuncs.sum4Float64"
"aggfuncs.baseSum4Float64" *- - "aggfuncs.sum4Float64HighPrecision"
"aggfuncs.baseVarPopAggFunc" *- - "aggfuncs.varPop4DistinctFloat64"
"aggfuncs.baseVarPopAggFunc" *- - "aggfuncs.varPop4Float64"

"aggfuncs.AggFunc" <|- - "aggfuncs.baseSum4Float64"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4Decimal"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4Duration"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4Int"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4JSON"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4Real"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4String"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4Time"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Decimal"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Duration"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Enum"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Float32"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Float64"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Int"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4JSON"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Set"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4String"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Time"
"aggfuncs.AggFunc" <|- - "aggfuncs.groupConcatDistinctOrder"
"aggfuncs.AggFunc" <|- - "aggfuncs.groupConcatOrder"
"aggfuncs.AggFunc" <|- - "aggfuncs.jsonObjectAgg"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Decimal"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Duration"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Float32"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Float64"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Int"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4JSON"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4String"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Time"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Uint"
"aggfuncs.AggFunc" <|- - "aggfuncs.sum4Decimal"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.sum4Decimal"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.sum4Float64"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Decimal"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Duration"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Float32"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Float64"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Int"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4JSON"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4String"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Time"
"aggfuncs.AggFunc" <|- - "aggfuncs.varPop4Float64"

namespace executor {
    class AdminPluginsExec << (S,Aquamarine) >> {
        + Action core.AdminPluginsAction
        + Plugins []string

        - changeDisableFlagAndFlush(disabled bool) error

        + Next(ctx context.Context, _ *chunk.Chunk) error

    }
    class AdminResetTelemetryIDExec << (S,Aquamarine) >> {
        - done bool

        + Next(ctx context.Context, _ *chunk.Chunk) error

    }
    class AdminShowTelemetryExec << (S,Aquamarine) >> {
        - done bool

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class AfFinalResult << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - err error
        - giveBackCh <font color=blue>chan</font> *chunk.Chunk

    }
    class AnalyzeColumnsExec << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - physicalTableID int64
        - colsInfo []*model.ColumnInfo
        - pkInfo *model.ColumnInfo
        - concurrency int
        - priority int
        - analyzePB *tipb.AnalyzeReq
        - resultHandler *tableResultHandler
        - opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64
        - job *statistics.AnalyzeJob

        - open(ranges []*ranger.Range) error
        - buildResp(ranges []*ranger.Range) (distsql.SelectResult, error)
        - buildStats(ranges []*ranger.Range) ([]*statistics.Histogram, []*statistics.CMSketch, error)

    }
    class AnalyzeExec << (S,Aquamarine) >> {
        - tasks []*analyzeTask
        - wg *sync.WaitGroup

        - analyzeWorker(taskCh <font color=blue>chan</font> *analyzeTask, resultCh <font color=blue>chan</font> analyzeResult, isCloseChanThread bool) 

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class AnalyzeFastExec << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - physicalTableID int64
        - pkInfo *model.ColumnInfo
        - colsInfo []*model.ColumnInfo
        - idxsInfo []*model.IndexInfo
        - concurrency int
        - opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64
        - tblInfo *model.TableInfo
        - cache *tikv.RegionCache
        - wg *sync.WaitGroup
        - sampLocs <font color=blue>chan</font> *tikv.KeyLocation
        - rowCount uint64
        - sampCursor int32
        - sampTasks []*AnalyzeFastTask
        - scanTasks []*tikv.KeyLocation
        - collectors []*statistics.SampleCollector
        - randSeed int64
        - job *statistics.AnalyzeJob

        - getSampRegionsRowCount(bo *tikv.Backoffer, needRebuild *bool, err *error, sampTasks *[]*AnalyzeFastTask) 
        - getNextSampleKey(bo *tikv.Backoffer, startKey kv.Key) (kv.Key, error)
        - buildSampTask() (bool, error)
        - decodeValues(sValue []byte) (<font color=blue>map</font>[int64]types.Datum, error)
        - getValueByInfo(colInfo *model.ColumnInfo, values <font color=blue>map</font>[int64]types.Datum) (types.Datum, error)
        - updateCollectorSamples(sValue []byte, sKey kv.Key, samplePos int32, hasPKInfo int) error
        - handleBatchSeekResponse(kvMap <font color=blue>map</font>[string][]byte) error
        - handleScanIter(iter kv.Iterator) (int, error)
        - handleScanTasks(bo *tikv.Backoffer) (int, error)
        - handleSampTasks(bo *tikv.Backoffer, workID int, err *error) 
        - buildColumnStats(ID int64, collector *statistics.SampleCollector, tp *types.FieldType, rowCount int64) (*statistics.Histogram, *statistics.CMSketch, error)
        - buildIndexStats(idxInfo *model.IndexInfo, collector *statistics.SampleCollector, rowCount int64) (*statistics.Histogram, *statistics.CMSketch, error)
        - runTasks() ([]*statistics.Histogram, []*statistics.CMSketch, error)
        - buildStats() ([]*statistics.Histogram, []*statistics.CMSketch, error)

    }
    class AnalyzeFastTask << (S,Aquamarine) >> {
        + Location *tikv.KeyLocation
        + SampSize uint64
        + BeginOffset uint64
        + EndOffset uint64

    }
    class AnalyzeIndexExec << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - physicalTableID int64
        - idxInfo *model.IndexInfo
        - concurrency int
        - priority int
        - analyzePB *tipb.AnalyzeReq
        - result distsql.SelectResult
        - countNullRes distsql.SelectResult
        - opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64
        - job *statistics.AnalyzeJob

        - fetchAnalyzeResult(ranges []*ranger.Range, isNullRange bool) error
        - open(ranges []*ranger.Range, considerNull bool) error
        - buildStatsFromResult(result distsql.SelectResult, needCMS bool) (*statistics.Histogram, *statistics.CMSketch, error)
        - buildStats(ranges []*ranger.Range, considerNull bool) (*statistics.Histogram, *statistics.CMSketch, error)

    }
    class AnalyzeTestFastExec << (S,Aquamarine) >> {
        + Ctx sessionctx.Context
        + PhysicalTableID int64
        + PKInfo *model.ColumnInfo
        + ColsInfo []*model.ColumnInfo
        + IdxsInfo []*model.IndexInfo
        + Concurrency int
        + Collectors []*statistics.SampleCollector
        + TblInfo *model.TableInfo
        + Opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64

        + TestFastSample() error

    }
    class BRIEExec << (S,Aquamarine) >> {
        - backupCfg *task.BackupConfig
        - restoreCfg *task.RestoreConfig
        - info *brieTaskInfo

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class BatchPointGetExec << (S,Aquamarine) >> {
        - tblInfo *model.TableInfo
        - idxInfo *model.IndexInfo
        - handles []int64
        - physIDs []int64
        - partPos int
        - idxVals [][]types.Datum
        - startTS uint64
        - snapshotTS uint64
        - txn kv.Transaction
        - lock bool
        - waitTime int64
        - inited bool
        - values [][]byte
        - index int
        - rowDecoder *rowcodec.ChunkDecoder
        - keepOrder bool
        - desc bool
        - columns []*model.ColumnInfo
        - virtualColumnIndex []int
        - virtualColumnRetFieldTypes []*types.FieldType

        - buildVirtualColumnInfo() 
        - initialize(ctx context.Context) error
        - lockKeys(ctx context.Context, keys []kv.Key) error

        + Open( context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class CancelDDLJobsExec << (S,Aquamarine) >> {
        - cursor int
        - jobIDs []int64
        - errs []error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ChangeExec << (S,Aquamarine) >> {
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class CheckIndexRangeExec << (S,Aquamarine) >> {
        - table *model.TableInfo
        - index *model.IndexInfo
        - is infoschema.InfoSchema
        - startKey []types.Datum
        - handleRanges []ast.HandleRange
        - srcChunk *chunk.Chunk
        - result distsql.SelectResult
        - cols []*model.ColumnInfo

        - buildDAGPB() (*tipb.DAGRequest, error)
        - constructIndexScanPB() *tipb.Executor

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Open(ctx context.Context) error
        + Close() error

    }
    class CheckTableExec << (S,Aquamarine) >> {
        - dbName string
        - table table.Table
        - indexInfos []*model.IndexInfo
        - srcs []*IndexLookUpExecutor
        - done bool
        - is infoschema.InfoSchema
        - exitCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - retCh <font color=blue>chan</font> error
        - checkIndex bool

        - checkTableIndexHandle(ctx context.Context, idxInfo *model.IndexInfo) error
        - checkIndexHandle(ctx context.Context, src *IndexLookUpExecutor) error
        - handlePanic(r <font color=blue>interface</font>{}) 
        - checkTableRecord(idxOffset int) error

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ChecksumTableExec << (S,Aquamarine) >> {
        - tables <font color=blue>map</font>[int64]*checksumContext
        - done bool

        - buildTasks() ([]*checksumTask, error)
        - handleResult(result *checksumResult) 
        - checksumWorker(taskCh <font color=blue>chan</font> *checksumTask, resultCh <font color=blue>chan</font> *checksumResult) 
        - handleChecksumRequest(req *kv.Request) (*tipb.ChecksumResponse, error)

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class CleanupIndexExec << (S,Aquamarine) >> {
        - done bool
        - removeCnt uint64
        - index table.Index
        - table table.Table
        - physicalID int64
        - idxCols []*model.ColumnInfo
        - idxColFieldTypes []*types.FieldType
        - idxChunk *chunk.Chunk
        - idxValues <font color=blue>map</font>[int64][][]types.Datum
        - batchSize uint64
        - batchKeys []kv.Key
        - idxValsBufs [][]types.Datum
        - lastIdxKey []byte
        - scanRowCnt uint64

        - getIdxColTypes() []*types.FieldType
        - batchGetRecord(txn kv.Transaction) (<font color=blue>map</font>[string][]byte, error)
        - deleteDanglingIdx(txn kv.Transaction, values <font color=blue>map</font>[string][]byte) error
        - fetchIndex(ctx context.Context, txn kv.Transaction) error
        - cleanTableIndex(ctx context.Context) error
        - buildIndexScan(ctx context.Context, txn kv.Transaction) (distsql.SelectResult, error)
        - init() error
        - buildIdxDAGPB(txn kv.Transaction) (*tipb.DAGRequest, error)
        - constructIndexScanPB() *tipb.Executor
        - constructLimitPB() *tipb.Executor

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Open(ctx context.Context) error
        + Close() error

    }
    interface Closeable  {
        + Close() error

    }
    class CommitTask << (S,Aquamarine) >> {
        - cnt uint64
        - rows [][]types.Datum

    }
    class Compiler << (S,Aquamarine) >> {
        + Ctx sessionctx.Context

        + Compile(ctx context.Context, stmtNode ast.StmtNode) (*ExecStmt, error)

    }
    class CoprocessorDAGHandler << (S,Aquamarine) >> {
        - sctx sessionctx.Context
        - dagReq *tipb.DAGRequest

        - buildResponseAndSendToStream(chk *chunk.Chunk, tps []*types.FieldType, stream tikvpb.Tikv_CoprocessorStreamServer) error
        - buildDAGExecutor(req *coprocessor.Request) (Executor, error)
        - buildChunk(chk *chunk.Chunk, tps []*types.FieldType) ([]tipb.Chunk, error)
        - buildUnaryResponse(chunks []tipb.Chunk) *coprocessor.Response
        - buildStreamResponse(chunk *tipb.Chunk) *coprocessor.Response
        - buildErrorResponse(err error) *coprocessor.Response
        - encodeChunk(chk *chunk.Chunk, colTypes []*types.FieldType) ([]tipb.Chunk, error)
        - encodeDefault(chk *chunk.Chunk, tps []*types.FieldType) ([]tipb.Chunk, error)
        - appendRow(chunks []tipb.Chunk, data []byte, rowCnt int) []tipb.Chunk

        + HandleRequest(ctx context.Context, req *coprocessor.Request) *coprocessor.Response
        + HandleStreamRequest(ctx context.Context, req *coprocessor.Request, stream tikvpb.Tikv_CoprocessorStreamServer) error

    }
    class DDLExec << (S,Aquamarine) >> {
        - stmt ast.StmtNode
        - is infoschema.InfoSchema
        - done bool

        - toErr(err error) error
        - executeTruncateTable(s *ast.TruncateTableStmt) error
        - executeRenameTable(s *ast.RenameTableStmt) error
        - executeCreateDatabase(s *ast.CreateDatabaseStmt) error
        - executeAlterDatabase(s *ast.AlterDatabaseStmt) error
        - executeCreateTable(s *ast.CreateTableStmt) error
        - executeCreateView(s *ast.CreateViewStmt) error
        - executeCreateIndex(s *ast.CreateIndexStmt) error
        - executeDropDatabase(s *ast.DropDatabaseStmt) error
        - executeDropTable(s *ast.DropTableStmt) error
        - executeDropView(s *ast.DropTableStmt) error
        - executeDropSequence(s *ast.DropSequenceStmt) error
        - dropTableObject(objects []*ast.TableName, obt objectType, ifExists bool) error
        - executeDropIndex(s *ast.DropIndexStmt) error
        - executeAlterTable(s *ast.AlterTableStmt) error
        - executeRecoverTable(s *ast.RecoverTableStmt) error
        - getTableAutoIDsFromSnapshot(job *model.Job) (int64, error)
        - getRecoverTableByJobID(s *ast.RecoverTableStmt, t *meta.Meta, dom *domain.Domain) (*model.Job, *model.TableInfo, error)
        - getRecoverTableByTableName(tableName *ast.TableName) (*model.Job, *model.TableInfo, error)
        - executeFlashbackTable(s *ast.FlashBackTableStmt) error
        - executeLockTables(s *ast.LockTablesStmt) error
        - executeUnlockTables(s *ast.UnlockTablesStmt) error
        - executeCleanupTableLock(s *ast.CleanupTableLockStmt) error
        - executeRepairTable(s *ast.RepairTableStmt) error
        - executeCreateSequence(s *ast.CreateSequenceStmt) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class DDLJobRetriever << (S,Aquamarine) >> {
        - runningJobs []*model.Job
        - historyJobIter *meta.LastJobIterator
        - cursor int
        - is infoschema.InfoSchema
        - activeRoles []*auth.RoleIdentity
        - cacheJobs []*model.Job

        - initial(txn kv.Transaction) error
        - appendJobToChunk(req *chunk.Chunk, job *model.Job, checker privilege.Manager) 

    }
    class DDLJobsReaderExec << (S,Aquamarine) >> {
        - cacheJobs []*model.Job
        - is infoschema.InfoSchema

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class DeallocateExec << (S,Aquamarine) >> {
        + Name string

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class DeleteExec << (S,Aquamarine) >> {
        - tblID2Table <font color=blue>map</font>[int64]table.Table
        - tblColPosInfos core.TblColPosInfoSlice
        - memTracker *memory.Tracker

        + IsMultiTable bool

        - deleteOneRow(tbl table.Table, handleIndex int, isExtraHandle bool, row []types.Datum) error
        - deleteSingleTableByChunk(ctx context.Context) error
        - composeTblRowMap(tblRowMap tableRowMapType, colPosInfos []core.TblColPosInfo, joinedRow []types.Datum) 
        - deleteMultiTablesByChunk(ctx context.Context) error
        - removeRowsInTblRowMap(tblRowMap tableRowMapType) error
        - removeRow(ctx sessionctx.Context, t table.Table, h int64, data []types.Datum) error

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class DirtyDB << (S,Aquamarine) >> {
        - tables <font color=blue>map</font>[int64]*DirtyTable

        + GetDirtyTable(tid int64) *DirtyTable

    }
    class DirtyTable << (S,Aquamarine) >> {
        - tid int64
        - addedRows <font color=blue>map</font>[int64]<font color=blue>struct</font>{}
        - deletedRows <font color=blue>map</font>[int64]<font color=blue>struct</font>{}

        + AddRow(handle int64) 
        + DeleteRow(handle int64) 
        + IsEmpty() bool

    }
    class ExecStmt << (S,Aquamarine) >> {
        - isPreparedStmt bool
        - isSelectForUpdate bool
        - retryCount uint

        + InfoSchema infoschema.InfoSchema
        + Plan core.Plan
        + Text string
        + StmtNode ast.StmtNode
        + Ctx sessionctx.Context
        + LowerPriority bool
        + OutputNames []*types.FieldName
        + PsStmt *core.CachedPrepareStmt

        - handleNoDelay(ctx context.Context, e Executor, isPessimistic bool) (bool, sqlexec.RecordSet, error)
        - handlePessimisticSelectForUpdate(ctx context.Context, e Executor) (sqlexec.RecordSet, error)
        - runPessimisticSelectForUpdate(ctx context.Context, e Executor) (sqlexec.RecordSet, error)
        - handleNoDelayExecutor(ctx context.Context, e Executor) (sqlexec.RecordSet, error)
        - handlePessimisticDML(ctx context.Context, e Executor) error
        - handlePessimisticLockError(ctx context.Context, err error) (Executor, error)
        - buildExecutor() (Executor, error)
        - logAudit() 

        + PointGet(ctx context.Context, is infoschema.InfoSchema) (*recordSet, error)
        + OriginText() string
        + IsPrepared() bool
        + IsReadOnly(vars *variable.SessionVars) bool
        + RebuildPlan(ctx context.Context) (int64, error)
        + Exec(ctx context.Context) (sqlexec.RecordSet, error)
        + CloseRecordSet(txnStartTS uint64, lastErr error) 
        + FinishExecuteStmt(txnTS uint64, succ bool, hasMoreResults bool) 
        + LogSlowQuery(txnTS uint64, succ bool, hasMoreResults bool) 
        + SummaryStmt(succ bool) 

    }
    class ExecuteExec << (S,Aquamarine) >> {
        - is infoschema.InfoSchema
        - name string
        - usingVars []expression.Expression
        - stmtExec Executor
        - stmt ast.StmtNode
        - plan core.Plan
        - id uint32
        - lowerPriority bool
        - outputNames []*types.FieldName

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Build(b *executorBuilder) error

    }
    interface Executor  {
        - base() *baseExecutor

        + Open( context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Schema() *expression.Schema

    }
    class ExplainExec << (S,Aquamarine) >> {
        - explain *core.Explain
        - analyzeExec Executor
        - rows [][]string
        - cursor int

        - generateExplainInfo(ctx context.Context) ([][]string, error)

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class GrantExec << (S,Aquamarine) >> {
        - is infoschema.InfoSchema
        - done bool

        + Privs []*ast.PrivElem
        + ObjectType ast.ObjectTypeType
        + Level *ast.GrantLevel
        + Users []*ast.UserSpec
        + TLSOptions []*ast.TLSOption
        + WithGrant bool

        - checkAndInitColumnPriv(user string, host string, cols []*ast.ColumnName, internalSession sessionctx.Context) error
        - grantGlobalPriv(ctx sessionctx.Context, user *ast.UserSpec) error
        - grantLevelPriv(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error
        - grantGlobalLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error
        - grantDBLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error
        - grantTableLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error
        - grantColumnLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class HashAggExec << (S,Aquamarine) >> {
        - sc *stmtctx.StatementContext
        - partialResultMap aggPartialResultMapper
        - groupSet set.StringSet
        - groupKeys []string
        - cursor4GroupKey int
        - groupKeyBuffer [][]byte
        - finishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - finalOutputCh <font color=blue>chan</font> *AfFinalResult
        - partialOutputChs []<font color=blue>chan</font> *HashAggIntermData
        - inputCh <font color=blue>chan</font> *HashAggInput
        - partialInputChs []<font color=blue>chan</font> *chunk.Chunk
        - partialWorkers []HashAggPartialWorker
        - finalWorkers []HashAggFinalWorker
        - defaultVal *chunk.Chunk
        - childResult *chunk.Chunk
        - isChildReturnEmpty bool
        - isUnparallelExec bool
        - prepared bool
        - executed bool
        - memTracker *memory.Tracker

        + PartialAggFuncs []aggfuncs.AggFunc
        + FinalAggFuncs []aggfuncs.AggFunc
        + GroupByItems []expression.Expression

        - initForUnparallelExec() 
        - initForParallelExec(ctx sessionctx.Context) 
        - fetchChildData(ctx context.Context) 
        - waitPartialWorkerAndCloseOutputChs(waitGroup *sync.WaitGroup) 
        - waitFinalWorkerAndCloseFinalOutput(waitGroup *sync.WaitGroup) 
        - prepare4ParallelExec(ctx context.Context) 
        - parallelExec(ctx context.Context, chk *chunk.Chunk) error
        - unparallelExec(ctx context.Context, chk *chunk.Chunk) error
        - execute(ctx context.Context) error
        - getPartialResults(groupKey string) []aggfuncs.PartialResult

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class HashAggFinalWorker << (S,Aquamarine) >> {
        - rowBuffer []types.Datum
        - mutableRow chunk.MutRow
        - partialResultMap aggPartialResultMapper
        - groupSet set.StringSet
        - inputCh <font color=blue>chan</font> *HashAggIntermData
        - outputCh <font color=blue>chan</font> *AfFinalResult
        - finalResultHolderCh <font color=blue>chan</font> *chunk.Chunk
        - groupKeys [][]byte

        - getPartialInput() (*HashAggIntermData, bool)
        - consumeIntermData(sctx sessionctx.Context) error
        - getFinalResult(sctx sessionctx.Context) 
        - receiveFinalResultHolder() (*chunk.Chunk, bool)
        - run(ctx sessionctx.Context, waitGroup *sync.WaitGroup) 

    }
    class HashAggInput << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - giveBackCh <font color=blue>chan</font> *chunk.Chunk

    }
    class HashAggIntermData << (S,Aquamarine) >> {
        - groupKeys []string
        - cursor int
        - partialResultMap aggPartialResultMapper

        - getPartialResultBatch(sc *stmtctx.StatementContext, prs [][]aggfuncs.PartialResult, aggFuncs []aggfuncs.AggFunc, maxChunkSize int) ([][]aggfuncs.PartialResult, []string, bool)

    }
    class HashAggPartialWorker << (S,Aquamarine) >> {
        - inputCh <font color=blue>chan</font> *chunk.Chunk
        - outputChs []<font color=blue>chan</font> *HashAggIntermData
        - globalOutputCh <font color=blue>chan</font> *AfFinalResult
        - giveBackCh <font color=blue>chan</font> *HashAggInput
        - partialResultsMap aggPartialResultMapper
        - groupByItems []expression.Expression
        - groupKey [][]byte
        - chk *chunk.Chunk
        - memTracker *memory.Tracker

        - getChildInput() bool
        - run(ctx sessionctx.Context, waitGroup *sync.WaitGroup, finalConcurrency int) 
        - updatePartialResult(ctx sessionctx.Context, sc *stmtctx.StatementContext, chk *chunk.Chunk, finalConcurrency int) error
        - shuffleIntermData(sc *stmtctx.StatementContext, finalConcurrency int) 

    }
    class HashJoinExec << (S,Aquamarine) >> {
        - probeSideExec Executor
        - buildSideExec Executor
        - buildSideEstCount float64
        - outerFilter expression.CNFExprs
        - probeKeys []*expression.Column
        - buildKeys []*expression.Column
        - probeTypes []*types.FieldType
        - buildTypes []*types.FieldType
        - concurrency uint
        - rowContainer *hashRowContainer
        - buildFinished <font color=blue>chan</font> error
        - closeCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - joinType core.JoinType
        - requiredRows int64
        - joiners []joiner
        - probeChkResourceCh <font color=blue>chan</font> *probeChkResource
        - probeResultChs []<font color=blue>chan</font> *chunk.Chunk
        - joinChkResourceCh []<font color=blue>chan</font> *chunk.Chunk
        - joinResultCh <font color=blue>chan</font> *hashjoinWorkerResult
        - memTracker *memory.Tracker
        - diskTracker *disk.Tracker
        - outerMatchedStatus []*bitmap.ConcurrentBitmap
        - useOuterToBuild bool
        - prepared bool
        - isOuterJoin bool
        - joinWorkerWaitGroup sync.WaitGroup
        - finished atomic.Value

        - fetchProbeSideChunks(ctx context.Context) 
        - wait4BuildSide() (bool, error)
        - fetchBuildSideRows(ctx context.Context, chkCh <font color=blue>chan</font> *chunk.Chunk, doneCh <font color=blue>chan</font> <font color=blue>struct</font>{}) 
        - initializeForProbe() 
        - fetchAndProbeHashTable(ctx context.Context) 
        - handleProbeSideFetcherPanic(r <font color=blue>interface</font>{}) 
        - handleJoinWorkerPanic(r <font color=blue>interface</font>{}) 
        - handleUnmatchedRowsFromHashTable(workerID uint) 
        - waitJoinWorkersAndCloseResultChan() 
        - runJoinWorker(workerID uint, probeKeyColIdx []int) 
        - joinMatchedProbeSideRow2ChunkForOuterHashJoin(workerID uint, probeKey uint64, probeSideRow chunk.Row, hCtx *hashContext, joinResult *hashjoinWorkerResult) (bool, *hashjoinWorkerResult)
        - joinMatchedProbeSideRow2Chunk(workerID uint, probeKey uint64, probeSideRow chunk.Row, hCtx *hashContext, joinResult *hashjoinWorkerResult) (bool, *hashjoinWorkerResult)
        - getNewJoinResult(workerID uint) (bool, *hashjoinWorkerResult)
        - join2Chunk(workerID uint, probeSideChk *chunk.Chunk, hCtx *hashContext, joinResult *hashjoinWorkerResult, selected []bool) (bool, *hashjoinWorkerResult)
        - join2ChunkForOuterHashJoin(workerID uint, probeSideChk *chunk.Chunk, hCtx *hashContext, joinResult *hashjoinWorkerResult) (bool, *hashjoinWorkerResult)
        - handleFetchAndBuildHashTablePanic(r <font color=blue>interface</font>{}) 
        - fetchAndBuildHashTable(ctx context.Context) 
        - buildHashTableForList(buildSideResultCh <font color=blue>chan</font> *chunk.Chunk) error

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class IndexAdvice << (S,Aquamarine) >> {
    }
    class IndexAdviseExec << (S,Aquamarine) >> {
        - indexAdviseInfo *IndexAdviseInfo

        + IsLocal bool

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class IndexAdviseInfo << (S,Aquamarine) >> {
        + Path string
        + MaxMinutes uint64
        + MaxIndexNum *ast.MaxIndexNumClause
        + LinesInfo *ast.LinesClause
        + Ctx sessionctx.Context
        + StmtNodes [][]ast.StmtNode
        + Result *IndexAdvice

        - getStmtNodes(data []byte) error
        - prepareInfo(data []byte) error

        + GetIndexAdvice(ctx context.Context, data []byte) error

    }
    class IndexAdviseVarKeyType << (S,Aquamarine) >> {
        + String() string

    }
    class IndexLookUpExecutor << (S,Aquamarine) >> {
        - table table.Table
        - index *model.IndexInfo
        - ranges []*ranger.Range
        - dagPB *tipb.DAGRequest
        - startTS uint64
        - handleIdx int
        - tableRequest *tipb.DAGRequest
        - columns []*model.ColumnInfo
        - idxWorkerWg sync.WaitGroup
        - tblWorkerWg sync.WaitGroup
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - resultCh <font color=blue>chan</font> *lookupTableTask
        - resultCurr *lookupTableTask
        - feedback *statistics.QueryFeedback
        - memTracker *memory.Tracker
        - kvRanges []kv.KeyRange
        - workerStarted bool
        - keepOrder bool
        - desc bool
        - indexStreaming bool
        - tableStreaming bool
        - corColInIdxSide bool
        - corColInTblSide bool
        - corColInAccess bool
        - idxPlans []core.PhysicalPlan
        - tblPlans []core.PhysicalPlan
        - idxCols []*expression.Column
        - colLens []int

        + PushedLimit *core.PushedDownLimit

        - open(ctx context.Context) error
        - startWorkers(ctx context.Context, initBatchSize int) error
        - startIndexWorker(ctx context.Context, kvRanges []kv.KeyRange, workCh <font color=blue>chan</font> *lookupTableTask, initBatchSize int) error
        - startTableWorker(ctx context.Context, workCh <font color=blue>chan</font> *lookupTableTask) 
        - buildTableReader(ctx context.Context, handles []int64) (Executor, error)
        - getResultTask() (*lookupTableTask, error)

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class IndexLookUpJoin << (S,Aquamarine) >> {
        - resultCh <font color=blue>chan</font> *lookUpJoinTask
        - cancelFunc context.CancelFunc
        - workerWg *sync.WaitGroup
        - outerCtx outerCtx
        - innerCtx innerCtx
        - task *lookUpJoinTask
        - joinResult *chunk.Chunk
        - innerIter chunk.Iterator
        - joiner joiner
        - isOuterJoin bool
        - requiredRows int64
        - indexRanges []*ranger.Range
        - keyOff2IdxOff []int
        - innerPtrBytes [][]byte
        - lastColHelper *core.ColWithCmpFuncManager
        - memTracker *memory.Tracker

        - startWorkers(ctx context.Context) 
        - newOuterWorker(resultCh <font color=blue>chan</font> *lookUpJoinTask, innerCh <font color=blue>chan</font> *lookUpJoinTask) *outerWorker
        - newInnerWorker(taskCh <font color=blue>chan</font> *lookUpJoinTask) *innerWorker
        - getFinishedTask(ctx context.Context) (*lookUpJoinTask, error)
        - lookUpMatchedInners(task *lookUpJoinTask, rowPtr chunk.RowPtr) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class IndexLookUpMergeJoin << (S,Aquamarine) >> {
        - resultCh <font color=blue>chan</font> *lookUpMergeJoinTask
        - cancelFunc context.CancelFunc
        - workerWg *sync.WaitGroup
        - outerMergeCtx outerMergeCtx
        - innerMergeCtx innerMergeCtx
        - joiners []joiner
        - joinChkResourceCh []<font color=blue>chan</font> *chunk.Chunk
        - isOuterJoin bool
        - requiredRows int64
        - task *lookUpMergeJoinTask
        - indexRanges []*ranger.Range
        - keyOff2IdxOff []int
        - lastColHelper *core.ColWithCmpFuncManager
        - memTracker *memory.Tracker

        - startWorkers(ctx context.Context) 
        - newOuterWorker(resultCh <font color=blue>chan</font> *lookUpMergeJoinTask, innerCh <font color=blue>chan</font> *lookUpMergeJoinTask) *outerMergeWorker
        - newInnerMergeWorker(taskCh <font color=blue>chan</font> *lookUpMergeJoinTask, workID int) *innerMergeWorker
        - getFinishedTask(ctx context.Context) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class IndexMergeReaderExecutor << (S,Aquamarine) >> {
        - table table.Table
        - indexes []*model.IndexInfo
        - descs []bool
        - ranges [][]*ranger.Range
        - dagPBs []*tipb.DAGRequest
        - startTS uint64
        - tableRequest *tipb.DAGRequest
        - columns []*model.ColumnInfo
        - partialStreamings []bool
        - tableStreaming bool
        - tblWorkerWg sync.WaitGroup
        - processWokerWg sync.WaitGroup
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - workerStarted bool
        - keyRanges [][]kv.KeyRange
        - resultCh <font color=blue>chan</font> *lookupTableTask
        - resultCurr *lookupTableTask
        - feedbacks []*statistics.QueryFeedback
        - memTracker *memory.Tracker
        - corColInIdxSide bool
        - partialPlans [][]core.PhysicalPlan
        - corColInTblSide bool
        - tblPlans []core.PhysicalPlan
        - corColInAccess bool
        - idxCols [][]*expression.Column
        - colLens [][]int

        - startWorkers(ctx context.Context) error
        - waitPartialWorkersAndCloseFetchChan(partialWorkerWg *sync.WaitGroup, fetchCh <font color=blue>chan</font> *lookupTableTask) 
        - startIndexMergeProcessWorker(ctx context.Context, workCh <font color=blue>chan</font> *lookupTableTask, fetch <font color=blue>chan</font> *lookupTableTask) 
        - startPartialIndexWorker(ctx context.Context, exitCh <font color=blue>chan</font> <font color=blue>struct</font>{}, fetchCh <font color=blue>chan</font> *lookupTableTask, workID int, partialWorkerWg *sync.WaitGroup, keyRange []kv.KeyRange) error
        - buildPartialTableReader(ctx context.Context, workID int) Executor
        - startPartialTableWorker(ctx context.Context, exitCh <font color=blue>chan</font> <font color=blue>struct</font>{}, fetchCh <font color=blue>chan</font> *lookupTableTask, workID int, partialWorkerWg *sync.WaitGroup) error
        - startIndexMergeTableScanWorker(ctx context.Context, workCh <font color=blue>chan</font> *lookupTableTask) 
        - buildFinalTableReader(ctx context.Context, handles []int64) (Executor, error)
        - getResultTask() (*lookupTableTask, error)
        - handleHandlesFetcherPanic(ctx context.Context, resultCh <font color=blue>chan</font> *lookupTableTask, worker string) <font color=blue>func</font>(<font color=blue>interface</font>{}) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class IndexNestedLoopHashJoin << (S,Aquamarine) >> {
        - resultCh <font color=blue>chan</font> *indexHashJoinResult
        - joinChkResourceCh []<font color=blue>chan</font> *chunk.Chunk
        - joiners []joiner
        - keepOuterOrder bool
        - curTask *indexHashJoinTask
        - taskCh <font color=blue>chan</font> *indexHashJoinTask

        - startWorkers(ctx context.Context) 
        - finishJoinWorkers(r <font color=blue>interface</font>{}) 
        - wait4JoinWorkers() 
        - runInOrder(ctx context.Context, req *chunk.Chunk) error
        - isDryUpTasks(ctx context.Context) bool
        - newOuterWorker(innerCh <font color=blue>chan</font> *indexHashJoinTask) *indexHashJoinOuterWorker
        - newInnerWorker(taskCh <font color=blue>chan</font> *indexHashJoinTask, workerID int) *indexHashJoinInnerWorker

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class IndexReaderExecutor << (S,Aquamarine) >> {
        - table table.Table
        - index *model.IndexInfo
        - physicalTableID int64
        - ranges []*ranger.Range
        - kvRanges []kv.KeyRange
        - dagPB *tipb.DAGRequest
        - startTS uint64
        - result distsql.SelectResult
        - columns []*model.ColumnInfo
        - outputColumns []*expression.Column
        - feedback *statistics.QueryFeedback
        - streaming bool
        - keepOrder bool
        - desc bool
        - corColInFilter bool
        - corColInAccess bool
        - idxCols []*expression.Column
        - colLens []int
        - plans []core.PhysicalPlan
        - memTracker *memory.Tracker

        - open(ctx context.Context, kvRanges []kv.KeyRange) error

        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Open(ctx context.Context) error

    }
    class InsertExec << (S,Aquamarine) >> {
        - evalBuffer4Dup chunk.MutRow
        - curInsertVals chunk.MutRow
        - row4Update []types.Datum

        + OnDuplicate []*expression.Assignment
        + Priority mysql.PriorityEnum

        - exec(ctx context.Context, rows [][]types.Datum) error
        - updateDupRow(ctx context.Context, txn kv.Transaction, row toBeCheckedRow, handle int64, onDuplicate []*expression.Assignment) error
        - batchUpdateDupRows(ctx context.Context, newRows [][]types.Datum) error
        - initEvalBuffer4Dup() 
        - doDupRowUpdate(ctx context.Context, handle int64, oldRow []types.Datum, newRow []types.Datum, cols []*expression.Assignment) ([]types.Datum, bool, int64, error)
        - setMessage() 

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class InsertValues << (S,Aquamarine) >> {
        - rowCount uint64
        - curBatchCnt uint64
        - maxRowsInBatch uint64
        - lastInsertID uint64
        - insertColumns []*table.Column
        - colDefaultVals []defaultVal
        - evalBuffer chunk.MutRow
        - evalBufferTypes []*types.FieldType
        - allAssignmentsAreConstant bool
        - hasRefCols bool
        - hasExtraHandle bool
        - lazyFillAutoID bool
        - memTracker *memory.Tracker

        + SelectExec Executor
        + Table table.Table
        + Columns []*ast.ColumnName
        + Lists [][]expression.Expression
        + SetList []*expression.Assignment
        + GenExprs []expression.Expression

        - insertCommon() *InsertValues
        - exec(_ context.Context, _ [][]types.Datum) error
        - initInsertColumns() error
        - initEvalBuffer() 
        - lazilyInitColDefaultValBuf() bool
        - processSetList() error
        - handleErr(col *table.Column, val *types.Datum, rowIdx int, err error) error
        - evalRow(ctx context.Context, list []expression.Expression, rowIdx int) ([]types.Datum, error)
        - fastEvalRow(ctx context.Context, list []expression.Expression, rowIdx int) ([]types.Datum, error)
        - setValueForRefColumn(row []types.Datum, hasValue []bool) error
        - doBatchInsert(ctx context.Context) error
        - getRow(ctx context.Context, vals []types.Datum) ([]types.Datum, error)
        - getColDefaultValue(idx int, col *table.Column) (types.Datum, error)
        - fillColValue(ctx context.Context, datum types.Datum, idx int, column *table.Column, hasValue bool) (types.Datum, error)
        - fillRow(ctx context.Context, row []types.Datum, hasValue []bool) ([]types.Datum, error)
        - isAutoNull(ctx context.Context, d types.Datum, col *table.Column) bool
        - hasAutoIncrementColumn() (int, bool)
        - lazyAdjustAutoIncrementDatumInRetry(ctx context.Context, rows [][]types.Datum, colIdx int) ([][]types.Datum, error)
        - lazyAdjustAutoIncrementDatum(ctx context.Context, rows [][]types.Datum) ([][]types.Datum, error)
        - adjustAutoIncrementDatum(ctx context.Context, d types.Datum, hasValue bool, c *table.Column) (types.Datum, error)
        - adjustAutoRandomDatum(ctx context.Context, d types.Datum, hasValue bool, c *table.Column) (types.Datum, error)
        - allocAutoRandomID(fieldType *types.FieldType) (int64, error)
        - rebaseAutoRandomID(recordID int64, fieldType *types.FieldType) error
        - handleWarning(err error) 
        - batchCheckAndInsert(ctx context.Context, rows [][]types.Datum, addRecord <font color=blue>func</font>(context.Context, []types.Datum) (int64, error)) error
        - addRecord(ctx context.Context, row []types.Datum) (int64, error)
        - addRecordWithAutoIDHint(ctx context.Context, row []types.Datum, reserveAutoIDCount int) (int64, error)

    }
    class LimitExec << (S,Aquamarine) >> {
        - begin uint64
        - end uint64
        - cursor uint64
        - meetFirstBatch bool
        - childResult *chunk.Chunk

        - adjustRequiredRows(chk *chunk.Chunk) *chunk.Chunk

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Open(ctx context.Context) error
        + Close() error

    }
    class LoadDataExec << (S,Aquamarine) >> {
        - loadDataInfo *LoadDataInfo

        + IsLocal bool
        + OnDuplicate ast.OnDuplicateKeyHandlingType

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class LoadDataInfo << (S,Aquamarine) >> {
        - row []types.Datum
        - rows [][]types.Datum
        - commitTaskQueue <font color=blue>chan</font> CommitTask

        + Path string
        + Table table.Table
        + FieldsInfo *ast.FieldsClause
        + LinesInfo *ast.LinesClause
        + IgnoreLines uint64
        + Ctx sessionctx.Context
        + Drained bool
        + StopCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        + QuitCh <font color=blue>chan</font> <font color=blue>struct</font>{}

        - getValidData(prevData []byte, curData []byte) ([]byte, []byte)
        - getLine(prevData []byte, curData []byte) ([]byte, []byte, bool)
        - colsToRow(ctx context.Context, cols []field) []types.Datum
        - addRecordLD(ctx context.Context, row []types.Datum) (int64, error)
        - getFieldsFromLine(line []byte) ([]field, error)

        + GetRows() [][]types.Datum
        + GetCurBatchCnt() uint64
        + CloseTaskQueue() 
        + InitQueues() 
        + StartStopWatcher() 
        + ForceQuit() 
        + MakeCommitTask() CommitTask
        + EnqOneTask(ctx context.Context) error
        + CommitOneTask(ctx context.Context, task CommitTask) error
        + CommitWork(ctx context.Context) error
        + SetMaxRowsInBatch(limit uint64) 
        + InsertData(ctx context.Context, prevData []byte, curData []byte) ([]byte, bool, error)
        + CheckAndInsertOneBatch(ctx context.Context, rows [][]types.Datum, cnt uint64) error
        + SetMessage() 

    }
    class LoadStatsExec << (S,Aquamarine) >> {
        - info *LoadStatsInfo

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class LoadStatsInfo << (S,Aquamarine) >> {
        + Path string
        + Ctx sessionctx.Context

        + Update(data []byte) error

    }
    class MaxOneRowExec << (S,Aquamarine) >> {
        - evaluated bool

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class MemTableReaderExec << (S,Aquamarine) >> {
        - table *model.TableInfo
        - retriever memTableRetriever
        - cacheRetrieved bool

        - isInspectionCacheableTable(tblName string) bool

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class MergeJoinExec << (S,Aquamarine) >> {
        - stmtCtx *stmtctx.StatementContext
        - compareFuncs []expression.CompareFunc
        - joiner joiner
        - isOuterJoin bool
        - desc bool
        - innerTable *mergeJoinTable
        - outerTable *mergeJoinTable
        - hasMatch bool
        - hasNull bool
        - memTracker *memory.Tracker
        - diskTracker *disk.Tracker

        - compare(outerRow chunk.Row, innerRow chunk.Row) (int, error)

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class MetricRetriever << (S,Aquamarine) >> {
        - table *model.TableInfo
        - tblDef *infoschema.MetricTableDef
        - extractor *core.MetricTableExtractor
        - timeRange core.QueryTimeRange
        - retrieved bool

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)
        - queryMetric(ctx context.Context, sctx sessionctx.Context, queryRange v1.Range, quantile float64) (model.Value, error)
        - getQueryRange(sctx sessionctx.Context) promQLQueryRange
        - genRows(value model.Value, quantile float64) [][]types.Datum
        - genRecord(metric model.Metric, pair model.SamplePair, quantile float64) []types.Datum

    }
    class MetricsSummaryByLabelRetriever << (S,Aquamarine) >> {
        - table *model.TableInfo
        - extractor *core.MetricSummaryTableExtractor
        - timeRange core.QueryTimeRange
        - retrieved bool

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    class MetricsSummaryRetriever << (S,Aquamarine) >> {
        - table *model.TableInfo
        - extractor *core.MetricSummaryTableExtractor
        - timeRange core.QueryTimeRange
        - retrieved bool

        - retrieve(_ context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    interface MockPhysicalPlan  {
        + GetExecutor() Executor

    }
    class NestedLoopApplyExec << (S,Aquamarine) >> {
        - innerRows []chunk.Row
        - cursor int
        - innerExec Executor
        - outerExec Executor
        - innerFilter expression.CNFExprs
        - outerFilter expression.CNFExprs
        - joiner joiner
        - outerSchema []*expression.CorrelatedColumn
        - outerChunk *chunk.Chunk
        - outerChunkCursor int
        - outerSelected []bool
        - innerList *chunk.List
        - innerChunk *chunk.Chunk
        - innerSelected []bool
        - innerIter chunk.Iterator
        - outerRow *chunk.Row
        - hasMatch bool
        - hasNull bool
        - outer bool
        - memTracker *memory.Tracker

        - fetchSelectedOuterRow(ctx context.Context, chk *chunk.Chunk) (*chunk.Row, error)
        - fetchAllInners(ctx context.Context) error

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class PessimisticLockCacheGetter << (S,Aquamarine) >> {
        - txnCtx *variable.TransactionContext

        + Get(_ context.Context, key kv.Key) ([]byte, error)

    }
    class PointGetExecutor << (S,Aquamarine) >> {
        - tblInfo *model.TableInfo
        - handle int64
        - idxInfo *model.IndexInfo
        - partInfo *model.PartitionDefinition
        - idxKey kv.Key
        - handleVal []byte
        - idxVals []types.Datum
        - startTS uint64
        - txn kv.Transaction
        - snapshot kv.Snapshot
        - done bool
        - lock bool
        - lockWaitTime int64
        - rowDecoder *rowcodec.ChunkDecoder
        - columns []*model.ColumnInfo
        - virtualColumnIndex []int
        - virtualColumnRetFieldTypes []*types.FieldType

        - buildVirtualColumnInfo() 
        - getAndLock(ctx context.Context, key kv.Key) ([]byte, error)
        - lockKeyIfNeeded(ctx context.Context, key []byte) error
        - get(ctx context.Context, key kv.Key) ([]byte, error)

        + Init(p *core.PointGetPlan, startTs uint64) 
        + Open( context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class PrepareExec << (S,Aquamarine) >> {
        - is infoschema.InfoSchema
        - name string
        - sqlText string

        + ID uint32
        + ParamCount int
        + Fields []*ast.ResultField

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ProjectionExec << (S,Aquamarine) >> {
        - evaluatorSuit *expression.EvaluatorSuite
        - finishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - outputCh <font color=blue>chan</font> *projectionOutput
        - fetcher projectionInputFetcher
        - numWorkers int64
        - workers []*projectionWorker
        - childResult *chunk.Chunk
        - parentReqRows int64
        - memTracker *memory.Tracker
        - wg sync.WaitGroup
        - calculateNoDelay bool
        - prepared bool

        - open(ctx context.Context) error
        - isUnparallelExec() bool
        - unParallelExecute(ctx context.Context, chk *chunk.Chunk) error
        - parallelExecute(ctx context.Context, chk *chunk.Chunk) error
        - prepare(ctx context.Context) 
        - drainInputCh(ch <font color=blue>chan</font> *projectionInput) 
        - drainOutputCh(ch <font color=blue>chan</font> *projectionOutput) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class RecoverIndexExec << (S,Aquamarine) >> {
        - done bool
        - index table.Index
        - table table.Table
        - physicalID int64
        - batchSize int
        - columns []*model.ColumnInfo
        - colFieldTypes []*types.FieldType
        - srcChunk *chunk.Chunk
        - recoverRows []recoverRows
        - idxValsBufs [][]types.Datum
        - idxKeyBufs [][]byte
        - batchKeys []kv.Key

        - columnsTypes() []*types.FieldType
        - constructTableScanPB(pbColumnInfos []*tipb.ColumnInfo) *tipb.Executor
        - constructLimitPB(count uint64) *tipb.Executor
        - buildDAGPB(txn kv.Transaction, limitCnt uint64) (*tipb.DAGRequest, error)
        - buildTableScan(ctx context.Context, txn kv.Transaction, startHandle int64, limitCnt uint64) (distsql.SelectResult, error)
        - backfillIndex(ctx context.Context) (int64, int64, error)
        - fetchRecoverRows(ctx context.Context, srcResult distsql.SelectResult, result *backfillResult) ([]recoverRows, error)
        - batchMarkDup(txn kv.Transaction, rows []recoverRows) error
        - backfillIndexInTxn(ctx context.Context, txn kv.Transaction, startHandle int64) (backfillResult, error)

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ReloadExprPushdownBlacklistExec << (S,Aquamarine) >> {
        + Next(ctx context.Context, _ *chunk.Chunk) error

    }
    class ReloadOptRuleBlacklistExec << (S,Aquamarine) >> {
        + Next(ctx context.Context, _ *chunk.Chunk) error

    }
    class ReplaceExec << (S,Aquamarine) >> {
        + Priority int

        - removeRow(ctx context.Context, txn kv.Transaction, handle int64, r toBeCheckedRow) (bool, error)
        - replaceRow(ctx context.Context, r toBeCheckedRow) error
        - removeIndexRow(ctx context.Context, txn kv.Transaction, r toBeCheckedRow) (bool, bool, error)
        - exec(ctx context.Context, newRows [][]types.Datum) error
        - setMessage() 

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class RevokeExec << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - is infoschema.InfoSchema
        - done bool

        + Privs []*ast.PrivElem
        + ObjectType ast.ObjectTypeType
        + Level *ast.GrantLevel
        + Users []*ast.UserSpec

        - revokeOneUser(internalSession sessionctx.Context, user string, host string) error
        - revokePriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error
        - revokeGlobalPriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error
        - revokeDBPriv(internalSession sessionctx.Context, priv *ast.PrivElem, userName string, host string) error
        - revokeTablePriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error
        - revokeColumnPriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SQLBindExec << (S,Aquamarine) >> {
        - sqlBindOp core.SQLBindOpType
        - normdOrigSQL string
        - bindSQL string
        - charset string
        - collation string
        - db string
        - isGlobal bool
        - bindAst ast.StmtNode

        - dropSQLBind() error
        - createSQLBind() error
        - flushBindings() error
        - captureBindings() 
        - evolveBindings() error
        - reloadBindings() error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SelectIntoExec << (S,Aquamarine) >> {
        - intoOpt *ast.SelectIntoOption
        - lineBuf []byte
        - realBuf []byte
        - writer *bufio.Writer
        - dstFile *os.File
        - chk *chunk.Chunk
        - started bool

        - considerEncloseOpt(et types.EvalType) bool
        - dumpToOutfile() error

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class SelectLockExec << (S,Aquamarine) >> {
        - keys []kv.Key
        - tblID2Handle <font color=blue>map</font>[int64][]*expression.Column
        - partitionedTable []table.PartitionedTable
        - tblID2Table <font color=blue>map</font>[int64]table.PartitionedTable

        + Lock ast.SelectLockType

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SelectionExec << (S,Aquamarine) >> {
        - batched bool
        - filters []expression.Expression
        - selected []bool
        - inputIter *chunk.Iterator4Chunk
        - inputRow chunk.Row
        - childResult *chunk.Chunk
        - memTracker *memory.Tracker

        - open(ctx context.Context) error
        - unBatchedNext(ctx context.Context, chk *chunk.Chunk) error

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SetConfigExec << (S,Aquamarine) >> {
        - p *core.SetConfig
        - jsonBody string

        - doRequest(url string) error

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SetExecutor << (S,Aquamarine) >> {
        - vars []*expression.VarAssignment
        - done bool

        - getSynonyms(varName string) []string
        - setSysVariable(name string, v *expression.VarAssignment) error
        - setCharset(cs string, co string) error
        - getVarValue(v *expression.VarAssignment, sysVar *variable.SysVar) (types.Datum, error)
        - loadSnapshotInfoSchemaIfNeeded(name string) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowDDLExec << (S,Aquamarine) >> {
        - ddlOwnerID string
        - selfID string
        - ddlInfo *admin.DDLInfo
        - done bool

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowDDLJobQueriesExec << (S,Aquamarine) >> {
        - cursor int
        - jobs []*model.Job
        - jobIDs []int64

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowDDLJobsExec << (S,Aquamarine) >> {
        - jobNumber int
        - is infoschema.InfoSchema
        - done bool

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowExec << (S,Aquamarine) >> {
        - is infoschema.InfoSchema
        - result *chunk.Chunk
        - cursor int

        + Tp ast.ShowStmtType
        + DBName model.CIStr
        + Table *ast.TableName
        + Column *ast.ColumnName
        + IndexName model.CIStr
        + Flag int
        + Roles []*auth.RoleIdentity
        + User *auth.UserIdentity
        + Full bool
        + IfNotExists bool
        + GlobalScope bool
        + Extended bool

        - fetchAll(ctx context.Context) error
        - fetchShowBind() error
        - fetchShowEngines() error
        - fetchShowDatabases() error
        - fetchShowProcessList() error
        - fetchShowOpenTables() error
        - fetchShowTables() error
        - fetchShowTableStatus() error
        - fetchShowColumns(ctx context.Context) error
        - fetchShowIndex() error
        - fetchShowCharset() error
        - fetchShowMasterStatus() error
        - fetchShowVariables() error
        - fetchShowStatus() error
        - fetchShowCreateSequence() error
        - fetchShowClusterConfigs(ctx context.Context) error
        - fetchShowCreateTable() error
        - fetchShowCreateView() error
        - fetchShowCreateDatabase() error
        - fetchShowCollation() error
        - fetchShowCreateUser() error
        - fetchShowGrants() error
        - fetchShowPrivileges() error
        - fetchShowTriggers() error
        - fetchShowProcedureStatus() error
        - fetchShowPlugins() error
        - fetchShowWarnings(errOnly bool) error
        - fetchShowPumpOrDrainerStatus(kind string) error
        - getTable() (table.Table, error)
        - dbAccessDenied() error
        - tableAccessDenied(access string, table string) error
        - appendRow(row []<font color=blue>interface</font>{}) 
        - fetchShowTableRegions() error
        - fillRegionsToChunk(regions []regionMeta) 
        - fetchShowBuiltins() error
        - fetchShowStatsMeta() error
        - appendTableForStatsMeta(dbName string, tblName string, partitionName string, statsTbl *statistics.Table) 
        - fetchShowStatsHistogram() error
        - appendTableForStatsHistograms(dbName string, tblName string, partitionName string, statsTbl *statistics.Table) 
        - histogramToRow(dbName string, tblName string, partitionName string, colName string, isIndex int, hist statistics.Histogram, avgColSize float64) 
        - versionToTime(version uint64) types.Time
        - fetchShowStatsBuckets() error
        - appendTableForStatsBuckets(dbName string, tblName string, partitionName string, statsTbl *statistics.Table) error
        - bucketsToRows(dbName string, tblName string, partitionName string, colName string, numOfCols int, hist statistics.Histogram) error
        - fetchShowStatsHealthy() 
        - appendTableForStatsHealthy(dbName string, tblName string, partitionName string, statsTbl *statistics.Table) 
        - fetchShowAnalyzeStatus() 
        - fetchShowBRIE(kind ast.BRIEKind) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowNextRowIDExec << (S,Aquamarine) >> {
        - tblName *ast.TableName
        - done bool

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowSlowExec << (S,Aquamarine) >> {
        - result []*domain.SlowQueryInfo
        - cursor int

        + ShowSlow *ast.ShowSlow

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShuffleExec << (S,Aquamarine) >> {
        - concurrency int
        - workers []*shuffleWorker
        - prepared bool
        - executed bool
        - splitter partitionSplitter
        - dataSource Executor
        - finishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - outputCh <font color=blue>chan</font> *shuffleOutput

        - prepare4ParallelExec(ctx context.Context) 
        - waitWorkerAndCloseOutput(waitGroup *sync.WaitGroup) 
        - fetchDataAndSplit(ctx context.Context) 

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SimpleExec << (S,Aquamarine) >> {
        - done bool
        - is infoschema.InfoSchema

        + Statement ast.StmtNode

        - setDefaultRoleNone(s *ast.SetDefaultRoleStmt) error
        - setDefaultRoleRegular(s *ast.SetDefaultRoleStmt) error
        - setDefaultRoleAll(s *ast.SetDefaultRoleStmt) error
        - setDefaultRoleForCurrentUser(s *ast.SetDefaultRoleStmt) error
        - executeSetDefaultRole(s *ast.SetDefaultRoleStmt) error
        - setRoleRegular(s *ast.SetRoleStmt) error
        - setRoleAll(s *ast.SetRoleStmt) error
        - setRoleAllExcept(s *ast.SetRoleStmt) error
        - setRoleDefault(s *ast.SetRoleStmt) error
        - setRoleNone(s *ast.SetRoleStmt) error
        - executeSetRole(s *ast.SetRoleStmt) error
        - dbAccessDenied(dbname string) error
        - executeUse(s *ast.UseStmt) error
        - executeBegin(ctx context.Context, s *ast.BeginStmt) error
        - executeRevokeRole(s *ast.RevokeRoleStmt) error
        - executeCommit(s *ast.CommitStmt) 
        - executeRollback(s *ast.RollbackStmt) error
        - executeCreateUser(ctx context.Context, s *ast.CreateUserStmt) error
        - executeAlterUser(s *ast.AlterUserStmt) error
        - executeGrantRole(s *ast.GrantRoleStmt) error
        - executeDropUser(s *ast.DropUserStmt) error
        - executeSetPwd(s *ast.SetPwdStmt) error
        - executeKillStmt(s *ast.KillStmt) error
        - executeFlush(s *ast.FlushStmt) error
        - executeAlterInstance(s *ast.AlterInstanceStmt) error
        - executeDropStats(s *ast.DropStatsStmt) error
        - autoNewTxn() bool
        - executeShutdown(s *ast.ShutdownStmt) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SortExec << (S,Aquamarine) >> {
        - fetched bool
        - schema *expression.Schema
        - keyExprs []expression.Expression
        - keyTypes []*types.FieldType
        - keyColumns []int
        - keyCmpFuncs []chunk.CompareFunc
        - rowChunks *chunk.SortedRowContainer
        - memTracker *memory.Tracker
        - diskTracker *disk.Tracker
        - partitionList []*chunk.SortedRowContainer
        - multiWayMerge *multiWayMerge
        - spillAction *chunk.SortAndSpillDiskAction

        + ByItems []*util.ByItems
        + Idx int

        - externalSorting(req *chunk.Chunk) error
        - fetchRowChunks(ctx context.Context) error
        - initCompareFuncs() 
        - buildKeyColumns() 
        - lessRow(rowI chunk.Row, rowJ chunk.Row) bool

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SplitIndexRegionExec << (S,Aquamarine) >> {
        - tableInfo *model.TableInfo
        - partitionNames []model.CIStr
        - indexInfo *model.IndexInfo
        - lower []types.Datum
        - upper []types.Datum
        - num int
        - valueLists [][]types.Datum
        - splitIdxKeys [][]byte
        - done bool

        - splitIndexRegion(ctx context.Context) error
        - getSplitIdxKeys() ([][]byte, error)
        - getSplitIdxKeysFromValueList() ([][]byte, error)
        - getSplitIdxPhysicalKeysFromValueList(physicalID int64, keys [][]byte) ([][]byte, error)
        - getSplitIdxPhysicalStartAndOtherIdxKeys(physicalID int64, keys [][]byte) [][]byte
        - getSplitIdxKeysFromBound() ([][]byte, error)
        - getSplitIdxPhysicalKeysFromBound(physicalID int64, keys [][]byte) ([][]byte, error)

        + Open(ctx context.Context) error
        + Next(ctx context.Context, chk *chunk.Chunk) error

    }
    class SplitTableRegionExec << (S,Aquamarine) >> {
        - tableInfo *model.TableInfo
        - partitionNames []model.CIStr
        - lower types.Datum
        - upper types.Datum
        - num int
        - valueLists [][]types.Datum
        - splitKeys [][]byte
        - done bool

        - splitTableRegion(ctx context.Context) error
        - getSplitTableKeys() ([][]byte, error)
        - getSplitTableKeysFromValueList() ([][]byte, error)
        - getSplitTablePhysicalKeysFromValueList(physicalID int64, keys [][]byte) [][]byte
        - getSplitTableKeysFromBound() ([][]byte, error)
        - calculateBoundValue() (int64, int64, error)
        - getSplitTablePhysicalKeysFromBound(physicalID int64, low int64, step int64, keys [][]byte) [][]byte

        + Open(ctx context.Context) error
        + Next(ctx context.Context, chk *chunk.Chunk) error

    }
    class StreamAggExec << (S,Aquamarine) >> {
        - executed bool
        - isChildReturnEmpty bool
        - defaultVal *chunk.Chunk
        - groupChecker *vecGroupChecker
        - inputIter *chunk.Iterator4Chunk
        - inputRow chunk.Row
        - aggFuncs []aggfuncs.AggFunc
        - partialResults []aggfuncs.PartialResult
        - groupRows []chunk.Row
        - childResult *chunk.Chunk
        - memTracker *memory.Tracker

        - consumeOneGroup(ctx context.Context, chk *chunk.Chunk) error
        - consumeGroupRows() error
        - consumeCurGroupRowsAndFetchChild(ctx context.Context, chk *chunk.Chunk) error
        - appendResult2Chunk(chk *chunk.Chunk) error

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class TableDualExec << (S,Aquamarine) >> {
        - numDualRows int
        - numReturned int

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class TableReaderExecutor << (S,Aquamarine) >> {
        - table table.Table
        - ranges []*ranger.Range
        - kvRanges []kv.KeyRange
        - dagPB *tipb.DAGRequest
        - startTS uint64
        - columns []*model.ColumnInfo
        - resultHandler *tableResultHandler
        - feedback *statistics.QueryFeedback
        - plans []core.PhysicalPlan
        - memTracker *memory.Tracker
        - keepOrder bool
        - desc bool
        - streaming bool
        - storeType kv.StoreType
        - corColInFilter bool
        - corColInAccess bool
        - virtualColumnIndex []int
        - virtualColumnRetFieldTypes []*types.FieldType
        - batchCop bool

        - buildResp(ctx context.Context, ranges []*ranger.Range) (distsql.SelectResult, error)
        - buildVirtualColumnInfo() 
        - setBatchCop(v *core.PhysicalTableReader) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class TableScanExec << (S,Aquamarine) >> {
        - t table.Table
        - seekHandle int64
        - iter kv.Iterator
        - columns []*model.ColumnInfo
        - isVirtualTable bool
        - virtualTableChunkList *chunk.List
        - virtualTableChunkIdx int

        - nextChunk4InfoSchema(ctx context.Context, chk *chunk.Chunk) error
        - nextHandle() (int64, bool, error)
        - getRow(handle int64) ([]types.Datum, error)

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Open(ctx context.Context) error

    }
    class TopNExec << (S,Aquamarine) >> {
        - limit *core.PhysicalLimit
        - totalLimit uint64
        - rowChunks *chunk.List
        - rowPtrs []chunk.RowPtr
        - chkHeap *topNChunkHeap

        - keyColumnsLess(i int, j int) bool
        - initPointers() 
        - loadChunksUntilTotalLimit(ctx context.Context) error
        - executeTopN(ctx context.Context) error
        - processChildChk(childRowChk *chunk.Chunk) error
        - doCompaction() error

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class TraceExec << (S,Aquamarine) >> {
        - exhausted bool
        - stmtNode ast.StmtNode
        - rootTrace opentracing.Span
        - builder *executorBuilder
        - format string

        + CollectedSpans []basictracer.RawSpan

        - nextTraceLog(ctx context.Context, se sqlexec.SQLExecutor, req *chunk.Chunk) error
        - nextRowJSON(ctx context.Context, se sqlexec.SQLExecutor, req *chunk.Chunk) error
        - executeChild(ctx context.Context, se sqlexec.SQLExecutor) 

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class UnionExec << (S,Aquamarine) >> {
        - stopFetchData atomic.Value
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - resourcePools []<font color=blue>chan</font> *chunk.Chunk
        - resultPool <font color=blue>chan</font> *unionWorkerResult
        - childrenResults []*chunk.Chunk
        - wg sync.WaitGroup
        - initialized bool

        - waitAllFinished() 
        - initialize(ctx context.Context) 
        - resultPuller(ctx context.Context, childID int) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class UnionScanExec << (S,Aquamarine) >> {
        - dirty *DirtyTable
        - usedIndex []int
        - desc bool
        - conditions []expression.Expression
        - conditionsWithVirCol []expression.Expression
        - columns []*model.ColumnInfo
        - table table.Table
        - belowHandleIndex int
        - addedRows [][]types.Datum
        - cursor4AddRows int
        - sortErr error
        - snapshotRows [][]types.Datum
        - cursor4SnapshotRows int
        - snapshotChunkBuffer *chunk.Chunk
        - mutableRow chunk.MutRow
        - virtualColumnIndex []int

        - open(ctx context.Context) error
        - getOneRow(ctx context.Context) ([]types.Datum, error)
        - getSnapshotRow(ctx context.Context) ([]types.Datum, error)
        - getAddedRow() []types.Datum
        - shouldPickFirstRow(a []types.Datum, b []types.Datum) (bool, error)
        - compare(a []types.Datum, b []types.Datum) (int, error)

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class UpdateExec << (S,Aquamarine) >> {
        - updatedRowKeys <font color=blue>map</font>[int64]<font color=blue>map</font>[int64]bool
        - tblID2table <font color=blue>map</font>[int64]table.Table
        - matched uint64
        - tblColPosInfos core.TblColPosInfoSlice
        - evalBuffer chunk.MutRow
        - allAssignmentsAreConstant bool
        - drained bool
        - memTracker *memory.Tracker

        + OrderedList []*expression.Assignment

        - exec(ctx context.Context, schema *expression.Schema, row []types.Datum, newData []types.Datum) error
        - canNotUpdate(handle types.Datum) bool
        - updateRows(ctx context.Context) (int, error)
        - handleErr(colName model.CIStr, rowIdx int, err error) error
        - fastComposeNewRow(rowIdx int, oldRow []types.Datum, cols []*table.Column) ([]types.Datum, error)
        - composeNewRow(rowIdx int, oldRow []types.Datum, cols []*table.Column) ([]types.Datum, error)
        - setMessage() 

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class WindowExec << (S,Aquamarine) >> {
        - groupChecker *vecGroupChecker
        - childResult *chunk.Chunk
        - executed bool
        - resultChunks []*chunk.Chunk
        - remainingRowsInChunk []int
        - numWindowFuncs int
        - processor windowProcessor

        - preparedChunkAvailable() bool
        - consumeOneGroup(ctx context.Context) error
        - consumeGroupRows(groupRows []chunk.Row) error
        - fetchChild(ctx context.Context) (bool, error)
        - copyChk(src *chunk.Chunk, dst *chunk.Chunk) error

        + Close() error
        + Next(ctx context.Context, chk *chunk.Chunk) error

    }
    class aggWindowProcessor << (S,Aquamarine) >> {
        - windowFuncs []aggfuncs.AggFunc
        - partialResults []aggfuncs.PartialResult

        - consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)
        - appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)
        - resetPartialResult() 

    }
    class allocBuf << (S,Aquamarine) >> {
        - handleBytes []byte
        - rd *rowcodec.BytesDecoder

    }
    class analyzeIndexIncrementalExec << (S,Aquamarine) >> {
        - oldHist *statistics.Histogram
        - oldCMS *statistics.CMSketch

    }
    class analyzePKIncrementalExec << (S,Aquamarine) >> {
        - oldHist *statistics.Histogram

    }
    class analyzeResult << (S,Aquamarine) >> {
        - job *statistics.AnalyzeJob

        + PhysicalTableID int64
        + Hist []*statistics.Histogram
        + Cms []*statistics.CMSketch
        + Count int64
        + IsIndex int
        + Err error

    }
    class analyzeTask << (S,Aquamarine) >> {
        - taskType taskType
        - idxExec *AnalyzeIndexExec
        - colExec *AnalyzeColumnsExec
        - fastExec *AnalyzeFastExec
        - idxIncrementalExec *analyzeIndexIncrementalExec
        - colIncrementalExec *analyzePKIncrementalExec
        - job *statistics.AnalyzeJob

    }
    class antiLeftOuterSemiJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMatch(outer chunk.Row, chk *chunk.Chunk) 
        - onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class antiSemiJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class backfillResult << (S,Aquamarine) >> {
        - nextHandle int64
        - addedCount int64
        - scanRowCount int64

    }
    class baseExecutor << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - id fmt.Stringer
        - schema *expression.Schema
        - initCap int
        - maxChunkSize int
        - children []Executor
        - retFieldTypes []*types.FieldType
        - runtimeStats *execdetails.RuntimeStats

        - getSysSession() (sessionctx.Context, error)
        - releaseSysSession(ctx sessionctx.Context) 
        - base() *baseExecutor

        + Open(ctx context.Context) error
        + Close() error
        + Schema() *expression.Schema
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class baseHashAggWorker << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - finishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - aggFuncs []aggfuncs.AggFunc
        - maxChunkSize int

        - getPartialResult(sc *stmtctx.StatementContext, groupKey [][]byte, mapper aggPartialResultMapper) [][]aggfuncs.PartialResult

    }
    class baseJoiner << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - conditions []expression.Expression
        - defaultInner chunk.Row
        - outerIsRight bool
        - chk *chunk.Chunk
        - shallowRow chunk.MutRow
        - selected []bool
        - isNull []bool
        - maxChunkSize int
        - lUsed []int

        - initDefaultInner(innerTypes []*types.FieldType, defaultInner []types.Datum) 
        - makeJoinRowToChunk(chk *chunk.Chunk, lhs chunk.Row, rhs chunk.Row, lUsed []int, rUsed []int) 
        - makeShallowJoinRow(isRightJoin bool, inner chunk.Row, outer chunk.Row) 
        - filter(input *chunk.Chunk, output *chunk.Chunk, outerColLen int, lUsed []int, rUsed []int) (bool, error)
        - filterAndCheckOuterRowStatus(input *chunk.Chunk, output *chunk.Chunk, innerColsLen int, outerRowStatus []outerRowStatusFlag, lUsed []int, rUsed []int) ([]outerRowStatusFlag, error)

        + Clone() baseJoiner

    }
    class brieQueue << (S,Aquamarine) >> {
        - nextID uint64
        - tasks sync.Map
        - workerCh <font color=blue>chan</font> <font color=blue>struct</font>{}

        - registerTask(ctx context.Context, info *brieTaskInfo) (context.Context, uint64)
        - acquireTask(taskCtx context.Context, taskID uint64) (*brieTaskProgress, error)
        - releaseTask() 
        - cancelTask(taskID uint64) 

    }
    class brieQueueItem << (S,Aquamarine) >> {
        - info *brieTaskInfo
        - progress *brieTaskProgress
        - cancel <font color=blue>func</font>() 

    }
    class brieTaskInfo << (S,Aquamarine) >> {
        - queueTime types.Time
        - execTime types.Time
        - kind ast.BRIEKind
        - storage string
        - connID uint64
        - backupTS uint64
        - archiveSize uint64

    }
    class brieTaskProgress << (S,Aquamarine) >> {
        - current int64
        - lock sync.Mutex
        - cmd string
        - total int64

        + Inc() 
        + Close() 

    }
    class checkIndexValue << (S,Aquamarine) >> {
        - idxColTps []*types.FieldType
        - idxTblCols []*table.Column
        - genExprs <font color=blue>map</font>[model.TableColumnID]expression.Expression

    }
    class checkRegionHealth << (S,Aquamarine) >> {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(_ string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class checkStoreRegionTooMuch << (S,Aquamarine) >> {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class checksumContext << (S,Aquamarine) >> {
        + DBInfo *model.DBInfo
        + TableInfo *model.TableInfo
        + StartTs uint64
        + Response *tipb.ChecksumResponse

        - appendRequest(ctx sessionctx.Context, tableID int64, reqs *[]*kv.Request) error
        - buildTableRequest(ctx sessionctx.Context, tableID int64) (*kv.Request, error)
        - buildIndexRequest(ctx sessionctx.Context, tableID int64, indexInfo *model.IndexInfo) (*kv.Request, error)

        + BuildRequests(ctx sessionctx.Context) ([]*kv.Request, error)
        + HandleResponse(update *tipb.ChecksumResponse) 

    }
    class checksumResult << (S,Aquamarine) >> {
        + Error error
        + TableID int64
        + Response *tipb.ChecksumResponse

    }
    class checksumTask << (S,Aquamarine) >> {
        + TableID int64
        + Request *kv.Request

    }
    class chunkRowRecordSet << (S,Aquamarine) >> {
        - rows []chunk.Row
        - idx int
        - fields []*ast.ResultField
        - e Executor
        - execStmt *ExecStmt

        + Fields() []*ast.ResultField
        + Next(ctx context.Context, chk *chunk.Chunk) error
        + NewChunk() *chunk.Chunk
        + Close() error

    }
    class clusterConfigRetriever << (S,Aquamarine) >> {
        - retrieved bool
        - extractor *core.ClusterTableExtractor

        - retrieve(_ context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    class clusterLogRetriever << (S,Aquamarine) >> {
        - isDrained bool
        - retrieving bool
        - heap *logResponseHeap
        - extractor *core.ClusterLogTableExtractor
        - cancel context.CancelFunc

        - initialize(ctx context.Context, sctx sessionctx.Context) ([]<font color=blue>chan</font> logStreamResult, error)
        - startRetrieving(ctx context.Context, sctx sessionctx.Context, serversInfo []infoschema.ServerInfo, req *diagnosticspb.SearchLogRequest) ([]<font color=blue>chan</font> logStreamResult, error)
        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)
        - close() error

    }
    class clusterServerInfoRetriever << (S,Aquamarine) >> {
        - extractor *core.ClusterTableExtractor
        - serverInfoType diagnosticspb.ServerInfoType
        - retrieved bool

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    class compareStoreStatus << (S,Aquamarine) >> {
        - item string
        - tp string
        - threshold float64

        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(_ string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class configInspection << (S,Aquamarine) >> {
        - inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectDiffConfig(_ context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectCheckConfig(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - checkTiKVBlockCacheSizeConfig(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - convertReadableSizeToByteSize(sizeStr string) (uint64, error)

    }
    class criticalErrorInspection << (S,Aquamarine) >> {
        - inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectError(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectForServerDown(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult

    }
    class dataReaderBuilder << (S,Aquamarine) >> {
        - buildExecutorForIndexJoin(ctx context.Context, lookUpContents []*indexJoinLookUpContent, IndexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)
        - buildExecutorForIndexJoinInternal(ctx context.Context, plan core.Plan, lookUpContents []*indexJoinLookUpContent, IndexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)
        - buildUnionScanForIndexJoin(ctx context.Context, v *core.PhysicalUnionScan, values []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)
        - buildTableReaderForIndexJoin(ctx context.Context, v *core.PhysicalTableReader, lookUpContents []*indexJoinLookUpContent) (Executor, error)
        - buildTableReaderFromHandles(ctx context.Context, e *TableReaderExecutor, handles []int64) (Executor, error)
        - buildIndexReaderForIndexJoin(ctx context.Context, v *core.PhysicalIndexReader, lookUpContents []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)
        - buildIndexLookUpReaderForIndexJoin(ctx context.Context, v *core.PhysicalIndexLookUpReader, lookUpContents []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)
        - buildProjectionForIndexJoin(ctx context.Context, v *core.PhysicalProjection, lookUpContents []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)

    }
    class defaultVal << (S,Aquamarine) >> {
        - val types.Datum
        - valid bool

    }
    class dummyCloser << (S,Aquamarine) >> {
        - close() error

    }
    class entry << (S,Aquamarine) >> {
        - ptr chunk.RowPtr
        - next entryAddr

    }
    class entryAddr << (S,Aquamarine) >> {
        - sliceIdx uint32
        - offset uint32

    }
    class entryStore << (S,Aquamarine) >> {
        - slices [][]entry

        - init() 
        - put(e entry) entryAddr
        - get(addr entryAddr) entry

    }
    class executor.IndexAdviseVarKeyType << (T, #FF7700) >>  {
    }
    class executor.TestShowClusterConfigFunc << (T, #FF7700) >>  {
    }
    class executor.aggPartialResultMapper << (T, #FF7700) >>  {
    }
    class executor.loadDataVarKeyType << (T, #FF7700) >>  {
    }
    class executor.loadStatsVarKeyType << (T, #FF7700) >>  {
    }
    class executor.logResponseHeap << (T, #FF7700) >>  {
    }
    class executor.objectType << (T, #FF7700) >>  {
    }
    class executor.outerRowStatusFlag << (T, #FF7700) >>  {
    }
    class executor.processKVFunc << (T, #FF7700) >>  {
    }
    class executor.promQLQueryRange << (T, #FF7700) >>  {
    }
    class executor.tableRowMapType << (T, #FF7700) >>  {
    }
    class executor.taskType << (T, #FF7700) >>  {
    }
    class executorBuilder << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - is infoschema.InfoSchema
        - snapshotTS uint64
        - err error
        - hasLock bool

        - buildPointGet(p *core.PointGetPlan) Executor
        - parseTSString(ts string) (uint64, error)
        - buildBRIE(s *ast.BRIEStmt, schema *expression.Schema) Executor
        - build(p core.Plan) Executor
        - buildCancelDDLJobs(v *core.CancelDDLJobs) Executor
        - buildChange(v *core.Change) Executor
        - buildShowNextRowID(v *core.ShowNextRowID) Executor
        - buildShowDDL(v *core.ShowDDL) Executor
        - buildShowDDLJobs(v *core.PhysicalShowDDLJobs) Executor
        - buildShowDDLJobQueries(v *core.ShowDDLJobQueries) Executor
        - buildShowSlow(v *core.ShowSlow) Executor
        - buildCheckTable(v *core.CheckTable) Executor
        - buildRecoverIndex(v *core.RecoverIndex) Executor
        - buildCleanupIndex(v *core.CleanupIndex) Executor
        - buildCheckIndexRange(v *core.CheckIndexRange) Executor
        - buildChecksumTable(v *core.ChecksumTable) Executor
        - buildReloadExprPushdownBlacklist(v *core.ReloadExprPushdownBlacklist) Executor
        - buildReloadOptRuleBlacklist(v *core.ReloadOptRuleBlacklist) Executor
        - buildAdminPlugins(v *core.AdminPlugins) Executor
        - buildDeallocate(v *core.Deallocate) Executor
        - buildSelectLock(v *core.PhysicalLock) Executor
        - buildLimit(v *core.PhysicalLimit) Executor
        - buildPrepare(v *core.Prepare) Executor
        - buildExecute(v *core.Execute) Executor
        - buildShow(v *core.PhysicalShow) Executor
        - buildSimple(v *core.Simple) Executor
        - buildSet(v *core.Set) Executor
        - buildSetConfig(v *core.SetConfig) Executor
        - buildInsert(v *core.Insert) Executor
        - buildLoadData(v *core.LoadData) Executor
        - buildLoadStats(v *core.LoadStats) Executor
        - buildIndexAdvise(v *core.IndexAdvise) Executor
        - buildReplace(vals *InsertValues) Executor
        - buildGrant(grant *ast.GrantStmt) Executor
        - buildRevoke(revoke *ast.RevokeStmt) Executor
        - buildDDL(v *core.DDL) Executor
        - buildTrace(v *core.Trace) Executor
        - buildExplain(v *core.Explain) Executor
        - buildSelectInto(v *core.SelectInto) Executor
        - buildUnionScanExec(v *core.PhysicalUnionScan) Executor
        - buildUnionScanFromReader(reader Executor, v *core.PhysicalUnionScan) Executor
        - buildMergeJoin(v *core.PhysicalMergeJoin) Executor
        - buildSideEstCount(v *core.PhysicalHashJoin) float64
        - buildHashJoin(v *core.PhysicalHashJoin) Executor
        - buildHashAgg(v *core.PhysicalHashAgg) Executor
        - buildStreamAgg(v *core.PhysicalStreamAgg) Executor
        - buildSelection(v *core.PhysicalSelection) Executor
        - buildProjection(v *core.PhysicalProjection) Executor
        - buildTableDual(v *core.PhysicalTableDual) Executor
        - getSnapshotTS() (uint64, error)
        - buildMemTable(v *core.PhysicalMemTable) Executor
        - buildSort(v *core.PhysicalSort) Executor
        - buildTopN(v *core.PhysicalTopN) Executor
        - buildApply(v *core.PhysicalApply) *NestedLoopApplyExec
        - buildMaxOneRow(v *core.PhysicalMaxOneRow) Executor
        - buildUnionAll(v *core.PhysicalUnionAll) Executor
        - buildSplitRegion(v *core.SplitRegion) Executor
        - buildUpdate(v *core.Update) Executor
        - buildDelete(v *core.Delete) Executor
        - updateForUpdateTSIfNeeded(selectPlan core.PhysicalPlan) error
        - refreshForUpdateTSForRC() error
        - buildAnalyzeIndexPushdown(task core.AnalyzeIndexTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64, autoAnalyze string) *analyzeTask
        - buildAnalyzeIndexIncremental(task core.AnalyzeIndexTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64) *analyzeTask
        - buildAnalyzeColumnsPushdown(task core.AnalyzeColumnsTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64, autoAnalyze string) *analyzeTask
        - buildAnalyzePKIncremental(task core.AnalyzeColumnsTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64) *analyzeTask
        - buildAnalyzeFastColumn(e *AnalyzeExec, task core.AnalyzeColumnsTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64) 
        - buildAnalyzeFastIndex(e *AnalyzeExec, task core.AnalyzeIndexTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64) 
        - buildAnalyze(v *core.Analyze) Executor
        - constructDAGReq(plans []core.PhysicalPlan) (*tipb.DAGRequest, bool, error)
        - corColInDistPlan(plans []core.PhysicalPlan) bool
        - corColInAccess(p core.PhysicalPlan) bool
        - buildIndexLookUpJoin(v *core.PhysicalIndexJoin) Executor
        - buildIndexLookUpMergeJoin(v *core.PhysicalIndexMergeJoin) Executor
        - buildIndexNestedLoopHashJoin(v *core.PhysicalIndexHashJoin) Executor
        - buildTableReader(v *core.PhysicalTableReader) *TableReaderExecutor
        - buildIndexReader(v *core.PhysicalIndexReader) *IndexReaderExecutor
        - buildIndexLookUpReader(v *core.PhysicalIndexLookUpReader) *IndexLookUpExecutor
        - buildIndexMergeReader(v *core.PhysicalIndexMergeReader) *IndexMergeReaderExecutor
        - buildWindow(v *core.PhysicalWindow) *WindowExec
        - buildShuffle(v *core.PhysicalShuffle) *ShuffleExec
        - buildShuffleDataSourceStub(v *core.PhysicalShuffleDataSourceStub) *shuffleWorker
        - buildSQLBindExec(v *core.SQLBindPlan) Executor
        - buildBatchPointGet(plan *core.BatchPointGetPlan) Executor
        - buildAdminShowTelemetry(v *core.AdminShowTelemetry) Executor
        - buildAdminResetTelemetryID(v *core.AdminResetTelemetryID) Executor

    }
    class field << (S,Aquamarine) >> {
        - str []byte
        - maybeNull bool
        - enclosed bool

        - escape() field
        - escapeChar(c byte) byte

    }
    class fieldWriter << (S,Aquamarine) >> {
        - pos int
        - term string
        - enclosedChar byte
        - fieldTermChar byte
        - isEnclosed bool
        - isLineStart bool
        - isFieldStart bool

        + ReadBuf []byte
        + OutputBuf []byte

        - putback() 
        - getChar() (bool, byte)
        - isTerminator() bool
        - outputField(enclosed bool) field

        + Init(enclosedChar byte, fieldTermChar byte, readBuf []byte, term string) 
        + GetField() (bool, field)

    }
    class globalPanicOnExceed << (S,Aquamarine) >> {
        - mutex sync.Mutex

        + SetLogHook(hook <font color=blue>func</font>(uint64) ) 
        + Action(t *memory.Tracker) 
        + SetFallback( memory.ActionOnExceed) 

    }
    class hashContext << (S,Aquamarine) >> {
        - allTypes []*types.FieldType
        - keyColIdx []int
        - buf []byte
        - hashVals []hash.Hash64
        - hasNull []bool

        - initHash(rows int) 

    }
    class hashRowContainer << (S,Aquamarine) >> {
        - sc *stmtctx.StatementContext
        - hCtx *hashContext
        - stat hashStatistic
        - hashTable *rowHashMap
        - rowContainer *chunk.RowContainer

        - matchJoinKey(buildRow chunk.Row, probeRow chunk.Row, probeHCtx *hashContext) (bool, error)
        - alreadySpilledSafe() bool
        - getJoinKeyFromChkRow(sc *stmtctx.StatementContext, row chunk.Row, hCtx *hashContext) (bool, uint64, error)

        + GetMatchedRowsAndPtrs(probeKey uint64, probeRow chunk.Row, hCtx *hashContext) ([]chunk.Row, []chunk.RowPtr, error)
        + PutChunk(chk *chunk.Chunk) error
        + PutChunkSelected(chk *chunk.Chunk, selected []bool) error
        + NumChunks() int
        + NumRowsOfChunk(chkID int) int
        + GetChunk(chkIdx int) (*chunk.Chunk, error)
        + GetRow(ptr chunk.RowPtr) (chunk.Row, error)
        + Len() int
        + Close() error
        + GetMemTracker() *memory.Tracker
        + GetDiskTracker() *disk.Tracker
        + ActionSpill() memory.ActionOnExceed

    }
    class hashStatistic << (S,Aquamarine) >> {
        - probeCollision int
        - buildTableElapse time.Duration

        + String() string

    }
    class hashjoinWorkerResult << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - err error
        - src <font color=blue>chan</font> *chunk.Chunk

    }
    class indexHashJoinInnerWorker << (S,Aquamarine) >> {
        - matchedOuterPtrs []chunk.RowPtr
        - joiner joiner
        - joinChkResourceCh <font color=blue>chan</font> *chunk.Chunk
        - resultCh <font color=blue>chan</font> *indexHashJoinResult
        - taskCh <font color=blue>chan</font> *indexHashJoinTask
        - wg *sync.WaitGroup
        - joinKeyBuf []byte
        - outerRowStatus []outerRowStatusFlag

        - run(ctx context.Context, cancelFunc context.CancelFunc) 
        - getNewJoinResult(ctx context.Context) (*indexHashJoinResult, bool)
        - buildHashTableForOuterResult(ctx context.Context, cancelFunc context.CancelFunc, task *indexHashJoinTask, h hash.Hash64) 
        - fetchInnerResults(ctx context.Context, task *lookUpJoinTask) error
        - handleHashJoinInnerWorkerPanic(r <font color=blue>interface</font>{}) 
        - handleTask(ctx context.Context, cancelFunc context.CancelFunc, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, resultCh <font color=blue>chan</font> *indexHashJoinResult) error
        - doJoinUnordered(ctx context.Context, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, resultCh <font color=blue>chan</font> *indexHashJoinResult) error
        - getMatchedOuterRows(innerRow chunk.Row, task *indexHashJoinTask, h hash.Hash64, buf []byte) ([]chunk.Row, []chunk.RowPtr, error)
        - joinMatchedInnerRow2Chunk(ctx context.Context, innerRow chunk.Row, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, buf []byte) (bool, *indexHashJoinResult)
        - collectMatchedInnerPtrs4OuterRows(ctx context.Context, innerRow chunk.Row, innerRowPtr chunk.RowPtr, task *indexHashJoinTask, h hash.Hash64, buf []byte) error
        - doJoinInOrder(ctx context.Context, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, resultCh <font color=blue>chan</font> *indexHashJoinResult) error

    }
    class indexHashJoinOuterWorker << (S,Aquamarine) >> {
        - innerCh <font color=blue>chan</font> *indexHashJoinTask
        - keepOuterOrder bool
        - taskCh <font color=blue>chan</font> *indexHashJoinTask

        - run(ctx context.Context, cancelFunc context.CancelFunc) 
        - buildTask(ctx context.Context) (*indexHashJoinTask, error)
        - pushToChan(ctx context.Context, task *indexHashJoinTask, dst <font color=blue>chan</font> *indexHashJoinTask) bool

    }
    class indexHashJoinResult << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - err error
        - src <font color=blue>chan</font> *chunk.Chunk

    }
    class indexHashJoinTask << (S,Aquamarine) >> {
        - outerRowStatus [][]outerRowStatusFlag
        - lookupMap *rowHashMap
        - err error
        - keepOuterOrder bool
        - resultCh <font color=blue>chan</font> *indexHashJoinResult
        - matchedInnerRowPtrs [][][]chunk.RowPtr

    }
    class indexJoinLookUpContent << (S,Aquamarine) >> {
        - keys []types.Datum
        - row chunk.Row

    }
    class indexMergeJoinResult << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - src <font color=blue>chan</font> *chunk.Chunk

    }
    class indexMergeProcessWorker << (S,Aquamarine) >> {
        - fetchLoop(ctx context.Context, fetchCh <font color=blue>chan</font> *lookupTableTask, workCh <font color=blue>chan</font> *lookupTableTask, resultCh <font color=blue>chan</font> *lookupTableTask, finished <font color=blue>chan</font> <font color=blue>struct</font>{}) 
        - handleLoopFetcherPanic(ctx context.Context, resultCh <font color=blue>chan</font> *lookupTableTask) <font color=blue>func</font>(<font color=blue>interface</font>{}) 

    }
    class indexMergeTableScanWorker << (S,Aquamarine) >> {
        - workCh <font color=blue>chan</font> *lookupTableTask
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - buildTblReader <font color=blue>func</font>(context.Context, []int64) (Executor, error)
        - tblPlans []core.PhysicalPlan
        - memTracker *memory.Tracker

        - pickAndExecTask(ctx context.Context) *lookupTableTask
        - handlePickAndExecTaskPanic(ctx context.Context, task *lookupTableTask) <font color=blue>func</font>(<font color=blue>interface</font>{}) 
        - executeTask(ctx context.Context, task *lookupTableTask) error

    }
    class indexWorker << (S,Aquamarine) >> {
        - idxLookup *IndexLookUpExecutor
        - workCh <font color=blue>chan</font> *lookupTableTask
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - resultCh <font color=blue>chan</font> *lookupTableTask
        - keepOrder bool
        - batchSize int
        - maxBatchSize int
        - maxChunkSize int

        + PushedLimit *core.PushedDownLimit

        - fetchHandles(ctx context.Context, result distsql.SelectResult) (uint64, error)
        - extractTaskHandles(ctx context.Context, chk *chunk.Chunk, idxResult distsql.SelectResult, count uint64) ([]int64, *chunk.Chunk, uint64, error)
        - buildTableTask(handles []int64, retChk *chunk.Chunk) *lookupTableTask

    }
    class innerCtx << (S,Aquamarine) >> {
        - readerBuilder *dataReaderBuilder
        - rowTypes []*types.FieldType
        - keyCols []int
        - colLens []int
        - hasPrefixCol bool

    }
    class innerJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class innerMergeCtx << (S,Aquamarine) >> {
        - readerBuilder *dataReaderBuilder
        - rowTypes []*types.FieldType
        - joinKeys []*expression.Column
        - keyCols []int
        - compareFuncs []expression.CompareFunc
        - colLens []int
        - desc bool
        - keyOff2KeyOffOrderByIdx []int

    }
    class innerMergeWorker << (S,Aquamarine) >> {
        - taskCh <font color=blue>chan</font> *lookUpMergeJoinTask
        - joinChkResourceCh <font color=blue>chan</font> *chunk.Chunk
        - outerMergeCtx outerMergeCtx
        - ctx sessionctx.Context
        - innerExec Executor
        - joiner joiner
        - retFieldTypes []*types.FieldType
        - maxChunkSize int
        - indexRanges []*ranger.Range
        - nextColCompareFilters *core.ColWithCmpFuncManager
        - keyOff2IdxOff []int

        - run(ctx context.Context, wg *sync.WaitGroup, cancelFunc context.CancelFunc) 
        - handleTask(ctx context.Context, task *lookUpMergeJoinTask) error
        - fetchNewChunkWhenFull(ctx context.Context, task *lookUpMergeJoinTask, chk **chunk.Chunk) bool
        - doMergeJoin(ctx context.Context, task *lookUpMergeJoinTask) error
        - fetchInnerRowsWithSameKey(ctx context.Context, task *lookUpMergeJoinTask, key chunk.Row) (bool, error)
        - compare(outerRow chunk.Row, innerRow chunk.Row) (int, error)
        - constructDatumLookupKeys(task *lookUpMergeJoinTask) ([]*indexJoinLookUpContent, error)
        - constructDatumLookupKey(task *lookUpMergeJoinTask, rowIdx chunk.RowPtr) (*indexJoinLookUpContent, error)
        - dedupDatumLookUpKeys(lookUpContents []*indexJoinLookUpContent) []*indexJoinLookUpContent
        - fetchNextInnerResult(ctx context.Context, task *lookUpMergeJoinTask) (chunk.Row, error)

    }
    class innerWorker << (S,Aquamarine) >> {
        - taskCh <font color=blue>chan</font> *lookUpJoinTask
        - outerCtx outerCtx
        - ctx sessionctx.Context
        - executorChk *chunk.Chunk
        - indexRanges []*ranger.Range
        - nextColCompareFilters *core.ColWithCmpFuncManager
        - keyOff2IdxOff []int

        - run(ctx context.Context, wg *sync.WaitGroup) 
        - handleTask(ctx context.Context, task *lookUpJoinTask) error
        - constructLookupContent(task *lookUpJoinTask) ([]*indexJoinLookUpContent, error)
        - constructDatumLookupKey(task *lookUpJoinTask, chkIdx int, rowIdx int) ([]types.Datum, error)
        - sortAndDedupLookUpContents(lookUpContents []*indexJoinLookUpContent) []*indexJoinLookUpContent
        - fetchInnerResults(ctx context.Context, task *lookUpJoinTask, lookUpContent []*indexJoinLookUpContent) error
        - buildLookUpMap(task *lookUpJoinTask) error
        - hasNullInJoinKey(row chunk.Row) bool

    }
    interface insertCommon  {
        - insertCommon() *InsertValues
        - exec(ctx context.Context, rows [][]types.Datum) error

    }
    class inspectCPULoad << (S,Aquamarine) >> {
        - item string
        - tbl string

        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class inspectDiskUsage << (S,Aquamarine) >> {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class inspectSwapMemoryUsed << (S,Aquamarine) >> {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class inspectVirtualMemUsage << (S,Aquamarine) >> {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class inspectionFilter << (S,Aquamarine) >> {
        - enable(name string) bool
        - exist(name string) bool

    }
    class inspectionName << (S,Aquamarine) >> {
        - name() string

    }
    class inspectionResult << (S,Aquamarine) >> {
        - tp string
        - instance string
        - statusAddress string
        - item string
        - actual string
        - expected string
        - severity string
        - detail string
        - degree float64

    }
    class inspectionResultRetriever << (S,Aquamarine) >> {
        - retrieved bool
        - extractor *core.InspectionResultTableExtractor
        - timeRange core.QueryTimeRange
        - instanceToStatusAddress <font color=blue>map</font>[string]string
        - statusToInstanceAddress <font color=blue>map</font>[string]string

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    class inspectionRuleRetriever << (S,Aquamarine) >> {
        - retrieved bool
        - extractor *core.InspectionRuleTableExtractor

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    class inspectionSummaryRetriever << (S,Aquamarine) >> {
        - retrieved bool
        - table *model.TableInfo
        - extractor *core.InspectionSummaryTableExtractor
        - timeRange core.QueryTimeRange

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    interface joiner  {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outer chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class keyValue << (S,Aquamarine) >> {
        - key kv.Key
        - value []byte

    }
    class keyValueWithDupInfo << (S,Aquamarine) >> {
        - newKV keyValue
        - dupErr error

    }
    class leftOuterJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class leftOuterSemiJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMatch(outer chunk.Row, chk *chunk.Chunk) 
        - onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class loadDataVarKeyType << (S,Aquamarine) >> {
        + String() string

    }
    class loadStatsVarKeyType << (S,Aquamarine) >> {
        + String() string

    }
    class logFile << (S,Aquamarine) >> {
        - file *os.File
        - start time.Time

    }
    class logResponseHeap << (S,Aquamarine) >> {
        + Len() int
        + Less(i int, j int) bool
        + Swap(i int, j int) 
        + Push(x <font color=blue>interface</font>{}) 
        + Pop() <font color=blue>interface</font>{}

    }
    class logStreamResult << (S,Aquamarine) >> {
        - next <font color=blue>chan</font> logStreamResult
        - addr string
        - typ string
        - messages []*diagnosticspb.LogMessage
        - err error

    }
    class lookUpJoinTask << (S,Aquamarine) >> {
        - outerResult *chunk.List
        - outerMatch [][]bool
        - innerResult *chunk.List
        - encodedLookUpKeys []*chunk.Chunk
        - lookupMap *mvmap.MVMap
        - matchedInners []chunk.Row
        - doneCh <font color=blue>chan</font> error
        - cursor chunk.RowPtr
        - hasMatch bool
        - hasNull bool
        - memTracker *memory.Tracker

    }
    class lookUpMergeJoinTask << (S,Aquamarine) >> {
        - outerResult *chunk.List
        - outerOrderIdx []chunk.RowPtr
        - innerResult *chunk.Chunk
        - innerIter chunk.Iterator
        - sameKeyInnerRows []chunk.Row
        - sameKeyIter chunk.Iterator
        - doneErr error
        - results <font color=blue>chan</font> *indexMergeJoinResult
        - memTracker *memory.Tracker

    }
    class lookupTableTask << (S,Aquamarine) >> {
        - handles []int64
        - rowIdx []int
        - rows []chunk.Row
        - idxRows *chunk.Chunk
        - cursor int
        - doneCh <font color=blue>chan</font> error
        - indexOrder <font color=blue>map</font>[int64]int
        - duplicatedIndexOrder <font color=blue>map</font>[int64]int
        - memUsage int64
        - memTracker *memory.Tracker

        + Len() int
        + Less(i int, j int) bool
        + Swap(i int, j int) 

    }
    class memIndexLookUpReader << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - index *model.IndexInfo
        - columns []*model.ColumnInfo
        - table table.Table
        - desc bool
        - conditions []expression.Expression
        - retFieldTypes []*types.FieldType
        - idxReader *memIndexReader

        - getMemRows() ([][]types.Datum, error)

    }
    class memIndexReader << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - index *model.IndexInfo
        - table *model.TableInfo
        - kvRanges []kv.KeyRange
        - desc bool
        - conditions []expression.Expression
        - addedRows [][]types.Datum
        - addedRowsLen int
        - retFieldTypes []*types.FieldType
        - outputOffset []int
        - belowHandleIndex int

        - getMemRows() ([][]types.Datum, error)
        - decodeIndexKeyValue(key []byte, value []byte, tps []*types.FieldType) ([]types.Datum, error)
        - getMemRowsHandle() ([]int64, error)

    }
    class memTableReader << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - table *model.TableInfo
        - columns []*model.ColumnInfo
        - kvRanges []kv.KeyRange
        - desc bool
        - conditions []expression.Expression
        - addedRows [][]types.Datum
        - retFieldTypes []*types.FieldType
        - colIDs <font color=blue>map</font>[int64]int
        - buffer allocBuf

        - getMemRows() ([][]types.Datum, error)
        - decodeRecordKeyValue(key []byte, value []byte) ([]types.Datum, error)

    }
    interface memTableRetriever  {
        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)
        - close() error

    }
    class memtableRetriever << (S,Aquamarine) >> {
        - table *model.TableInfo
        - columns []*model.ColumnInfo
        - rows [][]types.Datum
        - rowIdx int
        - retrieved bool
        - initialized bool

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)
        - setDataFromSchemata(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataForStatistics(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataForStatisticsInTable(schema *model.DBInfo, table *model.TableInfo) 
        - setDataFromTables(ctx sessionctx.Context, schemas []*model.DBInfo) error
        - setDataForColumns(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - dataForColumnsInTable(schema *model.DBInfo, tbl *model.TableInfo) [][]types.Datum
        - setDataFromPartitions(ctx sessionctx.Context, schemas []*model.DBInfo) error
        - setDataFromIndexes(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataFromViews(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataFromEngines() 
        - setDataFromCharacterSets() 
        - setDataFromCollations() 
        - dataForCollationCharacterSetApplicability() 
        - dataForTiDBClusterInfo(ctx sessionctx.Context) error
        - setDataFromKeyColumnUsage(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataForClusterProcessList(ctx sessionctx.Context) error
        - setDataForProcessList(ctx sessionctx.Context) 
        - setDataFromUserPrivileges(ctx sessionctx.Context) 
        - setDataForMetricTables(ctx sessionctx.Context) 
        - setDataForTikVRegionPeers(ctx sessionctx.Context) error
        - setNewTiKVRegionPeersCols(region *helper.RegionInfo) 
        - setDataForTiDBHotRegions(ctx sessionctx.Context) error
        - setDataForHotRegionByMetrics(metrics []helper.HotTableIndex, tp string) 
        - setDataFromTableConstraints(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataFromSessionVar(ctx sessionctx.Context) error
        - setDataForAnalyzeStatus(sctx sessionctx.Context) 
        - setDataForPseudoProfiling(sctx sessionctx.Context) 
        - setDataForServersInfo() error
        - setDataFromSequences(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - dataForTableTiFlashReplica(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataForStatementsSummary(ctx sessionctx.Context, tableName string) error

    }
    class mergeJoinTable << (S,Aquamarine) >> {
        - isInner bool
        - childIndex int
        - joinKeys []*expression.Column
        - filters []expression.Expression
        - executed bool
        - childChunk *chunk.Chunk
        - childChunkIter *chunk.Iterator4Chunk
        - groupChecker *vecGroupChecker
        - groupRowsSelected []int
        - groupRowsIter chunk.Iterator
        - rowContainer *chunk.RowContainer
        - filtersSelected []bool
        - memTracker *memory.Tracker

        - init(exec *MergeJoinExec) 
        - finish() error
        - selectNextGroup() 
        - fetchNextChunk(ctx context.Context, exec *MergeJoinExec) error
        - fetchNextInnerGroup(ctx context.Context, exec *MergeJoinExec) error
        - fetchNextOuterGroup(ctx context.Context, exec *MergeJoinExec, requiredRows int) error
        - hasNullInJoinKey(row chunk.Row) bool

    }
    class mockPhysicalIndexReader << (S,Aquamarine) >> {
        - e Executor

    }
    class multiWayMerge << (S,Aquamarine) >> {
        - lessRowFunction <font color=blue>func</font>(chunk.Row, chunk.Row) bool
        - elements []partitionPointer

        + Less(i int, j int) bool
        + Len() int
        + Push(x <font color=blue>interface</font>{}) 
        + Pop() <font color=blue>interface</font>{}
        + Swap(i int, j int) 

    }
    class nodeLoadInspection << (S,Aquamarine) >> {
        - inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult

    }
    class outerCtx << (S,Aquamarine) >> {
        - rowTypes []*types.FieldType
        - keyCols []int
        - filter expression.CNFExprs

    }
    class outerMergeCtx << (S,Aquamarine) >> {
        - rowTypes []*types.FieldType
        - joinKeys []*expression.Column
        - keyCols []int
        - filter expression.CNFExprs
        - needOuterSort bool
        - compareFuncs []expression.CompareFunc

    }
    class outerMergeWorker << (S,Aquamarine) >> {
        - lookup *IndexLookUpMergeJoin
        - ctx sessionctx.Context
        - executor Executor
        - maxBatchSize int
        - batchSize int
        - nextColCompareFilters *core.ColWithCmpFuncManager
        - resultCh <font color=blue>chan</font> *lookUpMergeJoinTask
        - innerCh <font color=blue>chan</font> *lookUpMergeJoinTask
        - parentMemTracker *memory.Tracker

        - run(ctx context.Context, wg *sync.WaitGroup, cancelFunc context.CancelFunc) 
        - pushToChan(ctx context.Context, task *lookUpMergeJoinTask, dst <font color=blue>chan</font> *lookUpMergeJoinTask) bool
        - buildTask(ctx context.Context) (*lookUpMergeJoinTask, error)
        - increaseBatchSize() 

    }
    class outerWorker << (S,Aquamarine) >> {
        - lookup *IndexLookUpJoin
        - ctx sessionctx.Context
        - executor Executor
        - maxBatchSize int
        - batchSize int
        - resultCh <font color=blue>chan</font> *lookUpJoinTask
        - innerCh <font color=blue>chan</font> *lookUpJoinTask
        - parentMemTracker *memory.Tracker

        - run(ctx context.Context, wg *sync.WaitGroup) 
        - pushToChan(ctx context.Context, task *lookUpJoinTask, dst <font color=blue>chan</font> *lookUpJoinTask) bool
        - buildTask(ctx context.Context) (*lookUpJoinTask, error)
        - increaseBatchSize() 

    }
    class paramMarkerExtractor << (S,Aquamarine) >> {
        - markers []ast.ParamMarkerExpr

        + Enter(in ast.Node) (ast.Node, bool)
        + Leave(in ast.Node) (ast.Node, bool)

    }
    class paramMarkerSorter << (S,Aquamarine) >> {
        - markers []ast.ParamMarkerExpr

        + Len() int
        + Less(i int, j int) bool
        + Swap(i int, j int) 

    }
    class parsedSlowLog << (S,Aquamarine) >> {
        - rows [][]types.Datum
        - err error

    }
    class partialIndexWorker << (S,Aquamarine) >> {
        - batchSize int
        - maxBatchSize int
        - maxChunkSize int

        - fetchHandles(ctx context.Context, result distsql.SelectResult, exitCh <font color=blue>chan</font> <font color=blue>struct</font>{}, fetchCh <font color=blue>chan</font> *lookupTableTask, resultCh <font color=blue>chan</font> *lookupTableTask, finished <font color=blue>chan</font> <font color=blue>struct</font>{}) (int64, error)
        - extractTaskHandles(ctx context.Context, chk *chunk.Chunk, idxResult distsql.SelectResult) ([]int64, *chunk.Chunk, error)
        - buildTableTask(handles []int64, retChk *chunk.Chunk) *lookupTableTask

    }
    class partialTableWorker << (S,Aquamarine) >> {
        - batchSize int
        - maxBatchSize int
        - maxChunkSize int
        - tableReader Executor
        - tableInfo *model.TableInfo

        - fetchHandles(ctx context.Context, exitCh <font color=blue>chan</font> <font color=blue>struct</font>{}, fetchCh <font color=blue>chan</font> *lookupTableTask, resultCh <font color=blue>chan</font> *lookupTableTask, finished <font color=blue>chan</font> <font color=blue>struct</font>{}) (int64, error)
        - extractTaskHandles(ctx context.Context, chk *chunk.Chunk, handleOffset int) ([]int64, *chunk.Chunk, error)
        - buildTableTask(handles []int64, retChk *chunk.Chunk) *lookupTableTask

    }
    class partitionHashSplitter << (S,Aquamarine) >> {
        - byItems []expression.Expression
        - numWorkers int
        - hashKeys [][]byte

        - split(ctx sessionctx.Context, input *chunk.Chunk, workerIndices []int) ([]int, error)

    }
    class partitionPointer << (S,Aquamarine) >> {
        - row chunk.Row
        - partitionID int
        - consumed int

    }
    interface partitionSplitter  {
        - split(ctx sessionctx.Context, input *chunk.Chunk, workerIndices []int) ([]int, error)

    }
    interface pessimisticTxn  {
        + KeysNeedToLock() ([]kv.Key, error)

    }
    class probeChkResource << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - dest <font color=blue>chan</font> *chunk.Chunk

    }
    interface processinfoSetter  {
        + SetProcessInfo( string,  time.Time,  byte,  uint64) 

    }
    class projectionInput << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - targetWorker *projectionWorker

    }
    class projectionInputFetcher << (S,Aquamarine) >> {
        - proj *ProjectionExec
        - child Executor
        - globalFinishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - globalOutputCh <font color=blue>chan</font> *projectionOutput
        - wg sync.WaitGroup
        - inputCh <font color=blue>chan</font> *projectionInput
        - outputCh <font color=blue>chan</font> *projectionOutput

        - run(ctx context.Context) 

    }
    class projectionOutput << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - done <font color=blue>chan</font> error

    }
    class projectionWorker << (S,Aquamarine) >> {
        - proj *ProjectionExec
        - sctx sessionctx.Context
        - evaluatorSuit *expression.EvaluatorSuite
        - globalFinishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - inputGiveBackCh <font color=blue>chan</font> *projectionInput
        - inputCh <font color=blue>chan</font> *projectionInput
        - outputCh <font color=blue>chan</font> *projectionOutput

        - run(ctx context.Context) 

    }
    class rangeFrameWindowProcessor << (S,Aquamarine) >> {
        - windowFuncs []aggfuncs.AggFunc
        - partialResults []aggfuncs.PartialResult
        - start *core.FrameBound
        - end *core.FrameBound
        - curRowIdx uint64
        - lastStartOffset uint64
        - lastEndOffset uint64
        - orderByCols []*expression.Column
        - expectedCmpResult int64

        - getStartOffset(ctx sessionctx.Context, rows []chunk.Row) (uint64, error)
        - getEndOffset(ctx sessionctx.Context, rows []chunk.Row) (uint64, error)
        - appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)
        - consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)
        - resetPartialResult() 

    }
    class recordSet << (S,Aquamarine) >> {
        - fields []*ast.ResultField
        - executor Executor
        - stmt *ExecStmt
        - lastErr error
        - txnStartTS uint64

        + Fields() []*ast.ResultField
        + Next(ctx context.Context, req *chunk.Chunk) error
        + NewChunk() *chunk.Chunk
        + Close() error
        + OnFetchReturned() 

    }
    class recoverRows << (S,Aquamarine) >> {
        - handle int64
        - idxVals []types.Datum
        - skip bool

    }
    class regionKeyDecoder << (S,Aquamarine) >> {
        - physicalTableID int64
        - tablePrefix []byte
        - recordPrefix []byte
        - indexPrefix []byte
        - indexID int64

        - decodeRegionKey(key []byte) string

    }
    class regionMeta << (S,Aquamarine) >> {
        - region *metapb.Region
        - leaderID uint64
        - storeID uint64
        - start string
        - end string
        - scattering bool
        - writtenBytes int64
        - readBytes int64
        - approximateSize int64
        - approximateKeys int64

    }
    class rightOuterJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class rowFrameWindowProcessor << (S,Aquamarine) >> {
        - windowFuncs []aggfuncs.AggFunc
        - partialResults []aggfuncs.PartialResult
        - start *core.FrameBound
        - end *core.FrameBound
        - curRowIdx uint64

        - getStartOffset(numRows uint64) uint64
        - getEndOffset(numRows uint64) uint64
        - consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)
        - appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)
        - resetPartialResult() 

    }
    class rowHashMap << (S,Aquamarine) >> {
        - entryStore entryStore
        - hashTable <font color=blue>map</font>[uint64]entryAddr
        - length int

        + Put(hashKey uint64, rowPtr chunk.RowPtr) 
        + Get(hashKey uint64) []chunk.RowPtr
        + Len() int

    }
    interface ruleChecker  {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class selectResultHook << (S,Aquamarine) >> {
        - selectResultFunc <font color=blue>func</font>(context.Context, sessionctx.Context, *kv.Request, []*types.FieldType, *statistics.QueryFeedback, []fmt.Stringer) (distsql.SelectResult, error)

        + SelectResult(ctx context.Context, sctx sessionctx.Context, kvReq *kv.Request, fieldTypes []*types.FieldType, fb *statistics.QueryFeedback, copPlanIDs []fmt.Stringer, rootPlanID fmt.Stringer) (distsql.SelectResult, error)

    }
    class semiJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class shuffleOutput << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - err error
        - giveBackCh <font color=blue>chan</font> *chunk.Chunk

    }
    class shuffleWorker << (S,Aquamarine) >> {
        - childExec Executor
        - finishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - executed bool
        - inputCh <font color=blue>chan</font> *chunk.Chunk
        - inputHolderCh <font color=blue>chan</font> *chunk.Chunk
        - outputCh <font color=blue>chan</font> *shuffleOutput
        - outputHolderCh <font color=blue>chan</font> *chunk.Chunk

        - run(ctx context.Context, waitGroup *sync.WaitGroup) 

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class slowLogChecker << (S,Aquamarine) >> {
        - hasProcessPriv bool
        - user *auth.UserIdentity
        - enableTimeCheck bool
        - startTime types.Time
        - endTime types.Time

        - hasPrivilege(userName string) bool
        - isTimeValid(t types.Time) bool

    }
    class slowQueryRetriever << (S,Aquamarine) >> {
        - table *model.TableInfo
        - outputCols []*model.ColumnInfo
        - initialized bool
        - extractor *core.SlowQueryExtractor
        - files []logFile
        - fileIdx int
        - fileLine int
        - checker *slowLogChecker
        - parsedSlowLogCh <font color=blue>chan</font> parsedSlowLog

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)
        - initialize(sctx sessionctx.Context) error
        - close() error
        - parseDataForSlowLog(ctx context.Context, sctx sessionctx.Context) 
        - dataForSlowLog(ctx context.Context) ([][]types.Datum, bool, error)
        - parseSlowLog(ctx sessionctx.Context, reader *bufio.Reader, maxRow int) ([][]types.Datum, error)
        - getAllFiles(sctx sessionctx.Context, logFilePath string) ([]logFile, error)
        - getFileStartTime(file *os.File) (time.Time, error)
        - getFileEndTime(file *os.File) (time.Time, error)
        - initializeAsyncParsing(ctx context.Context, sctx sessionctx.Context) 

    }
    class slowQueryTuple << (S,Aquamarine) >> {
        - time types.Time
        - txnStartTs uint64
        - user string
        - host string
        - connID uint64
        - queryTime float64
        - parseTime float64
        - compileTime float64
        - preWriteTime float64
        - waitPrewriteBinlogTime float64
        - commitTime float64
        - getCommitTSTime float64
        - commitBackoffTime float64
        - backoffTypes string
        - resolveLockTime float64
        - localLatchWaitTime float64
        - writeKeys uint64
        - writeSize uint64
        - prewriteRegion uint64
        - txnRetry uint64
        - copTime float64
        - processTime float64
        - waitTime float64
        - backOffTime float64
        - lockKeysTime float64
        - requestCount uint64
        - totalKeys uint64
        - processKeys uint64
        - db string
        - indexIDs string
        - digest string
        - statsInfo string
        - avgProcessTime float64
        - p90ProcessTime float64
        - maxProcessTime float64
        - maxProcessAddress string
        - avgWaitTime float64
        - p90WaitTime float64
        - maxWaitTime float64
        - maxWaitAddress string
        - memMax int64
        - diskMax int64
        - prevStmt string
        - sql string
        - isInternal bool
        - succ bool
        - planFromCache bool
        - plan string
        - planDigest string

        - setFieldValue(tz *time.Location, field string, value string, lineNum int, checker *slowLogChecker) (bool, error)
        - convertToDatumRow() []types.Datum

    }
    class splitRegionResult << (S,Aquamarine) >> {
        - splitRegions int
        - finishScatterNum int

    }
    class statsCache << (S,Aquamarine) >> {
        - mu sync.RWMutex
        - modifyTime time.Time
        - tableRows <font color=blue>map</font>[int64]uint64
        - colLength <font color=blue>map</font>[tableHistID]uint64

        - get(ctx sessionctx.Context) (<font color=blue>map</font>[int64]uint64, <font color=blue>map</font>[tableHistID]uint64, error)

    }
    class tableHistID << (S,Aquamarine) >> {
        - tableID int64
        - histID int64

    }
    class tableResultHandler << (S,Aquamarine) >> {
        - optionalResult distsql.SelectResult
        - result distsql.SelectResult
        - optionalFinished bool

        - open(optionalResult distsql.SelectResult, result distsql.SelectResult) 
        - nextChunk(ctx context.Context, chk *chunk.Chunk) error
        - nextRaw(ctx context.Context) ([]byte, error)

        + Close() error

    }
    class tableWorker << (S,Aquamarine) >> {
        - idxLookup *IndexLookUpExecutor
        - workCh <font color=blue>chan</font> *lookupTableTask
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - buildTblReader <font color=blue>func</font>(context.Context, []int64) (Executor, error)
        - keepOrder bool
        - handleIdx int
        - memTracker *memory.Tracker

        - pickAndExecTask(ctx context.Context) 
        - compareData(ctx context.Context, task *lookupTableTask, tableReader Executor) error
        - executeTask(ctx context.Context, task *lookupTableTask) error

    }
    class thresholdCheckInspection << (S,Aquamarine) >> {
        - inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectThreshold1(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectThreshold2(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectThreshold3(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectForLeaderDrop(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult

    }
    class tidbGlueSession << (S,Aquamarine) >> {
        - se sessionctx.Context
        - progress *brieTaskProgress
        - info *brieTaskInfo

        + GetDomain(store kv.Storage) (*domain.Domain, error)
        + CreateSession(store kv.Storage) (glue.Session, error)
        + Execute(ctx context.Context, sql string) error
        + CreateDatabase(ctx context.Context, schema *model.DBInfo) error
        + CreateTable(ctx context.Context, dbName model.CIStr, table *model.TableInfo) error
        + Close() 
        + Open( string,  client.SecurityOption) (kv.Storage, error)
        + OwnsStorage() bool
        + StartProgress(ctx context.Context, cmdName string, total int64, redirectLog bool) glue.Progress
        + Record(name string, value uint64) 

    }
    class toBeCheckedRow << (S,Aquamarine) >> {
        - row []types.Datum
        - rowValue []byte
        - handleKey *keyValueWithDupInfo
        - uniqueKeys []*keyValueWithDupInfo
        - t table.Table

    }
    class topNChunkHeap << (S,Aquamarine) >> {
        - greaterRow(rowI chunk.Row, rowJ chunk.Row) bool

        + Less(i int, j int) bool
        + Len() int
        + Push(x <font color=blue>interface</font>{}) 
        + Pop() <font color=blue>interface</font>{}
        + Swap(i int, j int) 

    }
    class unionWorkerResult << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - err error
        - src <font color=blue>chan</font> *chunk.Chunk

    }
    class vecGroupChecker << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - groupOffset []int
        - groupCount int
        - nextGroupID int
        - lastGroupKeyOfPrevChk []byte
        - firstGroupKey []byte
        - lastGroupKey []byte
        - firstRowDatums []types.Datum
        - lastRowDatums []types.Datum
        - sameGroup []bool
        - allocateBuffer <font color=blue>func</font>(types.EvalType, int) (*chunk.Column, error)
        - releaseBuffer <font color=blue>func</font>(*chunk.Column) 

        + GroupByItems []expression.Expression

        - splitIntoGroups(chk *chunk.Chunk) (bool, error)
        - evalGroupItemsAndResolveGroups(item expression.Expression, chk *chunk.Chunk, numRows int) error
        - getNextGroup() int
        - isExhausted() bool
        - reset() 

    }
    class versionInspection << (S,Aquamarine) >> {
        - inspect(_ context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult

    }
    class visibleChecker << (S,Aquamarine) >> {
        - defaultDB string
        - ctx sessionctx.Context
        - is infoschema.InfoSchema
        - manager privilege.Manager
        - ok bool

        + Enter(in ast.Node) (ast.Node, bool)
        + Leave(in ast.Node) (ast.Node, bool)

    }
    interface windowProcessor  {
        - consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)
        - appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)
        - resetPartialResult() 

    }
    class "<font color=blue>map</font>[int64]<font color=blue>map</font>[int64][]types.Datum" as fontcolorbluemapfontint64fontcolorbluemapfontint64typesDatum {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "v1.Range" as v1Range {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "<font color=blue>func</font>() ([][]types.Datum, error)" as fontcolorbluefuncfonttypesDatumerror {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "<font color=blue>map</font>[string][]aggfuncs.PartialResult" as fontcolorbluemapfontstringaggfuncsPartialResult {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"executor.baseExecutor" *- - "executor.AdminPluginsExec"
"executor.baseExecutor" *- - "executor.AdminResetTelemetryIDExec"
"executor.baseExecutor" *- - "executor.AdminShowTelemetryExec"
"executor.baseExecutor" *- - "executor.AnalyzeExec"
"executor.AnalyzeFastExec" *- - "executor.AnalyzeTestFastExec"
"executor.baseExecutor" *- - "executor.BRIEExec"
"executor.baseExecutor" *- - "executor.BatchPointGetExec"
"executor.baseExecutor" *- - "executor.CancelDDLJobsExec"
"ast.ChangeStmt" *- - "executor.ChangeExec"
"executor.baseExecutor" *- - "executor.ChangeExec"
"executor.baseExecutor" *- - "executor.CheckIndexRangeExec"
"executor.baseExecutor" *- - "executor.CheckTableExec"
"executor.baseExecutor" *- - "executor.ChecksumTableExec"
"executor.baseExecutor" *- - "executor.CleanupIndexExec"
"executor.baseExecutor" *- - "executor.DDLExec"
"executor.DDLJobRetriever" *- - "executor.DDLJobsReaderExec"
"executor.baseExecutor" *- - "executor.DDLJobsReaderExec"
"executor.baseExecutor" *- - "executor.DeallocateExec"
"executor.baseExecutor" *- - "executor.DeleteExec"
"sync.Mutex" *- - "executor.DirtyDB"
"executor.baseExecutor" *- - "executor.ExecuteExec"
"executor.baseExecutor" *- - "executor.ExplainExec"
"executor.baseExecutor" *- - "executor.GrantExec"
"executor.baseExecutor" *- - "executor.HashAggExec"
"executor.baseHashAggWorker" *- - "executor.HashAggFinalWorker"
"executor.baseHashAggWorker" *- - "executor.HashAggPartialWorker"
"executor.baseExecutor" *- - "executor.HashJoinExec"
"executor.baseExecutor" *- - "executor.IndexAdviseExec"
"executor.baseExecutor" *- - "executor.IndexLookUpExecutor"
"executor.checkIndexValue" *- - "executor.IndexLookUpExecutor"
"executor.dataReaderBuilder" *- - "executor.IndexLookUpExecutor"
"executor.baseExecutor" *- - "executor.IndexLookUpJoin"
"executor.baseExecutor" *- - "executor.IndexLookUpMergeJoin"
"executor.baseExecutor" *- - "executor.IndexMergeReaderExecutor"
"executor.checkIndexValue" *- - "executor.IndexMergeReaderExecutor"
"executor.dataReaderBuilder" *- - "executor.IndexMergeReaderExecutor"
"executor.IndexLookUpJoin" *- - "executor.IndexNestedLoopHashJoin"
"executor.baseExecutor" *- - "executor.IndexReaderExecutor"
"executor.selectResultHook" *- - "executor.IndexReaderExecutor"
"executor.InsertValues" *- - "executor.InsertExec"
"executor.baseExecutor" *- - "executor.InsertValues"
"executor.baseExecutor" *- - "executor.LimitExec"
"executor.baseExecutor" *- - "executor.LoadDataExec"
"executor.InsertValues" *- - "executor.LoadDataInfo"
"executor.baseExecutor" *- - "executor.LoadStatsExec"
"executor.baseExecutor" *- - "executor.MaxOneRowExec"
"executor.baseExecutor" *- - "executor.MemTableReaderExec"
"executor.baseExecutor" *- - "executor.MergeJoinExec"
"executor.dummyCloser" *- - "executor.MetricRetriever"
"executor.dummyCloser" *- - "executor.MetricsSummaryByLabelRetriever"
"executor.dummyCloser" *- - "executor.MetricsSummaryRetriever"
"executor.baseExecutor" *- - "executor.NestedLoopApplyExec"
"executor.baseExecutor" *- - "executor.PointGetExecutor"
"executor.baseExecutor" *- - "executor.PrepareExec"
"executor.baseExecutor" *- - "executor.ProjectionExec"
"executor.baseExecutor" *- - "executor.RecoverIndexExec"
"executor.baseExecutor" *- - "executor.ReloadExprPushdownBlacklistExec"
"executor.baseExecutor" *- - "executor.ReloadOptRuleBlacklistExec"
"executor.InsertValues" *- - "executor.ReplaceExec"
"executor.baseExecutor" *- - "executor.RevokeExec"
"executor.baseExecutor" *- - "executor.SQLBindExec"
"executor.baseExecutor" *- - "executor.SelectIntoExec"
"executor.baseExecutor" *- - "executor.SelectLockExec"
"executor.baseExecutor" *- - "executor.SelectionExec"
"executor.baseExecutor" *- - "executor.SetConfigExec"
"executor.baseExecutor" *- - "executor.SetExecutor"
"executor.baseExecutor" *- - "executor.ShowDDLExec"
"executor.baseExecutor" *- - "executor.ShowDDLJobQueriesExec"
"executor.DDLJobRetriever" *- - "executor.ShowDDLJobsExec"
"executor.baseExecutor" *- - "executor.ShowDDLJobsExec"
"executor.baseExecutor" *- - "executor.ShowExec"
"executor.baseExecutor" *- - "executor.ShowNextRowIDExec"
"executor.baseExecutor" *- - "executor.ShowSlowExec"
"executor.baseExecutor" *- - "executor.ShuffleExec"
"executor.baseExecutor" *- - "executor.SimpleExec"
"executor.baseExecutor" *- - "executor.SortExec"
"executor.baseExecutor" *- - "executor.SplitIndexRegionExec"
"executor.splitRegionResult" *- - "executor.SplitIndexRegionExec"
"executor.baseExecutor" *- - "executor.SplitTableRegionExec"
"executor.splitRegionResult" *- - "executor.SplitTableRegionExec"
"executor.baseExecutor" *- - "executor.StreamAggExec"
"executor.baseExecutor" *- - "executor.TableDualExec"
"executor.baseExecutor" *- - "executor.TableReaderExecutor"
"executor.selectResultHook" *- - "executor.TableReaderExecutor"
"executor.baseExecutor" *- - "executor.TableScanExec"
"executor.SortExec" *- - "executor.TopNExec"
"executor.baseExecutor" *- - "executor.TraceExec"
"executor.baseExecutor" *- - "executor.UnionExec"
"executor.baseExecutor" *- - "executor.UnionScanExec"
"executor.baseExecutor" *- - "executor.UpdateExec"
"executor.baseExecutor" *- - "executor.WindowExec"
"executor.AnalyzeIndexExec" *- - "executor.analyzeIndexIncrementalExec"
"executor.AnalyzeColumnsExec" *- - "executor.analyzePKIncrementalExec"
"executor.baseJoiner" *- - "executor.antiLeftOuterSemiJoiner"
"executor.baseJoiner" *- - "executor.antiSemiJoiner"
"executor.dummyCloser" *- - "executor.clusterConfigRetriever"
"executor.dummyCloser" *- - "executor.clusterServerInfoRetriever"
"executor.inspectionName" *- - "executor.configInspection"
"core.Plan" *- - "executor.dataReaderBuilder"
"executor.executorBuilder" *- - "executor.dataReaderBuilder"
"executor.selectResultHook" *- - "executor.dataReaderBuilder"
"executor.innerWorker" *- - "executor.indexHashJoinInnerWorker"
"executor.outerWorker" *- - "executor.indexHashJoinOuterWorker"
"executor.lookUpJoinTask" *- - "executor.indexHashJoinTask"
"executor.checkIndexValue" *- - "executor.indexWorker"
"executor.baseJoiner" *- - "executor.innerJoiner"
"executor.innerMergeCtx" *- - "executor.innerMergeWorker"
"executor.innerCtx" *- - "executor.innerWorker"
"executor.dummyCloser" *- - "executor.inspectionResultRetriever"
"executor.dummyCloser" *- - "executor.inspectionRuleRetriever"
"executor.dummyCloser" *- - "executor.inspectionSummaryRetriever"
"executor.baseJoiner" *- - "executor.leftOuterJoiner"
"executor.baseJoiner" *- - "executor.leftOuterSemiJoiner"
"executor.dummyCloser" *- - "executor.memtableRetriever"
"core.PhysicalPlan" *- - "executor.mockPhysicalIndexReader"
"executor.outerMergeCtx" *- - "executor.outerMergeWorker"
"executor.outerCtx" *- - "executor.outerWorker"
"executor.baseJoiner" *- - "executor.rightOuterJoiner"
"executor.baseJoiner" *- - "executor.semiJoiner"
"executor.baseExecutor" *- - "executor.shuffleWorker"
"executor.checkIndexValue" *- - "executor.tableWorker"
"executor.TopNExec" *- - "executor.topNChunkHeap"

"executor.Closeable" <|- - "executor.BatchPointGetExec"
"executor.Closeable" <|- - "executor.CheckIndexRangeExec"
"executor.Closeable" <|- - "executor.CheckTableExec"
"executor.Closeable" <|- - "executor.CleanupIndexExec"
"executor.Closeable" <|- - "executor.DeleteExec"
"executor.Closeable" <|- - "executor.ExplainExec"
"executor.Closeable" <|- - "executor.HashAggExec"
"executor.Closeable" <|- - "executor.HashJoinExec"
"executor.Closeable" <|- - "executor.IndexAdviseExec"
"executor.Closeable" <|- - "executor.IndexLookUpExecutor"
"executor.Closeable" <|- - "executor.IndexLookUpJoin"
"executor.Closeable" <|- - "executor.IndexLookUpMergeJoin"
"executor.Closeable" <|- - "executor.IndexMergeReaderExecutor"
"executor.Closeable" <|- - "executor.IndexNestedLoopHashJoin"
"executor.Closeable" <|- - "executor.IndexReaderExecutor"
"executor.Closeable" <|- - "executor.InsertExec"
"executor.insertCommon" <|- - "executor.InsertValues"
"executor.Closeable" <|- - "executor.LimitExec"
"executor.Closeable" <|- - "executor.LoadDataExec"
"executor.Closeable" <|- - "executor.LoadStatsExec"
"executor.Closeable" <|- - "executor.MemTableReaderExec"
"executor.Closeable" <|- - "executor.MergeJoinExec"
"executor.Closeable" <|- - "executor.NestedLoopApplyExec"
"executor.Closeable" <|- - "executor.PointGetExecutor"
"executor.Closeable" <|- - "executor.ProjectionExec"
"executor.Closeable" <|- - "executor.ReplaceExec"
"executor.Closeable" <|- - "executor.SelectIntoExec"
"executor.Closeable" <|- - "executor.SelectionExec"
"executor.Closeable" <|- - "executor.ShuffleExec"
"executor.Closeable" <|- - "executor.SortExec"
"executor.Closeable" <|- - "executor.StreamAggExec"
"executor.Closeable" <|- - "executor.TableReaderExecutor"
"executor.Closeable" <|- - "executor.UnionExec"
"executor.Closeable" <|- - "executor.UpdateExec"
"executor.Closeable" <|- - "executor.WindowExec"
"executor.windowProcessor" <|- - "executor.aggWindowProcessor"
"executor.joiner" <|- - "executor.antiLeftOuterSemiJoiner"
"executor.joiner" <|- - "executor.antiSemiJoiner"
"executor.Closeable" <|- - "executor.baseExecutor"
"executor.Executor" <|- - "executor.baseExecutor"
"executor.ruleChecker" <|- - "executor.checkRegionHealth"
"executor.ruleChecker" <|- - "executor.checkStoreRegionTooMuch"
"executor.Closeable" <|- - "executor.chunkRowRecordSet"
"executor.memTableRetriever" <|- - "executor.clusterLogRetriever"
"executor.ruleChecker" <|- - "executor.compareStoreStatus"
"executor.Closeable" <|- - "executor.hashRowContainer"
"executor.joiner" <|- - "executor.innerJoiner"
"executor.ruleChecker" <|- - "executor.inspectCPULoad"
"executor.ruleChecker" <|- - "executor.inspectDiskUsage"
"executor.ruleChecker" <|- - "executor.inspectSwapMemoryUsed"
"executor.ruleChecker" <|- - "executor.inspectVirtualMemUsage"
"executor.joiner" <|- - "executor.leftOuterJoiner"
"executor.joiner" <|- - "executor.leftOuterSemiJoiner"
"executor.partitionSplitter" <|- - "executor.partitionHashSplitter"
"executor.windowProcessor" <|- - "executor.rangeFrameWindowProcessor"
"executor.Closeable" <|- - "executor.recordSet"
"executor.joiner" <|- - "executor.rightOuterJoiner"
"executor.windowProcessor" <|- - "executor.rowFrameWindowProcessor"
"executor.joiner" <|- - "executor.semiJoiner"
"executor.Closeable" <|- - "executor.shuffleWorker"
"executor.memTableRetriever" <|- - "executor.slowQueryRetriever"
"executor.Closeable" <|- - "executor.tableResultHandler"

"__builtin__.byte" #.. "executor.outerRowStatusFlag"
"__builtin__.int" #.. "executor.IndexAdviseVarKeyType"
"__builtin__.int" #.. "executor.loadDataVarKeyType"
"__builtin__.int" #.. "executor.loadStatsVarKeyType"
"__builtin__.int" #.. "executor.objectType"
"__builtin__.int" #.. "executor.taskType"
"__builtin__.int64" #.. "aggfuncs.partialResult4Count"
"__builtin__.uint32" #.. "aggfuncs.approxCountDistinctHashValue"
"__builtin__.uint64" #.. "aggfuncs.partialResult4BitFunc"
"aggfuncs.unsafePointer" #.. "aggfuncs.PartialResult"
"executor.fontcolorbluefuncfonttypesDatumerror" #.. "executor.TestShowClusterConfigFunc"
"executor.<font color=blue>func</font>([]byte, []byte) error" #.. "executor.processKVFunc"
"executor.fontcolorbluemapfontint64fontcolorbluemapfontint64typesDatum" #.. "executor.tableRowMapType"
"executor.fontcolorbluemapfontstringaggfuncsPartialResult" #.. "executor.aggPartialResultMapper"
"executor.[]logStreamResult" #.. "executor.logResponseHeap"
"executor.v1Range" #.. "executor.promQLQueryRange"
@enduml

@startuml
namespace aggfuncs {
    interface AggFunc  {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    interface SlidingWindowAggFunc  {
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class aggfuncs.PartialResult << (T, #FF7700) >>  {
    }
    class aggfuncs.approxCountDistinctHashValue << (T, #FF7700) >>  {
    }
    class aggfuncs.partialResult4BitFunc << (T, #FF7700) >>  {
    }
    class aggfuncs.partialResult4Count << (T, #FF7700) >>  {
    }
    class approxCountDistinctFinal << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class approxCountDistinctOriginal << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class approxCountDistinctPartial1 << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class approxCountDistinctPartial2 << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class avgOriginal4Decimal << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class avgOriginal4DistinctDecimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class avgOriginal4DistinctFloat64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class avgOriginal4Float64 << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class avgPartial4Decimal << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class avgPartial4Float64 << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class baseAggFunc << (S,Aquamarine) >> {
        - args []expression.Expression
        - ordinal int

        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class baseApproxCountDistinct << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class baseAvgDecimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class baseAvgFloat64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class baseBitAggFunc << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class baseCount << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class baseGroupConcat4String << (S,Aquamarine) >> {
        - byItems []*util.ByItems
        - sep string
        - maxLen uint64
        - truncated *int32

        - handleTruncateError(sctx sessionctx.Context) error
        - truncatePartialResultIfNeed(sctx sessionctx.Context, buffer *bytes.Buffer) error

        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class baseLeadLag << (S,Aquamarine) >> {
        - defaultExpr expression.Expression
        - offset uint64

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class baseMaxMinAggFunc << (S,Aquamarine) >> {
        - isMax bool

    }
    class basePartialResult4FirstRow << (S,Aquamarine) >> {
        - isNull bool
        - gotFirstRow bool

    }
    class basePartialResult4GroupConcat << (S,Aquamarine) >> {
        - valsBuf *bytes.Buffer
        - buffer *bytes.Buffer

    }
    class baseSum4Float64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class baseSumAggFunc << (S,Aquamarine) >> {
    }
    class baseVarPopAggFunc << (S,Aquamarine) >> {
    }
    class bitAndUint64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class bitOrUint64 << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class bitXorUint64 << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class countOriginal4Decimal << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4Duration << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4Int << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4JSON << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4Real << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4String << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginal4Time << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class countOriginalWithDistinct << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countOriginalWithDistinct4Decimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countOriginalWithDistinct4Duration << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countOriginalWithDistinct4Int << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countOriginalWithDistinct4Real << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countOriginalWithDistinct4String << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class countPartial << (S,Aquamarine) >> {
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class cumeDist << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Decimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class firstRow4Duration << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Enum << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Float32 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Float64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Int << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4JSON << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Set << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4String << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstRow4Time << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class firstValue << (S,Aquamarine) >> {
        - tp *types.FieldType

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class groupConcat << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + SetTruncated(t *int32) 
        + GetTruncated() *int32

    }
    class groupConcatDistinct << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + SetTruncated(t *int32) 
        + GetTruncated() *int32

    }
    class groupConcatDistinctOrder << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class groupConcatOrder << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error
        + SetTruncated(t *int32) 
        + GetTruncated() *int32

    }
    class jsonObjectAgg << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class lag << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class lastValue << (S,Aquamarine) >> {
        - tp *types.FieldType

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class lead << (S,Aquamarine) >> {
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class maxMin4Decimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Duration << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Float32 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Float64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Int << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4JSON << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4String << (S,Aquamarine) >> {
        - retTp *types.FieldType

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Time << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class maxMin4Uint << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class nthValue << (S,Aquamarine) >> {
        - tp *types.FieldType
        - nth uint64

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class ntile << (S,Aquamarine) >> {
        - n uint64

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(_ sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(_ sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class partialResult4ApproxCountDistinct << (S,Aquamarine) >> {
        - size uint32
        - sizeDegree uint8
        - skipDegree uint8
        - hasZero bool
        - buf []approxCountDistinctHashValue

        - alloc(newSizeDegree uint8) 
        - reset() 
        - bufSize() uint32
        - mask() uint32
        - place(x approxCountDistinctHashValue) uint32
        - resize(newSizeDegree uint8) 
        - readAndMerge(rb []byte) error
        - fixedSize() uint64
        - insertHash(hashValue approxCountDistinctHashValue) 
        - good(hash approxCountDistinctHashValue) bool
        - insertImpl(x approxCountDistinctHashValue) 
        - shrinkIfNeed() 
        - maxFill() uint32
        - rehash() 
        - reinsertImpl(x approxCountDistinctHashValue) 
        - merge(tar *partialResult4ApproxCountDistinct) 

        + InsertHash64(x uint64) 
        + Serialize() []byte

    }
    class partialResult4AvgDecimal << (S,Aquamarine) >> {
        - sum types.MyDecimal
        - count int64

    }
    class partialResult4AvgDistinctDecimal << (S,Aquamarine) >> {
        - valSet set.StringSet

    }
    class partialResult4AvgDistinctFloat64 << (S,Aquamarine) >> {
        - valSet set.Float64Set

    }
    class partialResult4AvgFloat64 << (S,Aquamarine) >> {
        - sum float64
        - count int64

    }
    class partialResult4CountDistinctDecimal << (S,Aquamarine) >> {
        - valSet set.StringSet

    }
    class partialResult4CountDistinctDuration << (S,Aquamarine) >> {
        - valSet set.Int64Set

    }
    class partialResult4CountDistinctInt << (S,Aquamarine) >> {
        - valSet set.Int64Set

    }
    class partialResult4CountDistinctReal << (S,Aquamarine) >> {
        - valSet set.Float64Set

    }
    class partialResult4CountDistinctString << (S,Aquamarine) >> {
        - valSet set.StringSet

    }
    class partialResult4CountWithDistinct << (S,Aquamarine) >> {
        - valSet set.StringSet

    }
    class partialResult4CumeDist << (S,Aquamarine) >> {
        - curIdx int
        - lastRank int
        - rows []chunk.Row

    }
    class partialResult4FirstRowDecimal << (S,Aquamarine) >> {
        - val types.MyDecimal

    }
    class partialResult4FirstRowDuration << (S,Aquamarine) >> {
        - val types.Duration

    }
    class partialResult4FirstRowEnum << (S,Aquamarine) >> {
        - val types.Enum

    }
    class partialResult4FirstRowFloat32 << (S,Aquamarine) >> {
        - val float32

    }
    class partialResult4FirstRowFloat64 << (S,Aquamarine) >> {
        - val float64

    }
    class partialResult4FirstRowInt << (S,Aquamarine) >> {
        - val int64

    }
    class partialResult4FirstRowJSON << (S,Aquamarine) >> {
        - val json.BinaryJSON

    }
    class partialResult4FirstRowSet << (S,Aquamarine) >> {
        - val types.Set

    }
    class partialResult4FirstRowString << (S,Aquamarine) >> {
        - val string

    }
    class partialResult4FirstRowTime << (S,Aquamarine) >> {
        - val types.Time

    }
    class partialResult4FirstValue << (S,Aquamarine) >> {
        - gotFirstValue bool
        - evaluator valueEvaluator

    }
    class partialResult4GroupConcat << (S,Aquamarine) >> {
    }
    class partialResult4GroupConcatDistinct << (S,Aquamarine) >> {
        - valSet set.StringSet
        - encodeBytesBuffer []byte

    }
    class partialResult4GroupConcatOrder << (S,Aquamarine) >> {
        - topN *topNRows

    }
    class partialResult4GroupConcatOrderDistinct << (S,Aquamarine) >> {
        - topN *topNRows
        - valSet set.StringSet
        - encodeBytesBuffer []byte

    }
    class partialResult4JsonObjectAgg << (S,Aquamarine) >> {
        - entries <font color=blue>map</font>[string]<font color=blue>interface</font>{}

    }
    class partialResult4LastValue << (S,Aquamarine) >> {
        - gotLastValue bool
        - evaluator valueEvaluator

    }
    class partialResult4LeadLag << (S,Aquamarine) >> {
        - rows []chunk.Row
        - curIdx uint64

    }
    class partialResult4MaxMinDecimal << (S,Aquamarine) >> {
        - val types.MyDecimal
        - isNull bool

    }
    class partialResult4MaxMinDuration << (S,Aquamarine) >> {
        - val types.Duration
        - isNull bool

    }
    class partialResult4MaxMinFloat32 << (S,Aquamarine) >> {
        - val float32
        - isNull bool

    }
    class partialResult4MaxMinFloat64 << (S,Aquamarine) >> {
        - val float64
        - isNull bool

    }
    class partialResult4MaxMinInt << (S,Aquamarine) >> {
        - val int64
        - isNull bool

    }
    class partialResult4MaxMinJSON << (S,Aquamarine) >> {
        - val json.BinaryJSON
        - isNull bool

    }
    class partialResult4MaxMinString << (S,Aquamarine) >> {
        - val string
        - isNull bool

    }
    class partialResult4MaxMinUint << (S,Aquamarine) >> {
        - val uint64
        - isNull bool

    }
    class partialResult4NthValue << (S,Aquamarine) >> {
        - seenRows uint64
        - evaluator valueEvaluator

    }
    class partialResult4Ntile << (S,Aquamarine) >> {
        - curIdx uint64
        - curGroupIdx uint64
        - remainder uint64
        - quotient uint64
        - numRows uint64

    }
    class partialResult4Rank << (S,Aquamarine) >> {
        - curIdx int64
        - lastRank int64
        - rows []chunk.Row

    }
    class partialResult4RowNumber << (S,Aquamarine) >> {
        - curIdx int64

    }
    class partialResult4SumDecimal << (S,Aquamarine) >> {
        - val types.MyDecimal
        - notNullRowCount int64

    }
    class partialResult4SumDistinctDecimal << (S,Aquamarine) >> {
        - val types.MyDecimal
        - isNull bool
        - valSet set.StringSet

    }
    class partialResult4SumDistinctFloat64 << (S,Aquamarine) >> {
        - val float64
        - isNull bool
        - valSet set.Float64Set

    }
    class partialResult4SumFloat64 << (S,Aquamarine) >> {
        - val float64
        - notNullRowCount int64

    }
    class partialResult4Time << (S,Aquamarine) >> {
        - val types.Time
        - isNull bool

    }
    class partialResult4VarPopDistinctFloat64 << (S,Aquamarine) >> {
        - count int64
        - sum float64
        - variance float64
        - valSet set.Float64Set

    }
    class partialResult4VarPopFloat64 << (S,Aquamarine) >> {
        - count int64
        - sum float64
        - variance float64

    }
    class percentRank << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(partial PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, partial PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, partial PartialResult, chk *chunk.Chunk) error

    }
    class rank << (S,Aquamarine) >> {
        - isDense bool

        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class rowComparer << (S,Aquamarine) >> {
        - cmpFuncs []chunk.CompareFunc
        - colIdx []int

        - compareRows(prev chunk.Row, curr chunk.Row) int

    }
    class rowNumber << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class sortRow << (S,Aquamarine) >> {
        - buffer *bytes.Buffer
        - byItems []*types.Datum

    }
    class sum4Decimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class sum4DistinctDecimal << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class sum4DistinctFloat64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error

    }
    class sum4Float64 << (S,Aquamarine) >> {
        + Slide(sctx sessionctx.Context, rows []chunk.Row, lastStart uint64, lastEnd uint64, shiftStart uint64, shiftEnd uint64, pr PartialResult) error

    }
    class sum4Float64HighPrecision << (S,Aquamarine) >> {
    }
    class topNRows << (S,Aquamarine) >> {
        - rows []sortRow
        - desc []bool
        - sctx sessionctx.Context
        - err error
        - currSize uint64
        - limitSize uint64
        - sepSize uint64

        - tryToAdd(row sortRow) bool
        - reset() 
        - concat(sep string, truncated bool) string

        + Len() int
        + Less(i int, j int) bool
        + Swap(i int, j int) 
        + Push(x <font color=blue>interface</font>{}) 
        + Pop() <font color=blue>interface</font>{}

    }
    class value4Decimal << (S,Aquamarine) >> {
        - val *types.MyDecimal
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4Duration << (S,Aquamarine) >> {
        - val types.Duration
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4Float32 << (S,Aquamarine) >> {
        - val float32
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4Float64 << (S,Aquamarine) >> {
        - val float64
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4Int << (S,Aquamarine) >> {
        - val int64
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4JSON << (S,Aquamarine) >> {
        - val json.BinaryJSON
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4String << (S,Aquamarine) >> {
        - val string
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class value4Time << (S,Aquamarine) >> {
        - val types.Time
        - isNull bool

        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    interface valueEvaluator  {
        - evaluateRow(ctx sessionctx.Context, expr expression.Expression, row chunk.Row) error
        - appendResult(chk *chunk.Chunk, colIdx int) 

    }
    class varPop4DistinctFloat64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error

    }
    class varPop4Float64 << (S,Aquamarine) >> {
        + AllocPartialResult() PartialResult
        + ResetPartialResult(pr PartialResult) 
        + AppendFinalResult2Chunk(sctx sessionctx.Context, pr PartialResult, chk *chunk.Chunk) error
        + UpdatePartialResult(sctx sessionctx.Context, rowsInGroup []chunk.Row, pr PartialResult) error
        + MergePartialResult(sctx sessionctx.Context, src PartialResult, dst PartialResult) error

    }
    class "unsafe.Pointer" as unsafePointer {
    }
}
"aggfuncs.approxCountDistinctPartial2" *- - "aggfuncs.approxCountDistinctFinal"
"aggfuncs.baseApproxCountDistinct" *- - "aggfuncs.approxCountDistinctOriginal"
"aggfuncs.approxCountDistinctOriginal" *- - "aggfuncs.approxCountDistinctPartial1"
"aggfuncs.approxCountDistinctPartial1" *- - "aggfuncs.approxCountDistinctPartial2"
"aggfuncs.baseAvgDecimal" *- - "aggfuncs.avgOriginal4Decimal"
"aggfuncs.baseAggFunc" *- - "aggfuncs.avgOriginal4DistinctDecimal"
"aggfuncs.baseAggFunc" *- - "aggfuncs.avgOriginal4DistinctFloat64"
"aggfuncs.baseAvgFloat64" *- - "aggfuncs.avgOriginal4Float64"
"aggfuncs.baseAvgDecimal" *- - "aggfuncs.avgPartial4Decimal"
"aggfuncs.baseAvgFloat64" *- - "aggfuncs.avgPartial4Float64"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseApproxCountDistinct"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseAvgDecimal"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseAvgFloat64"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseBitAggFunc"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseCount"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseGroupConcat4String"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseLeadLag"
"aggfuncs.valueEvaluator" *- - "aggfuncs.baseLeadLag"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseMaxMinAggFunc"
"aggfuncs.baseSumAggFunc" *- - "aggfuncs.baseSum4Float64"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseSumAggFunc"
"aggfuncs.baseAggFunc" *- - "aggfuncs.baseVarPopAggFunc"
"aggfuncs.baseBitAggFunc" *- - "aggfuncs.bitAndUint64"
"aggfuncs.baseBitAggFunc" *- - "aggfuncs.bitOrUint64"
"aggfuncs.baseBitAggFunc" *- - "aggfuncs.bitXorUint64"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4Decimal"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4Duration"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4Int"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4JSON"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4Real"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4String"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginal4Time"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct4Decimal"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct4Duration"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct4Int"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct4Real"
"aggfuncs.baseCount" *- - "aggfuncs.countOriginalWithDistinct4String"
"aggfuncs.baseCount" *- - "aggfuncs.countPartial"
"aggfuncs.baseAggFunc" *- - "aggfuncs.cumeDist"
"aggfuncs.rowComparer" *- - "aggfuncs.cumeDist"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Decimal"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Duration"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Enum"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Float32"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Float64"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Int"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4JSON"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Set"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4String"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstRow4Time"
"aggfuncs.baseAggFunc" *- - "aggfuncs.firstValue"
"aggfuncs.baseGroupConcat4String" *- - "aggfuncs.groupConcat"
"aggfuncs.baseGroupConcat4String" *- - "aggfuncs.groupConcatDistinct"
"aggfuncs.baseGroupConcat4String" *- - "aggfuncs.groupConcatDistinctOrder"
"aggfuncs.baseGroupConcat4String" *- - "aggfuncs.groupConcatOrder"
"aggfuncs.baseAggFunc" *- - "aggfuncs.jsonObjectAgg"
"aggfuncs.baseLeadLag" *- - "aggfuncs.lag"
"aggfuncs.baseAggFunc" *- - "aggfuncs.lastValue"
"aggfuncs.baseLeadLag" *- - "aggfuncs.lead"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Decimal"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Duration"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Float32"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Float64"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Int"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4JSON"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4String"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Time"
"aggfuncs.baseMaxMinAggFunc" *- - "aggfuncs.maxMin4Uint"
"aggfuncs.baseAggFunc" *- - "aggfuncs.nthValue"
"aggfuncs.baseAggFunc" *- - "aggfuncs.ntile"
"aggfuncs.partialResult4AvgDecimal" *- - "aggfuncs.partialResult4AvgDistinctDecimal"
"aggfuncs.partialResult4AvgFloat64" *- - "aggfuncs.partialResult4AvgDistinctFloat64"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowDecimal"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowDuration"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowEnum"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowFloat32"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowFloat64"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowInt"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowJSON"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowSet"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowString"
"aggfuncs.basePartialResult4FirstRow" *- - "aggfuncs.partialResult4FirstRowTime"
"aggfuncs.basePartialResult4GroupConcat" *- - "aggfuncs.partialResult4GroupConcat"
"aggfuncs.basePartialResult4GroupConcat" *- - "aggfuncs.partialResult4GroupConcatDistinct"
"aggfuncs.baseAggFunc" *- - "aggfuncs.percentRank"
"aggfuncs.rowComparer" *- - "aggfuncs.percentRank"
"aggfuncs.baseAggFunc" *- - "aggfuncs.rank"
"aggfuncs.rowComparer" *- - "aggfuncs.rank"
"aggfuncs.baseAggFunc" *- - "aggfuncs.rowNumber"
"aggfuncs.baseSumAggFunc" *- - "aggfuncs.sum4Decimal"
"aggfuncs.baseSumAggFunc" *- - "aggfuncs.sum4DistinctDecimal"
"aggfuncs.baseSumAggFunc" *- - "aggfuncs.sum4DistinctFloat64"
"aggfuncs.baseSum4Float64" *- - "aggfuncs.sum4Float64"
"aggfuncs.baseSum4Float64" *- - "aggfuncs.sum4Float64HighPrecision"
"aggfuncs.baseVarPopAggFunc" *- - "aggfuncs.varPop4DistinctFloat64"
"aggfuncs.baseVarPopAggFunc" *- - "aggfuncs.varPop4Float64"

"aggfuncs.AggFunc" <|- - "aggfuncs.baseSum4Float64"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4Decimal"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4Duration"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4Int"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4JSON"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4Real"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4String"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.countOriginal4Time"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Decimal"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Duration"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Enum"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Float32"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Float64"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Int"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4JSON"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Set"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4String"
"aggfuncs.AggFunc" <|- - "aggfuncs.firstRow4Time"
"aggfuncs.AggFunc" <|- - "aggfuncs.groupConcatDistinctOrder"
"aggfuncs.AggFunc" <|- - "aggfuncs.groupConcatOrder"
"aggfuncs.AggFunc" <|- - "aggfuncs.jsonObjectAgg"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Decimal"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Duration"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Float32"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Float64"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Int"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4JSON"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4String"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Time"
"aggfuncs.AggFunc" <|- - "aggfuncs.maxMin4Uint"
"aggfuncs.AggFunc" <|- - "aggfuncs.sum4Decimal"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.sum4Decimal"
"aggfuncs.SlidingWindowAggFunc" <|- - "aggfuncs.sum4Float64"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Decimal"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Duration"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Float32"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Float64"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Int"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4JSON"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4String"
"aggfuncs.valueEvaluator" <|- - "aggfuncs.value4Time"
"aggfuncs.AggFunc" <|- - "aggfuncs.varPop4Float64"

namespace executor {
    class AdminPluginsExec << (S,Aquamarine) >> {
        + Action core.AdminPluginsAction
        + Plugins []string

        - changeDisableFlagAndFlush(disabled bool) error

        + Next(ctx context.Context, _ *chunk.Chunk) error

    }
    class AdminResetTelemetryIDExec << (S,Aquamarine) >> {
        - done bool

        + Next(ctx context.Context, _ *chunk.Chunk) error

    }
    class AdminShowTelemetryExec << (S,Aquamarine) >> {
        - done bool

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class AfFinalResult << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - err error
        - giveBackCh <font color=blue>chan</font> *chunk.Chunk

    }
    class AnalyzeColumnsExec << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - physicalTableID int64
        - colsInfo []*model.ColumnInfo
        - pkInfo *model.ColumnInfo
        - concurrency int
        - priority int
        - analyzePB *tipb.AnalyzeReq
        - resultHandler *tableResultHandler
        - opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64
        - job *statistics.AnalyzeJob

        - open(ranges []*ranger.Range) error
        - buildResp(ranges []*ranger.Range) (distsql.SelectResult, error)
        - buildStats(ranges []*ranger.Range) ([]*statistics.Histogram, []*statistics.CMSketch, error)

    }
    class AnalyzeExec << (S,Aquamarine) >> {
        - tasks []*analyzeTask
        - wg *sync.WaitGroup

        - analyzeWorker(taskCh <font color=blue>chan</font> *analyzeTask, resultCh <font color=blue>chan</font> analyzeResult, isCloseChanThread bool) 

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class AnalyzeFastExec << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - physicalTableID int64
        - pkInfo *model.ColumnInfo
        - colsInfo []*model.ColumnInfo
        - idxsInfo []*model.IndexInfo
        - concurrency int
        - opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64
        - tblInfo *model.TableInfo
        - cache *tikv.RegionCache
        - wg *sync.WaitGroup
        - sampLocs <font color=blue>chan</font> *tikv.KeyLocation
        - rowCount uint64
        - sampCursor int32
        - sampTasks []*AnalyzeFastTask
        - scanTasks []*tikv.KeyLocation
        - collectors []*statistics.SampleCollector
        - randSeed int64
        - job *statistics.AnalyzeJob

        - getSampRegionsRowCount(bo *tikv.Backoffer, needRebuild *bool, err *error, sampTasks *[]*AnalyzeFastTask) 
        - getNextSampleKey(bo *tikv.Backoffer, startKey kv.Key) (kv.Key, error)
        - buildSampTask() (bool, error)
        - decodeValues(sValue []byte) (<font color=blue>map</font>[int64]types.Datum, error)
        - getValueByInfo(colInfo *model.ColumnInfo, values <font color=blue>map</font>[int64]types.Datum) (types.Datum, error)
        - updateCollectorSamples(sValue []byte, sKey kv.Key, samplePos int32, hasPKInfo int) error
        - handleBatchSeekResponse(kvMap <font color=blue>map</font>[string][]byte) error
        - handleScanIter(iter kv.Iterator) (int, error)
        - handleScanTasks(bo *tikv.Backoffer) (int, error)
        - handleSampTasks(bo *tikv.Backoffer, workID int, err *error) 
        - buildColumnStats(ID int64, collector *statistics.SampleCollector, tp *types.FieldType, rowCount int64) (*statistics.Histogram, *statistics.CMSketch, error)
        - buildIndexStats(idxInfo *model.IndexInfo, collector *statistics.SampleCollector, rowCount int64) (*statistics.Histogram, *statistics.CMSketch, error)
        - runTasks() ([]*statistics.Histogram, []*statistics.CMSketch, error)
        - buildStats() ([]*statistics.Histogram, []*statistics.CMSketch, error)

    }
    class AnalyzeFastTask << (S,Aquamarine) >> {
        + Location *tikv.KeyLocation
        + SampSize uint64
        + BeginOffset uint64
        + EndOffset uint64

    }
    class AnalyzeIndexExec << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - physicalTableID int64
        - idxInfo *model.IndexInfo
        - concurrency int
        - priority int
        - analyzePB *tipb.AnalyzeReq
        - result distsql.SelectResult
        - countNullRes distsql.SelectResult
        - opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64
        - job *statistics.AnalyzeJob

        - fetchAnalyzeResult(ranges []*ranger.Range, isNullRange bool) error
        - open(ranges []*ranger.Range, considerNull bool) error
        - buildStatsFromResult(result distsql.SelectResult, needCMS bool) (*statistics.Histogram, *statistics.CMSketch, error)
        - buildStats(ranges []*ranger.Range, considerNull bool) (*statistics.Histogram, *statistics.CMSketch, error)

    }
    class AnalyzeTestFastExec << (S,Aquamarine) >> {
        + Ctx sessionctx.Context
        + PhysicalTableID int64
        + PKInfo *model.ColumnInfo
        + ColsInfo []*model.ColumnInfo
        + IdxsInfo []*model.IndexInfo
        + Concurrency int
        + Collectors []*statistics.SampleCollector
        + TblInfo *model.TableInfo
        + Opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64

        + TestFastSample() error

    }
    class BRIEExec << (S,Aquamarine) >> {
        - backupCfg *task.BackupConfig
        - restoreCfg *task.RestoreConfig
        - info *brieTaskInfo

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class BatchPointGetExec << (S,Aquamarine) >> {
        - tblInfo *model.TableInfo
        - idxInfo *model.IndexInfo
        - handles []int64
        - physIDs []int64
        - partPos int
        - idxVals [][]types.Datum
        - startTS uint64
        - snapshotTS uint64
        - txn kv.Transaction
        - lock bool
        - waitTime int64
        - inited bool
        - values [][]byte
        - index int
        - rowDecoder *rowcodec.ChunkDecoder
        - keepOrder bool
        - desc bool
        - columns []*model.ColumnInfo
        - virtualColumnIndex []int
        - virtualColumnRetFieldTypes []*types.FieldType

        - buildVirtualColumnInfo() 
        - initialize(ctx context.Context) error
        - lockKeys(ctx context.Context, keys []kv.Key) error

        + Open( context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class CancelDDLJobsExec << (S,Aquamarine) >> {
        - cursor int
        - jobIDs []int64
        - errs []error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ChangeExec << (S,Aquamarine) >> {
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class CheckIndexRangeExec << (S,Aquamarine) >> {
        - table *model.TableInfo
        - index *model.IndexInfo
        - is infoschema.InfoSchema
        - startKey []types.Datum
        - handleRanges []ast.HandleRange
        - srcChunk *chunk.Chunk
        - result distsql.SelectResult
        - cols []*model.ColumnInfo

        - buildDAGPB() (*tipb.DAGRequest, error)
        - constructIndexScanPB() *tipb.Executor

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Open(ctx context.Context) error
        + Close() error

    }
    class CheckTableExec << (S,Aquamarine) >> {
        - dbName string
        - table table.Table
        - indexInfos []*model.IndexInfo
        - srcs []*IndexLookUpExecutor
        - done bool
        - is infoschema.InfoSchema
        - exitCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - retCh <font color=blue>chan</font> error
        - checkIndex bool

        - checkTableIndexHandle(ctx context.Context, idxInfo *model.IndexInfo) error
        - checkIndexHandle(ctx context.Context, src *IndexLookUpExecutor) error
        - handlePanic(r <font color=blue>interface</font>{}) 
        - checkTableRecord(idxOffset int) error

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ChecksumTableExec << (S,Aquamarine) >> {
        - tables <font color=blue>map</font>[int64]*checksumContext
        - done bool

        - buildTasks() ([]*checksumTask, error)
        - handleResult(result *checksumResult) 
        - checksumWorker(taskCh <font color=blue>chan</font> *checksumTask, resultCh <font color=blue>chan</font> *checksumResult) 
        - handleChecksumRequest(req *kv.Request) (*tipb.ChecksumResponse, error)

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class CleanupIndexExec << (S,Aquamarine) >> {
        - done bool
        - removeCnt uint64
        - index table.Index
        - table table.Table
        - physicalID int64
        - idxCols []*model.ColumnInfo
        - idxColFieldTypes []*types.FieldType
        - idxChunk *chunk.Chunk
        - idxValues <font color=blue>map</font>[int64][][]types.Datum
        - batchSize uint64
        - batchKeys []kv.Key
        - idxValsBufs [][]types.Datum
        - lastIdxKey []byte
        - scanRowCnt uint64

        - getIdxColTypes() []*types.FieldType
        - batchGetRecord(txn kv.Transaction) (<font color=blue>map</font>[string][]byte, error)
        - deleteDanglingIdx(txn kv.Transaction, values <font color=blue>map</font>[string][]byte) error
        - fetchIndex(ctx context.Context, txn kv.Transaction) error
        - cleanTableIndex(ctx context.Context) error
        - buildIndexScan(ctx context.Context, txn kv.Transaction) (distsql.SelectResult, error)
        - init() error
        - buildIdxDAGPB(txn kv.Transaction) (*tipb.DAGRequest, error)
        - constructIndexScanPB() *tipb.Executor
        - constructLimitPB() *tipb.Executor

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Open(ctx context.Context) error
        + Close() error

    }
    interface Closeable  {
        + Close() error

    }
    class CommitTask << (S,Aquamarine) >> {
        - cnt uint64
        - rows [][]types.Datum

    }
    class Compiler << (S,Aquamarine) >> {
        + Ctx sessionctx.Context

        + Compile(ctx context.Context, stmtNode ast.StmtNode) (*ExecStmt, error)

    }
    class CoprocessorDAGHandler << (S,Aquamarine) >> {
        - sctx sessionctx.Context
        - dagReq *tipb.DAGRequest

        - buildResponseAndSendToStream(chk *chunk.Chunk, tps []*types.FieldType, stream tikvpb.Tikv_CoprocessorStreamServer) error
        - buildDAGExecutor(req *coprocessor.Request) (Executor, error)
        - buildChunk(chk *chunk.Chunk, tps []*types.FieldType) ([]tipb.Chunk, error)
        - buildUnaryResponse(chunks []tipb.Chunk) *coprocessor.Response
        - buildStreamResponse(chunk *tipb.Chunk) *coprocessor.Response
        - buildErrorResponse(err error) *coprocessor.Response
        - encodeChunk(chk *chunk.Chunk, colTypes []*types.FieldType) ([]tipb.Chunk, error)
        - encodeDefault(chk *chunk.Chunk, tps []*types.FieldType) ([]tipb.Chunk, error)
        - appendRow(chunks []tipb.Chunk, data []byte, rowCnt int) []tipb.Chunk

        + HandleRequest(ctx context.Context, req *coprocessor.Request) *coprocessor.Response
        + HandleStreamRequest(ctx context.Context, req *coprocessor.Request, stream tikvpb.Tikv_CoprocessorStreamServer) error

    }
    class DDLExec << (S,Aquamarine) >> {
        - stmt ast.StmtNode
        - is infoschema.InfoSchema
        - done bool

        - toErr(err error) error
        - executeTruncateTable(s *ast.TruncateTableStmt) error
        - executeRenameTable(s *ast.RenameTableStmt) error
        - executeCreateDatabase(s *ast.CreateDatabaseStmt) error
        - executeAlterDatabase(s *ast.AlterDatabaseStmt) error
        - executeCreateTable(s *ast.CreateTableStmt) error
        - executeCreateView(s *ast.CreateViewStmt) error
        - executeCreateIndex(s *ast.CreateIndexStmt) error
        - executeDropDatabase(s *ast.DropDatabaseStmt) error
        - executeDropTable(s *ast.DropTableStmt) error
        - executeDropView(s *ast.DropTableStmt) error
        - executeDropSequence(s *ast.DropSequenceStmt) error
        - dropTableObject(objects []*ast.TableName, obt objectType, ifExists bool) error
        - executeDropIndex(s *ast.DropIndexStmt) error
        - executeAlterTable(s *ast.AlterTableStmt) error
        - executeRecoverTable(s *ast.RecoverTableStmt) error
        - getTableAutoIDsFromSnapshot(job *model.Job) (int64, error)
        - getRecoverTableByJobID(s *ast.RecoverTableStmt, t *meta.Meta, dom *domain.Domain) (*model.Job, *model.TableInfo, error)
        - getRecoverTableByTableName(tableName *ast.TableName) (*model.Job, *model.TableInfo, error)
        - executeFlashbackTable(s *ast.FlashBackTableStmt) error
        - executeLockTables(s *ast.LockTablesStmt) error
        - executeUnlockTables(s *ast.UnlockTablesStmt) error
        - executeCleanupTableLock(s *ast.CleanupTableLockStmt) error
        - executeRepairTable(s *ast.RepairTableStmt) error
        - executeCreateSequence(s *ast.CreateSequenceStmt) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class DDLJobRetriever << (S,Aquamarine) >> {
        - runningJobs []*model.Job
        - historyJobIter *meta.LastJobIterator
        - cursor int
        - is infoschema.InfoSchema
        - activeRoles []*auth.RoleIdentity
        - cacheJobs []*model.Job

        - initial(txn kv.Transaction) error
        - appendJobToChunk(req *chunk.Chunk, job *model.Job, checker privilege.Manager) 

    }
    class DDLJobsReaderExec << (S,Aquamarine) >> {
        - cacheJobs []*model.Job
        - is infoschema.InfoSchema

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class DeallocateExec << (S,Aquamarine) >> {
        + Name string

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class DeleteExec << (S,Aquamarine) >> {
        - tblID2Table <font color=blue>map</font>[int64]table.Table
        - tblColPosInfos core.TblColPosInfoSlice
        - memTracker *memory.Tracker

        + IsMultiTable bool

        - deleteOneRow(tbl table.Table, handleIndex int, isExtraHandle bool, row []types.Datum) error
        - deleteSingleTableByChunk(ctx context.Context) error
        - composeTblRowMap(tblRowMap tableRowMapType, colPosInfos []core.TblColPosInfo, joinedRow []types.Datum) 
        - deleteMultiTablesByChunk(ctx context.Context) error
        - removeRowsInTblRowMap(tblRowMap tableRowMapType) error
        - removeRow(ctx sessionctx.Context, t table.Table, h int64, data []types.Datum) error

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class DirtyDB << (S,Aquamarine) >> {
        - tables <font color=blue>map</font>[int64]*DirtyTable

        + GetDirtyTable(tid int64) *DirtyTable

    }
    class DirtyTable << (S,Aquamarine) >> {
        - tid int64
        - addedRows <font color=blue>map</font>[int64]<font color=blue>struct</font>{}
        - deletedRows <font color=blue>map</font>[int64]<font color=blue>struct</font>{}

        + AddRow(handle int64) 
        + DeleteRow(handle int64) 
        + IsEmpty() bool

    }
    class ExecStmt << (S,Aquamarine) >> {
        - isPreparedStmt bool
        - isSelectForUpdate bool
        - retryCount uint

        + InfoSchema infoschema.InfoSchema
        + Plan core.Plan
        + Text string
        + StmtNode ast.StmtNode
        + Ctx sessionctx.Context
        + LowerPriority bool
        + OutputNames []*types.FieldName
        + PsStmt *core.CachedPrepareStmt

        - handleNoDelay(ctx context.Context, e Executor, isPessimistic bool) (bool, sqlexec.RecordSet, error)
        - handlePessimisticSelectForUpdate(ctx context.Context, e Executor) (sqlexec.RecordSet, error)
        - runPessimisticSelectForUpdate(ctx context.Context, e Executor) (sqlexec.RecordSet, error)
        - handleNoDelayExecutor(ctx context.Context, e Executor) (sqlexec.RecordSet, error)
        - handlePessimisticDML(ctx context.Context, e Executor) error
        - handlePessimisticLockError(ctx context.Context, err error) (Executor, error)
        - buildExecutor() (Executor, error)
        - logAudit() 

        + PointGet(ctx context.Context, is infoschema.InfoSchema) (*recordSet, error)
        + OriginText() string
        + IsPrepared() bool
        + IsReadOnly(vars *variable.SessionVars) bool
        + RebuildPlan(ctx context.Context) (int64, error)
        + Exec(ctx context.Context) (sqlexec.RecordSet, error)
        + CloseRecordSet(txnStartTS uint64, lastErr error) 
        + FinishExecuteStmt(txnTS uint64, succ bool, hasMoreResults bool) 
        + LogSlowQuery(txnTS uint64, succ bool, hasMoreResults bool) 
        + SummaryStmt(succ bool) 

    }
    class ExecuteExec << (S,Aquamarine) >> {
        - is infoschema.InfoSchema
        - name string
        - usingVars []expression.Expression
        - stmtExec Executor
        - stmt ast.StmtNode
        - plan core.Plan
        - id uint32
        - lowerPriority bool
        - outputNames []*types.FieldName

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Build(b *executorBuilder) error

    }
    interface Executor  {
        - base() *baseExecutor

        + Open( context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Schema() *expression.Schema

    }
    class ExplainExec << (S,Aquamarine) >> {
        - explain *core.Explain
        - analyzeExec Executor
        - rows [][]string
        - cursor int

        - generateExplainInfo(ctx context.Context) ([][]string, error)

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class GrantExec << (S,Aquamarine) >> {
        - is infoschema.InfoSchema
        - done bool

        + Privs []*ast.PrivElem
        + ObjectType ast.ObjectTypeType
        + Level *ast.GrantLevel
        + Users []*ast.UserSpec
        + TLSOptions []*ast.TLSOption
        + WithGrant bool

        - checkAndInitColumnPriv(user string, host string, cols []*ast.ColumnName, internalSession sessionctx.Context) error
        - grantGlobalPriv(ctx sessionctx.Context, user *ast.UserSpec) error
        - grantLevelPriv(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error
        - grantGlobalLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error
        - grantDBLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error
        - grantTableLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error
        - grantColumnLevel(priv *ast.PrivElem, user *ast.UserSpec, internalSession sessionctx.Context) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class HashAggExec << (S,Aquamarine) >> {
        - sc *stmtctx.StatementContext
        - partialResultMap aggPartialResultMapper
        - groupSet set.StringSet
        - groupKeys []string
        - cursor4GroupKey int
        - groupKeyBuffer [][]byte
        - finishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - finalOutputCh <font color=blue>chan</font> *AfFinalResult
        - partialOutputChs []<font color=blue>chan</font> *HashAggIntermData
        - inputCh <font color=blue>chan</font> *HashAggInput
        - partialInputChs []<font color=blue>chan</font> *chunk.Chunk
        - partialWorkers []HashAggPartialWorker
        - finalWorkers []HashAggFinalWorker
        - defaultVal *chunk.Chunk
        - childResult *chunk.Chunk
        - isChildReturnEmpty bool
        - isUnparallelExec bool
        - prepared bool
        - executed bool
        - memTracker *memory.Tracker

        + PartialAggFuncs []aggfuncs.AggFunc
        + FinalAggFuncs []aggfuncs.AggFunc
        + GroupByItems []expression.Expression

        - initForUnparallelExec() 
        - initForParallelExec(ctx sessionctx.Context) 
        - fetchChildData(ctx context.Context) 
        - waitPartialWorkerAndCloseOutputChs(waitGroup *sync.WaitGroup) 
        - waitFinalWorkerAndCloseFinalOutput(waitGroup *sync.WaitGroup) 
        - prepare4ParallelExec(ctx context.Context) 
        - parallelExec(ctx context.Context, chk *chunk.Chunk) error
        - unparallelExec(ctx context.Context, chk *chunk.Chunk) error
        - execute(ctx context.Context) error
        - getPartialResults(groupKey string) []aggfuncs.PartialResult

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class HashAggFinalWorker << (S,Aquamarine) >> {
        - rowBuffer []types.Datum
        - mutableRow chunk.MutRow
        - partialResultMap aggPartialResultMapper
        - groupSet set.StringSet
        - inputCh <font color=blue>chan</font> *HashAggIntermData
        - outputCh <font color=blue>chan</font> *AfFinalResult
        - finalResultHolderCh <font color=blue>chan</font> *chunk.Chunk
        - groupKeys [][]byte

        - getPartialInput() (*HashAggIntermData, bool)
        - consumeIntermData(sctx sessionctx.Context) error
        - getFinalResult(sctx sessionctx.Context) 
        - receiveFinalResultHolder() (*chunk.Chunk, bool)
        - run(ctx sessionctx.Context, waitGroup *sync.WaitGroup) 

    }
    class HashAggInput << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - giveBackCh <font color=blue>chan</font> *chunk.Chunk

    }
    class HashAggIntermData << (S,Aquamarine) >> {
        - groupKeys []string
        - cursor int
        - partialResultMap aggPartialResultMapper

        - getPartialResultBatch(sc *stmtctx.StatementContext, prs [][]aggfuncs.PartialResult, aggFuncs []aggfuncs.AggFunc, maxChunkSize int) ([][]aggfuncs.PartialResult, []string, bool)

    }
    class HashAggPartialWorker << (S,Aquamarine) >> {
        - inputCh <font color=blue>chan</font> *chunk.Chunk
        - outputChs []<font color=blue>chan</font> *HashAggIntermData
        - globalOutputCh <font color=blue>chan</font> *AfFinalResult
        - giveBackCh <font color=blue>chan</font> *HashAggInput
        - partialResultsMap aggPartialResultMapper
        - groupByItems []expression.Expression
        - groupKey [][]byte
        - chk *chunk.Chunk
        - memTracker *memory.Tracker

        - getChildInput() bool
        - run(ctx sessionctx.Context, waitGroup *sync.WaitGroup, finalConcurrency int) 
        - updatePartialResult(ctx sessionctx.Context, sc *stmtctx.StatementContext, chk *chunk.Chunk, finalConcurrency int) error
        - shuffleIntermData(sc *stmtctx.StatementContext, finalConcurrency int) 

    }
    class HashJoinExec << (S,Aquamarine) >> {
        - probeSideExec Executor
        - buildSideExec Executor
        - buildSideEstCount float64
        - outerFilter expression.CNFExprs
        - probeKeys []*expression.Column
        - buildKeys []*expression.Column
        - probeTypes []*types.FieldType
        - buildTypes []*types.FieldType
        - concurrency uint
        - rowContainer *hashRowContainer
        - buildFinished <font color=blue>chan</font> error
        - closeCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - joinType core.JoinType
        - requiredRows int64
        - joiners []joiner
        - probeChkResourceCh <font color=blue>chan</font> *probeChkResource
        - probeResultChs []<font color=blue>chan</font> *chunk.Chunk
        - joinChkResourceCh []<font color=blue>chan</font> *chunk.Chunk
        - joinResultCh <font color=blue>chan</font> *hashjoinWorkerResult
        - memTracker *memory.Tracker
        - diskTracker *disk.Tracker
        - outerMatchedStatus []*bitmap.ConcurrentBitmap
        - useOuterToBuild bool
        - prepared bool
        - isOuterJoin bool
        - joinWorkerWaitGroup sync.WaitGroup
        - finished atomic.Value

        - fetchProbeSideChunks(ctx context.Context) 
        - wait4BuildSide() (bool, error)
        - fetchBuildSideRows(ctx context.Context, chkCh <font color=blue>chan</font> *chunk.Chunk, doneCh <font color=blue>chan</font> <font color=blue>struct</font>{}) 
        - initializeForProbe() 
        - fetchAndProbeHashTable(ctx context.Context) 
        - handleProbeSideFetcherPanic(r <font color=blue>interface</font>{}) 
        - handleJoinWorkerPanic(r <font color=blue>interface</font>{}) 
        - handleUnmatchedRowsFromHashTable(workerID uint) 
        - waitJoinWorkersAndCloseResultChan() 
        - runJoinWorker(workerID uint, probeKeyColIdx []int) 
        - joinMatchedProbeSideRow2ChunkForOuterHashJoin(workerID uint, probeKey uint64, probeSideRow chunk.Row, hCtx *hashContext, joinResult *hashjoinWorkerResult) (bool, *hashjoinWorkerResult)
        - joinMatchedProbeSideRow2Chunk(workerID uint, probeKey uint64, probeSideRow chunk.Row, hCtx *hashContext, joinResult *hashjoinWorkerResult) (bool, *hashjoinWorkerResult)
        - getNewJoinResult(workerID uint) (bool, *hashjoinWorkerResult)
        - join2Chunk(workerID uint, probeSideChk *chunk.Chunk, hCtx *hashContext, joinResult *hashjoinWorkerResult, selected []bool) (bool, *hashjoinWorkerResult)
        - join2ChunkForOuterHashJoin(workerID uint, probeSideChk *chunk.Chunk, hCtx *hashContext, joinResult *hashjoinWorkerResult) (bool, *hashjoinWorkerResult)
        - handleFetchAndBuildHashTablePanic(r <font color=blue>interface</font>{}) 
        - fetchAndBuildHashTable(ctx context.Context) 
        - buildHashTableForList(buildSideResultCh <font color=blue>chan</font> *chunk.Chunk) error

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class IndexAdvice << (S,Aquamarine) >> {
    }
    class IndexAdviseExec << (S,Aquamarine) >> {
        - indexAdviseInfo *IndexAdviseInfo

        + IsLocal bool

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class IndexAdviseInfo << (S,Aquamarine) >> {
        + Path string
        + MaxMinutes uint64
        + MaxIndexNum *ast.MaxIndexNumClause
        + LinesInfo *ast.LinesClause
        + Ctx sessionctx.Context
        + StmtNodes [][]ast.StmtNode
        + Result *IndexAdvice

        - getStmtNodes(data []byte) error
        - prepareInfo(data []byte) error

        + GetIndexAdvice(ctx context.Context, data []byte) error

    }
    class IndexAdviseVarKeyType << (S,Aquamarine) >> {
        + String() string

    }
    class IndexLookUpExecutor << (S,Aquamarine) >> {
        - table table.Table
        - index *model.IndexInfo
        - ranges []*ranger.Range
        - dagPB *tipb.DAGRequest
        - startTS uint64
        - handleIdx int
        - tableRequest *tipb.DAGRequest
        - columns []*model.ColumnInfo
        - idxWorkerWg sync.WaitGroup
        - tblWorkerWg sync.WaitGroup
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - resultCh <font color=blue>chan</font> *lookupTableTask
        - resultCurr *lookupTableTask
        - feedback *statistics.QueryFeedback
        - memTracker *memory.Tracker
        - kvRanges []kv.KeyRange
        - workerStarted bool
        - keepOrder bool
        - desc bool
        - indexStreaming bool
        - tableStreaming bool
        - corColInIdxSide bool
        - corColInTblSide bool
        - corColInAccess bool
        - idxPlans []core.PhysicalPlan
        - tblPlans []core.PhysicalPlan
        - idxCols []*expression.Column
        - colLens []int

        + PushedLimit *core.PushedDownLimit

        - open(ctx context.Context) error
        - startWorkers(ctx context.Context, initBatchSize int) error
        - startIndexWorker(ctx context.Context, kvRanges []kv.KeyRange, workCh <font color=blue>chan</font> *lookupTableTask, initBatchSize int) error
        - startTableWorker(ctx context.Context, workCh <font color=blue>chan</font> *lookupTableTask) 
        - buildTableReader(ctx context.Context, handles []int64) (Executor, error)
        - getResultTask() (*lookupTableTask, error)

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class IndexLookUpJoin << (S,Aquamarine) >> {
        - resultCh <font color=blue>chan</font> *lookUpJoinTask
        - cancelFunc context.CancelFunc
        - workerWg *sync.WaitGroup
        - outerCtx outerCtx
        - innerCtx innerCtx
        - task *lookUpJoinTask
        - joinResult *chunk.Chunk
        - innerIter chunk.Iterator
        - joiner joiner
        - isOuterJoin bool
        - requiredRows int64
        - indexRanges []*ranger.Range
        - keyOff2IdxOff []int
        - innerPtrBytes [][]byte
        - lastColHelper *core.ColWithCmpFuncManager
        - memTracker *memory.Tracker

        - startWorkers(ctx context.Context) 
        - newOuterWorker(resultCh <font color=blue>chan</font> *lookUpJoinTask, innerCh <font color=blue>chan</font> *lookUpJoinTask) *outerWorker
        - newInnerWorker(taskCh <font color=blue>chan</font> *lookUpJoinTask) *innerWorker
        - getFinishedTask(ctx context.Context) (*lookUpJoinTask, error)
        - lookUpMatchedInners(task *lookUpJoinTask, rowPtr chunk.RowPtr) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class IndexLookUpMergeJoin << (S,Aquamarine) >> {
        - resultCh <font color=blue>chan</font> *lookUpMergeJoinTask
        - cancelFunc context.CancelFunc
        - workerWg *sync.WaitGroup
        - outerMergeCtx outerMergeCtx
        - innerMergeCtx innerMergeCtx
        - joiners []joiner
        - joinChkResourceCh []<font color=blue>chan</font> *chunk.Chunk
        - isOuterJoin bool
        - requiredRows int64
        - task *lookUpMergeJoinTask
        - indexRanges []*ranger.Range
        - keyOff2IdxOff []int
        - lastColHelper *core.ColWithCmpFuncManager
        - memTracker *memory.Tracker

        - startWorkers(ctx context.Context) 
        - newOuterWorker(resultCh <font color=blue>chan</font> *lookUpMergeJoinTask, innerCh <font color=blue>chan</font> *lookUpMergeJoinTask) *outerMergeWorker
        - newInnerMergeWorker(taskCh <font color=blue>chan</font> *lookUpMergeJoinTask, workID int) *innerMergeWorker
        - getFinishedTask(ctx context.Context) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class IndexMergeReaderExecutor << (S,Aquamarine) >> {
        - table table.Table
        - indexes []*model.IndexInfo
        - descs []bool
        - ranges [][]*ranger.Range
        - dagPBs []*tipb.DAGRequest
        - startTS uint64
        - tableRequest *tipb.DAGRequest
        - columns []*model.ColumnInfo
        - partialStreamings []bool
        - tableStreaming bool
        - tblWorkerWg sync.WaitGroup
        - processWokerWg sync.WaitGroup
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - workerStarted bool
        - keyRanges [][]kv.KeyRange
        - resultCh <font color=blue>chan</font> *lookupTableTask
        - resultCurr *lookupTableTask
        - feedbacks []*statistics.QueryFeedback
        - memTracker *memory.Tracker
        - corColInIdxSide bool
        - partialPlans [][]core.PhysicalPlan
        - corColInTblSide bool
        - tblPlans []core.PhysicalPlan
        - corColInAccess bool
        - idxCols [][]*expression.Column
        - colLens [][]int

        - startWorkers(ctx context.Context) error
        - waitPartialWorkersAndCloseFetchChan(partialWorkerWg *sync.WaitGroup, fetchCh <font color=blue>chan</font> *lookupTableTask) 
        - startIndexMergeProcessWorker(ctx context.Context, workCh <font color=blue>chan</font> *lookupTableTask, fetch <font color=blue>chan</font> *lookupTableTask) 
        - startPartialIndexWorker(ctx context.Context, exitCh <font color=blue>chan</font> <font color=blue>struct</font>{}, fetchCh <font color=blue>chan</font> *lookupTableTask, workID int, partialWorkerWg *sync.WaitGroup, keyRange []kv.KeyRange) error
        - buildPartialTableReader(ctx context.Context, workID int) Executor
        - startPartialTableWorker(ctx context.Context, exitCh <font color=blue>chan</font> <font color=blue>struct</font>{}, fetchCh <font color=blue>chan</font> *lookupTableTask, workID int, partialWorkerWg *sync.WaitGroup) error
        - startIndexMergeTableScanWorker(ctx context.Context, workCh <font color=blue>chan</font> *lookupTableTask) 
        - buildFinalTableReader(ctx context.Context, handles []int64) (Executor, error)
        - getResultTask() (*lookupTableTask, error)
        - handleHandlesFetcherPanic(ctx context.Context, resultCh <font color=blue>chan</font> *lookupTableTask, worker string) <font color=blue>func</font>(<font color=blue>interface</font>{}) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class IndexNestedLoopHashJoin << (S,Aquamarine) >> {
        - resultCh <font color=blue>chan</font> *indexHashJoinResult
        - joinChkResourceCh []<font color=blue>chan</font> *chunk.Chunk
        - joiners []joiner
        - keepOuterOrder bool
        - curTask *indexHashJoinTask
        - taskCh <font color=blue>chan</font> *indexHashJoinTask

        - startWorkers(ctx context.Context) 
        - finishJoinWorkers(r <font color=blue>interface</font>{}) 
        - wait4JoinWorkers() 
        - runInOrder(ctx context.Context, req *chunk.Chunk) error
        - isDryUpTasks(ctx context.Context) bool
        - newOuterWorker(innerCh <font color=blue>chan</font> *indexHashJoinTask) *indexHashJoinOuterWorker
        - newInnerWorker(taskCh <font color=blue>chan</font> *indexHashJoinTask, workerID int) *indexHashJoinInnerWorker

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class IndexReaderExecutor << (S,Aquamarine) >> {
        - table table.Table
        - index *model.IndexInfo
        - physicalTableID int64
        - ranges []*ranger.Range
        - kvRanges []kv.KeyRange
        - dagPB *tipb.DAGRequest
        - startTS uint64
        - result distsql.SelectResult
        - columns []*model.ColumnInfo
        - outputColumns []*expression.Column
        - feedback *statistics.QueryFeedback
        - streaming bool
        - keepOrder bool
        - desc bool
        - corColInFilter bool
        - corColInAccess bool
        - idxCols []*expression.Column
        - colLens []int
        - plans []core.PhysicalPlan
        - memTracker *memory.Tracker

        - open(ctx context.Context, kvRanges []kv.KeyRange) error

        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Open(ctx context.Context) error

    }
    class InsertExec << (S,Aquamarine) >> {
        - evalBuffer4Dup chunk.MutRow
        - curInsertVals chunk.MutRow
        - row4Update []types.Datum

        + OnDuplicate []*expression.Assignment
        + Priority mysql.PriorityEnum

        - exec(ctx context.Context, rows [][]types.Datum) error
        - updateDupRow(ctx context.Context, txn kv.Transaction, row toBeCheckedRow, handle int64, onDuplicate []*expression.Assignment) error
        - batchUpdateDupRows(ctx context.Context, newRows [][]types.Datum) error
        - initEvalBuffer4Dup() 
        - doDupRowUpdate(ctx context.Context, handle int64, oldRow []types.Datum, newRow []types.Datum, cols []*expression.Assignment) ([]types.Datum, bool, int64, error)
        - setMessage() 

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class InsertValues << (S,Aquamarine) >> {
        - rowCount uint64
        - curBatchCnt uint64
        - maxRowsInBatch uint64
        - lastInsertID uint64
        - insertColumns []*table.Column
        - colDefaultVals []defaultVal
        - evalBuffer chunk.MutRow
        - evalBufferTypes []*types.FieldType
        - allAssignmentsAreConstant bool
        - hasRefCols bool
        - hasExtraHandle bool
        - lazyFillAutoID bool
        - memTracker *memory.Tracker

        + SelectExec Executor
        + Table table.Table
        + Columns []*ast.ColumnName
        + Lists [][]expression.Expression
        + SetList []*expression.Assignment
        + GenExprs []expression.Expression

        - insertCommon() *InsertValues
        - exec(_ context.Context, _ [][]types.Datum) error
        - initInsertColumns() error
        - initEvalBuffer() 
        - lazilyInitColDefaultValBuf() bool
        - processSetList() error
        - handleErr(col *table.Column, val *types.Datum, rowIdx int, err error) error
        - evalRow(ctx context.Context, list []expression.Expression, rowIdx int) ([]types.Datum, error)
        - fastEvalRow(ctx context.Context, list []expression.Expression, rowIdx int) ([]types.Datum, error)
        - setValueForRefColumn(row []types.Datum, hasValue []bool) error
        - doBatchInsert(ctx context.Context) error
        - getRow(ctx context.Context, vals []types.Datum) ([]types.Datum, error)
        - getColDefaultValue(idx int, col *table.Column) (types.Datum, error)
        - fillColValue(ctx context.Context, datum types.Datum, idx int, column *table.Column, hasValue bool) (types.Datum, error)
        - fillRow(ctx context.Context, row []types.Datum, hasValue []bool) ([]types.Datum, error)
        - isAutoNull(ctx context.Context, d types.Datum, col *table.Column) bool
        - hasAutoIncrementColumn() (int, bool)
        - lazyAdjustAutoIncrementDatumInRetry(ctx context.Context, rows [][]types.Datum, colIdx int) ([][]types.Datum, error)
        - lazyAdjustAutoIncrementDatum(ctx context.Context, rows [][]types.Datum) ([][]types.Datum, error)
        - adjustAutoIncrementDatum(ctx context.Context, d types.Datum, hasValue bool, c *table.Column) (types.Datum, error)
        - adjustAutoRandomDatum(ctx context.Context, d types.Datum, hasValue bool, c *table.Column) (types.Datum, error)
        - allocAutoRandomID(fieldType *types.FieldType) (int64, error)
        - rebaseAutoRandomID(recordID int64, fieldType *types.FieldType) error
        - handleWarning(err error) 
        - batchCheckAndInsert(ctx context.Context, rows [][]types.Datum, addRecord <font color=blue>func</font>(context.Context, []types.Datum) (int64, error)) error
        - addRecord(ctx context.Context, row []types.Datum) (int64, error)
        - addRecordWithAutoIDHint(ctx context.Context, row []types.Datum, reserveAutoIDCount int) (int64, error)

    }
    class LimitExec << (S,Aquamarine) >> {
        - begin uint64
        - end uint64
        - cursor uint64
        - meetFirstBatch bool
        - childResult *chunk.Chunk

        - adjustRequiredRows(chk *chunk.Chunk) *chunk.Chunk

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Open(ctx context.Context) error
        + Close() error

    }
    class LoadDataExec << (S,Aquamarine) >> {
        - loadDataInfo *LoadDataInfo

        + IsLocal bool
        + OnDuplicate ast.OnDuplicateKeyHandlingType

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class LoadDataInfo << (S,Aquamarine) >> {
        - row []types.Datum
        - rows [][]types.Datum
        - commitTaskQueue <font color=blue>chan</font> CommitTask

        + Path string
        + Table table.Table
        + FieldsInfo *ast.FieldsClause
        + LinesInfo *ast.LinesClause
        + IgnoreLines uint64
        + Ctx sessionctx.Context
        + Drained bool
        + StopCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        + QuitCh <font color=blue>chan</font> <font color=blue>struct</font>{}

        - getValidData(prevData []byte, curData []byte) ([]byte, []byte)
        - getLine(prevData []byte, curData []byte) ([]byte, []byte, bool)
        - colsToRow(ctx context.Context, cols []field) []types.Datum
        - addRecordLD(ctx context.Context, row []types.Datum) (int64, error)
        - getFieldsFromLine(line []byte) ([]field, error)

        + GetRows() [][]types.Datum
        + GetCurBatchCnt() uint64
        + CloseTaskQueue() 
        + InitQueues() 
        + StartStopWatcher() 
        + ForceQuit() 
        + MakeCommitTask() CommitTask
        + EnqOneTask(ctx context.Context) error
        + CommitOneTask(ctx context.Context, task CommitTask) error
        + CommitWork(ctx context.Context) error
        + SetMaxRowsInBatch(limit uint64) 
        + InsertData(ctx context.Context, prevData []byte, curData []byte) ([]byte, bool, error)
        + CheckAndInsertOneBatch(ctx context.Context, rows [][]types.Datum, cnt uint64) error
        + SetMessage() 

    }
    class LoadStatsExec << (S,Aquamarine) >> {
        - info *LoadStatsInfo

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class LoadStatsInfo << (S,Aquamarine) >> {
        + Path string
        + Ctx sessionctx.Context

        + Update(data []byte) error

    }
    class MaxOneRowExec << (S,Aquamarine) >> {
        - evaluated bool

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class MemTableReaderExec << (S,Aquamarine) >> {
        - table *model.TableInfo
        - retriever memTableRetriever
        - cacheRetrieved bool

        - isInspectionCacheableTable(tblName string) bool

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class MergeJoinExec << (S,Aquamarine) >> {
        - stmtCtx *stmtctx.StatementContext
        - compareFuncs []expression.CompareFunc
        - joiner joiner
        - isOuterJoin bool
        - desc bool
        - innerTable *mergeJoinTable
        - outerTable *mergeJoinTable
        - hasMatch bool
        - hasNull bool
        - memTracker *memory.Tracker
        - diskTracker *disk.Tracker

        - compare(outerRow chunk.Row, innerRow chunk.Row) (int, error)

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class MetricRetriever << (S,Aquamarine) >> {
        - table *model.TableInfo
        - tblDef *infoschema.MetricTableDef
        - extractor *core.MetricTableExtractor
        - timeRange core.QueryTimeRange
        - retrieved bool

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)
        - queryMetric(ctx context.Context, sctx sessionctx.Context, queryRange v1.Range, quantile float64) (model.Value, error)
        - getQueryRange(sctx sessionctx.Context) promQLQueryRange
        - genRows(value model.Value, quantile float64) [][]types.Datum
        - genRecord(metric model.Metric, pair model.SamplePair, quantile float64) []types.Datum

    }
    class MetricsSummaryByLabelRetriever << (S,Aquamarine) >> {
        - table *model.TableInfo
        - extractor *core.MetricSummaryTableExtractor
        - timeRange core.QueryTimeRange
        - retrieved bool

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    class MetricsSummaryRetriever << (S,Aquamarine) >> {
        - table *model.TableInfo
        - extractor *core.MetricSummaryTableExtractor
        - timeRange core.QueryTimeRange
        - retrieved bool

        - retrieve(_ context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    interface MockPhysicalPlan  {
        + GetExecutor() Executor

    }
    class NestedLoopApplyExec << (S,Aquamarine) >> {
        - innerRows []chunk.Row
        - cursor int
        - innerExec Executor
        - outerExec Executor
        - innerFilter expression.CNFExprs
        - outerFilter expression.CNFExprs
        - joiner joiner
        - outerSchema []*expression.CorrelatedColumn
        - outerChunk *chunk.Chunk
        - outerChunkCursor int
        - outerSelected []bool
        - innerList *chunk.List
        - innerChunk *chunk.Chunk
        - innerSelected []bool
        - innerIter chunk.Iterator
        - outerRow *chunk.Row
        - hasMatch bool
        - hasNull bool
        - outer bool
        - memTracker *memory.Tracker

        - fetchSelectedOuterRow(ctx context.Context, chk *chunk.Chunk) (*chunk.Row, error)
        - fetchAllInners(ctx context.Context) error

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class PessimisticLockCacheGetter << (S,Aquamarine) >> {
        - txnCtx *variable.TransactionContext

        + Get(_ context.Context, key kv.Key) ([]byte, error)

    }
    class PointGetExecutor << (S,Aquamarine) >> {
        - tblInfo *model.TableInfo
        - handle int64
        - idxInfo *model.IndexInfo
        - partInfo *model.PartitionDefinition
        - idxKey kv.Key
        - handleVal []byte
        - idxVals []types.Datum
        - startTS uint64
        - txn kv.Transaction
        - snapshot kv.Snapshot
        - done bool
        - lock bool
        - lockWaitTime int64
        - rowDecoder *rowcodec.ChunkDecoder
        - columns []*model.ColumnInfo
        - virtualColumnIndex []int
        - virtualColumnRetFieldTypes []*types.FieldType

        - buildVirtualColumnInfo() 
        - getAndLock(ctx context.Context, key kv.Key) ([]byte, error)
        - lockKeyIfNeeded(ctx context.Context, key []byte) error
        - get(ctx context.Context, key kv.Key) ([]byte, error)

        + Init(p *core.PointGetPlan, startTs uint64) 
        + Open( context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class PrepareExec << (S,Aquamarine) >> {
        - is infoschema.InfoSchema
        - name string
        - sqlText string

        + ID uint32
        + ParamCount int
        + Fields []*ast.ResultField

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ProjectionExec << (S,Aquamarine) >> {
        - evaluatorSuit *expression.EvaluatorSuite
        - finishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - outputCh <font color=blue>chan</font> *projectionOutput
        - fetcher projectionInputFetcher
        - numWorkers int64
        - workers []*projectionWorker
        - childResult *chunk.Chunk
        - parentReqRows int64
        - memTracker *memory.Tracker
        - wg sync.WaitGroup
        - calculateNoDelay bool
        - prepared bool

        - open(ctx context.Context) error
        - isUnparallelExec() bool
        - unParallelExecute(ctx context.Context, chk *chunk.Chunk) error
        - parallelExecute(ctx context.Context, chk *chunk.Chunk) error
        - prepare(ctx context.Context) 
        - drainInputCh(ch <font color=blue>chan</font> *projectionInput) 
        - drainOutputCh(ch <font color=blue>chan</font> *projectionOutput) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class RecoverIndexExec << (S,Aquamarine) >> {
        - done bool
        - index table.Index
        - table table.Table
        - physicalID int64
        - batchSize int
        - columns []*model.ColumnInfo
        - colFieldTypes []*types.FieldType
        - srcChunk *chunk.Chunk
        - recoverRows []recoverRows
        - idxValsBufs [][]types.Datum
        - idxKeyBufs [][]byte
        - batchKeys []kv.Key

        - columnsTypes() []*types.FieldType
        - constructTableScanPB(pbColumnInfos []*tipb.ColumnInfo) *tipb.Executor
        - constructLimitPB(count uint64) *tipb.Executor
        - buildDAGPB(txn kv.Transaction, limitCnt uint64) (*tipb.DAGRequest, error)
        - buildTableScan(ctx context.Context, txn kv.Transaction, startHandle int64, limitCnt uint64) (distsql.SelectResult, error)
        - backfillIndex(ctx context.Context) (int64, int64, error)
        - fetchRecoverRows(ctx context.Context, srcResult distsql.SelectResult, result *backfillResult) ([]recoverRows, error)
        - batchMarkDup(txn kv.Transaction, rows []recoverRows) error
        - backfillIndexInTxn(ctx context.Context, txn kv.Transaction, startHandle int64) (backfillResult, error)

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ReloadExprPushdownBlacklistExec << (S,Aquamarine) >> {
        + Next(ctx context.Context, _ *chunk.Chunk) error

    }
    class ReloadOptRuleBlacklistExec << (S,Aquamarine) >> {
        + Next(ctx context.Context, _ *chunk.Chunk) error

    }
    class ReplaceExec << (S,Aquamarine) >> {
        + Priority int

        - removeRow(ctx context.Context, txn kv.Transaction, handle int64, r toBeCheckedRow) (bool, error)
        - replaceRow(ctx context.Context, r toBeCheckedRow) error
        - removeIndexRow(ctx context.Context, txn kv.Transaction, r toBeCheckedRow) (bool, bool, error)
        - exec(ctx context.Context, newRows [][]types.Datum) error
        - setMessage() 

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class RevokeExec << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - is infoschema.InfoSchema
        - done bool

        + Privs []*ast.PrivElem
        + ObjectType ast.ObjectTypeType
        + Level *ast.GrantLevel
        + Users []*ast.UserSpec

        - revokeOneUser(internalSession sessionctx.Context, user string, host string) error
        - revokePriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error
        - revokeGlobalPriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error
        - revokeDBPriv(internalSession sessionctx.Context, priv *ast.PrivElem, userName string, host string) error
        - revokeTablePriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error
        - revokeColumnPriv(internalSession sessionctx.Context, priv *ast.PrivElem, user string, host string) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SQLBindExec << (S,Aquamarine) >> {
        - sqlBindOp core.SQLBindOpType
        - normdOrigSQL string
        - bindSQL string
        - charset string
        - collation string
        - db string
        - isGlobal bool
        - bindAst ast.StmtNode

        - dropSQLBind() error
        - createSQLBind() error
        - flushBindings() error
        - captureBindings() 
        - evolveBindings() error
        - reloadBindings() error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SelectIntoExec << (S,Aquamarine) >> {
        - intoOpt *ast.SelectIntoOption
        - lineBuf []byte
        - realBuf []byte
        - writer *bufio.Writer
        - dstFile *os.File
        - chk *chunk.Chunk
        - started bool

        - considerEncloseOpt(et types.EvalType) bool
        - dumpToOutfile() error

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class SelectLockExec << (S,Aquamarine) >> {
        - keys []kv.Key
        - tblID2Handle <font color=blue>map</font>[int64][]*expression.Column
        - partitionedTable []table.PartitionedTable
        - tblID2Table <font color=blue>map</font>[int64]table.PartitionedTable

        + Lock ast.SelectLockType

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SelectionExec << (S,Aquamarine) >> {
        - batched bool
        - filters []expression.Expression
        - selected []bool
        - inputIter *chunk.Iterator4Chunk
        - inputRow chunk.Row
        - childResult *chunk.Chunk
        - memTracker *memory.Tracker

        - open(ctx context.Context) error
        - unBatchedNext(ctx context.Context, chk *chunk.Chunk) error

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SetConfigExec << (S,Aquamarine) >> {
        - p *core.SetConfig
        - jsonBody string

        - doRequest(url string) error

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SetExecutor << (S,Aquamarine) >> {
        - vars []*expression.VarAssignment
        - done bool

        - getSynonyms(varName string) []string
        - setSysVariable(name string, v *expression.VarAssignment) error
        - setCharset(cs string, co string) error
        - getVarValue(v *expression.VarAssignment, sysVar *variable.SysVar) (types.Datum, error)
        - loadSnapshotInfoSchemaIfNeeded(name string) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowDDLExec << (S,Aquamarine) >> {
        - ddlOwnerID string
        - selfID string
        - ddlInfo *admin.DDLInfo
        - done bool

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowDDLJobQueriesExec << (S,Aquamarine) >> {
        - cursor int
        - jobs []*model.Job
        - jobIDs []int64

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowDDLJobsExec << (S,Aquamarine) >> {
        - jobNumber int
        - is infoschema.InfoSchema
        - done bool

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowExec << (S,Aquamarine) >> {
        - is infoschema.InfoSchema
        - result *chunk.Chunk
        - cursor int

        + Tp ast.ShowStmtType
        + DBName model.CIStr
        + Table *ast.TableName
        + Column *ast.ColumnName
        + IndexName model.CIStr
        + Flag int
        + Roles []*auth.RoleIdentity
        + User *auth.UserIdentity
        + Full bool
        + IfNotExists bool
        + GlobalScope bool
        + Extended bool

        - fetchAll(ctx context.Context) error
        - fetchShowBind() error
        - fetchShowEngines() error
        - fetchShowDatabases() error
        - fetchShowProcessList() error
        - fetchShowOpenTables() error
        - fetchShowTables() error
        - fetchShowTableStatus() error
        - fetchShowColumns(ctx context.Context) error
        - fetchShowIndex() error
        - fetchShowCharset() error
        - fetchShowMasterStatus() error
        - fetchShowVariables() error
        - fetchShowStatus() error
        - fetchShowCreateSequence() error
        - fetchShowClusterConfigs(ctx context.Context) error
        - fetchShowCreateTable() error
        - fetchShowCreateView() error
        - fetchShowCreateDatabase() error
        - fetchShowCollation() error
        - fetchShowCreateUser() error
        - fetchShowGrants() error
        - fetchShowPrivileges() error
        - fetchShowTriggers() error
        - fetchShowProcedureStatus() error
        - fetchShowPlugins() error
        - fetchShowWarnings(errOnly bool) error
        - fetchShowPumpOrDrainerStatus(kind string) error
        - getTable() (table.Table, error)
        - dbAccessDenied() error
        - tableAccessDenied(access string, table string) error
        - appendRow(row []<font color=blue>interface</font>{}) 
        - fetchShowTableRegions() error
        - fillRegionsToChunk(regions []regionMeta) 
        - fetchShowBuiltins() error
        - fetchShowStatsMeta() error
        - appendTableForStatsMeta(dbName string, tblName string, partitionName string, statsTbl *statistics.Table) 
        - fetchShowStatsHistogram() error
        - appendTableForStatsHistograms(dbName string, tblName string, partitionName string, statsTbl *statistics.Table) 
        - histogramToRow(dbName string, tblName string, partitionName string, colName string, isIndex int, hist statistics.Histogram, avgColSize float64) 
        - versionToTime(version uint64) types.Time
        - fetchShowStatsBuckets() error
        - appendTableForStatsBuckets(dbName string, tblName string, partitionName string, statsTbl *statistics.Table) error
        - bucketsToRows(dbName string, tblName string, partitionName string, colName string, numOfCols int, hist statistics.Histogram) error
        - fetchShowStatsHealthy() 
        - appendTableForStatsHealthy(dbName string, tblName string, partitionName string, statsTbl *statistics.Table) 
        - fetchShowAnalyzeStatus() 
        - fetchShowBRIE(kind ast.BRIEKind) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowNextRowIDExec << (S,Aquamarine) >> {
        - tblName *ast.TableName
        - done bool

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShowSlowExec << (S,Aquamarine) >> {
        - result []*domain.SlowQueryInfo
        - cursor int

        + ShowSlow *ast.ShowSlow

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class ShuffleExec << (S,Aquamarine) >> {
        - concurrency int
        - workers []*shuffleWorker
        - prepared bool
        - executed bool
        - splitter partitionSplitter
        - dataSource Executor
        - finishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - outputCh <font color=blue>chan</font> *shuffleOutput

        - prepare4ParallelExec(ctx context.Context) 
        - waitWorkerAndCloseOutput(waitGroup *sync.WaitGroup) 
        - fetchDataAndSplit(ctx context.Context) 

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SimpleExec << (S,Aquamarine) >> {
        - done bool
        - is infoschema.InfoSchema

        + Statement ast.StmtNode

        - setDefaultRoleNone(s *ast.SetDefaultRoleStmt) error
        - setDefaultRoleRegular(s *ast.SetDefaultRoleStmt) error
        - setDefaultRoleAll(s *ast.SetDefaultRoleStmt) error
        - setDefaultRoleForCurrentUser(s *ast.SetDefaultRoleStmt) error
        - executeSetDefaultRole(s *ast.SetDefaultRoleStmt) error
        - setRoleRegular(s *ast.SetRoleStmt) error
        - setRoleAll(s *ast.SetRoleStmt) error
        - setRoleAllExcept(s *ast.SetRoleStmt) error
        - setRoleDefault(s *ast.SetRoleStmt) error
        - setRoleNone(s *ast.SetRoleStmt) error
        - executeSetRole(s *ast.SetRoleStmt) error
        - dbAccessDenied(dbname string) error
        - executeUse(s *ast.UseStmt) error
        - executeBegin(ctx context.Context, s *ast.BeginStmt) error
        - executeRevokeRole(s *ast.RevokeRoleStmt) error
        - executeCommit(s *ast.CommitStmt) 
        - executeRollback(s *ast.RollbackStmt) error
        - executeCreateUser(ctx context.Context, s *ast.CreateUserStmt) error
        - executeAlterUser(s *ast.AlterUserStmt) error
        - executeGrantRole(s *ast.GrantRoleStmt) error
        - executeDropUser(s *ast.DropUserStmt) error
        - executeSetPwd(s *ast.SetPwdStmt) error
        - executeKillStmt(s *ast.KillStmt) error
        - executeFlush(s *ast.FlushStmt) error
        - executeAlterInstance(s *ast.AlterInstanceStmt) error
        - executeDropStats(s *ast.DropStatsStmt) error
        - autoNewTxn() bool
        - executeShutdown(s *ast.ShutdownStmt) error

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SortExec << (S,Aquamarine) >> {
        - fetched bool
        - schema *expression.Schema
        - keyExprs []expression.Expression
        - keyTypes []*types.FieldType
        - keyColumns []int
        - keyCmpFuncs []chunk.CompareFunc
        - rowChunks *chunk.SortedRowContainer
        - memTracker *memory.Tracker
        - diskTracker *disk.Tracker
        - partitionList []*chunk.SortedRowContainer
        - multiWayMerge *multiWayMerge
        - spillAction *chunk.SortAndSpillDiskAction

        + ByItems []*util.ByItems
        + Idx int

        - externalSorting(req *chunk.Chunk) error
        - fetchRowChunks(ctx context.Context) error
        - initCompareFuncs() 
        - buildKeyColumns() 
        - lessRow(rowI chunk.Row, rowJ chunk.Row) bool

        + Close() error
        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class SplitIndexRegionExec << (S,Aquamarine) >> {
        - tableInfo *model.TableInfo
        - partitionNames []model.CIStr
        - indexInfo *model.IndexInfo
        - lower []types.Datum
        - upper []types.Datum
        - num int
        - valueLists [][]types.Datum
        - splitIdxKeys [][]byte
        - done bool

        - splitIndexRegion(ctx context.Context) error
        - getSplitIdxKeys() ([][]byte, error)
        - getSplitIdxKeysFromValueList() ([][]byte, error)
        - getSplitIdxPhysicalKeysFromValueList(physicalID int64, keys [][]byte) ([][]byte, error)
        - getSplitIdxPhysicalStartAndOtherIdxKeys(physicalID int64, keys [][]byte) [][]byte
        - getSplitIdxKeysFromBound() ([][]byte, error)
        - getSplitIdxPhysicalKeysFromBound(physicalID int64, keys [][]byte) ([][]byte, error)

        + Open(ctx context.Context) error
        + Next(ctx context.Context, chk *chunk.Chunk) error

    }
    class SplitTableRegionExec << (S,Aquamarine) >> {
        - tableInfo *model.TableInfo
        - partitionNames []model.CIStr
        - lower types.Datum
        - upper types.Datum
        - num int
        - valueLists [][]types.Datum
        - splitKeys [][]byte
        - done bool

        - splitTableRegion(ctx context.Context) error
        - getSplitTableKeys() ([][]byte, error)
        - getSplitTableKeysFromValueList() ([][]byte, error)
        - getSplitTablePhysicalKeysFromValueList(physicalID int64, keys [][]byte) [][]byte
        - getSplitTableKeysFromBound() ([][]byte, error)
        - calculateBoundValue() (int64, int64, error)
        - getSplitTablePhysicalKeysFromBound(physicalID int64, low int64, step int64, keys [][]byte) [][]byte

        + Open(ctx context.Context) error
        + Next(ctx context.Context, chk *chunk.Chunk) error

    }
    class StreamAggExec << (S,Aquamarine) >> {
        - executed bool
        - isChildReturnEmpty bool
        - defaultVal *chunk.Chunk
        - groupChecker *vecGroupChecker
        - inputIter *chunk.Iterator4Chunk
        - inputRow chunk.Row
        - aggFuncs []aggfuncs.AggFunc
        - partialResults []aggfuncs.PartialResult
        - groupRows []chunk.Row
        - childResult *chunk.Chunk
        - memTracker *memory.Tracker

        - consumeOneGroup(ctx context.Context, chk *chunk.Chunk) error
        - consumeGroupRows() error
        - consumeCurGroupRowsAndFetchChild(ctx context.Context, chk *chunk.Chunk) error
        - appendResult2Chunk(chk *chunk.Chunk) error

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class TableDualExec << (S,Aquamarine) >> {
        - numDualRows int
        - numReturned int

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class TableReaderExecutor << (S,Aquamarine) >> {
        - table table.Table
        - ranges []*ranger.Range
        - kvRanges []kv.KeyRange
        - dagPB *tipb.DAGRequest
        - startTS uint64
        - columns []*model.ColumnInfo
        - resultHandler *tableResultHandler
        - feedback *statistics.QueryFeedback
        - plans []core.PhysicalPlan
        - memTracker *memory.Tracker
        - keepOrder bool
        - desc bool
        - streaming bool
        - storeType kv.StoreType
        - corColInFilter bool
        - corColInAccess bool
        - virtualColumnIndex []int
        - virtualColumnRetFieldTypes []*types.FieldType
        - batchCop bool

        - buildResp(ctx context.Context, ranges []*ranger.Range) (distsql.SelectResult, error)
        - buildVirtualColumnInfo() 
        - setBatchCop(v *core.PhysicalTableReader) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class TableScanExec << (S,Aquamarine) >> {
        - t table.Table
        - seekHandle int64
        - iter kv.Iterator
        - columns []*model.ColumnInfo
        - isVirtualTable bool
        - virtualTableChunkList *chunk.List
        - virtualTableChunkIdx int

        - nextChunk4InfoSchema(ctx context.Context, chk *chunk.Chunk) error
        - nextHandle() (int64, bool, error)
        - getRow(handle int64) ([]types.Datum, error)

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Open(ctx context.Context) error

    }
    class TopNExec << (S,Aquamarine) >> {
        - limit *core.PhysicalLimit
        - totalLimit uint64
        - rowChunks *chunk.List
        - rowPtrs []chunk.RowPtr
        - chkHeap *topNChunkHeap

        - keyColumnsLess(i int, j int) bool
        - initPointers() 
        - loadChunksUntilTotalLimit(ctx context.Context) error
        - executeTopN(ctx context.Context) error
        - processChildChk(childRowChk *chunk.Chunk) error
        - doCompaction() error

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class TraceExec << (S,Aquamarine) >> {
        - exhausted bool
        - stmtNode ast.StmtNode
        - rootTrace opentracing.Span
        - builder *executorBuilder
        - format string

        + CollectedSpans []basictracer.RawSpan

        - nextTraceLog(ctx context.Context, se sqlexec.SQLExecutor, req *chunk.Chunk) error
        - nextRowJSON(ctx context.Context, se sqlexec.SQLExecutor, req *chunk.Chunk) error
        - executeChild(ctx context.Context, se sqlexec.SQLExecutor) 

        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class UnionExec << (S,Aquamarine) >> {
        - stopFetchData atomic.Value
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - resourcePools []<font color=blue>chan</font> *chunk.Chunk
        - resultPool <font color=blue>chan</font> *unionWorkerResult
        - childrenResults []*chunk.Chunk
        - wg sync.WaitGroup
        - initialized bool

        - waitAllFinished() 
        - initialize(ctx context.Context) 
        - resultPuller(ctx context.Context, childID int) 

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error

    }
    class UnionScanExec << (S,Aquamarine) >> {
        - dirty *DirtyTable
        - usedIndex []int
        - desc bool
        - conditions []expression.Expression
        - conditionsWithVirCol []expression.Expression
        - columns []*model.ColumnInfo
        - table table.Table
        - belowHandleIndex int
        - addedRows [][]types.Datum
        - cursor4AddRows int
        - sortErr error
        - snapshotRows [][]types.Datum
        - cursor4SnapshotRows int
        - snapshotChunkBuffer *chunk.Chunk
        - mutableRow chunk.MutRow
        - virtualColumnIndex []int

        - open(ctx context.Context) error
        - getOneRow(ctx context.Context) ([]types.Datum, error)
        - getSnapshotRow(ctx context.Context) ([]types.Datum, error)
        - getAddedRow() []types.Datum
        - shouldPickFirstRow(a []types.Datum, b []types.Datum) (bool, error)
        - compare(a []types.Datum, b []types.Datum) (int, error)

        + Open(ctx context.Context) error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class UpdateExec << (S,Aquamarine) >> {
        - updatedRowKeys <font color=blue>map</font>[int64]<font color=blue>map</font>[int64]bool
        - tblID2table <font color=blue>map</font>[int64]table.Table
        - matched uint64
        - tblColPosInfos core.TblColPosInfoSlice
        - evalBuffer chunk.MutRow
        - allAssignmentsAreConstant bool
        - drained bool
        - memTracker *memory.Tracker

        + OrderedList []*expression.Assignment

        - exec(ctx context.Context, schema *expression.Schema, row []types.Datum, newData []types.Datum) error
        - canNotUpdate(handle types.Datum) bool
        - updateRows(ctx context.Context) (int, error)
        - handleErr(colName model.CIStr, rowIdx int, err error) error
        - fastComposeNewRow(rowIdx int, oldRow []types.Datum, cols []*table.Column) ([]types.Datum, error)
        - composeNewRow(rowIdx int, oldRow []types.Datum, cols []*table.Column) ([]types.Datum, error)
        - setMessage() 

        + Next(ctx context.Context, req *chunk.Chunk) error
        + Close() error
        + Open(ctx context.Context) error

    }
    class WindowExec << (S,Aquamarine) >> {
        - groupChecker *vecGroupChecker
        - childResult *chunk.Chunk
        - executed bool
        - resultChunks []*chunk.Chunk
        - remainingRowsInChunk []int
        - numWindowFuncs int
        - processor windowProcessor

        - preparedChunkAvailable() bool
        - consumeOneGroup(ctx context.Context) error
        - consumeGroupRows(groupRows []chunk.Row) error
        - fetchChild(ctx context.Context) (bool, error)
        - copyChk(src *chunk.Chunk, dst *chunk.Chunk) error

        + Close() error
        + Next(ctx context.Context, chk *chunk.Chunk) error

    }
    class aggWindowProcessor << (S,Aquamarine) >> {
        - windowFuncs []aggfuncs.AggFunc
        - partialResults []aggfuncs.PartialResult

        - consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)
        - appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)
        - resetPartialResult() 

    }
    class allocBuf << (S,Aquamarine) >> {
        - handleBytes []byte
        - rd *rowcodec.BytesDecoder

    }
    class analyzeIndexIncrementalExec << (S,Aquamarine) >> {
        - oldHist *statistics.Histogram
        - oldCMS *statistics.CMSketch

    }
    class analyzePKIncrementalExec << (S,Aquamarine) >> {
        - oldHist *statistics.Histogram

    }
    class analyzeResult << (S,Aquamarine) >> {
        - job *statistics.AnalyzeJob

        + PhysicalTableID int64
        + Hist []*statistics.Histogram
        + Cms []*statistics.CMSketch
        + Count int64
        + IsIndex int
        + Err error

    }
    class analyzeTask << (S,Aquamarine) >> {
        - taskType taskType
        - idxExec *AnalyzeIndexExec
        - colExec *AnalyzeColumnsExec
        - fastExec *AnalyzeFastExec
        - idxIncrementalExec *analyzeIndexIncrementalExec
        - colIncrementalExec *analyzePKIncrementalExec
        - job *statistics.AnalyzeJob

    }
    class antiLeftOuterSemiJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMatch(outer chunk.Row, chk *chunk.Chunk) 
        - onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class antiSemiJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class backfillResult << (S,Aquamarine) >> {
        - nextHandle int64
        - addedCount int64
        - scanRowCount int64

    }
    class baseExecutor << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - id fmt.Stringer
        - schema *expression.Schema
        - initCap int
        - maxChunkSize int
        - children []Executor
        - retFieldTypes []*types.FieldType
        - runtimeStats *execdetails.RuntimeStats

        - getSysSession() (sessionctx.Context, error)
        - releaseSysSession(ctx sessionctx.Context) 
        - base() *baseExecutor

        + Open(ctx context.Context) error
        + Close() error
        + Schema() *expression.Schema
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class baseHashAggWorker << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - finishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - aggFuncs []aggfuncs.AggFunc
        - maxChunkSize int

        - getPartialResult(sc *stmtctx.StatementContext, groupKey [][]byte, mapper aggPartialResultMapper) [][]aggfuncs.PartialResult

    }
    class baseJoiner << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - conditions []expression.Expression
        - defaultInner chunk.Row
        - outerIsRight bool
        - chk *chunk.Chunk
        - shallowRow chunk.MutRow
        - selected []bool
        - isNull []bool
        - maxChunkSize int
        - lUsed []int

        - initDefaultInner(innerTypes []*types.FieldType, defaultInner []types.Datum) 
        - makeJoinRowToChunk(chk *chunk.Chunk, lhs chunk.Row, rhs chunk.Row, lUsed []int, rUsed []int) 
        - makeShallowJoinRow(isRightJoin bool, inner chunk.Row, outer chunk.Row) 
        - filter(input *chunk.Chunk, output *chunk.Chunk, outerColLen int, lUsed []int, rUsed []int) (bool, error)
        - filterAndCheckOuterRowStatus(input *chunk.Chunk, output *chunk.Chunk, innerColsLen int, outerRowStatus []outerRowStatusFlag, lUsed []int, rUsed []int) ([]outerRowStatusFlag, error)

        + Clone() baseJoiner

    }
    class brieQueue << (S,Aquamarine) >> {
        - nextID uint64
        - tasks sync.Map
        - workerCh <font color=blue>chan</font> <font color=blue>struct</font>{}

        - registerTask(ctx context.Context, info *brieTaskInfo) (context.Context, uint64)
        - acquireTask(taskCtx context.Context, taskID uint64) (*brieTaskProgress, error)
        - releaseTask() 
        - cancelTask(taskID uint64) 

    }
    class brieQueueItem << (S,Aquamarine) >> {
        - info *brieTaskInfo
        - progress *brieTaskProgress
        - cancel <font color=blue>func</font>() 

    }
    class brieTaskInfo << (S,Aquamarine) >> {
        - queueTime types.Time
        - execTime types.Time
        - kind ast.BRIEKind
        - storage string
        - connID uint64
        - backupTS uint64
        - archiveSize uint64

    }
    class brieTaskProgress << (S,Aquamarine) >> {
        - current int64
        - lock sync.Mutex
        - cmd string
        - total int64

        + Inc() 
        + Close() 

    }
    class checkIndexValue << (S,Aquamarine) >> {
        - idxColTps []*types.FieldType
        - idxTblCols []*table.Column
        - genExprs <font color=blue>map</font>[model.TableColumnID]expression.Expression

    }
    class checkRegionHealth << (S,Aquamarine) >> {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(_ string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class checkStoreRegionTooMuch << (S,Aquamarine) >> {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class checksumContext << (S,Aquamarine) >> {
        + DBInfo *model.DBInfo
        + TableInfo *model.TableInfo
        + StartTs uint64
        + Response *tipb.ChecksumResponse

        - appendRequest(ctx sessionctx.Context, tableID int64, reqs *[]*kv.Request) error
        - buildTableRequest(ctx sessionctx.Context, tableID int64) (*kv.Request, error)
        - buildIndexRequest(ctx sessionctx.Context, tableID int64, indexInfo *model.IndexInfo) (*kv.Request, error)

        + BuildRequests(ctx sessionctx.Context) ([]*kv.Request, error)
        + HandleResponse(update *tipb.ChecksumResponse) 

    }
    class checksumResult << (S,Aquamarine) >> {
        + Error error
        + TableID int64
        + Response *tipb.ChecksumResponse

    }
    class checksumTask << (S,Aquamarine) >> {
        + TableID int64
        + Request *kv.Request

    }
    class chunkRowRecordSet << (S,Aquamarine) >> {
        - rows []chunk.Row
        - idx int
        - fields []*ast.ResultField
        - e Executor
        - execStmt *ExecStmt

        + Fields() []*ast.ResultField
        + Next(ctx context.Context, chk *chunk.Chunk) error
        + NewChunk() *chunk.Chunk
        + Close() error

    }
    class clusterConfigRetriever << (S,Aquamarine) >> {
        - retrieved bool
        - extractor *core.ClusterTableExtractor

        - retrieve(_ context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    class clusterLogRetriever << (S,Aquamarine) >> {
        - isDrained bool
        - retrieving bool
        - heap *logResponseHeap
        - extractor *core.ClusterLogTableExtractor
        - cancel context.CancelFunc

        - initialize(ctx context.Context, sctx sessionctx.Context) ([]<font color=blue>chan</font> logStreamResult, error)
        - startRetrieving(ctx context.Context, sctx sessionctx.Context, serversInfo []infoschema.ServerInfo, req *diagnosticspb.SearchLogRequest) ([]<font color=blue>chan</font> logStreamResult, error)
        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)
        - close() error

    }
    class clusterServerInfoRetriever << (S,Aquamarine) >> {
        - extractor *core.ClusterTableExtractor
        - serverInfoType diagnosticspb.ServerInfoType
        - retrieved bool

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    class compareStoreStatus << (S,Aquamarine) >> {
        - item string
        - tp string
        - threshold float64

        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(_ string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class configInspection << (S,Aquamarine) >> {
        - inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectDiffConfig(_ context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectCheckConfig(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - checkTiKVBlockCacheSizeConfig(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - convertReadableSizeToByteSize(sizeStr string) (uint64, error)

    }
    class criticalErrorInspection << (S,Aquamarine) >> {
        - inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectError(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectForServerDown(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult

    }
    class dataReaderBuilder << (S,Aquamarine) >> {
        - buildExecutorForIndexJoin(ctx context.Context, lookUpContents []*indexJoinLookUpContent, IndexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)
        - buildExecutorForIndexJoinInternal(ctx context.Context, plan core.Plan, lookUpContents []*indexJoinLookUpContent, IndexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)
        - buildUnionScanForIndexJoin(ctx context.Context, v *core.PhysicalUnionScan, values []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)
        - buildTableReaderForIndexJoin(ctx context.Context, v *core.PhysicalTableReader, lookUpContents []*indexJoinLookUpContent) (Executor, error)
        - buildTableReaderFromHandles(ctx context.Context, e *TableReaderExecutor, handles []int64) (Executor, error)
        - buildIndexReaderForIndexJoin(ctx context.Context, v *core.PhysicalIndexReader, lookUpContents []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)
        - buildIndexLookUpReaderForIndexJoin(ctx context.Context, v *core.PhysicalIndexLookUpReader, lookUpContents []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)
        - buildProjectionForIndexJoin(ctx context.Context, v *core.PhysicalProjection, lookUpContents []*indexJoinLookUpContent, indexRanges []*ranger.Range, keyOff2IdxOff []int, cwc *core.ColWithCmpFuncManager) (Executor, error)

    }
    class defaultVal << (S,Aquamarine) >> {
        - val types.Datum
        - valid bool

    }
    class dummyCloser << (S,Aquamarine) >> {
        - close() error

    }
    class entry << (S,Aquamarine) >> {
        - ptr chunk.RowPtr
        - next entryAddr

    }
    class entryAddr << (S,Aquamarine) >> {
        - sliceIdx uint32
        - offset uint32

    }
    class entryStore << (S,Aquamarine) >> {
        - slices [][]entry

        - init() 
        - put(e entry) entryAddr
        - get(addr entryAddr) entry

    }
    class executor.IndexAdviseVarKeyType << (T, #FF7700) >>  {
    }
    class executor.TestShowClusterConfigFunc << (T, #FF7700) >>  {
    }
    class executor.aggPartialResultMapper << (T, #FF7700) >>  {
    }
    class executor.loadDataVarKeyType << (T, #FF7700) >>  {
    }
    class executor.loadStatsVarKeyType << (T, #FF7700) >>  {
    }
    class executor.logResponseHeap << (T, #FF7700) >>  {
    }
    class executor.objectType << (T, #FF7700) >>  {
    }
    class executor.outerRowStatusFlag << (T, #FF7700) >>  {
    }
    class executor.processKVFunc << (T, #FF7700) >>  {
    }
    class executor.promQLQueryRange << (T, #FF7700) >>  {
    }
    class executor.tableRowMapType << (T, #FF7700) >>  {
    }
    class executor.taskType << (T, #FF7700) >>  {
    }
    class executorBuilder << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - is infoschema.InfoSchema
        - snapshotTS uint64
        - err error
        - hasLock bool

        - buildPointGet(p *core.PointGetPlan) Executor
        - parseTSString(ts string) (uint64, error)
        - buildBRIE(s *ast.BRIEStmt, schema *expression.Schema) Executor
        - build(p core.Plan) Executor
        - buildCancelDDLJobs(v *core.CancelDDLJobs) Executor
        - buildChange(v *core.Change) Executor
        - buildShowNextRowID(v *core.ShowNextRowID) Executor
        - buildShowDDL(v *core.ShowDDL) Executor
        - buildShowDDLJobs(v *core.PhysicalShowDDLJobs) Executor
        - buildShowDDLJobQueries(v *core.ShowDDLJobQueries) Executor
        - buildShowSlow(v *core.ShowSlow) Executor
        - buildCheckTable(v *core.CheckTable) Executor
        - buildRecoverIndex(v *core.RecoverIndex) Executor
        - buildCleanupIndex(v *core.CleanupIndex) Executor
        - buildCheckIndexRange(v *core.CheckIndexRange) Executor
        - buildChecksumTable(v *core.ChecksumTable) Executor
        - buildReloadExprPushdownBlacklist(v *core.ReloadExprPushdownBlacklist) Executor
        - buildReloadOptRuleBlacklist(v *core.ReloadOptRuleBlacklist) Executor
        - buildAdminPlugins(v *core.AdminPlugins) Executor
        - buildDeallocate(v *core.Deallocate) Executor
        - buildSelectLock(v *core.PhysicalLock) Executor
        - buildLimit(v *core.PhysicalLimit) Executor
        - buildPrepare(v *core.Prepare) Executor
        - buildExecute(v *core.Execute) Executor
        - buildShow(v *core.PhysicalShow) Executor
        - buildSimple(v *core.Simple) Executor
        - buildSet(v *core.Set) Executor
        - buildSetConfig(v *core.SetConfig) Executor
        - buildInsert(v *core.Insert) Executor
        - buildLoadData(v *core.LoadData) Executor
        - buildLoadStats(v *core.LoadStats) Executor
        - buildIndexAdvise(v *core.IndexAdvise) Executor
        - buildReplace(vals *InsertValues) Executor
        - buildGrant(grant *ast.GrantStmt) Executor
        - buildRevoke(revoke *ast.RevokeStmt) Executor
        - buildDDL(v *core.DDL) Executor
        - buildTrace(v *core.Trace) Executor
        - buildExplain(v *core.Explain) Executor
        - buildSelectInto(v *core.SelectInto) Executor
        - buildUnionScanExec(v *core.PhysicalUnionScan) Executor
        - buildUnionScanFromReader(reader Executor, v *core.PhysicalUnionScan) Executor
        - buildMergeJoin(v *core.PhysicalMergeJoin) Executor
        - buildSideEstCount(v *core.PhysicalHashJoin) float64
        - buildHashJoin(v *core.PhysicalHashJoin) Executor
        - buildHashAgg(v *core.PhysicalHashAgg) Executor
        - buildStreamAgg(v *core.PhysicalStreamAgg) Executor
        - buildSelection(v *core.PhysicalSelection) Executor
        - buildProjection(v *core.PhysicalProjection) Executor
        - buildTableDual(v *core.PhysicalTableDual) Executor
        - getSnapshotTS() (uint64, error)
        - buildMemTable(v *core.PhysicalMemTable) Executor
        - buildSort(v *core.PhysicalSort) Executor
        - buildTopN(v *core.PhysicalTopN) Executor
        - buildApply(v *core.PhysicalApply) *NestedLoopApplyExec
        - buildMaxOneRow(v *core.PhysicalMaxOneRow) Executor
        - buildUnionAll(v *core.PhysicalUnionAll) Executor
        - buildSplitRegion(v *core.SplitRegion) Executor
        - buildUpdate(v *core.Update) Executor
        - buildDelete(v *core.Delete) Executor
        - updateForUpdateTSIfNeeded(selectPlan core.PhysicalPlan) error
        - refreshForUpdateTSForRC() error
        - buildAnalyzeIndexPushdown(task core.AnalyzeIndexTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64, autoAnalyze string) *analyzeTask
        - buildAnalyzeIndexIncremental(task core.AnalyzeIndexTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64) *analyzeTask
        - buildAnalyzeColumnsPushdown(task core.AnalyzeColumnsTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64, autoAnalyze string) *analyzeTask
        - buildAnalyzePKIncremental(task core.AnalyzeColumnsTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64) *analyzeTask
        - buildAnalyzeFastColumn(e *AnalyzeExec, task core.AnalyzeColumnsTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64) 
        - buildAnalyzeFastIndex(e *AnalyzeExec, task core.AnalyzeIndexTask, opts <font color=blue>map</font>[ast.AnalyzeOptionType]uint64) 
        - buildAnalyze(v *core.Analyze) Executor
        - constructDAGReq(plans []core.PhysicalPlan) (*tipb.DAGRequest, bool, error)
        - corColInDistPlan(plans []core.PhysicalPlan) bool
        - corColInAccess(p core.PhysicalPlan) bool
        - buildIndexLookUpJoin(v *core.PhysicalIndexJoin) Executor
        - buildIndexLookUpMergeJoin(v *core.PhysicalIndexMergeJoin) Executor
        - buildIndexNestedLoopHashJoin(v *core.PhysicalIndexHashJoin) Executor
        - buildTableReader(v *core.PhysicalTableReader) *TableReaderExecutor
        - buildIndexReader(v *core.PhysicalIndexReader) *IndexReaderExecutor
        - buildIndexLookUpReader(v *core.PhysicalIndexLookUpReader) *IndexLookUpExecutor
        - buildIndexMergeReader(v *core.PhysicalIndexMergeReader) *IndexMergeReaderExecutor
        - buildWindow(v *core.PhysicalWindow) *WindowExec
        - buildShuffle(v *core.PhysicalShuffle) *ShuffleExec
        - buildShuffleDataSourceStub(v *core.PhysicalShuffleDataSourceStub) *shuffleWorker
        - buildSQLBindExec(v *core.SQLBindPlan) Executor
        - buildBatchPointGet(plan *core.BatchPointGetPlan) Executor
        - buildAdminShowTelemetry(v *core.AdminShowTelemetry) Executor
        - buildAdminResetTelemetryID(v *core.AdminResetTelemetryID) Executor

    }
    class field << (S,Aquamarine) >> {
        - str []byte
        - maybeNull bool
        - enclosed bool

        - escape() field
        - escapeChar(c byte) byte

    }
    class fieldWriter << (S,Aquamarine) >> {
        - pos int
        - term string
        - enclosedChar byte
        - fieldTermChar byte
        - isEnclosed bool
        - isLineStart bool
        - isFieldStart bool

        + ReadBuf []byte
        + OutputBuf []byte

        - putback() 
        - getChar() (bool, byte)
        - isTerminator() bool
        - outputField(enclosed bool) field

        + Init(enclosedChar byte, fieldTermChar byte, readBuf []byte, term string) 
        + GetField() (bool, field)

    }
    class globalPanicOnExceed << (S,Aquamarine) >> {
        - mutex sync.Mutex

        + SetLogHook(hook <font color=blue>func</font>(uint64) ) 
        + Action(t *memory.Tracker) 
        + SetFallback( memory.ActionOnExceed) 

    }
    class hashContext << (S,Aquamarine) >> {
        - allTypes []*types.FieldType
        - keyColIdx []int
        - buf []byte
        - hashVals []hash.Hash64
        - hasNull []bool

        - initHash(rows int) 

    }
    class hashRowContainer << (S,Aquamarine) >> {
        - sc *stmtctx.StatementContext
        - hCtx *hashContext
        - stat hashStatistic
        - hashTable *rowHashMap
        - rowContainer *chunk.RowContainer

        - matchJoinKey(buildRow chunk.Row, probeRow chunk.Row, probeHCtx *hashContext) (bool, error)
        - alreadySpilledSafe() bool
        - getJoinKeyFromChkRow(sc *stmtctx.StatementContext, row chunk.Row, hCtx *hashContext) (bool, uint64, error)

        + GetMatchedRowsAndPtrs(probeKey uint64, probeRow chunk.Row, hCtx *hashContext) ([]chunk.Row, []chunk.RowPtr, error)
        + PutChunk(chk *chunk.Chunk) error
        + PutChunkSelected(chk *chunk.Chunk, selected []bool) error
        + NumChunks() int
        + NumRowsOfChunk(chkID int) int
        + GetChunk(chkIdx int) (*chunk.Chunk, error)
        + GetRow(ptr chunk.RowPtr) (chunk.Row, error)
        + Len() int
        + Close() error
        + GetMemTracker() *memory.Tracker
        + GetDiskTracker() *disk.Tracker
        + ActionSpill() memory.ActionOnExceed

    }
    class hashStatistic << (S,Aquamarine) >> {
        - probeCollision int
        - buildTableElapse time.Duration

        + String() string

    }
    class hashjoinWorkerResult << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - err error
        - src <font color=blue>chan</font> *chunk.Chunk

    }
    class indexHashJoinInnerWorker << (S,Aquamarine) >> {
        - matchedOuterPtrs []chunk.RowPtr
        - joiner joiner
        - joinChkResourceCh <font color=blue>chan</font> *chunk.Chunk
        - resultCh <font color=blue>chan</font> *indexHashJoinResult
        - taskCh <font color=blue>chan</font> *indexHashJoinTask
        - wg *sync.WaitGroup
        - joinKeyBuf []byte
        - outerRowStatus []outerRowStatusFlag

        - run(ctx context.Context, cancelFunc context.CancelFunc) 
        - getNewJoinResult(ctx context.Context) (*indexHashJoinResult, bool)
        - buildHashTableForOuterResult(ctx context.Context, cancelFunc context.CancelFunc, task *indexHashJoinTask, h hash.Hash64) 
        - fetchInnerResults(ctx context.Context, task *lookUpJoinTask) error
        - handleHashJoinInnerWorkerPanic(r <font color=blue>interface</font>{}) 
        - handleTask(ctx context.Context, cancelFunc context.CancelFunc, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, resultCh <font color=blue>chan</font> *indexHashJoinResult) error
        - doJoinUnordered(ctx context.Context, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, resultCh <font color=blue>chan</font> *indexHashJoinResult) error
        - getMatchedOuterRows(innerRow chunk.Row, task *indexHashJoinTask, h hash.Hash64, buf []byte) ([]chunk.Row, []chunk.RowPtr, error)
        - joinMatchedInnerRow2Chunk(ctx context.Context, innerRow chunk.Row, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, buf []byte) (bool, *indexHashJoinResult)
        - collectMatchedInnerPtrs4OuterRows(ctx context.Context, innerRow chunk.Row, innerRowPtr chunk.RowPtr, task *indexHashJoinTask, h hash.Hash64, buf []byte) error
        - doJoinInOrder(ctx context.Context, task *indexHashJoinTask, joinResult *indexHashJoinResult, h hash.Hash64, resultCh <font color=blue>chan</font> *indexHashJoinResult) error

    }
    class indexHashJoinOuterWorker << (S,Aquamarine) >> {
        - innerCh <font color=blue>chan</font> *indexHashJoinTask
        - keepOuterOrder bool
        - taskCh <font color=blue>chan</font> *indexHashJoinTask

        - run(ctx context.Context, cancelFunc context.CancelFunc) 
        - buildTask(ctx context.Context) (*indexHashJoinTask, error)
        - pushToChan(ctx context.Context, task *indexHashJoinTask, dst <font color=blue>chan</font> *indexHashJoinTask) bool

    }
    class indexHashJoinResult << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - err error
        - src <font color=blue>chan</font> *chunk.Chunk

    }
    class indexHashJoinTask << (S,Aquamarine) >> {
        - outerRowStatus [][]outerRowStatusFlag
        - lookupMap *rowHashMap
        - err error
        - keepOuterOrder bool
        - resultCh <font color=blue>chan</font> *indexHashJoinResult
        - matchedInnerRowPtrs [][][]chunk.RowPtr

    }
    class indexJoinLookUpContent << (S,Aquamarine) >> {
        - keys []types.Datum
        - row chunk.Row

    }
    class indexMergeJoinResult << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - src <font color=blue>chan</font> *chunk.Chunk

    }
    class indexMergeProcessWorker << (S,Aquamarine) >> {
        - fetchLoop(ctx context.Context, fetchCh <font color=blue>chan</font> *lookupTableTask, workCh <font color=blue>chan</font> *lookupTableTask, resultCh <font color=blue>chan</font> *lookupTableTask, finished <font color=blue>chan</font> <font color=blue>struct</font>{}) 
        - handleLoopFetcherPanic(ctx context.Context, resultCh <font color=blue>chan</font> *lookupTableTask) <font color=blue>func</font>(<font color=blue>interface</font>{}) 

    }
    class indexMergeTableScanWorker << (S,Aquamarine) >> {
        - workCh <font color=blue>chan</font> *lookupTableTask
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - buildTblReader <font color=blue>func</font>(context.Context, []int64) (Executor, error)
        - tblPlans []core.PhysicalPlan
        - memTracker *memory.Tracker

        - pickAndExecTask(ctx context.Context) *lookupTableTask
        - handlePickAndExecTaskPanic(ctx context.Context, task *lookupTableTask) <font color=blue>func</font>(<font color=blue>interface</font>{}) 
        - executeTask(ctx context.Context, task *lookupTableTask) error

    }
    class indexWorker << (S,Aquamarine) >> {
        - idxLookup *IndexLookUpExecutor
        - workCh <font color=blue>chan</font> *lookupTableTask
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - resultCh <font color=blue>chan</font> *lookupTableTask
        - keepOrder bool
        - batchSize int
        - maxBatchSize int
        - maxChunkSize int

        + PushedLimit *core.PushedDownLimit

        - fetchHandles(ctx context.Context, result distsql.SelectResult) (uint64, error)
        - extractTaskHandles(ctx context.Context, chk *chunk.Chunk, idxResult distsql.SelectResult, count uint64) ([]int64, *chunk.Chunk, uint64, error)
        - buildTableTask(handles []int64, retChk *chunk.Chunk) *lookupTableTask

    }
    class innerCtx << (S,Aquamarine) >> {
        - readerBuilder *dataReaderBuilder
        - rowTypes []*types.FieldType
        - keyCols []int
        - colLens []int
        - hasPrefixCol bool

    }
    class innerJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class innerMergeCtx << (S,Aquamarine) >> {
        - readerBuilder *dataReaderBuilder
        - rowTypes []*types.FieldType
        - joinKeys []*expression.Column
        - keyCols []int
        - compareFuncs []expression.CompareFunc
        - colLens []int
        - desc bool
        - keyOff2KeyOffOrderByIdx []int

    }
    class innerMergeWorker << (S,Aquamarine) >> {
        - taskCh <font color=blue>chan</font> *lookUpMergeJoinTask
        - joinChkResourceCh <font color=blue>chan</font> *chunk.Chunk
        - outerMergeCtx outerMergeCtx
        - ctx sessionctx.Context
        - innerExec Executor
        - joiner joiner
        - retFieldTypes []*types.FieldType
        - maxChunkSize int
        - indexRanges []*ranger.Range
        - nextColCompareFilters *core.ColWithCmpFuncManager
        - keyOff2IdxOff []int

        - run(ctx context.Context, wg *sync.WaitGroup, cancelFunc context.CancelFunc) 
        - handleTask(ctx context.Context, task *lookUpMergeJoinTask) error
        - fetchNewChunkWhenFull(ctx context.Context, task *lookUpMergeJoinTask, chk **chunk.Chunk) bool
        - doMergeJoin(ctx context.Context, task *lookUpMergeJoinTask) error
        - fetchInnerRowsWithSameKey(ctx context.Context, task *lookUpMergeJoinTask, key chunk.Row) (bool, error)
        - compare(outerRow chunk.Row, innerRow chunk.Row) (int, error)
        - constructDatumLookupKeys(task *lookUpMergeJoinTask) ([]*indexJoinLookUpContent, error)
        - constructDatumLookupKey(task *lookUpMergeJoinTask, rowIdx chunk.RowPtr) (*indexJoinLookUpContent, error)
        - dedupDatumLookUpKeys(lookUpContents []*indexJoinLookUpContent) []*indexJoinLookUpContent
        - fetchNextInnerResult(ctx context.Context, task *lookUpMergeJoinTask) (chunk.Row, error)

    }
    class innerWorker << (S,Aquamarine) >> {
        - taskCh <font color=blue>chan</font> *lookUpJoinTask
        - outerCtx outerCtx
        - ctx sessionctx.Context
        - executorChk *chunk.Chunk
        - indexRanges []*ranger.Range
        - nextColCompareFilters *core.ColWithCmpFuncManager
        - keyOff2IdxOff []int

        - run(ctx context.Context, wg *sync.WaitGroup) 
        - handleTask(ctx context.Context, task *lookUpJoinTask) error
        - constructLookupContent(task *lookUpJoinTask) ([]*indexJoinLookUpContent, error)
        - constructDatumLookupKey(task *lookUpJoinTask, chkIdx int, rowIdx int) ([]types.Datum, error)
        - sortAndDedupLookUpContents(lookUpContents []*indexJoinLookUpContent) []*indexJoinLookUpContent
        - fetchInnerResults(ctx context.Context, task *lookUpJoinTask, lookUpContent []*indexJoinLookUpContent) error
        - buildLookUpMap(task *lookUpJoinTask) error
        - hasNullInJoinKey(row chunk.Row) bool

    }
    interface insertCommon  {
        - insertCommon() *InsertValues
        - exec(ctx context.Context, rows [][]types.Datum) error

    }
    class inspectCPULoad << (S,Aquamarine) >> {
        - item string
        - tbl string

        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class inspectDiskUsage << (S,Aquamarine) >> {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class inspectSwapMemoryUsed << (S,Aquamarine) >> {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class inspectVirtualMemUsage << (S,Aquamarine) >> {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class inspectionFilter << (S,Aquamarine) >> {
        - enable(name string) bool
        - exist(name string) bool

    }
    class inspectionName << (S,Aquamarine) >> {
        - name() string

    }
    class inspectionResult << (S,Aquamarine) >> {
        - tp string
        - instance string
        - statusAddress string
        - item string
        - actual string
        - expected string
        - severity string
        - detail string
        - degree float64

    }
    class inspectionResultRetriever << (S,Aquamarine) >> {
        - retrieved bool
        - extractor *core.InspectionResultTableExtractor
        - timeRange core.QueryTimeRange
        - instanceToStatusAddress <font color=blue>map</font>[string]string
        - statusToInstanceAddress <font color=blue>map</font>[string]string

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    class inspectionRuleRetriever << (S,Aquamarine) >> {
        - retrieved bool
        - extractor *core.InspectionRuleTableExtractor

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    class inspectionSummaryRetriever << (S,Aquamarine) >> {
        - retrieved bool
        - table *model.TableInfo
        - extractor *core.InspectionSummaryTableExtractor
        - timeRange core.QueryTimeRange

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)

    }
    interface joiner  {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outer chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class keyValue << (S,Aquamarine) >> {
        - key kv.Key
        - value []byte

    }
    class keyValueWithDupInfo << (S,Aquamarine) >> {
        - newKV keyValue
        - dupErr error

    }
    class leftOuterJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class leftOuterSemiJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMatch(outer chunk.Row, chk *chunk.Chunk) 
        - onMissMatch(hasNull bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class loadDataVarKeyType << (S,Aquamarine) >> {
        + String() string

    }
    class loadStatsVarKeyType << (S,Aquamarine) >> {
        + String() string

    }
    class logFile << (S,Aquamarine) >> {
        - file *os.File
        - start time.Time

    }
    class logResponseHeap << (S,Aquamarine) >> {
        + Len() int
        + Less(i int, j int) bool
        + Swap(i int, j int) 
        + Push(x <font color=blue>interface</font>{}) 
        + Pop() <font color=blue>interface</font>{}

    }
    class logStreamResult << (S,Aquamarine) >> {
        - next <font color=blue>chan</font> logStreamResult
        - addr string
        - typ string
        - messages []*diagnosticspb.LogMessage
        - err error

    }
    class lookUpJoinTask << (S,Aquamarine) >> {
        - outerResult *chunk.List
        - outerMatch [][]bool
        - innerResult *chunk.List
        - encodedLookUpKeys []*chunk.Chunk
        - lookupMap *mvmap.MVMap
        - matchedInners []chunk.Row
        - doneCh <font color=blue>chan</font> error
        - cursor chunk.RowPtr
        - hasMatch bool
        - hasNull bool
        - memTracker *memory.Tracker

    }
    class lookUpMergeJoinTask << (S,Aquamarine) >> {
        - outerResult *chunk.List
        - outerOrderIdx []chunk.RowPtr
        - innerResult *chunk.Chunk
        - innerIter chunk.Iterator
        - sameKeyInnerRows []chunk.Row
        - sameKeyIter chunk.Iterator
        - doneErr error
        - results <font color=blue>chan</font> *indexMergeJoinResult
        - memTracker *memory.Tracker

    }
    class lookupTableTask << (S,Aquamarine) >> {
        - handles []int64
        - rowIdx []int
        - rows []chunk.Row
        - idxRows *chunk.Chunk
        - cursor int
        - doneCh <font color=blue>chan</font> error
        - indexOrder <font color=blue>map</font>[int64]int
        - duplicatedIndexOrder <font color=blue>map</font>[int64]int
        - memUsage int64
        - memTracker *memory.Tracker

        + Len() int
        + Less(i int, j int) bool
        + Swap(i int, j int) 

    }
    class memIndexLookUpReader << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - index *model.IndexInfo
        - columns []*model.ColumnInfo
        - table table.Table
        - desc bool
        - conditions []expression.Expression
        - retFieldTypes []*types.FieldType
        - idxReader *memIndexReader

        - getMemRows() ([][]types.Datum, error)

    }
    class memIndexReader << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - index *model.IndexInfo
        - table *model.TableInfo
        - kvRanges []kv.KeyRange
        - desc bool
        - conditions []expression.Expression
        - addedRows [][]types.Datum
        - addedRowsLen int
        - retFieldTypes []*types.FieldType
        - outputOffset []int
        - belowHandleIndex int

        - getMemRows() ([][]types.Datum, error)
        - decodeIndexKeyValue(key []byte, value []byte, tps []*types.FieldType) ([]types.Datum, error)
        - getMemRowsHandle() ([]int64, error)

    }
    class memTableReader << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - table *model.TableInfo
        - columns []*model.ColumnInfo
        - kvRanges []kv.KeyRange
        - desc bool
        - conditions []expression.Expression
        - addedRows [][]types.Datum
        - retFieldTypes []*types.FieldType
        - colIDs <font color=blue>map</font>[int64]int
        - buffer allocBuf

        - getMemRows() ([][]types.Datum, error)
        - decodeRecordKeyValue(key []byte, value []byte) ([]types.Datum, error)

    }
    interface memTableRetriever  {
        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)
        - close() error

    }
    class memtableRetriever << (S,Aquamarine) >> {
        - table *model.TableInfo
        - columns []*model.ColumnInfo
        - rows [][]types.Datum
        - rowIdx int
        - retrieved bool
        - initialized bool

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)
        - setDataFromSchemata(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataForStatistics(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataForStatisticsInTable(schema *model.DBInfo, table *model.TableInfo) 
        - setDataFromTables(ctx sessionctx.Context, schemas []*model.DBInfo) error
        - setDataForColumns(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - dataForColumnsInTable(schema *model.DBInfo, tbl *model.TableInfo) [][]types.Datum
        - setDataFromPartitions(ctx sessionctx.Context, schemas []*model.DBInfo) error
        - setDataFromIndexes(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataFromViews(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataFromEngines() 
        - setDataFromCharacterSets() 
        - setDataFromCollations() 
        - dataForCollationCharacterSetApplicability() 
        - dataForTiDBClusterInfo(ctx sessionctx.Context) error
        - setDataFromKeyColumnUsage(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataForClusterProcessList(ctx sessionctx.Context) error
        - setDataForProcessList(ctx sessionctx.Context) 
        - setDataFromUserPrivileges(ctx sessionctx.Context) 
        - setDataForMetricTables(ctx sessionctx.Context) 
        - setDataForTikVRegionPeers(ctx sessionctx.Context) error
        - setNewTiKVRegionPeersCols(region *helper.RegionInfo) 
        - setDataForTiDBHotRegions(ctx sessionctx.Context) error
        - setDataForHotRegionByMetrics(metrics []helper.HotTableIndex, tp string) 
        - setDataFromTableConstraints(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataFromSessionVar(ctx sessionctx.Context) error
        - setDataForAnalyzeStatus(sctx sessionctx.Context) 
        - setDataForPseudoProfiling(sctx sessionctx.Context) 
        - setDataForServersInfo() error
        - setDataFromSequences(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - dataForTableTiFlashReplica(ctx sessionctx.Context, schemas []*model.DBInfo) 
        - setDataForStatementsSummary(ctx sessionctx.Context, tableName string) error

    }
    class mergeJoinTable << (S,Aquamarine) >> {
        - isInner bool
        - childIndex int
        - joinKeys []*expression.Column
        - filters []expression.Expression
        - executed bool
        - childChunk *chunk.Chunk
        - childChunkIter *chunk.Iterator4Chunk
        - groupChecker *vecGroupChecker
        - groupRowsSelected []int
        - groupRowsIter chunk.Iterator
        - rowContainer *chunk.RowContainer
        - filtersSelected []bool
        - memTracker *memory.Tracker

        - init(exec *MergeJoinExec) 
        - finish() error
        - selectNextGroup() 
        - fetchNextChunk(ctx context.Context, exec *MergeJoinExec) error
        - fetchNextInnerGroup(ctx context.Context, exec *MergeJoinExec) error
        - fetchNextOuterGroup(ctx context.Context, exec *MergeJoinExec, requiredRows int) error
        - hasNullInJoinKey(row chunk.Row) bool

    }
    class mockPhysicalIndexReader << (S,Aquamarine) >> {
        - e Executor

    }
    class multiWayMerge << (S,Aquamarine) >> {
        - lessRowFunction <font color=blue>func</font>(chunk.Row, chunk.Row) bool
        - elements []partitionPointer

        + Less(i int, j int) bool
        + Len() int
        + Push(x <font color=blue>interface</font>{}) 
        + Pop() <font color=blue>interface</font>{}
        + Swap(i int, j int) 

    }
    class nodeLoadInspection << (S,Aquamarine) >> {
        - inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult

    }
    class outerCtx << (S,Aquamarine) >> {
        - rowTypes []*types.FieldType
        - keyCols []int
        - filter expression.CNFExprs

    }
    class outerMergeCtx << (S,Aquamarine) >> {
        - rowTypes []*types.FieldType
        - joinKeys []*expression.Column
        - keyCols []int
        - filter expression.CNFExprs
        - needOuterSort bool
        - compareFuncs []expression.CompareFunc

    }
    class outerMergeWorker << (S,Aquamarine) >> {
        - lookup *IndexLookUpMergeJoin
        - ctx sessionctx.Context
        - executor Executor
        - maxBatchSize int
        - batchSize int
        - nextColCompareFilters *core.ColWithCmpFuncManager
        - resultCh <font color=blue>chan</font> *lookUpMergeJoinTask
        - innerCh <font color=blue>chan</font> *lookUpMergeJoinTask
        - parentMemTracker *memory.Tracker

        - run(ctx context.Context, wg *sync.WaitGroup, cancelFunc context.CancelFunc) 
        - pushToChan(ctx context.Context, task *lookUpMergeJoinTask, dst <font color=blue>chan</font> *lookUpMergeJoinTask) bool
        - buildTask(ctx context.Context) (*lookUpMergeJoinTask, error)
        - increaseBatchSize() 

    }
    class outerWorker << (S,Aquamarine) >> {
        - lookup *IndexLookUpJoin
        - ctx sessionctx.Context
        - executor Executor
        - maxBatchSize int
        - batchSize int
        - resultCh <font color=blue>chan</font> *lookUpJoinTask
        - innerCh <font color=blue>chan</font> *lookUpJoinTask
        - parentMemTracker *memory.Tracker

        - run(ctx context.Context, wg *sync.WaitGroup) 
        - pushToChan(ctx context.Context, task *lookUpJoinTask, dst <font color=blue>chan</font> *lookUpJoinTask) bool
        - buildTask(ctx context.Context) (*lookUpJoinTask, error)
        - increaseBatchSize() 

    }
    class paramMarkerExtractor << (S,Aquamarine) >> {
        - markers []ast.ParamMarkerExpr

        + Enter(in ast.Node) (ast.Node, bool)
        + Leave(in ast.Node) (ast.Node, bool)

    }
    class paramMarkerSorter << (S,Aquamarine) >> {
        - markers []ast.ParamMarkerExpr

        + Len() int
        + Less(i int, j int) bool
        + Swap(i int, j int) 

    }
    class parsedSlowLog << (S,Aquamarine) >> {
        - rows [][]types.Datum
        - err error

    }
    class partialIndexWorker << (S,Aquamarine) >> {
        - batchSize int
        - maxBatchSize int
        - maxChunkSize int

        - fetchHandles(ctx context.Context, result distsql.SelectResult, exitCh <font color=blue>chan</font> <font color=blue>struct</font>{}, fetchCh <font color=blue>chan</font> *lookupTableTask, resultCh <font color=blue>chan</font> *lookupTableTask, finished <font color=blue>chan</font> <font color=blue>struct</font>{}) (int64, error)
        - extractTaskHandles(ctx context.Context, chk *chunk.Chunk, idxResult distsql.SelectResult) ([]int64, *chunk.Chunk, error)
        - buildTableTask(handles []int64, retChk *chunk.Chunk) *lookupTableTask

    }
    class partialTableWorker << (S,Aquamarine) >> {
        - batchSize int
        - maxBatchSize int
        - maxChunkSize int
        - tableReader Executor
        - tableInfo *model.TableInfo

        - fetchHandles(ctx context.Context, exitCh <font color=blue>chan</font> <font color=blue>struct</font>{}, fetchCh <font color=blue>chan</font> *lookupTableTask, resultCh <font color=blue>chan</font> *lookupTableTask, finished <font color=blue>chan</font> <font color=blue>struct</font>{}) (int64, error)
        - extractTaskHandles(ctx context.Context, chk *chunk.Chunk, handleOffset int) ([]int64, *chunk.Chunk, error)
        - buildTableTask(handles []int64, retChk *chunk.Chunk) *lookupTableTask

    }
    class partitionHashSplitter << (S,Aquamarine) >> {
        - byItems []expression.Expression
        - numWorkers int
        - hashKeys [][]byte

        - split(ctx sessionctx.Context, input *chunk.Chunk, workerIndices []int) ([]int, error)

    }
    class partitionPointer << (S,Aquamarine) >> {
        - row chunk.Row
        - partitionID int
        - consumed int

    }
    interface partitionSplitter  {
        - split(ctx sessionctx.Context, input *chunk.Chunk, workerIndices []int) ([]int, error)

    }
    interface pessimisticTxn  {
        + KeysNeedToLock() ([]kv.Key, error)

    }
    class probeChkResource << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - dest <font color=blue>chan</font> *chunk.Chunk

    }
    interface processinfoSetter  {
        + SetProcessInfo( string,  time.Time,  byte,  uint64) 

    }
    class projectionInput << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - targetWorker *projectionWorker

    }
    class projectionInputFetcher << (S,Aquamarine) >> {
        - proj *ProjectionExec
        - child Executor
        - globalFinishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - globalOutputCh <font color=blue>chan</font> *projectionOutput
        - wg sync.WaitGroup
        - inputCh <font color=blue>chan</font> *projectionInput
        - outputCh <font color=blue>chan</font> *projectionOutput

        - run(ctx context.Context) 

    }
    class projectionOutput << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - done <font color=blue>chan</font> error

    }
    class projectionWorker << (S,Aquamarine) >> {
        - proj *ProjectionExec
        - sctx sessionctx.Context
        - evaluatorSuit *expression.EvaluatorSuite
        - globalFinishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - inputGiveBackCh <font color=blue>chan</font> *projectionInput
        - inputCh <font color=blue>chan</font> *projectionInput
        - outputCh <font color=blue>chan</font> *projectionOutput

        - run(ctx context.Context) 

    }
    class rangeFrameWindowProcessor << (S,Aquamarine) >> {
        - windowFuncs []aggfuncs.AggFunc
        - partialResults []aggfuncs.PartialResult
        - start *core.FrameBound
        - end *core.FrameBound
        - curRowIdx uint64
        - lastStartOffset uint64
        - lastEndOffset uint64
        - orderByCols []*expression.Column
        - expectedCmpResult int64

        - getStartOffset(ctx sessionctx.Context, rows []chunk.Row) (uint64, error)
        - getEndOffset(ctx sessionctx.Context, rows []chunk.Row) (uint64, error)
        - appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)
        - consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)
        - resetPartialResult() 

    }
    class recordSet << (S,Aquamarine) >> {
        - fields []*ast.ResultField
        - executor Executor
        - stmt *ExecStmt
        - lastErr error
        - txnStartTS uint64

        + Fields() []*ast.ResultField
        + Next(ctx context.Context, req *chunk.Chunk) error
        + NewChunk() *chunk.Chunk
        + Close() error
        + OnFetchReturned() 

    }
    class recoverRows << (S,Aquamarine) >> {
        - handle int64
        - idxVals []types.Datum
        - skip bool

    }
    class regionKeyDecoder << (S,Aquamarine) >> {
        - physicalTableID int64
        - tablePrefix []byte
        - recordPrefix []byte
        - indexPrefix []byte
        - indexID int64

        - decodeRegionKey(key []byte) string

    }
    class regionMeta << (S,Aquamarine) >> {
        - region *metapb.Region
        - leaderID uint64
        - storeID uint64
        - start string
        - end string
        - scattering bool
        - writtenBytes int64
        - readBytes int64
        - approximateSize int64
        - approximateKeys int64

    }
    class rightOuterJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class rowFrameWindowProcessor << (S,Aquamarine) >> {
        - windowFuncs []aggfuncs.AggFunc
        - partialResults []aggfuncs.PartialResult
        - start *core.FrameBound
        - end *core.FrameBound
        - curRowIdx uint64

        - getStartOffset(numRows uint64) uint64
        - getEndOffset(numRows uint64) uint64
        - consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)
        - appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)
        - resetPartialResult() 

    }
    class rowHashMap << (S,Aquamarine) >> {
        - entryStore entryStore
        - hashTable <font color=blue>map</font>[uint64]entryAddr
        - length int

        + Put(hashKey uint64, rowPtr chunk.RowPtr) 
        + Get(hashKey uint64) []chunk.RowPtr
        + Len() int

    }
    interface ruleChecker  {
        - genSQL(timeRange core.QueryTimeRange) string
        - genResult(sql string, row chunk.Row) inspectionResult
        - getItem() string

    }
    class selectResultHook << (S,Aquamarine) >> {
        - selectResultFunc <font color=blue>func</font>(context.Context, sessionctx.Context, *kv.Request, []*types.FieldType, *statistics.QueryFeedback, []fmt.Stringer) (distsql.SelectResult, error)

        + SelectResult(ctx context.Context, sctx sessionctx.Context, kvReq *kv.Request, fieldTypes []*types.FieldType, fb *statistics.QueryFeedback, copPlanIDs []fmt.Stringer, rootPlanID fmt.Stringer) (distsql.SelectResult, error)

    }
    class semiJoiner << (S,Aquamarine) >> {
        - tryToMatchInners(outer chunk.Row, inners chunk.Iterator, chk *chunk.Chunk) (bool, bool, error)
        - tryToMatchOuters(outers chunk.Iterator, inner chunk.Row, chk *chunk.Chunk, outerRowStatus []outerRowStatusFlag) ([]outerRowStatusFlag, error)
        - onMissMatch(_ bool, outer chunk.Row, chk *chunk.Chunk) 

        + Clone() joiner

    }
    class shuffleOutput << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - err error
        - giveBackCh <font color=blue>chan</font> *chunk.Chunk

    }
    class shuffleWorker << (S,Aquamarine) >> {
        - childExec Executor
        - finishCh <font color=blue>chan</font> <font color=blue>struct</font>{}
        - executed bool
        - inputCh <font color=blue>chan</font> *chunk.Chunk
        - inputHolderCh <font color=blue>chan</font> *chunk.Chunk
        - outputCh <font color=blue>chan</font> *shuffleOutput
        - outputHolderCh <font color=blue>chan</font> *chunk.Chunk

        - run(ctx context.Context, waitGroup *sync.WaitGroup) 

        + Open(ctx context.Context) error
        + Close() error
        + Next(ctx context.Context, req *chunk.Chunk) error

    }
    class slowLogChecker << (S,Aquamarine) >> {
        - hasProcessPriv bool
        - user *auth.UserIdentity
        - enableTimeCheck bool
        - startTime types.Time
        - endTime types.Time

        - hasPrivilege(userName string) bool
        - isTimeValid(t types.Time) bool

    }
    class slowQueryRetriever << (S,Aquamarine) >> {
        - table *model.TableInfo
        - outputCols []*model.ColumnInfo
        - initialized bool
        - extractor *core.SlowQueryExtractor
        - files []logFile
        - fileIdx int
        - fileLine int
        - checker *slowLogChecker
        - parsedSlowLogCh <font color=blue>chan</font> parsedSlowLog

        - retrieve(ctx context.Context, sctx sessionctx.Context) ([][]types.Datum, error)
        - initialize(sctx sessionctx.Context) error
        - close() error
        - parseDataForSlowLog(ctx context.Context, sctx sessionctx.Context) 
        - dataForSlowLog(ctx context.Context) ([][]types.Datum, bool, error)
        - parseSlowLog(ctx sessionctx.Context, reader *bufio.Reader, maxRow int) ([][]types.Datum, error)
        - getAllFiles(sctx sessionctx.Context, logFilePath string) ([]logFile, error)
        - getFileStartTime(file *os.File) (time.Time, error)
        - getFileEndTime(file *os.File) (time.Time, error)
        - initializeAsyncParsing(ctx context.Context, sctx sessionctx.Context) 

    }
    class slowQueryTuple << (S,Aquamarine) >> {
        - time types.Time
        - txnStartTs uint64
        - user string
        - host string
        - connID uint64
        - queryTime float64
        - parseTime float64
        - compileTime float64
        - preWriteTime float64
        - waitPrewriteBinlogTime float64
        - commitTime float64
        - getCommitTSTime float64
        - commitBackoffTime float64
        - backoffTypes string
        - resolveLockTime float64
        - localLatchWaitTime float64
        - writeKeys uint64
        - writeSize uint64
        - prewriteRegion uint64
        - txnRetry uint64
        - copTime float64
        - processTime float64
        - waitTime float64
        - backOffTime float64
        - lockKeysTime float64
        - requestCount uint64
        - totalKeys uint64
        - processKeys uint64
        - db string
        - indexIDs string
        - digest string
        - statsInfo string
        - avgProcessTime float64
        - p90ProcessTime float64
        - maxProcessTime float64
        - maxProcessAddress string
        - avgWaitTime float64
        - p90WaitTime float64
        - maxWaitTime float64
        - maxWaitAddress string
        - memMax int64
        - diskMax int64
        - prevStmt string
        - sql string
        - isInternal bool
        - succ bool
        - planFromCache bool
        - plan string
        - planDigest string

        - setFieldValue(tz *time.Location, field string, value string, lineNum int, checker *slowLogChecker) (bool, error)
        - convertToDatumRow() []types.Datum

    }
    class splitRegionResult << (S,Aquamarine) >> {
        - splitRegions int
        - finishScatterNum int

    }
    class statsCache << (S,Aquamarine) >> {
        - mu sync.RWMutex
        - modifyTime time.Time
        - tableRows <font color=blue>map</font>[int64]uint64
        - colLength <font color=blue>map</font>[tableHistID]uint64

        - get(ctx sessionctx.Context) (<font color=blue>map</font>[int64]uint64, <font color=blue>map</font>[tableHistID]uint64, error)

    }
    class tableHistID << (S,Aquamarine) >> {
        - tableID int64
        - histID int64

    }
    class tableResultHandler << (S,Aquamarine) >> {
        - optionalResult distsql.SelectResult
        - result distsql.SelectResult
        - optionalFinished bool

        - open(optionalResult distsql.SelectResult, result distsql.SelectResult) 
        - nextChunk(ctx context.Context, chk *chunk.Chunk) error
        - nextRaw(ctx context.Context) ([]byte, error)

        + Close() error

    }
    class tableWorker << (S,Aquamarine) >> {
        - idxLookup *IndexLookUpExecutor
        - workCh <font color=blue>chan</font> *lookupTableTask
        - finished <font color=blue>chan</font> <font color=blue>struct</font>{}
        - buildTblReader <font color=blue>func</font>(context.Context, []int64) (Executor, error)
        - keepOrder bool
        - handleIdx int
        - memTracker *memory.Tracker

        - pickAndExecTask(ctx context.Context) 
        - compareData(ctx context.Context, task *lookupTableTask, tableReader Executor) error
        - executeTask(ctx context.Context, task *lookupTableTask) error

    }
    class thresholdCheckInspection << (S,Aquamarine) >> {
        - inspect(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectThreshold1(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectThreshold2(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectThreshold3(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult
        - inspectForLeaderDrop(ctx context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult

    }
    class tidbGlueSession << (S,Aquamarine) >> {
        - se sessionctx.Context
        - progress *brieTaskProgress
        - info *brieTaskInfo

        + GetDomain(store kv.Storage) (*domain.Domain, error)
        + CreateSession(store kv.Storage) (glue.Session, error)
        + Execute(ctx context.Context, sql string) error
        + CreateDatabase(ctx context.Context, schema *model.DBInfo) error
        + CreateTable(ctx context.Context, dbName model.CIStr, table *model.TableInfo) error
        + Close() 
        + Open( string,  client.SecurityOption) (kv.Storage, error)
        + OwnsStorage() bool
        + StartProgress(ctx context.Context, cmdName string, total int64, redirectLog bool) glue.Progress
        + Record(name string, value uint64) 

    }
    class toBeCheckedRow << (S,Aquamarine) >> {
        - row []types.Datum
        - rowValue []byte
        - handleKey *keyValueWithDupInfo
        - uniqueKeys []*keyValueWithDupInfo
        - t table.Table

    }
    class topNChunkHeap << (S,Aquamarine) >> {
        - greaterRow(rowI chunk.Row, rowJ chunk.Row) bool

        + Less(i int, j int) bool
        + Len() int
        + Push(x <font color=blue>interface</font>{}) 
        + Pop() <font color=blue>interface</font>{}
        + Swap(i int, j int) 

    }
    class unionWorkerResult << (S,Aquamarine) >> {
        - chk *chunk.Chunk
        - err error
        - src <font color=blue>chan</font> *chunk.Chunk

    }
    class vecGroupChecker << (S,Aquamarine) >> {
        - ctx sessionctx.Context
        - groupOffset []int
        - groupCount int
        - nextGroupID int
        - lastGroupKeyOfPrevChk []byte
        - firstGroupKey []byte
        - lastGroupKey []byte
        - firstRowDatums []types.Datum
        - lastRowDatums []types.Datum
        - sameGroup []bool
        - allocateBuffer <font color=blue>func</font>(types.EvalType, int) (*chunk.Column, error)
        - releaseBuffer <font color=blue>func</font>(*chunk.Column) 

        + GroupByItems []expression.Expression

        - splitIntoGroups(chk *chunk.Chunk) (bool, error)
        - evalGroupItemsAndResolveGroups(item expression.Expression, chk *chunk.Chunk, numRows int) error
        - getNextGroup() int
        - isExhausted() bool
        - reset() 

    }
    class versionInspection << (S,Aquamarine) >> {
        - inspect(_ context.Context, sctx sessionctx.Context, filter inspectionFilter) []inspectionResult

    }
    class visibleChecker << (S,Aquamarine) >> {
        - defaultDB string
        - ctx sessionctx.Context
        - is infoschema.InfoSchema
        - manager privilege.Manager
        - ok bool

        + Enter(in ast.Node) (ast.Node, bool)
        + Leave(in ast.Node) (ast.Node, bool)

    }
    interface windowProcessor  {
        - consumeGroupRows(ctx sessionctx.Context, rows []chunk.Row) ([]chunk.Row, error)
        - appendResult2Chunk(ctx sessionctx.Context, rows []chunk.Row, chk *chunk.Chunk, remained int) ([]chunk.Row, error)
        - resetPartialResult() 

    }
    class "<font color=blue>map</font>[int64]<font color=blue>map</font>[int64][]types.Datum" as fontcolorbluemapfontint64fontcolorbluemapfontint64typesDatum {
    }
    class "v1.Range" as v1Range {
    }
    class "<font color=blue>func</font>() ([][]types.Datum, error)" as fontcolorbluefuncfonttypesDatumerror {
    }
    class "<font color=blue>map</font>[string][]aggfuncs.PartialResult" as fontcolorbluemapfontstringaggfuncsPartialResult {
    }
}
"executor.baseExecutor" *- - "executor.AdminPluginsExec"
"executor.baseExecutor" *- - "executor.AdminResetTelemetryIDExec"
"executor.baseExecutor" *- - "executor.AdminShowTelemetryExec"
"executor.baseExecutor" *- - "executor.AnalyzeExec"
"executor.AnalyzeFastExec" *- - "executor.AnalyzeTestFastExec"
"executor.baseExecutor" *- - "executor.BRIEExec"
"executor.baseExecutor" *- - "executor.BatchPointGetExec"
"executor.baseExecutor" *- - "executor.CancelDDLJobsExec"
"ast.ChangeStmt" *- - "executor.ChangeExec"
"executor.baseExecutor" *- - "executor.ChangeExec"
"executor.baseExecutor" *- - "executor.CheckIndexRangeExec"
"executor.baseExecutor" *- - "executor.CheckTableExec"
"executor.baseExecutor" *- - "executor.ChecksumTableExec"
"executor.baseExecutor" *- - "executor.CleanupIndexExec"
"executor.baseExecutor" *- - "executor.DDLExec"
"executor.DDLJobRetriever" *- - "executor.DDLJobsReaderExec"
"executor.baseExecutor" *- - "executor.DDLJobsReaderExec"
"executor.baseExecutor" *- - "executor.DeallocateExec"
"executor.baseExecutor" *- - "executor.DeleteExec"
"sync.Mutex" *- - "executor.DirtyDB"
"executor.baseExecutor" *- - "executor.ExecuteExec"
"executor.baseExecutor" *- - "executor.ExplainExec"
"executor.baseExecutor" *- - "executor.GrantExec"
"executor.baseExecutor" *- - "executor.HashAggExec"
"executor.baseHashAggWorker" *- - "executor.HashAggFinalWorker"
"executor.baseHashAggWorker" *- - "executor.HashAggPartialWorker"
"executor.baseExecutor" *- - "executor.HashJoinExec"
"executor.baseExecutor" *- - "executor.IndexAdviseExec"
"executor.baseExecutor" *- - "executor.IndexLookUpExecutor"
"executor.checkIndexValue" *- - "executor.IndexLookUpExecutor"
"executor.dataReaderBuilder" *- - "executor.IndexLookUpExecutor"
"executor.baseExecutor" *- - "executor.IndexLookUpJoin"
"executor.baseExecutor" *- - "executor.IndexLookUpMergeJoin"
"executor.baseExecutor" *- - "executor.IndexMergeReaderExecutor"
"executor.checkIndexValue" *- - "executor.IndexMergeReaderExecutor"
"executor.dataReaderBuilder" *- - "executor.IndexMergeReaderExecutor"
"executor.IndexLookUpJoin" *- - "executor.IndexNestedLoopHashJoin"
"executor.baseExecutor" *- - "executor.IndexReaderExecutor"
"executor.selectResultHook" *- - "executor.IndexReaderExecutor"
"executor.InsertValues" *- - "executor.InsertExec"
"executor.baseExecutor" *- - "executor.InsertValues"
"executor.baseExecutor" *- - "executor.LimitExec"
"executor.baseExecutor" *- - "executor.LoadDataExec"
"executor.InsertValues" *- - "executor.LoadDataInfo"
"executor.baseExecutor" *- - "executor.LoadStatsExec"
"executor.baseExecutor" *- - "executor.MaxOneRowExec"
"executor.baseExecutor" *- - "executor.MemTableReaderExec"
"executor.baseExecutor" *- - "executor.MergeJoinExec"
"executor.dummyCloser" *- - "executor.MetricRetriever"
"executor.dummyCloser" *- - "executor.MetricsSummaryByLabelRetriever"
"executor.dummyCloser" *- - "executor.MetricsSummaryRetriever"
"executor.baseExecutor" *- - "executor.NestedLoopApplyExec"
"executor.baseExecutor" *- - "executor.PointGetExecutor"
"executor.baseExecutor" *- - "executor.PrepareExec"
"executor.baseExecutor" *- - "executor.ProjectionExec"
"executor.baseExecutor" *- - "executor.RecoverIndexExec"
"executor.baseExecutor" *- - "executor.ReloadExprPushdownBlacklistExec"
"executor.baseExecutor" *- - "executor.ReloadOptRuleBlacklistExec"
"executor.InsertValues" *- - "executor.ReplaceExec"
"executor.baseExecutor" *- - "executor.RevokeExec"
"executor.baseExecutor" *- - "executor.SQLBindExec"
"executor.baseExecutor" *- - "executor.SelectIntoExec"
"executor.baseExecutor" *- - "executor.SelectLockExec"
"executor.baseExecutor" *- - "executor.SelectionExec"
"executor.baseExecutor" *- - "executor.SetConfigExec"
"executor.baseExecutor" *- - "executor.SetExecutor"
"executor.baseExecutor" *- - "executor.ShowDDLExec"
"executor.baseExecutor" *- - "executor.ShowDDLJobQueriesExec"
"executor.DDLJobRetriever" *- - "executor.ShowDDLJobsExec"
"executor.baseExecutor" *- - "executor.ShowDDLJobsExec"
"executor.baseExecutor" *- - "executor.ShowExec"
"executor.baseExecutor" *- - "executor.ShowNextRowIDExec"
"executor.baseExecutor" *- - "executor.ShowSlowExec"
"executor.baseExecutor" *- - "executor.ShuffleExec"
"executor.baseExecutor" *- - "executor.SimpleExec"
"executor.baseExecutor" *- - "executor.SortExec"
"executor.baseExecutor" *- - "executor.SplitIndexRegionExec"
"executor.splitRegionResult" *- - "executor.SplitIndexRegionExec"
"executor.baseExecutor" *- - "executor.SplitTableRegionExec"
"executor.splitRegionResult" *- - "executor.SplitTableRegionExec"
"executor.baseExecutor" *- - "executor.StreamAggExec"
"executor.baseExecutor" *- - "executor.TableDualExec"
"executor.baseExecutor" *- - "executor.TableReaderExecutor"
"executor.selectResultHook" *- - "executor.TableReaderExecutor"
"executor.baseExecutor" *- - "executor.TableScanExec"
"executor.SortExec" *- - "executor.TopNExec"
"executor.baseExecutor" *- - "executor.TraceExec"
"executor.baseExecutor" *- - "executor.UnionExec"
"executor.baseExecutor" *- - "executor.UnionScanExec"
"executor.baseExecutor" *- - "executor.UpdateExec"
"executor.baseExecutor" *- - "executor.WindowExec"
"executor.AnalyzeIndexExec" *- - "executor.analyzeIndexIncrementalExec"
"executor.AnalyzeColumnsExec" *- - "executor.analyzePKIncrementalExec"
"executor.baseJoiner" *- - "executor.antiLeftOuterSemiJoiner"
"executor.baseJoiner" *- - "executor.antiSemiJoiner"
"executor.dummyCloser" *- - "executor.clusterConfigRetriever"
"executor.dummyCloser" *- - "executor.clusterServerInfoRetriever"
"executor.inspectionName" *- - "executor.configInspection"
"core.Plan" *- - "executor.dataReaderBuilder"
"executor.executorBuilder" *- - "executor.dataReaderBuilder"
"executor.selectResultHook" *- - "executor.dataReaderBuilder"
"executor.innerWorker" *- - "executor.indexHashJoinInnerWorker"
"executor.outerWorker" *- - "executor.indexHashJoinOuterWorker"
"executor.lookUpJoinTask" *- - "executor.indexHashJoinTask"
"executor.checkIndexValue" *- - "executor.indexWorker"
"executor.baseJoiner" *- - "executor.innerJoiner"
"executor.innerMergeCtx" *- - "executor.innerMergeWorker"
"executor.innerCtx" *- - "executor.innerWorker"
"executor.dummyCloser" *- - "executor.inspectionResultRetriever"
"executor.dummyCloser" *- - "executor.inspectionRuleRetriever"
"executor.dummyCloser" *- - "executor.inspectionSummaryRetriever"
"executor.baseJoiner" *- - "executor.leftOuterJoiner"
"executor.baseJoiner" *- - "executor.leftOuterSemiJoiner"
"executor.dummyCloser" *- - "executor.memtableRetriever"
"core.PhysicalPlan" *- - "executor.mockPhysicalIndexReader"
"executor.outerMergeCtx" *- - "executor.outerMergeWorker"
"executor.outerCtx" *- - "executor.outerWorker"
"executor.baseJoiner" *- - "executor.rightOuterJoiner"
"executor.baseJoiner" *- - "executor.semiJoiner"
"executor.baseExecutor" *- - "executor.shuffleWorker"
"executor.checkIndexValue" *- - "executor.tableWorker"
"executor.TopNExec" *- - "executor.topNChunkHeap"

"executor.Closeable" <|- - "executor.BatchPointGetExec"
"executor.Closeable" <|- - "executor.CheckIndexRangeExec"
"executor.Closeable" <|- - "executor.CheckTableExec"
"executor.Closeable" <|- - "executor.CleanupIndexExec"
"executor.Closeable" <|- - "executor.DeleteExec"
"executor.Closeable" <|- - "executor.ExplainExec"
"executor.Closeable" <|- - "executor.HashAggExec"
"executor.Closeable" <|- - "executor.HashJoinExec"
"executor.Closeable" <|- - "executor.IndexAdviseExec"
"executor.Closeable" <|- - "executor.IndexLookUpExecutor"
"executor.Closeable" <|- - "executor.IndexLookUpJoin"
"executor.Closeable" <|- - "executor.IndexLookUpMergeJoin"
"executor.Closeable" <|- - "executor.IndexMergeReaderExecutor"
"executor.Closeable" <|- - "executor.IndexNestedLoopHashJoin"
"executor.Closeable" <|- - "executor.IndexReaderExecutor"
"executor.Closeable" <|- - "executor.InsertExec"
"executor.insertCommon" <|- - "executor.InsertValues"
"executor.Closeable" <|- - "executor.LimitExec"
"executor.Closeable" <|- - "executor.LoadDataExec"
"executor.Closeable" <|- - "executor.LoadStatsExec"
"executor.Closeable" <|- - "executor.MemTableReaderExec"
"executor.Closeable" <|- - "executor.MergeJoinExec"
"executor.Closeable" <|- - "executor.NestedLoopApplyExec"
"executor.Closeable" <|- - "executor.PointGetExecutor"
"executor.Closeable" <|- - "executor.ProjectionExec"
"executor.Closeable" <|- - "executor.ReplaceExec"
"executor.Closeable" <|- - "executor.SelectIntoExec"
"executor.Closeable" <|- - "executor.SelectionExec"
"executor.Closeable" <|- - "executor.ShuffleExec"
"executor.Closeable" <|- - "executor.SortExec"
"executor.Closeable" <|- - "executor.StreamAggExec"
"executor.Closeable" <|- - "executor.TableReaderExecutor"
"executor.Closeable" <|- - "executor.UnionExec"
"executor.Closeable" <|- - "executor.UpdateExec"
"executor.Closeable" <|- - "executor.WindowExec"
"executor.windowProcessor" <|- - "executor.aggWindowProcessor"
"executor.joiner" <|- - "executor.antiLeftOuterSemiJoiner"
"executor.joiner" <|- - "executor.antiSemiJoiner"
"executor.Closeable" <|- - "executor.baseExecutor"
"executor.Executor" <|- - "executor.baseExecutor"
"executor.ruleChecker" <|- - "executor.checkRegionHealth"
"executor.ruleChecker" <|- - "executor.checkStoreRegionTooMuch"
"executor.Closeable" <|- - "executor.chunkRowRecordSet"
"executor.memTableRetriever" <|- - "executor.clusterLogRetriever"
"executor.ruleChecker" <|- - "executor.compareStoreStatus"
"executor.Closeable" <|- - "executor.hashRowContainer"
"executor.joiner" <|- - "executor.innerJoiner"
"executor.ruleChecker" <|- - "executor.inspectCPULoad"
"executor.ruleChecker" <|- - "executor.inspectDiskUsage"
"executor.ruleChecker" <|- - "executor.inspectSwapMemoryUsed"
"executor.ruleChecker" <|- - "executor.inspectVirtualMemUsage"
"executor.joiner" <|- - "executor.leftOuterJoiner"
"executor.joiner" <|- - "executor.leftOuterSemiJoiner"
"executor.partitionSplitter" <|- - "executor.partitionHashSplitter"
"executor.windowProcessor" <|- - "executor.rangeFrameWindowProcessor"
"executor.Closeable" <|- - "executor.recordSet"
"executor.joiner" <|- - "executor.rightOuterJoiner"
"executor.windowProcessor" <|- - "executor.rowFrameWindowProcessor"
"executor.joiner" <|- - "executor.semiJoiner"
"executor.Closeable" <|- - "executor.shuffleWorker"
"executor.memTableRetriever" <|- - "executor.slowQueryRetriever"
"executor.Closeable" <|- - "executor.tableResultHandler"

"__builtin__.byte" #.. "executor.outerRowStatusFlag"
"__builtin__.int" #.. "executor.IndexAdviseVarKeyType"
"__builtin__.int" #.. "executor.loadDataVarKeyType"
"__builtin__.int" #.. "executor.loadStatsVarKeyType"
"__builtin__.int" #.. "executor.objectType"
"__builtin__.int" #.. "executor.taskType"
"__builtin__.int64" #.. "aggfuncs.partialResult4Count"
"__builtin__.uint32" #.. "aggfuncs.approxCountDistinctHashValue"
"__builtin__.uint64" #.. "aggfuncs.partialResult4BitFunc"
"aggfuncs.unsafePointer" #.. "aggfuncs.PartialResult"
"executor.fontcolorbluefuncfonttypesDatumerror" #.. "executor.TestShowClusterConfigFunc"
"executor.<font color=blue>func</font>([]byte, []byte) error" #.. "executor.processKVFunc"
"executor.fontcolorbluemapfontint64fontcolorbluemapfontint64typesDatum" #.. "executor.tableRowMapType"
"executor.fontcolorbluemapfontstringaggfuncsPartialResult" #.. "executor.aggPartialResultMapper"
"executor.[]logStreamResult" #.. "executor.logResponseHeap"
"executor.v1Range" #.. "executor.promQLQueryRange"
@enduml

PlantUML version 1.2020.10(Sun May 17 17:35:57 CST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_222-b10
Operating System: Mac OS X
Default Encoding: UTF-8
Language: en
Country: CN
--></g></svg>